# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-04-23 20:26-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"

#. used by: GdkDisplay::opened:
#: gdkdisplay.c:101:2
msgid ""
"The ::opened signal is emitted when the connection to the windowing system "
"for @display is opened."
msgstr ""

#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkDisplay::opened:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkDisplay::closed:
#: gdkdisplay.c:114:1 gdkdisplay.c:99:1
msgid "@display: the object on which the signal is emitted"
msgstr ""

#. used by: GdkDisplay::closed:
#: gdkdisplay.c:115:1
msgid "@is_error: %TRUE if the display was closed due to an error"
msgstr ""

#. used by: GdkDisplay::closed:
#: gdkdisplay.c:117:2
msgid ""
"The ::closed signal is emitted when the connection to the windowing system "
"for @display is closed."
msgstr ""

#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkDisplay::closed:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_close:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_event:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_peek_event:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_put_event:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_pointer_ungrab:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_keyboard_ungrab:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_pointer:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_window_at_pointer:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_pointer_is_grabbed:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_name:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_n_screens:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_screen:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_default_screen:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_beep:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_sync:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_list_devices:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_open:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_notify_startup_complete:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_get_for_display:
#: gdkdisplay.c:120:1 gdkdisplay.c:1255:1 gdkdisplay.c:1337:1
#: gdkdisplay.c:1361:1 gdkdisplay.c:1380:1 gdkdisplay.c:1399:1
#: gdkdisplay.c:1415:1 gdkdisplay.c:1439:1 gdkdisplay.c:1659:1
#: gdkdisplay.c:1712:1 gdkdisplay.c:1881:1 gdkdisplay.c:1986:1
#: gdkdisplay.c:257:1 gdkdisplay.c:303:1 gdkdisplay.c:327:1 gdkdisplay.c:352:1
#: gdkdisplay.c:373:1 gdkdisplay.c:449:1 gdkdisplay.c:574:1 gdkdisplay.c:632:1
msgid "Since: 2.2"
msgstr ""

#. used by: gdk_device_grab_info_libgtk_only:
#: gdkdisplay.c:1208:1
msgid "@display: the display for which to get the grab information"
msgstr ""

#. used by: gdk_device_grab_info_libgtk_only:
#: gdkdisplay.c:1209:1
msgid "@device: device to get the grab information from"
msgstr ""

#. used by: gdk_device_grab_info_libgtk_only:
#: gdkdisplay.c:1210:1
msgid ""
"@grab_window: (out) (transfer none): location to store current grab window"
msgstr ""

#. used by: gdk_device_grab_info_libgtk_only:
#: gdkdisplay.c:1211:3
msgid ""
"@owner_events: (out): location to store boolean indicating whether the "
"@owner_events flag to gdk_keyboard_grab() or gdk_pointer_grab() was %TRUE."
msgstr ""

#. used by: gdk_device_grab_info_libgtk_only:
#: gdkdisplay.c:1215:2
msgid ""
"Determines information about the current keyboard grab. This is not public "
"API and must not be used by applications."
msgstr ""

#. used by: gdk_device_grab_info_libgtk_only:
#: gdkdisplay.c:1218:2
msgid ""
"Return value: %TRUE if this application currently has the keyboard grabbed."
msgstr ""

#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_close:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_is_closed:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_event:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_peek_event:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_put_event:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_pointer:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_window_at_pointer:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_pointer_is_grabbed:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_device_is_grabbed:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_name:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_n_screens:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_screen:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_default_screen:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_beep:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_sync:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_flush:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_default_group:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_supports_selection_notification:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_request_selection_notification:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_supports_clipboard_persistence
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_supports_shapes:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_supports_input_shapes:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_supports_composite:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_list_devices:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_app_launch_context:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_has_pending:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_supports_cursor_alpha:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_supports_cursor_color:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_default_cursor_size:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_maximal_cursor_size:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_warp_pointer:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_notify_startup_complete:
#: gdkdisplay.c:1249:1 gdkdisplay.c:1285:1 gdkdisplay.c:1330:1
#: gdkdisplay.c:1355:1 gdkdisplay.c:1373:1 gdkdisplay.c:1393:1
#: gdkdisplay.c:1411:1 gdkdisplay.c:1427:1 gdkdisplay.c:1451:1
#: gdkdisplay.c:1475:1 gdkdisplay.c:1496:1 gdkdisplay.c:1516:1
#: gdkdisplay.c:1540:1 gdkdisplay.c:1591:1 gdkdisplay.c:1610:1
#: gdkdisplay.c:1629:1 gdkdisplay.c:1651:1 gdkdisplay.c:1685:1
#: gdkdisplay.c:1723:1 gdkdisplay.c:1742:1 gdkdisplay.c:1762:1
#: gdkdisplay.c:1782:1 gdkdisplay.c:1806:1 gdkdisplay.c:1828:1
#: gdkdisplay.c:1916:1 gdkdisplay.c:252:1 gdkdisplay.c:277:1
#: gdkdisplay.c:295:1 gdkdisplay.c:316:1 gdkdisplay.c:346:1 gdkdisplay.c:564:1
#: gdkdisplay.c:619:1
msgid "@display: a #GdkDisplay"
msgstr ""

#. used by: gdk_display_pointer_is_grabbed:
#: gdkdisplay.c:1251:1
msgid "Test if the pointer is grabbed."
msgstr ""

#. used by: gdk_display_pointer_is_grabbed:
#: gdkdisplay.c:1253:1
msgid "Returns: %TRUE if an active X pointer grab is in effect"
msgstr ""

#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_pointer_is_grabbed:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_pointer_is_grabbed:
#: gdkdisplay.c:1257:1 gdkdisplay.c:434:1
msgid "Deprecated: 3.0: Use gdk_display_device_is_grabbed() instead."
msgstr ""

#. used by: gdk_display_device_is_grabbed:
#: gdkdisplay.c:1286:1
msgid "@device: a #GdkDevice"
msgstr ""

#. used by: gdk_display_device_is_grabbed:
#: gdkdisplay.c:1288:1
msgid "Returns %TRUE if there is an ongoing grab on @device for @display."
msgstr ""

#. used by: gdk_display_device_is_grabbed:
#: gdkdisplay.c:1290:1
msgid "Returns: %TRUE if there is a grab in effect for @device."
msgstr ""

#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_pointer_ungrab:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_keyboard_ungrab:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_device_manager:
#: gdkdisplay.c:1311:1 gdkdisplay.c:368:1 gdkdisplay.c:444:1
msgid "@display: a #GdkDisplay."
msgstr ""

#. used by: gdk_display_get_device_manager:
#: gdkdisplay.c:1313:1
msgid "Returns the #GdkDeviceManager associated to @display."
msgstr ""

#. used by: gdk_display_get_device_manager:
#: gdkdisplay.c:1315:2
msgid ""
"Returns: (transfer none): A #GdkDeviceManager, or %NULL. This memory is "
"owned by GDK and must not be freed or unreferenced."
msgstr ""

#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_device_manager:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_app_launch_context:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_has_pending:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_notify_startup_complete:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_error_trap_pop_ignored:
#: gdkdisplay.c:1318:1 gdkdisplay.c:1693:1 gdkdisplay.c:1730:1
#: gdkdisplay.c:1928:1 gdkdisplay.c:2108:1
msgid "Since: 3.0"
msgstr ""

#. used by: gdk_display_get_name:
#: gdkdisplay.c:1332:1
msgid "Gets the name of the display."
msgstr ""

#. used by: gdk_display_get_name:
#: gdkdisplay.c:1334:2
msgid ""
"Returns: a string representing the display name. This string is owned by GDK "
"and should not be modified or freed."
msgstr ""

#. used by: gdk_display_get_n_screens:
#: gdkdisplay.c:1357:1
msgid "Gets the number of screen managed by the @display."
msgstr ""

#. used by: gdk_display_get_n_screens:
#: gdkdisplay.c:1359:1
msgid "Returns: number of screens."
msgstr ""

#. used by: gdk_display_get_screen:
#: gdkdisplay.c:1374:1
msgid "@screen_num: the screen number"
msgstr ""

#. used by: gdk_display_get_screen:
#: gdkdisplay.c:1376:1
msgid "Returns a screen object for one of the screens of the display."
msgstr ""

#. used by: gdk_display_get_screen:
#: gdkdisplay.c:1378:1
msgid "Returns: (transfer none): the #GdkScreen object"
msgstr ""

#. used by: gdk_display_get_default_screen:
#: gdkdisplay.c:1395:1
msgid "Get the default #GdkScreen for @display."
msgstr ""

#. used by: gdk_display_get_default_screen:
#: gdkdisplay.c:1397:1
msgid "Returns: (transfer none): the default #GdkScreen object for @display"
msgstr ""

#. used by: gdk_display_beep:
#: gdkdisplay.c:1413:1
msgid "Emits a short beep on @display"
msgstr ""

#. used by: gdk_display_sync:
#: gdkdisplay.c:1429:6
msgid ""
"Flushes any requests queued for the windowing system and waits until all "
"requests have been handled. This is often used for making sure that the "
"display is synchronized with the current state of the program. Calling "
"gdk_display_sync() before gdk_error_trap_pop() makes sure that any errors "
"generated from earlier requests are handled before the error trap is removed."
msgstr ""

#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_sync:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_flush:
#: gdkdisplay.c:1436:2 gdkdisplay.c:1460:2
msgid ""
"This is most useful for X11. On windowing systems where requests are handled "
"synchronously, this function will do nothing."
msgstr ""

#. used by: gdk_display_flush:
#: gdkdisplay.c:1453:6
msgid ""
"Flushes any requests queued for the windowing system; this happens "
"automatically when the main loop blocks waiting for new events, but if your "
"application is drawing without returning control to the main loop, you may "
"need to call this function explicitely. A common case where this function "
"needs to be called is when an application is executing drawing commands from "
"a thread other than the thread where the main loop is running."
msgstr ""

#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_flush:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_default_group:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_supports_cursor_alpha:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_supports_cursor_color:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_default_cursor_size:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_maximal_cursor_size:
#: gdkdisplay.c:1463:1 gdkdisplay.c:1484:1 gdkdisplay.c:1750:1
#: gdkdisplay.c:1770:1 gdkdisplay.c:1788:1 gdkdisplay.c:1812:1
msgid "Since: 2.4"
msgstr ""

#. used by: gdk_display_get_default_group:
#: gdkdisplay.c:1477:3
msgid ""
"Returns the default group leader window for all toplevel windows on "
"@display. This window is implicitly created by GDK. See gdk_window_set_group"
"()."
msgstr ""

#. used by: gdk_display_get_default_group:
#: gdkdisplay.c:1481:2
msgid ""
"Return value: (transfer none): The default group leader window for @display"
msgstr ""

#. used by: gdk_display_supports_selection_notification:
#: gdkdisplay.c:1498:2
msgid ""
"Returns whether #GdkEventOwnerChange events will be sent when the owner of a "
"selection changes."
msgstr ""

#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_supports_selection_notification:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_request_selection_notification:
#: gdkdisplay.c:1501:2 gdkdisplay.c:1523:2
msgid "Return value: whether #GdkEventOwnerChange events will be sent."
msgstr ""

#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_supports_selection_notification:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_request_selection_notification:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_supports_clipboard_persistence
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_store_clipboard
#: gdkdisplay.c:1504:1 gdkdisplay.c:1526:1 gdkdisplay.c:1549:1
#: gdkdisplay.c:1575:1
msgid "Since: 2.6"
msgstr ""

#. used by: gdk_display_request_selection_notification:
#: gdkdisplay.c:1517:2
msgid ""
"@selection: the #GdkAtom naming the selection for which ownership change "
"notification is requested"
msgstr ""

#. used by: gdk_display_request_selection_notification:
#: gdkdisplay.c:1520:2
msgid ""
"Request #GdkEventOwnerChange events for ownership changes of the selection "
"named by the given atom."
msgstr ""

#. used by: gdk_display_supports_clipboard_persistence
#: gdkdisplay.c:1542:4
msgid ""
"Returns whether the speicifed display supports clipboard persistance; i.e. "
"if it's possible to store the clipboard data after an application has quit. "
"On X11 this checks if a clipboard daemon is running."
msgstr ""

#. used by: gdk_display_supports_clipboard_persistence
#: gdkdisplay.c:1547:1
msgid "Returns: %TRUE if the display supports clipboard persistance."
msgstr ""

#. used by: gdk_display_store_clipboard
#: gdkdisplay.c:1561:1
msgid "@display:          a #GdkDisplay"
msgstr ""

#. used by: gdk_display_store_clipboard
#: gdkdisplay.c:1562:1
msgid "@clipboard_window: a #GdkWindow belonging to the clipboard owner"
msgstr ""

#. used by: gdk_display_store_clipboard
#: gdkdisplay.c:1563:1
msgid "@time_:            a timestamp"
msgstr ""

#. used by: gdk_display_store_clipboard
#: gdkdisplay.c:1564:3
msgid ""
"@targets:          (array length=n_targets): an array of targets that should "
"be saved, or %NULL if all available targets should be saved."
msgstr ""

#. used by: gdk_display_store_clipboard
#: gdkdisplay.c:1567:1
msgid "@n_targets:        length of the @targets array"
msgstr ""

#. used by: gdk_display_store_clipboard
#: gdkdisplay.c:1569:5
msgid ""
"Issues a request to the clipboard manager to store the clipboard data. On "
"X11, this is a special program that works according to the freedesktop "
"clipboard specification, available at <ulink url=\"http://www.freedesktop."
"org/Standards/clipboard-manager-spec\"> http://www.freedesktop.org/Standards/"
"clipboard-manager-spec</ulink>."
msgstr ""

#. used by: gdk_display_supports_shapes:
#: gdkdisplay.c:1593:2
msgid ""
"Returns %TRUE if gdk_window_shape_combine_mask() can be used to create "
"shaped windows on @display."
msgstr ""

#. used by: gdk_display_supports_shapes:
#: gdkdisplay.c:1596:1
msgid "Returns: %TRUE if shaped windows are supported"
msgstr ""

#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_supports_shapes:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_supports_input_shapes:
#: gdkdisplay.c:1598:1 gdkdisplay.c:1617:1
msgid "Since: 2.10"
msgstr ""

#. used by: gdk_display_supports_input_shapes:
#: gdkdisplay.c:1612:2
msgid ""
"Returns %TRUE if gdk_window_input_shape_combine_mask() can be used to modify "
"the input shape of windows on @display."
msgstr ""

#. used by: gdk_display_supports_input_shapes:
#: gdkdisplay.c:1615:1
msgid "Returns: %TRUE if windows with modified input shape are supported"
msgstr ""

#. used by: gdk_display_supports_composite:
#: gdkdisplay.c:1631:2
msgid ""
"Returns %TRUE if gdk_window_set_composited() can be used to redirect drawing "
"on the window using compositing."
msgstr ""

#. used by: gdk_display_supports_composite:
#: gdkdisplay.c:1634:2
msgid ""
"Currently this only works on X11 with XComposite and XDamage extensions "
"available."
msgstr ""

#. used by: gdk_display_supports_composite:
#: gdkdisplay.c:1637:1
msgid "Returns: %TRUE if windows may be composited."
msgstr ""

#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_supports_composite:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_notify_startup_complete_with_id:
#: gdkdisplay.c:1639:1 gdkdisplay.c:1902:1
msgid "Since: 2.12"
msgstr ""

#. used by: gdk_display_list_devices:
#: gdkdisplay.c:1653:2
msgid ""
"Returns the list of available input devices attached to @display. The list "
"is statically allocated and should not be freed."
msgstr ""

#. used by: gdk_display_list_devices:
#: gdkdisplay.c:1656:2
msgid ""
"Return value: (transfer none) (element-type GdkDevice): a list of #GdkDevice"
msgstr ""

#. used by: gdk_display_list_devices:
#: gdkdisplay.c:1661:1
msgid "Deprecated: 3.0: Use gdk_device_manager_list_devices() instead."
msgstr ""

#. used by: gdk_display_get_app_launch_context:
#: gdkdisplay.c:1687:2
msgid ""
"Returns a #GdkAppLaunchContext suitable for launching applications on the "
"given display."
msgstr ""

#. used by: gdk_display_get_app_launch_context:
#: gdkdisplay.c:1690:2
msgid ""
"Returns: (transfer full): a new #GdkAppLaunchContext for @display. Free with "
"g_object_unref() when done"
msgstr ""

#. used by: gdk_display_open:
#: gdkdisplay.c:1705:1
msgid "@display_name: the name of the display to open"
msgstr ""

#. used by: gdk_display_open:
#: gdkdisplay.c:1707:1
msgid "Opens a display."
msgstr ""

#. used by: gdk_display_open:
#: gdkdisplay.c:1709:2
msgid ""
"Return value: (transfer none): a #GdkDisplay, or %NULL if the display could "
"not be opened"
msgstr ""

#. used by: gdk_display_has_pending:
#: gdkdisplay.c:1725:2
msgid ""
"Returns whether the display has events that are waiting to be processed."
msgstr ""

#. used by: gdk_display_has_pending:
#: gdkdisplay.c:1728:1
msgid "Returns: %TRUE if there are events ready to be processed."
msgstr ""

#. used by: gdk_display_supports_cursor_alpha:
#: gdkdisplay.c:1744:3
msgid ""
"Returns %TRUE if cursors can use an 8bit alpha channel on @display. "
"Otherwise, cursors are restricted to bilevel alpha (i.e. a mask)."
msgstr ""

#. used by: gdk_display_supports_cursor_alpha:
#: gdkdisplay.c:1748:1
msgid "Returns: whether cursors can have alpha channels."
msgstr ""

#. used by: gdk_display_supports_cursor_color:
#: gdkdisplay.c:1764:3
msgid ""
"Returns %TRUE if multicolored cursors are supported on @display. Otherwise, "
"cursors have only a forground and a background color."
msgstr ""

#. used by: gdk_display_supports_cursor_color:
#: gdkdisplay.c:1768:1
msgid "Returns: whether cursors can have multiple colors."
msgstr ""

#. used by: gdk_display_get_default_cursor_size:
#: gdkdisplay.c:1784:1
msgid "Returns the default size to use for cursors on @display."
msgstr ""

#. used by: gdk_display_get_default_cursor_size:
#: gdkdisplay.c:1786:1
msgid "Returns: the default cursor size."
msgstr ""

#. used by: gdk_display_get_maximal_cursor_size:
#: gdkdisplay.c:1807:1
msgid "@width: (out): the return location for the maximal cursor width"
msgstr ""

#. used by: gdk_display_get_maximal_cursor_size:
#: gdkdisplay.c:1808:1
msgid "@height: (out): the return location for the maximal cursor height"
msgstr ""

#. used by: gdk_display_get_maximal_cursor_size:
#: gdkdisplay.c:1810:1
msgid "Gets the maximal size to use for cursors on @display."
msgstr ""

#. used by: gdk_display_warp_pointer:
#: gdkdisplay.c:1829:1
msgid "@screen: the screen of @display to warp the pointer to"
msgstr ""

#. used by: gdk_display_warp_pointer:
#: gdkdisplay.c:1830:1
msgid "@x: the x coordinate of the destination"
msgstr ""

#. used by: gdk_display_warp_pointer:
#: gdkdisplay.c:1831:1
msgid "@y: the y coordinate of the destination"
msgstr ""

#. used by: gdk_display_warp_pointer:
#: gdkdisplay.c:1833:6
msgid ""
"Warps the pointer of @display to the point @x,@y on the screen @screen, "
"unless the pointer is confined to a window by a grab, in which case it will "
"be moved as far as allowed by the grab. Warping the pointer creates events "
"as if the user had moved the mouse instantaneously to the destination."
msgstr ""

#. used by: gdk_display_warp_pointer:
#: gdkdisplay.c:1840:4
msgid ""
"Note that the pointer should normally be under the control of the user. This "
"function was added to cover some rare use cases like keyboard navigation "
"support for the color picker in the #GtkColorSelectionDialog."
msgstr ""

#. used by: gdk_display_warp_pointer:
#: gdkdisplay.c:1845:1
msgid "Since: 2.8"
msgstr ""

#. used by: gdk_display_warp_pointer:
#: gdkdisplay.c:1847:1
msgid "Deprecated: 3.0: Use gdk_device_warp() instead."
msgstr ""

#. used by: gdk_notify_startup_complete:
#: gdkdisplay.c:1872:4
msgid ""
"Indicates to the GUI environment that the application has finished loading. "
"If the applications opens windows, this function is normally called after "
"opening the application's initial set of windows."
msgstr ""

#. used by: gdk_notify_startup_complete:
#: gdkdisplay.c:1877:3
msgid ""
"GTK+ will call this function automatically after opening the first "
"#GtkWindow unless gtk_window_set_auto_startup_notification() is called to "
"disable that feature."
msgstr ""

#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_notify_startup_complete_with_id:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_notify_startup_complete:
#: gdkdisplay.c:1891:2 gdkdisplay.c:1917:2
msgid ""
"@startup_id: a startup-notification identifier, for which notification "
"process should be completed"
msgstr ""

#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_notify_startup_complete_with_id:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_notify_startup_complete:
#: gdkdisplay.c:1894:2 gdkdisplay.c:1920:2
msgid ""
"Indicates to the GUI environment that the application has finished loading, "
"using a given identifier."
msgstr ""

#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_notify_startup_complete_with_id:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_notify_startup_complete:
#: gdkdisplay.c:1897:4 gdkdisplay.c:1923:4
msgid ""
"GTK+ will call this function automatically for #GtkWindow with custom "
"startup-notification identifier unless "
"gtk_window_set_auto_startup_notification() is called to disable that feature."
msgstr ""

#. used by: gdk_keymap_get_for_display:
#: gdkdisplay.c:1980:1
msgid "@display: the #GdkDisplay."
msgstr ""

#. used by: gdk_keymap_get_for_display:
#: gdkdisplay.c:1982:1
msgid "Returns the #GdkKeymap attached to @display."
msgstr ""

#. used by: gdk_keymap_get_for_display:
#: gdkdisplay.c:1984:1
msgid "Return value: (transfer none): the #GdkKeymap attached to @display."
msgstr ""

#. used by: gdk_error_trap_push:
#: gdkdisplay.c:2008:8
msgid ""
"This function allows X errors to be trapped instead of the normal behavior "
"of exiting the application. It should only be used if it is not possible to "
"avoid the X error in any other way. Errors are ignored on all #GdkDisplay "
"currently known to the #GdkDisplayManager. If you don't care which error "
"happens and just want to ignore everything, pop with "
"gdk_error_trap_pop_ignored(). If you need the error code, use "
"gdk_error_trap_pop() which may have to block and wait for the error to "
"arrive from the X server."
msgstr ""

#. used by: gdk_error_trap_push:
#: gdkdisplay.c:2017:1
msgid "This API exists on all platforms but only does anything on X."
msgstr ""

#. used by: gdk_error_trap_push:
#: gdkdisplay.c:2019:2
msgid ""
"You can use gdk_x11_display_error_trap_push() to ignore errors on only a "
"single display."
msgstr ""

#. used by: gdk_error_trap_push:
#: gdkdisplay.c:2022:2
msgid "<example> <title>Trapping an X error</title>"
msgstr ""

#. used by: gdk_error_trap_push:
#: gdkdisplay.c:2035:1
msgid "</example>"
msgstr ""

#. used by: gdk_error_trap_pop_ignored:
#: gdkdisplay.c:2103:4
msgid ""
"Removes an error trap pushed with gdk_error_trap_push(), but without "
"bothering to wait and see whether an error occurred.  If an error arrives "
"later asynchronously that was triggered while the trap was pushed, that "
"error will be ignored."
msgstr ""

#. used by: gdk_error_trap_pop:
#: gdkdisplay.c:2119:7
msgid ""
"Removes an error trap pushed with gdk_error_trap_push(). May block until an "
"error has been definitively received or not received from the X server. "
"gdk_error_trap_pop_ignored() is preferred if you don't need to know whether "
"an error occurred, because it never has to block. If you don't need the "
"return value of gdk_error_trap_pop(), use gdk_error_trap_pop_ignored()."
msgstr ""

#. used by: gdk_error_trap_pop:
#: gdkdisplay.c:2127:3
msgid ""
"Prior to GDK 3.0, this function would not automatically sync for you, so you "
"had to gdk_flush() if your last call to Xlib was not a blocking round trip."
msgstr ""

#. used by: gdk_error_trap_pop:
#: gdkdisplay.c:2131:1
msgid "Return value: X error code or 0 on success"
msgstr ""

#. used by: gdk_display_close:
#: gdkdisplay.c:254:2
msgid ""
"Closes the connection to the windowing system for the given display, and "
"cleans up associated resources."
msgstr ""

#. used by: gdk_display_is_closed:
#: gdkdisplay.c:279:1
msgid "Finds out if the display has been closed."
msgstr ""

#. used by: gdk_display_is_closed:
#: gdkdisplay.c:281:1
msgid "Returns: %TRUE if the display is closed."
msgstr ""

#. used by: gdk_display_is_closed:
#: gdkdisplay.c:283:1
msgid "Since: 2.22"
msgstr ""

#. used by: gdk_display_get_event:
#: gdkdisplay.c:297:2
msgid ""
"Gets the next #GdkEvent to be processed for @display, fetching events from "
"the windowing system if necessary."
msgstr ""

#. used by: gdk_display_get_event:
#: gdkdisplay.c:300:2
msgid ""
"Return value: the next #GdkEvent to be processed, or %NULL if no events are "
"pending. The returned #GdkEvent should be freed with gdk_event_free()."
msgstr ""

#. used by: gdk_display_peek_event:
#: gdkdisplay.c:318:4
msgid ""
"Gets a copy of the first #GdkEvent in the @display's event queue, without "
"removing the event from the queue.  (Note that this function will not get "
"more events from the windowing system.  It only checks the events that have "
"already been moved to the GDK event queue.)"
msgstr ""

#. used by: gdk_display_peek_event:
#: gdkdisplay.c:323:3
msgid ""
"Return value: a copy of the first #GdkEvent on the event queue, or %NULL if "
"no events are in the queue. The returned #GdkEvent should be freed with "
"gdk_event_free()."
msgstr ""

#. used by: gdk_display_put_event:
#: gdkdisplay.c:347:1
msgid "@event: a #GdkEvent."
msgstr ""

#. used by: gdk_display_put_event:
#: gdkdisplay.c:349:2
msgid ""
"Appends a copy of the given event onto the front of the event queue for "
"@display."
msgstr ""

#. used by: gdk_display_pointer_ungrab:
#: gdkdisplay.c:369:1
msgid "@time_: a timestap (e.g. %GDK_CURRENT_TIME)."
msgstr ""

#. used by: gdk_display_pointer_ungrab:
#: gdkdisplay.c:371:1
msgid "Release any pointer grab."
msgstr ""

#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_pointer_ungrab:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_pointer_ungrab:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_keyboard_ungrab:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keyboard_ungrab:
#: gdkdisplay.c:375:2 gdkdisplay.c:414:2 gdkdisplay.c:451:2 gdkdisplay.c:490:2
msgid ""
"Deprecated: 3.0: Use gdk_device_ungrab(), together with gdk_device_grab() "
"instead."
msgstr ""

#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_pointer_ungrab:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keyboard_ungrab:
#: gdkdisplay.c:408:2 gdkdisplay.c:484:2
msgid ""
"@time_: a timestamp from a #GdkEvent, or %GDK_CURRENT_TIME if no timestamp "
"is available."
msgstr ""

#. used by: SECTION:gdkdisplay
#: gdkdisplay.c:41:1
msgid ""
"@Short_description: Controls a set of GdkScreens and their associated input "
"devices"
msgstr ""

#. used by: gdk_pointer_ungrab:
#: gdkdisplay.c:411:2
msgid ""
"Ungrabs the pointer on the default display, if it is grabbed by this "
"application."
msgstr ""

#. used by: SECTION:gdkdisplay
#: gdkdisplay.c:42:1
msgid "@Title: GdkDisplay"
msgstr ""

#. used by: gdk_pointer_is_grabbed:
#: gdkdisplay.c:426:2
msgid ""
"Returns %TRUE if the pointer on the default display is currently grabbed by "
"this application."
msgstr ""

#. used by: gdk_pointer_is_grabbed:
#: gdkdisplay.c:429:2
msgid ""
"Note that this does not take the inmplicit pointer grab on button presses "
"into account."
msgstr ""

#. used by: gdk_pointer_is_grabbed:
#: gdkdisplay.c:432:1
msgid ""
"Return value: %TRUE if the pointer is currently grabbed by this application."
msgstr ""

#. used by: SECTION:gdkdisplay
#: gdkdisplay.c:44:10
msgid ""
"#GdkDisplay objects purpose are two fold: <itemizedlist> <listitem> To "
"manage and provide information about input devices (pointers and keyboards) "
"</listitem> <listitem> To manage and provide information about the available "
"#GdkScreens </listitem> </itemizedlist>"
msgstr ""

#. used by: gdk_display_keyboard_ungrab:
#: gdkdisplay.c:445:1
msgid "@time_: a timestap (e.g #GDK_CURRENT_TIME)."
msgstr ""

#. used by: gdk_display_keyboard_ungrab:
#: gdkdisplay.c:447:1
msgid "Release any keyboard grab"
msgstr ""

#. used by: gdk_keyboard_ungrab:
#: gdkdisplay.c:487:2
msgid ""
"Ungrabs the keyboard on the default display, if it is grabbed by this "
"application."
msgstr ""

#. used by: gdk_beep:
#: gdkdisplay.c:502:1
msgid "Emits a short beep on the default display."
msgstr ""

#. used by: gdk_flush:
#: gdkdisplay.c:513:3
msgid ""
"Flushes the output buffers of all display connections and waits until all "
"requests have been processed. This is rarely needed by applications."
msgstr ""

#. used by: SECTION:gdkdisplay
#: gdkdisplay.c:55:7
msgid ""
"GdkDisplay objects are the GDK representation of an X Display, which can be "
"described as <emphasis>a workstation consisting of a keyboard, a pointing "
"device (such as a mouse) and one or more screens</emphasis>. It is used to "
"open and keep track of various GdkScreen objects currently instantiated by "
"the application. It is also used to access the keyboard(s) and mouse pointer"
"(s) of the display."
msgstr ""

#. used by: gdk_display_get_pointer:
#: gdkdisplay.c:565:2
msgid ""
"@screen: (out) (allow-none): location to store the screen that the cursor is "
"on, or %NULL."
msgstr ""

#. used by: gdk_display_get_pointer:
#: gdkdisplay.c:567:1
msgid ""
"@x: (out) (allow-none): location to store root window X coordinate of "
"pointer, or %NULL."
msgstr ""

#. used by: gdk_display_get_pointer:
#: gdkdisplay.c:568:1
msgid ""
"@y: (out) (allow-none): location to store root window Y coordinate of "
"pointer, or %NULL."
msgstr ""

#. used by: gdk_display_get_pointer:
#: gdkdisplay.c:569:1
msgid ""
"@mask: (out) (allow-none): location to store current modifier mask, or %NULL"
msgstr ""

#. used by: gdk_display_get_pointer:
#: gdkdisplay.c:571:2
msgid ""
"Gets the current location of the pointer and the current modifier mask for a "
"given display."
msgstr ""

#. used by: gdk_display_get_pointer:
#: gdkdisplay.c:576:1
msgid "Deprecated: 3.0: Use gdk_device_get_position() instead."
msgstr ""

#. used by: gdk_display_get_window_at_pointer:
#: gdkdisplay.c:620:2
msgid ""
"@win_x: (out) (allow-none): return location for x coordinate of the pointer "
"location relative to the window origin, or %NULL"
msgstr ""

#. used by: gdk_display_get_window_at_pointer:
#: gdkdisplay.c:622:2
msgid ""
"@win_y: (out) (allow-none): return location for y coordinate of the pointer "
"location relative &    to the window origin, or %NULL"
msgstr ""

#. used by: gdk_display_get_window_at_pointer:
#: gdkdisplay.c:625:4
msgid ""
"Obtains the window underneath the mouse pointer, returning the location of "
"the pointer in that window in @win_x, @win_y for @screen. Returns %NULL if "
"the window under the mouse pointer is not known to GDK (for example, belongs "
"to another application)."
msgstr ""

#. used by: SECTION:gdkdisplay
#: gdkdisplay.c:63:4
msgid ""
"Most of the input device handling has been factored out into the separate "
"#GdkDeviceManager object. Every display has a device manager, which you can "
"obtain using gdk_display_get_device_manager()."
msgstr ""

#. used by: gdk_display_get_window_at_pointer:
#: gdkdisplay.c:630:1
msgid "Returns: (transfer none): the window under the mouse pointer, or %NULL"
msgstr ""

#. used by: gdk_display_get_window_at_pointer:
#: gdkdisplay.c:634:1
msgid "Deprecated: 3.0: Use gdk_device_get_window_at_position() instead."
msgstr ""
