# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-04-23 20:50-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"

#. used by: g_win32_error_message:
#: gwin32.c:163:1
msgid "@error: error code."
msgstr ""

#. used by: g_win32_error_message:
#: gwin32.c:165:6
msgid ""
"Translate a Win32 error code (as returned by GetLastError()) into the "
"corresponding message. The message is either language neutral, or in the "
"thread's language, or the user's language, the system's language, or US "
"English (see docs for FormatMessage()). The returned string is in UTF-8. It "
"should be deallocated with g_free()."
msgstr ""

#. used by: g_win32_error_message:
#: gwin32.c:172:1
msgid "Returns: newly-allocated error message"
msgstr ""

#. used by: g_win32_get_package_installation_directory_of_module:
#: gwin32.c:205:1
msgid ""
"@hmodule: The Win32 handle for a DLL loaded into the current process, or "
"%NULL"
msgstr ""

#. used by: g_win32_get_package_installation_directory_of_module:
#: gwin32.c:207:3
msgid ""
"This function tries to determine the installation directory of a software "
"package based on the location of a DLL of the software package."
msgstr ""

#. used by: g_win32_get_package_installation_directory_of_module:
#: gwin32.c:211:6
msgid ""
"@hmodule should be the handle of a loaded DLL or %NULL. The function looks "
"up the directory that DLL was loaded from. If @hmodule is NULL, the "
"directory the main executable of the current process is looked up. If that "
"directory's last component is \"bin\" or \"lib\", its parent directory is "
"returned, otherwise the directory itself."
msgstr ""

#. used by: g_win32_get_package_installation_directory_of_module:
#: gwin32.c:218:7
msgid ""
"It thus makes sense to pass only the handle to a \"public\" DLL of a "
"software package to this function, as such DLLs typically are known to be "
"installed in a \"bin\" or occasionally \"lib\" subfolder of the installation "
"folder. DLLs that are of the dynamically loaded module or plugin variety are "
"often located in more private locations deeper down in the tree, from which "
"it is impossible for GLib to deduce the root of the package installation."
msgstr ""

#. used by: g_win32_get_package_installation_directory_of_module:
#: gwin32.c:226:4
msgid ""
"The typical use case for this function is to have a DllMain() that saves the "
"handle for the DLL. Then when code in the DLL needs to construct names of "
"files in the installation tree it calls this function passing the DLL handle."
msgstr ""

#. used by: g_win32_get_package_installation_directory_of_module:
#: gwin32.c:231:5
msgid ""
"Returns: a string containing the guessed installation directory for the "
"software package @hmodule is from. The string is in the GLib file name "
"encoding, i.e. UTF-8. The return value should be freed with g_free() when "
"not needed any longer. If the function fails %NULL is returned."
msgstr ""

#. used by: g_win32_get_package_installation_directory_of_module:
#: gwin32.c:237:1
msgid "Since: 2.16"
msgstr ""

#. #-#-#-#-#  gwin32.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_win32_get_package_installation_directory:
#. #-#-#-#-#  gwin32.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_win32_get_package_installation_subdirectory:
#: gwin32.c:324:1 gwin32.c:430:1
msgid "@package: You should pass %NULL for this."
msgstr ""

#. used by: g_win32_get_package_installation_directory:
#: gwin32.c:325:1
msgid ""
"@dll_name: The name of a DLL that a package provides in UTF-8, or %NULL."
msgstr ""

#. used by: g_win32_get_package_installation_directory:
#: gwin32.c:327:1
msgid "Try to determine the installation directory for a software package."
msgstr ""

#. used by: g_win32_get_package_installation_directory:
#: gwin32.c:329:2
msgid ""
"This function is deprecated. Use "
"g_win32_get_package_installation_directory_of_module() instead."
msgstr ""

#. used by: g_win32_get_package_installation_directory:
#: gwin32.c:332:2
msgid ""
"The use of @package is deprecated. You should always pass %NULL. A warning "
"is printed if non-NULL is passed as @package."
msgstr ""

#. used by: g_win32_get_package_installation_directory:
#: gwin32.c:335:7
msgid ""
"The original intended use of @package was for a short identifier of the "
"package, typically the same identifier as used for <literal>GETTEXT_PACKAGE</"
"literal> in software configured using GNU autotools. The function first "
"looks in the Windows Registry for the value <literal>&num;"
"InstallationDirectory</literal> in the key <literal>&num;HKLM\\Software"
"\\@package</literal>, and if that value exists and is a string, returns that."
msgstr ""

#. used by: g_win32_get_package_installation_directory:
#: gwin32.c:343:6
msgid ""
"It is strongly recommended that packagers of GLib-using libraries for "
"Windows do not store installation paths in the Registry to be used by this "
"function as that interfers with having several parallel installations of the "
"library. Enabling multiple installations of different versions of some GLib-"
"using library, or GLib itself, is desirable for various reasons."
msgstr ""

#. used by: g_win32_get_package_installation_directory:
#: gwin32.c:350:4
msgid ""
"For this reason it is recommeded to always pass %NULL as @package to this "
"function, to avoid the temptation to use the Registry. In version 2.20 of "
"GLib the @package parameter will be ignored and this function won't look in "
"the Registry at all."
msgstr ""

#. used by: g_win32_get_package_installation_directory:
#: gwin32.c:355:9
msgid ""
"If @package is %NULL, or the above value isn't found in the Registry, but "
"@dll_name is non-%NULL, it should name a DLL loaded into the current "
"process. Typically that would be the name of the DLL calling this function, "
"looking for its installation directory. The function then asks Windows what "
"directory that DLL was loaded from. If that directory's last component is "
"\"bin\" or \"lib\", the parent directory is returned, otherwise the "
"directory itself. If that DLL isn't loaded, the function proceeds as if "
"@dll_name was %NULL."
msgstr ""

#. used by: g_win32_get_package_installation_directory:
#: gwin32.c:365:3
msgid ""
"If both @package and @dll_name are %NULL, the directory from where the main "
"executable of the process was loaded is used instead in the same way as "
"above."
msgstr ""

#. used by: g_win32_get_package_installation_directory:
#: gwin32.c:369:4
msgid ""
"Returns: a string containing the installation directory for @package. The "
"string is in the GLib file name encoding, i.e. UTF-8. The return value "
"should be freed with g_free() when not needed any longer. If the function "
"fails %NULL is returned."
msgstr ""

#. used by: g_win32_get_package_installation_directory:
#: gwin32.c:374:2
msgid ""
"Deprecated: 2.18: Pass the HMODULE of a DLL or EXE to "
"g_win32_get_package_installation_directory_of_module() instead."
msgstr ""

#. used by: g_win32_get_package_installation_subdirectory:
#: gwin32.c:431:1
msgid ""
"@dll_name: The name of a DLL that a package provides, in UTF-8, or %NULL."
msgstr ""

#. used by: g_win32_get_package_installation_subdirectory:
#: gwin32.c:432:1
msgid ""
"@subdir: A subdirectory of the package installation directory, also in UTF-8"
msgstr ""

#. used by: g_win32_get_package_installation_subdirectory:
#: gwin32.c:434:3
msgid ""
"This function is deprecated. Use "
"g_win32_get_package_installation_directory_of_module() and g_build_filename"
"() instead."
msgstr ""

#. used by: g_win32_get_package_installation_subdirectory:
#: gwin32.c:438:7
msgid ""
"Returns a newly-allocated string containing the path of the subdirectory "
"@subdir in the return value from calling "
"g_win32_get_package_installation_directory() with the @package and @dll_name "
"parameters. See the documentation for "
"g_win32_get_package_installation_directory() for more details. In "
"particular, note that it is deprecated to pass anything except NULL as "
"@package."
msgstr ""

#. used by: g_win32_get_package_installation_subdirectory:
#: gwin32.c:446:5
msgid ""
"Returns: a string containing the complete path to @subdir inside the "
"installation directory of @package. The returned string is in the GLib file "
"name encoding, i.e. UTF-8. The return value should be freed with g_free() "
"when no longer needed. If something goes wrong, %NULL is returned."
msgstr ""

#. used by: g_win32_get_package_installation_subdirectory:
#: gwin32.c:452:3
msgid ""
"Deprecated: 2.18: Pass the HMODULE of a DLL or EXE to "
"g_win32_get_package_installation_directory_of_module() instead, and then "
"construct a subdirectory pathname with g_build_filename()."
msgstr ""

#. used by: g_win32_get_windows_version:
#: gwin32.c:521:9
msgid ""
"Returns version information for the Windows operating system the code is "
"running on. See MSDN documentation for the GetVersion() function. To "
"summarize, the most significant bit is one on Win9x, and zero on NT-based "
"systems. Since version 2.14, GLib works only on NT-based systems, so "
"checking whether your are running on Win9x in your own software is moot. The "
"least significant byte is 4 on Windows NT 4, and 5 on Windows XP. Software "
"that needs really detailled version and feature information should use Win32 "
"API like GetVersionEx() and VerifyVersionInfo()."
msgstr ""

#. used by: g_win32_get_windows_version:
#: gwin32.c:531:1
msgid "Returns: The version information."
msgstr ""

#. used by: g_win32_get_windows_version:
#: gwin32.c:533:1
msgid "Since: 2.6"
msgstr ""

#. used by: g_win32_locale_filename_from_utf8:
#: gwin32.c:545:1
msgid "@utf8filename: a UTF-8 encoded filename."
msgstr ""

#. used by: g_win32_locale_filename_from_utf8:
#: gwin32.c:547:1
msgid "Converts a filename from UTF-8 to the system codepage."
msgstr ""

#. used by: g_win32_locale_filename_from_utf8:
#: gwin32.c:549:6
msgid ""
"On NT-based Windows, on NTFS file systems, file names are in Unicode. It is "
"quite possible that Unicode file names contain characters not representable "
"in the system codepage. (For instance, Greek or Cyrillic characters on "
"Western European or US Windows installations, or various less common CJK "
"characters on CJK Windows installations.)"
msgstr ""

#. used by: g_win32_locale_filename_from_utf8:
#: gwin32.c:556:7
msgid ""
"In such a case, and if the filename refers to an existing file, and the file "
"system stores alternate short (8.3) names for directory entries, the short "
"form of the filename is returned. Note that the \"short\" name might in fact "
"be longer than the Unicode name if the Unicode name has very short pathname "
"components containing non-ASCII characters. If no system codepage name for "
"the file is possible, %NULL is returned."
msgstr ""

#. used by: g_win32_locale_filename_from_utf8:
#: gwin32.c:564:2
msgid ""
"The return value is dynamically allocated and should be freed with g_free() "
"when no longer needed."
msgstr ""

#. used by: g_win32_locale_filename_from_utf8:
#: gwin32.c:567:2
msgid ""
"Return value: The converted filename, or %NULL on conversion failure and "
"lack of short names."
msgstr ""

#. used by: g_win32_locale_filename_from_utf8:
#: gwin32.c:570:1
msgid "Since: 2.8"
msgstr ""

#. used by: g_win32_getlocale:
#: gwin32.c:74:7
msgid ""
"The setlocale() function in the Microsoft C library uses locale names of the "
"form \"English_United States.1252\" etc. We want the UNIXish standard form "
"\"en_US\", \"zh_TW\" etc. This function gets the current thread locale from "
"Windows - without any encoding info - and returns it as a string of the "
"above form for use in forming file names etc. The returned string should be "
"deallocated with g_free()."
msgstr ""

#. used by: g_win32_getlocale:
#: gwin32.c:82:1
msgid "Returns: newly-allocated locale name."
msgstr ""
