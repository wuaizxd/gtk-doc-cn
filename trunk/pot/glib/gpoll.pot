# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-04-14 21:52-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"

# used by: g_poll:
#: gpoll.c:100:1
msgid "@nfds: the number of file descriptors in @fds"
msgstr ""

# used by: g_poll:
#: gpoll.c:101:1
msgid ""
"@timeout: amount of time to wait, in milliseconds, or -1 to wait forever"
msgstr ""

# #used by: g_poll:
#: gpoll.c:103:5
msgid ""
"Polls @fds, as with the poll() system call, but portably. (On systems that "
"don't have poll(), it is emulated using select().) This is used internally "
"by #GMainContext, but it can be called directly if you need to block until a "
"file descriptor is ready, but don't want to run the full main loop."
msgstr ""

# #used by: g_poll:
#: gpoll.c:109:5
msgid ""
"Each element of @fds is a #GPollFD describing a single file descriptor to "
"poll. The %fd field indicates the file descriptor, and the %events field "
"indicates the events to poll for. On return, the %revents fields will be "
"filled with the events that actually occurred."
msgstr ""

# #used by: g_poll:
#: gpoll.c:115:5
msgid ""
"On POSIX systems, the file descriptors in @fds can be any sort of file "
"descriptor, but the situation is much more complicated on Windows. If you "
"need to use g_poll() in code that has to run on Windows, the easiest "
"solution is to construct all of your #GPollFD<!-- -->s with "
"g_io_channel_win32_make_pollfd()."
msgstr ""

# #used by: g_poll:
#: gpoll.c:121:3
msgid ""
"Return value: the number of entries in @fds whose %revents fields were "
"filled in, or 0 if the operation timed out, or -1 on error or if the call "
"was interrupted."
msgstr ""

# #used by: g_poll:
#: gpoll.c:125:1
msgid "Since: 2.20"
msgstr ""

# used by: g_poll:
#: gpoll.c:99:1
msgid "@fds: file descriptors to poll"
msgstr ""

# used by: GPollFunc:
#: gpoll.h:65:1
msgid "@ufds: an array of #GPollFD elements"
msgstr ""

# used by: GPollFunc:
#: gpoll.h:66:1
msgid "@nfsd: the number of elements in @ufds"
msgstr ""

# used by: GPollFunc:
#: gpoll.h:67:2
msgid ""
"@timeout_: the maximum time to wait for an event of the file descriptors. A "
"negative value indicates an infinite timeout."
msgstr ""

# #used by: GPollFunc:
#: gpoll.h:70:2
msgid ""
"Specifies the type of function passed to g_main_context_set_poll_func(). The "
"semantics of the function should match those of the poll() system call."
msgstr ""

# #used by: GPollFunc:
#: gpoll.h:73:2
msgid ""
"Returns: the number of #GPollFD elements which have events or errors "
"reported, or -1 if an error occurred."
msgstr ""

# used by: GPollFD:
#: gpoll.h:82:1
msgid "@fd: the file descriptor to poll (or a <type>HANDLE</type> on Win32)"
msgstr ""

# used by: GPollFD:
#: gpoll.h:83:4
msgid ""
"@events: a bitwise combination from #GIOCondition, specifying which events "
"should be polled for. Typically for reading from a file descriptor you would "
"use %G_IO_IN | %G_IO_HUP | %G_IO_ERR, and for writing you would use "
"%G_IO_OUT | %G_IO_ERR."
msgstr ""

# used by: GPollFD:
#: gpoll.h:87:2
msgid ""
"@revents: a bitwise combination of flags from #GIOCondition, returned from "
"the poll() function to indicate which events occurred."
msgstr ""
