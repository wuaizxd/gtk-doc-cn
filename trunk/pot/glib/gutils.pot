# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-04-17 15:16-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"

#. used by: g_get_current_dir:
#: gutils.c:1002:1
msgid "Returns: the current directory."
msgstr ""

#. used by: g_getenv:
#: gutils.c:1075:1
msgid ""
"@variable: the environment variable to get, in the GLib file name encoding."
msgstr ""

#. used by: g_getenv:
#: gutils.c:1077:6
msgid ""
"Returns the value of an environment variable. The name and value are in the "
"GLib file name encoding. On UNIX, this means the actual bytes which might or "
"might not be in some consistent character set and encoding. On Windows, it "
"is in UTF-8. On Windows, in case the environment variable's value contains "
"references to other environment variables, they are expanded."
msgstr ""

#. used by: g_getenv:
#: gutils.c:1084:4
msgid ""
"Return value: the value of the environment variable, or %NULL if the "
"environment variable is not found. The returned string may be overwritten by "
"the next call to g_getenv(), g_setenv() or g_unsetenv()."
msgstr ""

#. used by: g_setenv:
#: gutils.c:1198:1
msgid "@variable: the environment variable to set, must not contain '='."
msgstr ""

#. used by: g_setenv:
#: gutils.c:1199:1
msgid "@value: the value for to set the variable to."
msgstr ""

#. used by: g_setenv:
#: gutils.c:1200:1
msgid "@overwrite: whether to change the variable if it already exists."
msgstr ""

#. used by: g_setenv:
#: gutils.c:1202:4
msgid ""
"Sets an environment variable. Both the variable's name and value should be "
"in the GLib file name encoding. On UNIX, this means that they can be any "
"sequence of bytes. On Windows, they should be in UTF-8."
msgstr ""

#. used by: g_setenv:
#: gutils.c:1207:2
msgid ""
"Note that on some systems, when variables are overwritten, the memory used "
"for the previous variables and its value isn't reclaimed."
msgstr ""

#. used by: g_setenv:
#: gutils.c:1210:1
msgid "Returns: %FALSE if the environment variable couldn't be set."
msgstr ""

#. #-#-#-#-#  gutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_setenv:
#. #-#-#-#-#  gutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_unsetenv:
#: gutils.c:1212:1 gutils.c:1312:1
msgid "Since: 2.4"
msgstr ""

#. used by: g_unsetenv:
#: gutils.c:1303:1
msgid "@variable: the environment variable to remove, must not contain '='."
msgstr ""

#. used by: g_unsetenv:
#: gutils.c:1305:1
msgid "Removes an environment variable from the environment."
msgstr ""

#. used by: g_unsetenv:
#: gutils.c:1307:4
msgid ""
"Note that on some systems, when variables are overwritten, the memory used "
"for the previous variables and its value isn't reclaimed. Furthermore, this "
"function can't be guaranteed to operate in a threadsafe way."
msgstr ""

#. used by: g_listenv:
#: gutils.c:1379:1
msgid "Gets the names of all variables set in the environment."
msgstr ""

#. used by: g_listenv:
#: gutils.c:1381:2
msgid ""
"Returns: a %NULL-terminated list of strings which must be freed with "
"g_strfreev()."
msgstr ""

#. used by: g_listenv:
#: gutils.c:1384:6
msgid ""
"Programs that want to be portable to Windows should typically use this "
"function and g_getenv() instead of using the environ array from the C "
"library directly. On Windows, the strings in the environ array are in system "
"codepage encoding, while in most of the typical use cases for environment "
"variables in GLib-using programs you want the UTF-8 encoding that this "
"function and g_getenv() provide."
msgstr ""

#. #-#-#-#-#  gutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_listenv:
#. #-#-#-#-#  gutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_get_host_name:
#: gutils.c:1391:1 gutils.c:1914:1
msgid "Since: 2.8"
msgstr ""

#. used by: g_get_user_name:
#: gutils.c:1807:4
msgid ""
"Gets the user name of the current user. The encoding of the returned string "
"is system-defined. On UNIX, it might be the preferred file name encoding, or "
"something else, and there is no guarantee that it is even consistent on a "
"machine. On Windows, it is always UTF-8."
msgstr ""

#. used by: g_get_user_name:
#: gutils.c:1812:1
msgid "Returns: the user name of the current user."
msgstr ""

#. used by: g_get_real_name:
#: gutils.c:1824:5
msgid ""
"Gets the real name of the user. This usually comes from the user's entry in "
"the <filename>passwd</filename> file. The encoding of the returned string is "
"system-defined. (On Windows, it is, however, always UTF-8.) If the real user "
"name cannot be determined, the string \"Unknown\" is returned."
msgstr ""

#. used by: g_get_real_name:
#: gutils.c:1830:1
msgid "Returns: the user's real name."
msgstr ""

#. used by: g_get_home_dir:
#: gutils.c:1842:2
msgid ""
"Gets the current user's home directory as defined in the password database."
msgstr ""

#. used by: g_get_home_dir:
#: gutils.c:1845:3
msgid ""
"Note that in contrast to traditional UNIX tools, this function prefers "
"<filename>passwd</filename> entries over the <envar>HOME</envar> environment "
"variable."
msgstr ""

#. used by: g_get_home_dir:
#: gutils.c:1849:18
msgid ""
"One of the reasons for this decision is that applications in many cases need "
"special handling to deal with the case where <envar>HOME</envar> is "
"<simplelist> <member>Not owned by the user</member> <member>Not writeable</"
"member> <member>Not even readable</member> </simplelist> Since applications "
"are in general <emphasis>not</emphasis> written to deal with these "
"situations it was considered better to make g_get_home_dir() not pay "
"attention to <envar>HOME</envar> and to return the real home directory for "
"the user. If applications want to pay attention to <envar>HOME</envar>, they "
"can do: |[ const char *homedir = g_getenv (\"HOME\"); if (!homedir) homedir "
"= g_get_home_dir (<!-- -->); ]|"
msgstr ""

#. used by: g_get_home_dir:
#: gutils.c:1868:1
msgid "Returns: the current user's home directory"
msgstr ""

#. used by: g_get_tmp_dir:
#: gutils.c:1880:6
msgid ""
"Gets the directory to use for temporary files. This is found from inspecting "
"the environment variables <envar>TMPDIR</envar>, <envar>TMP</envar>, and "
"<envar>TEMP</envar> in that order. If none of those are defined \"/tmp\" is "
"returned on UNIX and \"C:\\\" on Windows. The encoding of the returned "
"string is system-defined. On Windows, it is always UTF-8. The return value "
"is never %NULL or the empty string."
msgstr ""

#. used by: g_get_tmp_dir:
#: gutils.c:1887:1
msgid "Returns: the directory to use for temporary files."
msgstr ""

#. used by: g_get_host_name:
#: gutils.c:1899:1
msgid "Return a name for the machine."
msgstr ""

#. used by: g_get_host_name:
#: gutils.c:1901:10
msgid ""
"The returned name is not necessarily a fully-qualified domain name, or even "
"present in DNS or some other name service at all. It need not even be unique "
"on your local network or site, but usually it is. Callers should not rely on "
"the return value having any specific properties like uniqueness for security "
"purposes. Even if the name of the machine is changed while an application is "
"running, the return value from this function does not change. The returned "
"string is owned by GLib and should not be modified or freed. If no name can "
"be determined, a default fixed string \"localhost\" is returned."
msgstr ""

#. used by: g_get_host_name:
#: gutils.c:1912:1
msgid "Returns: the host name of the machine."
msgstr ""

#. used by: g_get_prgname:
#: gutils.c:1929:5
msgid ""
"Gets the name of the program. This name should <emphasis>not</emphasis> be "
"localized, contrast with g_get_application_name(). (If you are using GDK or "
"GTK+ the program name is set in gdk_init(), which is called by gtk_init(). "
"The program name is found by taking the last component of <literal>argv[0]</"
"literal>.)"
msgstr ""

#. used by: g_get_prgname:
#: gutils.c:1935:2
msgid ""
"Returns: the name of the program. The returned string belongs to GLib and "
"must not be modified or freed."
msgstr ""

#. used by: g_set_prgname:
#: gutils.c:1975:1
msgid "@prgname: the name of the program."
msgstr ""

#. used by: g_set_prgname:
#: gutils.c:1977:3
msgid ""
"Sets the name of the program. This name should <emphasis>not</emphasis> be "
"localized, contrast with g_set_application_name(). Note that for thread-"
"safety reasons this function can only be called once."
msgstr ""

#. used by: g_get_application_name:
#: gutils.c:1996:7
msgid ""
"Gets a human-readable name for the application, as set by "
"g_set_application_name(). This name should be localized if possible, and is "
"intended for display to the user.  Contrast with g_get_prgname(), which gets "
"a non-localized name. If g_set_application_name() has not been called, "
"returns the result of g_get_prgname() (which may be %NULL if g_set_prgname() "
"has also not been called)."
msgstr ""

#. used by: g_get_application_name:
#: gutils.c:2004:1
msgid "Return value: human-readable application name. may return %NULL"
msgstr ""

#. #-#-#-#-#  gutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_get_application_name:
#. #-#-#-#-#  gutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_set_application_name:
#: gutils.c:2006:1 gutils.c:2039:1
msgid "Since: 2.2"
msgstr ""

#. used by: glib_check_version:
#: gutils.c:202:1
msgid "@required_major: the required major version."
msgstr ""

#. used by: g_set_application_name:
#: gutils.c:2025:1
msgid "@application_name: localized name of the application"
msgstr ""

#. used by: g_set_application_name:
#: gutils.c:2027:5
msgid ""
"Sets a human-readable name for the application. This name should be "
"localized if possible, and is intended for display to the user. Contrast "
"with g_set_prgname(), which sets a non-localized name. g_set_prgname() will "
"be called automatically by gtk_init(), but g_set_application_name() will not."
msgstr ""

#. used by: glib_check_version:
#: gutils.c:203:1
msgid "@required_minor: the required minor version."
msgstr ""

#. used by: g_set_application_name:
#: gutils.c:2033:2
msgid ""
"Note that for thread safety reasons, this function can only be called once."
msgstr ""

#. used by: g_set_application_name:
#: gutils.c:2036:2
msgid ""
"The application name will be used in contexts such as error messages, or "
"when displaying an application's name in the task list."
msgstr ""

#. used by: glib_check_version:
#: gutils.c:204:1
msgid "@required_micro: the required micro version."
msgstr ""

#. used by: glib_check_version:
#: gutils.c:206:7
msgid ""
"Checks that the GLib library in use is compatible with the given version. "
"Generally you would pass in the constants #GLIB_MAJOR_VERSION, "
"#GLIB_MINOR_VERSION, #GLIB_MICRO_VERSION as the three arguments to this "
"function; that produces a check that the library in use is compatible with "
"the version of GLib the application or module was compiled against."
msgstr ""

#. used by: g_get_user_data_dir:
#: gutils.c:2060:2
msgid ""
"Returns a base directory in which to access application data such as icons "
"that is customized for a particular user."
msgstr ""

#. used by: g_get_user_data_dir:
#: gutils.c:2063:4
msgid ""
"On UNIX platforms this is determined using the mechanisms described in the "
"<ulink url=\"http://www.freedesktop.org/Standards/basedir-spec\"> XDG Base "
"Directory Specification</ulink>. In this case the directory retrieved will "
"be XDG_DATA_HOME."
msgstr ""

#. used by: g_get_user_data_dir:
#: gutils.c:2068:2
msgid ""
"On Windows is the virtual folder that represents the My Documents desktop "
"item. See documentation for CSIDL_PERSONAL."
msgstr ""

#. #-#-#-#-#  gutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_get_user_data_dir:
#. #-#-#-#-#  gutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_get_user_config_dir:
#. #-#-#-#-#  gutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_get_user_cache_dir:
#: gutils.c:2071:3 gutils.c:2159:3 gutils.c:2191:3
msgid ""
"Return value: a string owned by GLib that must not be modified or freed. "
"Since: 2.6"
msgstr ""

#. used by: glib_check_version:
#: gutils.c:214:6
msgid ""
"Compatibility is defined by two things: first the version of the running "
"library is newer than the version @required_major.required_minor."
"@required_micro. Second the running library must be binary compatible with "
"the version @required_major.required_minor.@required_micro (same major "
"version.)"
msgstr ""

#. used by: g_get_user_config_dir:
#: gutils.c:2146:2
msgid ""
"Returns a base directory in which to store user-specific application "
"configuration information such as user preferences and settings."
msgstr ""

#. used by: g_get_user_config_dir:
#: gutils.c:2149:4
msgid ""
"On UNIX platforms this is determined using the mechanisms described in the "
"<ulink url=\"http://www.freedesktop.org/Standards/basedir-spec\"> XDG Base "
"Directory Specification</ulink>. In this case the directory retrieved will "
"be XDG_CONFIG_HOME."
msgstr ""

#. used by: g_get_user_config_dir:
#: gutils.c:2154:4
msgid ""
"On Windows is the directory that serves as a common repository for "
"application-specific data. A typical path is C:\\Documents and Settings"
"\\username\\Application. See documentation for CSIDL_APPDATA."
msgstr ""

#. used by: g_get_user_cache_dir:
#: gutils.c:2178:2
msgid ""
"Returns a base directory in which to store non-essential, cached data "
"specific to particular user."
msgstr ""

#. used by: g_get_user_cache_dir:
#: gutils.c:2181:4
msgid ""
"On UNIX platforms this is determined using the mechanisms described in the "
"<ulink url=\"http://www.freedesktop.org/Standards/basedir-spec\"> XDG Base "
"Directory Specification</ulink>. In this case the directory retrieved will "
"be XDG_CACHE_HOME."
msgstr ""

#. used by: g_get_user_cache_dir:
#: gutils.c:2186:4
msgid ""
"On Windows is the directory that serves as a common repository for temporary "
"Internet files. A typical path is C:\\Documents and Settings\\username"
"\\Local Settings\\Temporary Internet Files. See documentation for "
"CSIDL_INTERNET_CACHE."
msgstr ""

#. used by: glib_check_version:
#: gutils.c:221:4
msgid ""
"Return value: %NULL if the GLib library is compatible with the given "
"version, or a string describing the version mismatch. The returned string is "
"owned by GLib and must not be modified or freed."
msgstr ""

#. #-#-#-#-#  gutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: glib_check_version:
#. #-#-#-#-#  gutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_get_language_names:
#: gutils.c:226:1 gutils.c:3174:1
msgid "Since: 2.6"
msgstr ""

#. used by: g_memmove:
#: gutils.c:250:1
msgid "@dest: the destination address to copy the bytes to."
msgstr ""

#. used by: g_reload_user_special_dirs_cache:
#: gutils.c:2509:3
msgid ""
"Resets the cache used for g_get_user_special_dir(), so that the latest on-"
"disk version is used. Call this only if you just changed the data on disk "
"yourself."
msgstr ""

#. used by: g_memmove:
#: gutils.c:251:1
msgid "@src: the source address to copy the bytes from."
msgstr ""

#. used by: g_reload_user_special_dirs_cache:
#: gutils.c:2513:4
msgid ""
"Due to threadsafety issues this may cause leaking of strings that were "
"previously returned from g_get_user_special_dir() that can't be freed. We "
"ensure to only leak the data for the directories that actually changed value "
"though."
msgstr ""

#. #-#-#-#-#  gutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_reload_user_special_dirs_cache:
#. #-#-#-#-#  gutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_int64_equal:
#. #-#-#-#-#  gutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_int64_hash:
#. #-#-#-#-#  gutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_double_equal:
#. #-#-#-#-#  gutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_double_hash:
#: gutils.c:2518:1 gutils.c:3306:1 gutils.c:3325:1 gutils.c:3345:1
#: gutils.c:3364:1
msgid "Since: 2.22"
msgstr ""

#. used by: g_memmove:
#: gutils.c:252:1
msgid "@len: the number of bytes to copy."
msgstr ""

#. used by: g_memmove:
#: gutils.c:254:2
msgid ""
"Copies a block of memory @len bytes long, from @src to @dest. The source and "
"destination areas may overlap."
msgstr ""

#. used by: g_get_user_special_dir:
#: gutils.c:2560:1
msgid "@directory: the logical id of special directory"
msgstr ""

#. used by: g_get_user_special_dir:
#: gutils.c:2562:1
msgid "Returns the full path of a special directory using its logical id."
msgstr ""

#. used by: g_get_user_special_dir:
#: gutils.c:2564:4
msgid ""
"On Unix this is done using the XDG special user directories. For "
"compatibility with existing practise, %G_USER_DIRECTORY_DESKTOP falls back "
"to <filename>$HOME/Desktop</filename> when XDG special user directories have "
"not been set up."
msgstr ""

#. used by: g_get_user_special_dir:
#: gutils.c:2569:3
msgid ""
"Depending on the platform, the user might be able to change the path of the "
"special directory without requiring the session to restart; GLib will not "
"reflect any change once the special directories are loaded."
msgstr ""

#. used by: g_memmove:
#: gutils.c:257:4
msgid ""
"In order to use this function, you must include <filename>string.h</"
"filename> yourself, because this macro will typically simply resolve to "
"memmove() and GLib does not include <filename>string.h</filename> for you."
msgstr ""

#. used by: g_get_user_special_dir:
#: gutils.c:2573:3
msgid ""
"Return value: the path to the specified special directory, or %NULL if the "
"logical id was not found. The returned string is owned by GLib and should "
"not be modified or freed."
msgstr ""

#. #-#-#-#-#  gutils.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: GUserDirectory:
#. #-#-#-#-#  gutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_get_user_special_dir:
#: gutils.c:2577:1 gutils.h:178:1
msgid "Since: 2.14"
msgstr ""

#. used by: g_get_system_data_dirs:
#: gutils.c:2765:2
msgid ""
"Returns an ordered list of base directories in which to access system-wide "
"application data."
msgstr ""

#. used by: g_get_system_data_dirs:
#: gutils.c:2768:4
msgid ""
"On UNIX platforms this is determined using the mechanisms described in the "
"<ulink url=\"http://www.freedesktop.org/Standards/basedir-spec\"> XDG Base "
"Directory Specification</ulink> In this case the list of directories "
"retrieved will be XDG_DATA_DIRS."
msgstr ""

#. used by: g_get_system_data_dirs:
#: gutils.c:2773:5
msgid ""
"On Windows the first elements in the list are the Application Data and "
"Documents folders for All Users. (These can be determined only on Windows "
"2000 or later and are not present in the list on other Windows versions.) "
"See documentation for CSIDL_COMMON_APPDATA and CSIDL_COMMON_DOCUMENTS."
msgstr ""

#. used by: g_get_system_data_dirs:
#: gutils.c:2779:3
msgid ""
"Then follows the \"share\" subfolder in the installation folder for the "
"package containing the DLL that calls this function, if it can be determined."
msgstr ""

#. used by: g_get_system_data_dirs:
#: gutils.c:2783:3
msgid ""
"Finally the list contains the \"share\" subfolder in the installation folder "
"for GLib, and in the installation folder for the package the application's ."
"exe file belongs to."
msgstr ""

#. used by: g_get_system_data_dirs:
#: gutils.c:2787:4
msgid ""
"The installation folders above are determined by looking up the folder where "
"the module (DLL or EXE) in question is located. If the folder's name is \"bin"
"\", its parent is used, otherwise the folder itself."
msgstr ""

#. used by: g_get_system_data_dirs:
#: gutils.c:2792:2
msgid ""
"Note that on Windows the returned list can vary depending on where this "
"function is called."
msgstr ""

#. #-#-#-#-#  gutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_get_system_data_dirs:
#. #-#-#-#-#  gutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_get_system_config_dirs:
#: gutils.c:2795:3 gutils.c:2847:3
msgid ""
"Return value: a %NULL-terminated array of strings owned by GLib that must "
"not be modified or freed. Since: 2.6"
msgstr ""

#. used by: g_get_system_config_dirs:
#: gutils.c:2832:2
msgid ""
"Returns an ordered list of base directories in which to access system-wide "
"configuration information."
msgstr ""

#. used by: g_get_system_config_dirs:
#: gutils.c:2835:4
msgid ""
"On UNIX platforms this is determined using the mechanisms described in the "
"<ulink url=\"http://www.freedesktop.org/Standards/basedir-spec\"> XDG Base "
"Directory Specification</ulink>. In this case the list of directories "
"retrieved will be XDG_CONFIG_DIRS."
msgstr ""

#. used by: g_get_system_config_dirs:
#: gutils.c:2840:6
msgid ""
"On Windows is the directory that contains application data for all users. A "
"typical path is C:\\Documents and Settings\\All Users\\Application Data. "
"This folder is used for application data that is not user specific. For "
"example, an application can store a spell-check dictionary, a database of "
"clip art, or a log file in the CSIDL_COMMON_APPDATA folder. This information "
"will not roam and is available to anyone using the computer."
msgstr ""

#. used by: g_atexit:
#: gutils.c:295:1
msgid "@func: the function to call on normal program termination."
msgstr ""

#. used by: g_atexit:
#: gutils.c:297:1
msgid "Specifies a function to be called at normal program termination."
msgstr ""

#. used by: g_atexit:
#: gutils.c:299:8
msgid ""
"Since GLib 2.8.2, on Windows g_atexit() actually is a preprocessor macro "
"that maps to a call to the atexit() function in the C library. This means "
"that in case the code that calls g_atexit(), i.e. atexit(), is in a DLL, the "
"function will be called when the DLL is detached from the program. This "
"typically makes more sense than that the function is called when the GLib "
"DLL is detached, which happened earlier when g_atexit() was a function in "
"the GLib DLL."
msgstr ""

#. used by: g_atexit:
#: gutils.c:308:2
msgid ""
"The behaviour of atexit() in the context of dynamically loaded modules is "
"not formally specified and varies wildly."
msgstr ""

#. used by: g_atexit:
#: gutils.c:311:3
msgid ""
"On POSIX systems, calling g_atexit() (or atexit()) in a dynamically loaded "
"module which is unloaded before the program terminates might well cause a "
"crash at program exit."
msgstr ""

#. used by: g_atexit:
#: gutils.c:315:3
msgid ""
"Some POSIX systems implement atexit() like Windows, and have each "
"dynamically loaded module maintain an own atexit chain that is called when "
"the module is unloaded."
msgstr ""

#. used by: g_get_language_names:
#: gutils.c:3159:4
msgid ""
"Computes a list of applicable locale names, which can be used to e.g. "
"construct locale-dependent filenames or search paths. The returned list is "
"sorted from most desirable to least desirable and always contains the "
"default locale \"C\"."
msgstr ""

#. used by: g_get_language_names:
#: gutils.c:3164:2
msgid ""
"For example, if LANGUAGE=de:en_US, then the returned list is \"de\", \"en_US"
"\", \"en\", \"C\"."
msgstr ""

#. used by: g_get_language_names:
#: gutils.c:3167:3
msgid ""
"This function consults the environment variables <envar>LANGUAGE</envar>, "
"<envar>LC_ALL</envar>, <envar>LC_MESSAGES</envar> and <envar>LANG</envar> to "
"find the list of locales specified by the user."
msgstr ""

#. used by: g_get_language_names:
#: gutils.c:3171:2
msgid ""
"Return value: a %NULL-terminated array of strings owned by GLib that must "
"not be modified or freed."
msgstr ""

#. used by: g_atexit:
#: gutils.c:319:4
msgid ""
"On other POSIX systems, before a dynamically loaded module is unloaded, the "
"registered atexit functions (if any) residing in that module are called, "
"regardless where the code that registered them resided. This is presumably "
"the most robust approach."
msgstr ""

#. used by: g_direct_hash:
#: gutils.c:3227:1
msgid "@v: a #gpointer key"
msgstr ""

#. used by: g_direct_hash:
#: gutils.c:3229:3
msgid ""
"Converts a gpointer to a hash value. It can be passed to g_hash_table_new() "
"as the @hash_func parameter, when using pointers as keys in a #GHashTable."
msgstr ""

#. #-#-#-#-#  gutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_direct_hash:
#. #-#-#-#-#  gutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_int_hash:
#. #-#-#-#-#  gutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_int64_hash:
#. #-#-#-#-#  gutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_double_hash:
#: gutils.c:3233:1 gutils.c:3286:1 gutils.c:3323:1 gutils.c:3362:1
msgid "Returns: a hash value corresponding to the key."
msgstr ""

#. used by: g_atexit:
#: gutils.c:324:3
msgid ""
"As can be seen from the above, for portability it's best to avoid calling "
"g_atexit() (or atexit()) except in the main executable of a program."
msgstr ""

#. used by: g_direct_equal:
#: gutils.c:3243:2
msgid "@v1: a key. @v2: a key to compare with @v1."
msgstr ""

#. used by: g_direct_equal:
#: gutils.c:3246:3
msgid ""
"Compares two #gpointer arguments and returns %TRUE if they are equal. It can "
"be passed to g_hash_table_new() as the @key_equal_func parameter, when using "
"pointers as keys in a #GHashTable."
msgstr ""

#. #-#-#-#-#  gutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_direct_equal:
#. #-#-#-#-#  gutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_int_equal:
#. #-#-#-#-#  gutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_int64_equal:
#. #-#-#-#-#  gutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_double_equal:
#: gutils.c:3250:1 gutils.c:3269:1 gutils.c:3304:1 gutils.c:3343:1
msgid "Returns: %TRUE if the two keys match."
msgstr ""

#. used by: g_int_equal:
#: gutils.c:3261:2
msgid ""
"@v1: a pointer to a #gint key. @v2: a pointer to a #gint key to compare with "
"@v1."
msgstr ""

#. used by: g_int_equal:
#: gutils.c:3264:4
msgid ""
"Compares the two #gint values being pointed to and returns %TRUE if they are "
"equal. It can be passed to g_hash_table_new() as the @key_equal_func "
"parameter, when using pointers to integers as keys in a #GHashTable."
msgstr ""

#. used by: g_int_hash:
#: gutils.c:3280:1
msgid "@v: a pointer to a #gint key"
msgstr ""

#. used by: g_int_hash:
#: gutils.c:3282:3
msgid ""
"Converts a pointer to a #gint to a hash value. It can be passed to "
"g_hash_table_new() as the @hash_func parameter, when using pointers to "
"integers values as keys in a #GHashTable."
msgstr ""

#. used by: g_int64_equal:
#: gutils.c:3296:2
msgid ""
"@v1: a pointer to a #gint64 key. @v2: a pointer to a #gint64 key to compare "
"with @v1."
msgstr ""

#. used by: g_int64_equal:
#: gutils.c:3299:4
msgid ""
"Compares the two #gint64 values being pointed to and returns %TRUE if they "
"are equal. It can be passed to g_hash_table_new() as the @key_equal_func "
"parameter, when using pointers to 64-bit integers as keys in a #GHashTable."
msgstr ""

#. used by: g_int64_hash:
#: gutils.c:3317:1
msgid "@v: a pointer to a #gint64 key"
msgstr ""

#. used by: g_int64_hash:
#: gutils.c:3319:3
msgid ""
"Converts a pointer to a #gint64 to a hash value. It can be passed to "
"g_hash_table_new() as the @hash_func parameter, when using pointers to 64-"
"bit integers values as keys in a #GHashTable."
msgstr ""

#. used by: g_double_equal:
#: gutils.c:3335:2
msgid ""
"@v1: a pointer to a #gdouble key. @v2: a pointer to a #gdouble key to "
"compare with @v1."
msgstr ""

#. used by: g_double_equal:
#: gutils.c:3338:4
msgid ""
"Compares the two #gdouble values being pointed to and returns %TRUE if they "
"are equal. It can be passed to g_hash_table_new() as the @key_equal_func "
"parameter, when using pointers to doubles as keys in a #GHashTable."
msgstr ""

#. used by: g_double_hash:
#: gutils.c:3356:1
msgid "@v: a pointer to a #gdouble key"
msgstr ""

#. used by: g_double_hash:
#: gutils.c:3358:3
msgid ""
"Converts a pointer to a #gdouble to a hash value. It can be passed to "
"g_hash_table_new() as the @hash_func parameter, when using pointers to "
"doubles as keys in a #GHashTable."
msgstr ""

#. used by: g_nullify_pointer:
#: gutils.c:3374:1
msgid "@nullify_location: the memory address of the pointer."
msgstr ""

#. used by: g_nullify_pointer:
#: gutils.c:3376:1
msgid "Set the pointer at the specified location to %NULL."
msgstr ""

#. used by: g_get_codeset:
#: gutils.c:3389:1
msgid "Get the codeset for the current locale."
msgstr ""

#. used by: g_get_codeset:
#: gutils.c:3391:2
msgid ""
"Return value: a newly allocated string containing the name of the codeset. "
"This string must be freed with g_free()."
msgstr ""

#. used by: _glib_get_locale_dir:
#: gutils.c:3418:4
msgid ""
"Return the path to the share\\locale or lib\\locale subfolder of the GLib "
"installation folder. The path is in the system codepage. We have to use "
"system codepage as bindtextdomain() doesn't have a UTF-8 interface."
msgstr ""

#. used by: glib_gettext:
#: gutils.c:3464:1
msgid "@str: The string to be translated"
msgstr ""

#. used by: glib_gettext:
#: gutils.c:3466:3
msgid ""
"Returns the translated string from the glib translations. This is an "
"internal function and should only be used by the internals of glib (such as "
"libgio)."
msgstr ""

#. used by: glib_gettext:
#: gutils.c:3470:1
msgid "Returns: the transation of @str to the current locale"
msgstr ""

#. used by: g_find_program_in_path:
#: gutils.c:431:1
msgid "@program: a program name in the GLib file name encoding"
msgstr ""

#. used by: g_find_program_in_path:
#: gutils.c:433:5
msgid ""
"Locates the first executable named @program in the user's path, in the same "
"way that execvp() would locate it. Returns an allocated string with the "
"absolute path name, or %NULL if the program is not found in the path. If "
"@program is already an absolute path, returns a copy of @program if @program "
"exists and is executable, and %NULL otherwise."
msgstr ""

#. used by: g_find_program_in_path:
#: gutils.c:439:3
msgid ""
"On Windows, if @program does not have a file type suffix, tries with the "
"suffixes .exe, .cmd, .bat and .com, and the suffixes in the <envar>PATHEXT</"
"envar> environment variable."
msgstr ""

#. used by: g_find_program_in_path:
#: gutils.c:443:7
msgid ""
"On Windows, it looks for the file in the same way as CreateProcess() would. "
"This means first in the directory where the executing program was loaded "
"from, then in the current directory, then in the Windows 32-bit system "
"directory, then in the Windows directory, and finally in the directories in "
"the <envar>PATH</envar> environment variable. If the program is found, the "
"return value contains the full name including the type suffix."
msgstr ""

#. used by: g_find_program_in_path:
#: gutils.c:451:1
msgid "Return value: absolute path, or %NULL"
msgstr ""

#. used by: g_parse_debug_string:
#: gutils.c:630:2
msgid ""
"@string: a list of debug options separated by colons, spaces, or commas, or "
"%NULL."
msgstr ""

#. used by: g_parse_debug_string:
#: gutils.c:632:2
msgid ""
"@keys: pointer to an array of #GDebugKey which associate strings with bit "
"flags."
msgstr ""

#. used by: g_parse_debug_string:
#: gutils.c:634:1
msgid "@nkeys: the number of #GDebugKey<!-- -->s in the array."
msgstr ""

#. used by: g_parse_debug_string:
#: gutils.c:636:4
msgid ""
"Parses a string containing debugging options into a %guint containing bit "
"flags. This is used within GDK and GTK+ to parse the debug options passed on "
"the command line or through environment variables."
msgstr ""

#. used by: g_parse_debug_string:
#: gutils.c:641:3
msgid ""
"If @string is equal to \"all\", all flags are set.  If @string is equal to "
"\"help\", all the available keys in @keys are printed out to standard error."
msgstr ""

#. used by: g_parse_debug_string:
#: gutils.c:645:1
msgid "Returns: the combined set of bit flags."
msgstr ""

#. #-#-#-#-#  gutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_basename:
#. #-#-#-#-#  gutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_path_get_basename:
#. #-#-#-#-#  gutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_path_get_dirname:
#: gutils.c:702:1 gutils.c:743:1 gutils.c:897:1
msgid "@file_name: the name of the file."
msgstr ""

#. used by: g_basename:
#: gutils.c:704:2
msgid ""
"Gets the name of the file without any leading directory components. It "
"returns a pointer into the given file name string."
msgstr ""

#. used by: g_basename:
#: gutils.c:707:1
msgid ""
"Return value: the name of the file without any leading directory components."
msgstr ""

#. used by: g_basename:
#: gutils.c:709:3
msgid ""
"Deprecated:2.2: Use g_path_get_basename() instead, but notice that "
"g_path_get_basename() allocates new memory for the returned string, unlike "
"this function which returns a pointer into the argument."
msgstr ""

#. used by: g_path_get_basename:
#: gutils.c:745:5
msgid ""
"Gets the last component of the filename. If @file_name ends with a directory "
"separator it gets the component before the last slash. If @file_name "
"consists only of directory separators (and on Windows, possibly a drive "
"letter), a single separator is returned. If @file_name is empty, it gets \"."
"\"."
msgstr ""

#. used by: g_path_get_basename:
#: gutils.c:751:2
msgid ""
"Return value: a newly allocated string containing the last component of the "
"filename."
msgstr ""

#. #-#-#-#-#  gutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_path_is_absolute:
#. #-#-#-#-#  gutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_path_skip_root:
#: gutils.c:802:1 gutils.c:830:1
msgid "@file_name: a file name."
msgstr ""

#. used by: g_path_is_absolute:
#: gutils.c:804:3
msgid ""
"Returns %TRUE if the given @file_name is an absolute file name, i.e. it "
"contains a full path from the root directory such as \"/usr/local\" on UNIX "
"or \"C:\\windows\" on Windows systems."
msgstr ""

#. used by: g_path_is_absolute:
#: gutils.c:808:1
msgid "Returns: %TRUE if @file_name is an absolute path."
msgstr ""

#. used by: g_path_skip_root:
#: gutils.c:832:3
msgid ""
"Returns a pointer into @file_name after the root component, i.e. after the "
"\"/\" in UNIX or \"C:\\\" under Windows. If @file_name is not an absolute "
"path it returns %NULL."
msgstr ""

#. used by: g_path_skip_root:
#: gutils.c:836:1
msgid "Returns: a pointer into @file_name after the root component."
msgstr ""

#. used by: g_path_get_dirname:
#: gutils.c:899:3
msgid ""
"Gets the directory components of a file name.  If the file name has no "
"directory components \".\" is returned.  The returned string should be freed "
"when no longer needed."
msgstr ""

#. used by: g_path_get_dirname:
#: gutils.c:903:1
msgid "Returns: the directory components of the file."
msgstr ""

#. used by: g_get_current_dir:
#: gutils.c:998:3
msgid ""
"Gets the current directory. The returned string should be freed when no "
"longer needed. The encoding of the returned string is system defined. On "
"Windows, it is always UTF-8."
msgstr ""

#. used by: GUserDirectory:
#: gutils.h:160:1
msgid "@G_USER_DIRECTORY_DESKTOP: the user's Desktop directory"
msgstr ""

#. used by: GUserDirectory:
#: gutils.h:161:1
msgid "@G_USER_DIRECTORY_DOCUMENTS: the user's Documents directory"
msgstr ""

#. used by: GUserDirectory:
#: gutils.h:162:1
msgid "@G_USER_DIRECTORY_DOWNLOAD: the user's Downloads directory"
msgstr ""

#. used by: GUserDirectory:
#: gutils.h:163:1
msgid "@G_USER_DIRECTORY_MUSIC: the user's Music directory"
msgstr ""

#. used by: GUserDirectory:
#: gutils.h:164:1
msgid "@G_USER_DIRECTORY_PICTURES: the user's Pictures directory"
msgstr ""

#. used by: GUserDirectory:
#: gutils.h:165:1
msgid "@G_USER_DIRECTORY_PUBLIC_SHARE: the user's shared directory"
msgstr ""

#. used by: GUserDirectory:
#: gutils.h:166:1
msgid "@G_USER_DIRECTORY_TEMPLATES: the user's Templates directory"
msgstr ""

#. used by: GUserDirectory:
#: gutils.h:167:1
msgid "@G_USER_DIRECTORY_VIDEOS: the user's Movies directory"
msgstr ""

#. used by: GUserDirectory:
#: gutils.h:168:1
msgid "@G_USER_N_DIRECTORIES: the number of enum values"
msgstr ""

#. used by: GUserDirectory:
#: gutils.h:170:3
msgid ""
"These are logical ids for special directories which are defined depending on "
"the platform used. You should use g_get_user_special_dir() to retrieve the "
"full path associated to the logical id."
msgstr ""

#. used by: GUserDirectory:
#: gutils.h:174:3
msgid ""
"The #GUserDirectory enumeration can be extended at later date. Not every "
"platform has a directory for every logical id in this enumeration."
msgstr ""
