# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-04-14 21:52-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"

# #-#-#-#-#  guniprop.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_unichar_isalnum:
# #-#-#-#-#  guniprop.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_unichar_isalpha:
# #-#-#-#-#  guniprop.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_unichar_iscntrl:
# #-#-#-#-#  guniprop.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_unichar_isdigit:
# #-#-#-#-#  guniprop.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_unichar_isgraph:
# #-#-#-#-#  guniprop.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_unichar_islower:
# #-#-#-#-#  guniprop.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_unichar_isprint:
# #-#-#-#-#  guniprop.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_unichar_ispunct:
# #-#-#-#-#  guniprop.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_unichar_isspace:
# #-#-#-#-#  guniprop.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_unichar_ismark:
# #-#-#-#-#  guniprop.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_unichar_isupper:
# #-#-#-#-#  guniprop.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_unichar_istitle:
# #-#-#-#-#  guniprop.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_unichar_isdefined:
# #-#-#-#-#  guniprop.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_unichar_iszerowidth:
# #-#-#-#-#  guniprop.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_unichar_iswide:
# #-#-#-#-#  guniprop.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_unichar_iswide_cjk:
# #-#-#-#-#  guniprop.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_unichar_toupper:
# #-#-#-#-#  guniprop.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_unichar_totitle:
# #-#-#-#-#  guniprop.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_unichar_digit_value:
# #-#-#-#-#  guniprop.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_unichar_xdigit_value:
# #-#-#-#-#  guniprop.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_unichar_type:
#: guniprop.c:101:1 guniprop.c:117:1 guniprop.c:134:1 guniprop.c:150:1
#: guniprop.c:167:1 guniprop.c:191:1 guniprop.c:208:1 guniprop.c:230:1
#: guniprop.c:258:1 guniprop.c:297:1 guniprop.c:321:1 guniprop.c:335:1
#: guniprop.c:374:1 guniprop.c:392:1 guniprop.c:445:1 guniprop.c:480:1
#: guniprop.c:559:1 guniprop.c:640:1 guniprop.c:667:1 guniprop.c:685:1
#: guniprop.c:707:1
msgid "@c: a Unicode character"
msgstr ""

# #used by: g_unichar_isalnum:
#: guniprop.c:103:3
msgid ""
"Determines whether a character is alphanumeric. Given some UTF-8 text, "
"obtain a character value with g_utf8_get_char()."
msgstr ""

# #used by: g_unichar_isalnum:
#: guniprop.c:107:1
msgid "Return value: %TRUE if @c is an alphanumeric character"
msgstr ""

# #-#-#-#-#  guniprop.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_utf8_strup:
# #-#-#-#-#  guniprop.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_utf8_strdown:
# #-#-#-#-#  guniprop.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_utf8_casefold:
#: guniprop.c:1117:1 guniprop.c:1153:1 guniprop.c:928:1
msgid "@str: a UTF-8 encoded string"
msgstr ""

# #-#-#-#-#  guniprop.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_utf8_strup:
# #-#-#-#-#  guniprop.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_utf8_strdown:
# #-#-#-#-#  guniprop.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_utf8_casefold:
#: guniprop.c:1118:1 guniprop.c:1154:1 guniprop.c:929:1
msgid "@len: length of @str, in bytes, or -1 if @str is nul-terminated."
msgstr ""

# #used by: g_utf8_strdown:
#: guniprop.c:1120:4
msgid ""
"Converts all Unicode characters in the string that have a case to lowercase. "
"The exact manner that this is done depends on the current locale, and may "
"result in the number of characters in the string changing."
msgstr ""

# #used by: g_utf8_strdown:
#: guniprop.c:1125:2
msgid ""
"Return value: a newly allocated string, with all characters converted to "
"lowercase."
msgstr ""

# #used by: g_utf8_casefold:
#: guniprop.c:1156:4
msgid ""
"Converts a string into a form that is independent of case. The result will "
"not correspond to any particular case, but can be compared for equality or "
"ordered with the results of calling g_utf8_casefold() on other strings."
msgstr ""

# #used by: g_utf8_casefold:
#: guniprop.c:1161:6
msgid ""
"Note that calling g_utf8_casefold() followed by g_utf8_collate() is only an "
"approximation to the correct linguistic case insensitive ordering, though it "
"is a fairly good one. Getting this exactly right would require a more "
"sophisticated collation function that takes case sensitivity into account. "
"GLib does not currently provide such a function."
msgstr ""

# #used by: g_utf8_casefold:
#: guniprop.c:1168:2
msgid ""
"Return value: a newly allocated string, that is a case independent form of "
"@str."
msgstr ""

# #used by: g_unichar_isalpha:
#: guniprop.c:119:3
msgid ""
"Determines whether a character is alphabetic (i.e. a letter). Given some "
"UTF-8 text, obtain a character value with g_utf8_get_char()."
msgstr ""

# #-#-#-#-#  guniprop.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_unichar_get_mirror_char:
# #-#-#-#-#  guniprop.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_unichar_get_script:
#: guniprop.c:1220:1 guniprop.c:1283:1
msgid "@ch: a Unicode character"
msgstr ""

# used by: g_unichar_get_mirror_char:
#: guniprop.c:1221:1
msgid "@mirrored_ch: location to store the mirrored character"
msgstr ""

# #used by: g_unichar_get_mirror_char:
#: guniprop.c:1223:4
msgid ""
"In Unicode, some characters are <firstterm>mirrored</firstterm>. This means "
"that their images are mirrored horizontally in text that is laid out from "
"right to left. For instance, |$_1_$|(|$_1_$| would become its mirror image, |"
"$_1_$|)|$_1_$|, in right-to-left text."
msgstr ""

# #used by: g_unichar_get_mirror_char:
#: guniprop.c:1228:4
msgid ""
"If @ch has the Unicode mirrored property and there is another unicode "
"character that typically has a glyph that is the mirror image of @ch's glyph "
"and @mirrored_ch is set, it puts that character in the address pointed to by "
"@mirrored_ch.  Otherwise the original character is put."
msgstr ""

# #used by: g_unichar_isalpha:
#: guniprop.c:123:1
msgid "Return value: %TRUE if @c is an alphabetic character"
msgstr ""

# #used by: g_unichar_get_mirror_char:
#: guniprop.c:1233:1
msgid "Return value: %TRUE if @ch has a mirrored character, %FALSE otherwise"
msgstr ""

# #used by: g_unichar_get_mirror_char:
#: guniprop.c:1235:1
msgid "Since: 2.4"
msgstr ""

# #used by: g_unichar_get_script:
#: guniprop.c:1285:4
msgid ""
"Looks up the #GUnicodeScript for a particular character (as defined by "
"Unicode Standard Annex #24). No check is made for @ch being a valid Unicode "
"character; if you pass in invalid character, the result is undefined."
msgstr ""

# #used by: g_unichar_get_script:
#: guniprop.c:1290:2
msgid ""
"This function is equivalent to pango_script_for_unichar() and the two are "
"interchangeable."
msgstr ""

# #used by: g_unichar_get_script:
#: guniprop.c:1293:1
msgid "Return value: the #GUnicodeScript for the character."
msgstr ""

# #-#-#-#-#  guniprop.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_unichar_ismark:
# #-#-#-#-#  guniprop.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_unichar_iszerowidth:
# #-#-#-#-#  guniprop.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_unichar_get_script:
#: guniprop.c:1295:1 guniprop.c:311:1 guniprop.c:406:1
msgid "Since: 2.14"
msgstr ""

# #used by: g_unichar_iscntrl:
#: guniprop.c:136:3
msgid ""
"Determines whether a character is a control character. Given some UTF-8 "
"text, obtain a character value with g_utf8_get_char()."
msgstr ""

# #used by: g_unichar_iscntrl:
#: guniprop.c:140:1
msgid "Return value: %TRUE if @c is a control character"
msgstr ""

# #used by: g_unichar_isdigit:
#: guniprop.c:152:3
msgid ""
"Determines whether a character is numeric (i.e. a digit).  This covers ASCII "
"0-9 and also digits in other languages/scripts.  Given some UTF-8 text, "
"obtain a character value with g_utf8_get_char()."
msgstr ""

# #used by: g_unichar_isdigit:
#: guniprop.c:156:1
msgid "Return value: %TRUE if @c is a digit"
msgstr ""

# #used by: g_unichar_isgraph:
#: guniprop.c:169:5
msgid ""
"Determines whether a character is printable and not a space (returns %FALSE "
"for control characters, format characters, and spaces). g_unichar_isprint() "
"is similar, but returns %TRUE for spaces. Given some UTF-8 text, obtain a "
"character value with g_utf8_get_char()."
msgstr ""

# #used by: g_unichar_isgraph:
#: guniprop.c:175:1
msgid "Return value: %TRUE if @c is printable unless it's a space"
msgstr ""

# #used by: g_unichar_islower:
#: guniprop.c:193:3
msgid ""
"Determines whether a character is a lowercase letter. Given some UTF-8 text, "
"obtain a character value with g_utf8_get_char()."
msgstr ""

# #used by: g_unichar_islower:
#: guniprop.c:197:1
msgid "Return value: %TRUE if @c is a lowercase letter"
msgstr ""

# #used by: g_unichar_isprint:
#: guniprop.c:210:4
msgid ""
"Determines whether a character is printable. Unlike g_unichar_isgraph(), "
"returns %TRUE for spaces. Given some UTF-8 text, obtain a character value "
"with g_utf8_get_char()."
msgstr ""

# #used by: g_unichar_isprint:
#: guniprop.c:215:1
msgid "Return value: %TRUE if @c is printable"
msgstr ""

# #used by: g_unichar_ispunct:
#: guniprop.c:232:3
msgid ""
"Determines whether a character is punctuation or a symbol. Given some UTF-8 "
"text, obtain a character value with g_utf8_get_char()."
msgstr ""

# #used by: g_unichar_ispunct:
#: guniprop.c:236:1
msgid "Return value: %TRUE if @c is a punctuation or symbol character"
msgstr ""

# #used by: g_unichar_isspace:
#: guniprop.c:260:3
msgid ""
"Determines whether a character is a space, tab, or line separator (newline, "
"carriage return, etc.).  Given some UTF-8 text, obtain a character value "
"with g_utf8_get_char()."
msgstr ""

# #used by: g_unichar_isspace:
#: guniprop.c:264:3
msgid ""
"(Note: don't use this to do word breaking; you have to use Pango or "
"equivalent to get word breaking right, the algorithm is fairly complex.)"
msgstr ""

# #used by: g_unichar_isspace:
#: guniprop.c:268:1
msgid "Return value: %TRUE if @c is a space character"
msgstr ""

# #used by: g_unichar_ismark:
#: guniprop.c:299:4
msgid ""
"Determines whether a character is a mark (non-spacing mark, combining mark, "
"or enclosing mark in Unicode speak). Given some UTF-8 text, obtain a "
"character value with g_utf8_get_char()."
msgstr ""

# #used by: g_unichar_ismark:
#: guniprop.c:304:4
msgid ""
"Note: in most cases where isalpha characters are allowed, ismark characters "
"should be allowed to as they are essential for writing most European "
"languages as well as many non-Latin scripts."
msgstr ""

# #used by: g_unichar_ismark:
#: guniprop.c:309:1
msgid "Return value: %TRUE if @c is a mark character"
msgstr ""

# #used by: g_unichar_isupper:
#: guniprop.c:323:1
msgid "Determines if a character is uppercase."
msgstr ""

# #used by: g_unichar_isupper:
#: guniprop.c:325:1
msgid "Return value: %TRUE if @c is an uppercase character"
msgstr ""

# #used by: g_unichar_istitle:
#: guniprop.c:337:6
msgid ""
"Determines if a character is titlecase. Some characters in Unicode which are "
"composites, such as the DZ digraph have three case variants instead of just "
"two. The titlecase form is used at the beginning of a word where only the "
"first letter is capitalized. The titlecase form of the DZ digraph is U+01F2 "
"LATIN CAPITAL LETTTER D WITH SMALL LETTER Z."
msgstr ""

# #used by: g_unichar_istitle:
#: guniprop.c:344:1
msgid "Return value: %TRUE if the character is titlecase"
msgstr ""

# #-#-#-#-#  guniprop.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_unichar_isxdigit:
# #-#-#-#-#  guniprop.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_unichar_tolower:
#: guniprop.c:358:1 guniprop.c:599:1
msgid "@c: a Unicode character."
msgstr ""

# #used by: g_unichar_isxdigit:
#: guniprop.c:360:1
msgid "Determines if a character is a hexidecimal digit."
msgstr ""

# #used by: g_unichar_isxdigit:
#: guniprop.c:362:1
msgid "Return value: %TRUE if the character is a hexadecimal digit"
msgstr ""

# #used by: g_unichar_isdefined:
#: guniprop.c:376:2
msgid "Determines if a given character is assigned in the Unicode standard."
msgstr ""

# #used by: g_unichar_isdefined:
#: guniprop.c:379:1
msgid "Return value: %TRUE if the character has an assigned value"
msgstr ""

# #used by: g_unichar_iszerowidth:
#: guniprop.c:394:4
msgid ""
"Determines if a given character typically takes zero width when rendered. "
"The return value is %TRUE for all non-spacing and enclosing marks (e.g., "
"combining accents), format characters, zero-width space, but not U+00AD SOFT "
"HYPHEN."
msgstr ""

# #used by: g_unichar_iszerowidth:
#: guniprop.c:399:4
msgid ""
"A typical use of this function is with one of g_unichar_iswide() or "
"g_unichar_iswide_cjk() to determine the number of cells a string occupies "
"when displayed on a grid display (terminals).  However, note that not all "
"terminals support zero-width rendering of zero-width marks."
msgstr ""

# #used by: g_unichar_iszerowidth:
#: guniprop.c:404:1
msgid "Return value: %TRUE if the character has zero width"
msgstr ""

# #used by: g_unichar_iswide:
#: guniprop.c:447:2
msgid "Determines if a character is typically rendered in a double-width cell."
msgstr ""

# #used by: g_unichar_iswide:
#: guniprop.c:450:1
msgid "Return value: %TRUE if the character is wide"
msgstr ""

# #used by: g_unichar_iswide_cjk:
#: guniprop.c:482:6
msgid ""
"Determines if a character is typically rendered in a double-width cell under "
"legacy East Asian locales.  If a character is wide according to "
"g_unichar_iswide(), then it is also reported wide with this function, but "
"the converse is not necessarily true.  See the <ulink url=|$_1_$|http://www."
"unicode.org/reports/tr11/|$_1_$|>Unicode Standard Annex #11</ulink> for "
"details."
msgstr ""

# #used by: g_unichar_iswide_cjk:
#: guniprop.c:489:3
msgid ""
"If a character passes the g_unichar_iswide() test then it will also pass "
"this test, but not the other way around.  Note that some characters may pas "
"both this test and g_unichar_iszerowidth()."
msgstr ""

# #used by: g_unichar_iswide_cjk:
#: guniprop.c:493:1
msgid ""
"Return value: %TRUE if the character is wide in legacy East Asian locales"
msgstr ""

# #used by: g_unichar_iswide_cjk:
#: guniprop.c:495:1
msgid "Since: 2.12"
msgstr ""

# #used by: g_unichar_toupper:
#: guniprop.c:561:1
msgid "Converts a character to uppercase."
msgstr ""

# #used by: g_unichar_toupper:
#: guniprop.c:563:3
msgid ""
"Return value: the result of converting @c to uppercase. If @c is not an "
"lowercase or titlecase character, or has no upper case equivalent @c is "
"returned unchanged."
msgstr ""

# #used by: g_unichar_tolower:
#: guniprop.c:601:1
msgid "Converts a character to lower case."
msgstr ""

# #used by: g_unichar_tolower:
#: guniprop.c:603:3
msgid ""
"Return value: the result of converting @c to lower case. If @c is not an "
"upperlower or titlecase character, or has no lowercase equivalent @c is "
"returned unchanged."
msgstr ""

# #used by: g_unichar_totitle:
#: guniprop.c:642:1
msgid "Converts a character to the titlecase."
msgstr ""

# #used by: g_unichar_totitle:
#: guniprop.c:644:3
msgid ""
"Return value: the result of converting @c to titlecase. If @c is not an "
"uppercase or lowercase character, @c is returned unchanged."
msgstr ""

# #used by: g_unichar_digit_value:
#: guniprop.c:669:2
msgid "Determines the numeric value of a character as a decimal digit."
msgstr ""

# #used by: g_unichar_digit_value:
#: guniprop.c:672:2
msgid ""
"Return value: If @c is a decimal digit (according to g_unichar_isdigit()), "
"its numeric value. Otherwise, -1."
msgstr ""

# #used by: g_unichar_xdigit_value:
#: guniprop.c:687:2
msgid "Determines the numeric value of a character as a hexidecimal digit."
msgstr ""

# #used by: g_unichar_xdigit_value:
#: guniprop.c:690:2
msgid ""
"Return value: If @c is a hex digit (according to g_unichar_isxdigit()), its "
"numeric value. Otherwise, -1."
msgstr ""

# #used by: g_unichar_type:
#: guniprop.c:709:1
msgid "Classifies a Unicode character by type."
msgstr ""

# #used by: g_unichar_type:
#: guniprop.c:711:1
msgid "Return value: the type of the character."
msgstr ""

# #used by: g_utf8_strup:
#: guniprop.c:931:5
msgid ""
"Converts all Unicode characters in the string that have a case to uppercase. "
"The exact manner that this is done depends on the current locale, and may "
"result in the number of characters in the string increasing. (For instance, "
"the German ess-zet will be changed to SS.)"
msgstr ""

# #used by: g_utf8_strup:
#: guniprop.c:937:2
msgid ""
"Return value: a newly allocated string, with all characters converted to "
"uppercase."
msgstr ""
