# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-04-23 20:26-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"

#. used by: GdkDisplayManager::display-opened:
#: gdkdisplaymanager.c:133:1
msgid "@manager: the object on which the signal is emitted"
msgstr ""

#. used by: GdkDisplayManager::display-opened:
#: gdkdisplaymanager.c:134:1
msgid "@display: the opened display"
msgstr ""

#. used by: GdkDisplayManager::display-opened:
#: gdkdisplaymanager.c:136:1
msgid "The ::display-opened signal is emitted when a display is opened."
msgstr ""

#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkDisplayManager::display-opened:
#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_manager_get:
#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_manager_get_default_display:
#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_default:
#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_default:
#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_manager_set_default_display:
#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_manager_list_displays:
#: gdkdisplaymanager.c:138:1 gdkdisplaymanager.c:216:1
#: gdkdisplaymanager.c:261:1 gdkdisplaymanager.c:279:1
#: gdkdisplaymanager.c:295:1 gdkdisplaymanager.c:317:1
#: gdkdisplaymanager.c:338:1
msgid "Since: 2.2"
msgstr ""

#. used by: gdk_display_manager_get:
#: gdkdisplaymanager.c:205:1
msgid "Gets the singleton #GdkDisplayManager object."
msgstr ""

#. used by: gdk_display_manager_get:
#: gdkdisplaymanager.c:207:4
msgid ""
"When called for the first time, this function consults the "
"<envar>GDK_BACKEND</envar> environment variable to find out which of the "
"supported GDK backends to use (in case GDK has been compiled with multiple "
"backends)."
msgstr ""

#. used by: gdk_display_manager_get:
#: gdkdisplaymanager.c:212:3
msgid ""
"Returns: (transfer none): The global #GdkDisplayManager singleton; "
"gdk_parse_args(), gdk_init(), or gdk_init_check() must have been called "
"first."
msgstr ""

#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_manager_get_default_display:
#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_manager_set_default_display:
#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_manager_list_displays:
#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_manager_open_display:
#: gdkdisplaymanager.c:254:1 gdkdisplaymanager.c:312:1
#: gdkdisplaymanager.c:330:1 gdkdisplaymanager.c:348:1
msgid "@manager: a #GdkDisplayManager"
msgstr ""

#. used by: gdk_display_manager_get_default_display:
#: gdkdisplaymanager.c:256:1
msgid "Gets the default #GdkDisplay."
msgstr ""

#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_manager_get_default_display:
#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_default:
#: gdkdisplaymanager.c:258:2 gdkdisplaymanager.c:276:2
msgid ""
"Returns: (transfer none): a #GdkDisplay, or %NULL if there is no default "
"display."
msgstr ""

#. used by: gdk_display_get_default:
#: gdkdisplaymanager.c:272:3
msgid ""
"Gets the default #GdkDisplay. This is a convenience function for "
"<literal>gdk_display_manager_get_default_display (gdk_display_manager_get ())"
"</literal>."
msgstr ""

#. used by: gdk_screen_get_default:
#: gdkdisplaymanager.c:290:2
msgid ""
"Gets the default screen for the default display. (See "
"gdk_display_get_default ())."
msgstr ""

#. used by: gdk_screen_get_default:
#: gdkdisplaymanager.c:293:1
msgid ""
"Returns: (transfer none): a #GdkScreen, or %NULL if there is no default "
"display."
msgstr ""

#. used by: gdk_display_manager_set_default_display:
#: gdkdisplaymanager.c:313:1
msgid "@display: a #GdkDisplay"
msgstr ""

#. used by: gdk_display_manager_set_default_display:
#: gdkdisplaymanager.c:315:1
msgid "Sets @display as the default display."
msgstr ""

#. used by: gdk_display_manager_list_displays:
#: gdkdisplaymanager.c:332:1
msgid "List all currently open displays."
msgstr ""

#. used by: gdk_display_manager_list_displays:
#: gdkdisplaymanager.c:334:3
msgid ""
"Return value: (transfer container) (element-type GdkDisplay): a newly "
"allocated #GSList of #GdkDisplay objects. Free with g_slist_free() when you "
"are done with it."
msgstr ""

#. used by: gdk_display_manager_open_display:
#: gdkdisplaymanager.c:349:1
msgid "@name: the name of the display to open"
msgstr ""

#. used by: gdk_display_manager_open_display:
#: gdkdisplaymanager.c:351:1
msgid "Opens a display."
msgstr ""

#. used by: gdk_display_manager_open_display:
#: gdkdisplaymanager.c:353:2
msgid ""
"Return value: (transfer none): a #GdkDisplay, or %NULL if the display could "
"not be opened"
msgstr ""

#. used by: gdk_display_manager_open_display:
#: gdkdisplaymanager.c:356:1
msgid "Since: 3.0"
msgstr ""

#. used by: gdk_atom_intern:
#: gdkdisplaymanager.c:367:1
msgid "@atom_name: a string."
msgstr ""

#. used by: gdk_atom_intern:
#: gdkdisplaymanager.c:368:4
msgid ""
"@only_if_exists: if %TRUE, GDK is allowed to not create a new atom, but just "
"return %GDK_NONE if the requested atom doesn't already exists. Currently, "
"the flag is ignored, since checking the existance of an atom is as expensive "
"as creating it."
msgstr ""

#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_atom_intern:
#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_atom_intern_static_string:
#: gdkdisplaymanager.c:373:1 gdkdisplaymanager.c:390:1
msgid "Finds or creates an atom corresponding to a given string."
msgstr ""

#. used by: gdk_atom_intern:
#: gdkdisplaymanager.c:375:1
msgid "Returns: (transfer none): the atom corresponding to @atom_name."
msgstr ""

#. used by: gdk_atom_intern_static_string:
#: gdkdisplaymanager.c:388:1
msgid "@atom_name: a static string"
msgstr ""

#. used by: gdk_atom_intern_static_string:
#: gdkdisplaymanager.c:392:8
msgid ""
"Note that this function is identical to gdk_atom_intern() except that if a "
"new #GdkAtom is created the string itself is used rather than a copy. This "
"saves memory, but can only be used if the string will <emphasis>always</"
"emphasis> exist. It can be used with statically allocated strings in the "
"main program, but not with statically allocated memory in dynamically loaded "
"modules, if you expect to ever unload the module again (e.g. do not use this "
"function in GTK+ theme engines)."
msgstr ""

#. used by: gdk_atom_intern_static_string:
#: gdkdisplaymanager.c:401:1
msgid "Returns: (transfer none): the atom corresponding to @atom_name"
msgstr ""

#. used by: gdk_atom_intern_static_string:
#: gdkdisplaymanager.c:403:1
msgid "Since: 2.10"
msgstr ""

#. used by: gdk_atom_name:
#: gdkdisplaymanager.c:415:1
msgid "@atom: a #GdkAtom."
msgstr ""

#. used by: gdk_atom_name:
#: gdkdisplaymanager.c:417:1
msgid "Determines the string corresponding to an atom."
msgstr ""

#. used by: gdk_atom_name:
#: gdkdisplaymanager.c:419:3
msgid ""
"Returns: a newly-allocated string containing the string corresponding to "
"@atom. When you are done with the return value, you should free it using "
"g_free()."
msgstr ""

#. used by: SECTION:gdkdisplaymanager
#: gdkdisplaymanager.c:53:1
msgid "@Short_description: Maintains a list of all open GdkDisplays"
msgstr ""

#. used by: SECTION:gdkdisplaymanager
#: gdkdisplaymanager.c:54:1
msgid "@Title: GdkDisplayManager"
msgstr ""

#. used by: SECTION:gdkdisplaymanager
#: gdkdisplaymanager.c:56:3
msgid ""
"The purpose of the #GdkDisplayManager singleton object is to offer "
"notification when displays appear or disappear or the default display "
"changes."
msgstr ""

#. used by: SECTION:gdkdisplaymanager
#: gdkdisplaymanager.c:60:4
msgid ""
"You can use gdk_display_manager_get() to obtain the GdkDisplayManager "
"singleton, but that should be rarely necessary. Typically, initializing GTK+ "
"opens a display that you can work with without ever accessing the "
"GdkDisplayManager."
msgstr ""

#. used by: SECTION:gdkdisplaymanager
#: gdkdisplaymanager.c:65:3
msgid ""
"The GDK library can be built with support for multiple backends. The "
"GdkDisplayManager object determines which backend is used at runtime."
msgstr ""

#. used by: SECTION:gdkdisplaymanager
#: gdkdisplaymanager.c:69:6
msgid ""
"When writing backend-specific code that is supposed to work with multiple "
"GDK backends, you have to consider both compile time and runtime. At compile "
"time, use the #GDK_WINDOWING_X11, #GDK_WINDOWING_WIN32 macros, etc. to find "
"out which backends are present in the GDK library you are building your "
"application against. At runtime, use type-check macros like "
"GDK_IS_X11_DISPLAY() to find out which backend is in use:"
msgstr ""

#. used by: SECTION:gdkdisplaymanager
#: gdkdisplaymanager.c:76:2
msgid "<example id=\"backend-specific\"> <title>Backend-specific code</title>"
msgstr ""

#. used by: SECTION:gdkdisplaymanager
#: gdkdisplaymanager.c:95:1
msgid "</example>"
msgstr ""
