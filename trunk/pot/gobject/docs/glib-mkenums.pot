msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2011-04-18 23:25+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2
#: glib-mkenums.xml:0(None)
msgid "translator-credits"
msgstr ""

#: glib-mkenums.xml:10(refname) glib-mkenums.xml:16(command)
#: glib-mkenums.xml:4(refentrytitle)
msgid "glib-mkenums"
msgstr ""

#: glib-mkenums.xml:104(option)
msgid "--template"
msgstr ""

#: glib-mkenums.xml:104(replaceable)
msgid "file"
msgstr ""

#: glib-mkenums.xml:105(para)
msgid ""
"Read templates from the given file. The templates are enclosed in specially-"
"formatted C comments <placeholder-1/> where section may be <literal>file-"
"header</literal>, <literal>file-production</literal>, <literal>file-tail</"
"literal>, <literal>enumeration-production</literal>, <literal>value-header</"
"literal>, <literal>value-production</literal>, <literal>value-tail</literal> "
"or <literal>comment</literal>."
msgstr ""

#: glib-mkenums.xml:108(programlisting)
#, no-wrap
msgid ""
"\n"
"/*** BEGIN section ***/\n"
"/*** END section ***/\n"
msgstr ""

#: glib-mkenums.xml:11(refpurpose)
msgid "C language enum description generation utility"
msgstr ""

#: glib-mkenums.xml:121(option)
msgid "--help"
msgstr ""

#: glib-mkenums.xml:122(para)
msgid "Print brief help and exit."
msgstr ""

#: glib-mkenums.xml:128(option)
msgid "--version"
msgstr ""

#: glib-mkenums.xml:129(para)
msgid "Print version and exit."
msgstr ""

#: glib-mkenums.xml:137(title)
msgid "Production text substitutions"
msgstr ""

#: glib-mkenums.xml:138(para)
msgid ""
"Certain keywords enclosed in @ characters will be substituted in the emitted "
"text. For the substitution examples of the keywords below, the following "
"example enum definition is assumed: <placeholder-1/><placeholder-2/>"
msgstr ""

#: glib-mkenums.xml:142(programlisting)
#, no-wrap
msgid ""
"\n"
"typedef enum\n"
"{\n"
"  PREFIX_THE_XVALUE    = 1 &lt;&lt; 3,\n"
"  PREFIX_ANOTHER_VALUE = 1 &lt;&lt; 4\n"
"} PrefixTheXEnum;\n"
msgstr ""

#: glib-mkenums.xml:151(term)
msgid "@EnumName@"
msgstr ""

#: glib-mkenums.xml:152(para)
msgid ""
"The name of the enum currently being processed, enum names are assumed to be "
"properly namespaced and to use mixed capitalization to separate words (e.g. "
"PrefixTheXEnum)."
msgstr ""

#: glib-mkenums.xml:160(term)
msgid "@enum_name@"
msgstr ""

#: glib-mkenums.xml:161(para)
msgid ""
"The enum name with words lowercase and word-separated by underscores (e.g. "
"prefix_the_xenum)."
msgstr ""

#: glib-mkenums.xml:168(term)
msgid "@ENUMNAME@"
msgstr ""

#: glib-mkenums.xml:169(para)
msgid ""
"The enum name with words uppercase and word-separated by underscores (e.g. "
"PREFIX_THE_XENUM)."
msgstr ""

#: glib-mkenums.xml:17(arg)
msgid "options"
msgstr ""

#: glib-mkenums.xml:176(term)
msgid "@ENUMSHORT@"
msgstr ""

#: glib-mkenums.xml:177(para)
msgid ""
"The enum name with words uppercase and word-separated by underscores, prefix "
"stripped (e.g. THE_XENUM)."
msgstr ""

#: glib-mkenums.xml:18(arg)
msgid "files"
msgstr ""

#: glib-mkenums.xml:184(term)
msgid "@VALUENAME@"
msgstr ""

#: glib-mkenums.xml:185(para)
msgid ""
"The enum value name currently being processed with words uppercase and word-"
"separated by underscores, this is the assumed literal notation of enum "
"values in the C sources (e.g. PREFIX_THE_XVALUE)."
msgstr ""

#: glib-mkenums.xml:194(term)
msgid "@valuenick@"
msgstr ""

#: glib-mkenums.xml:195(para)
msgid ""
"A nick name for the enum value currently being processed, this is usually "
"generated by stripping common prefix words of all the enum values of the "
"current enum, the words are lowercase and underscores are substituted by a "
"minus (e.g. the-xvalue)."
msgstr ""

#: glib-mkenums.xml:204(term)
msgid "@valuenum@"
msgstr ""

#: glib-mkenums.xml:205(para)
msgid ""
"The integer value for the enum value currently being processed. This is "
"calculated by using <command>perl</command> to attempt to evaluate the "
"expression as it appears in the C source code. If evaluation fails then "
"<command>glib-mkenums</command> will exit with an error status, but this "
"only happens if <literal>@valuenum@</literal> appears in your value "
"production template. (Since: 2.26)"
msgstr ""

#: glib-mkenums.xml:216(term)
msgid "@type@"
msgstr ""

#: glib-mkenums.xml:217(para)
msgid ""
"This is substituted either by \"enum\" or \"flags\", depending on whether "
"the enum value definitions contained bit-shift operators or not (e.g. flags)."
msgstr ""

#: glib-mkenums.xml:22(title)
msgid "Description"
msgstr ""

#: glib-mkenums.xml:224(term)
msgid "@Type@"
msgstr ""

#: glib-mkenums.xml:225(para)
msgid ""
"The same as <literal>@type@</literal> with the first letter capitalized (e."
"g. Flags)."
msgstr ""

#: glib-mkenums.xml:23(para)
msgid ""
"<command>glib-mkenums</command> is a small perl-script utility that parses C "
"code to extract enum definitions and produces enum descriptions based on "
"text templates specified by the user. Most frequently this script is used to "
"produce C code that contains enum values as strings so programs can provide "
"value name strings for introspection."
msgstr ""

#: glib-mkenums.xml:231(term)
msgid "@TYPE@"
msgstr ""

#: glib-mkenums.xml:232(para)
msgid ""
"The same as <literal>@type@</literal> with all letters uppercased (e.g. "
"FLAGS)."
msgstr ""

#: glib-mkenums.xml:238(term)
msgid "@filename@"
msgstr ""

#: glib-mkenums.xml:239(para)
msgid "The name of the input file currently being processed (e.g. foo.h)."
msgstr ""

#: glib-mkenums.xml:245(term)
msgid "@basename@"
msgstr ""

#: glib-mkenums.xml:246(para)
msgid ""
"The base name of the input file currently being processed (e.g. foo.h). "
"(Since: 2.22)"
msgstr ""

#: glib-mkenums.xml:253(title)
msgid "Trigraph extensions"
msgstr ""

#: glib-mkenums.xml:254(para)
msgid ""
"Some C comments are treated specially in the parsed enum definitions, such "
"comments start out with the trigraph sequence <literal>/*&lt;</literal> and "
"end with the trigraph sequence <literal>&gt;*/</literal>. Per enum "
"definition, the options \"skip\" and \"flags\" can be specified, to indicate "
"this enum definition to be skipped, or for it to be treated as a flags "
"definition, or to specify the common prefix to be stripped from all values "
"to generate value nicknames, respectively. The \"lowercase_name\" option can "
"be used to specify the word separation used in the *_get_type() function. "
"For instance, /*&lt; lowercase_name=gnome_vfs_uri_hide_options &gt;*/."
msgstr ""

#: glib-mkenums.xml:265(para)
msgid ""
"Per value definition, the options \"skip\" and \"nick\" are supported. The "
"former causes the value to be skipped, and the latter can be used to specify "
"the otherwise auto-generated nickname. Examples: <placeholder-1/>"
msgstr ""

#: glib-mkenums.xml:270(programlisting)
#, no-wrap
msgid ""
"\n"
"typedef enum /*&lt; skip &gt;*/\n"
"{\n"
"  PREFIX_FOO\n"
"} PrefixThisEnumWillBeSkipped;\n"
"typedef enum /*&lt; flags,prefix=PREFIX &gt;*/\n"
"{\n"
"  PREFIX_THE_ZEROTH_VALUE,\t/*&lt; skip &gt;*/\n"
"  PREFIX_THE_FIRST_VALUE,\n"
"  PREFIX_THE_SECOND_VALUE,\n"
"  PREFIX_THE_THIRD_VALUE,\t/*&lt; nick=the-last-value &gt;*/\n"
"} PrefixTheFlagsEnum;\n"
msgstr ""

#: glib-mkenums.xml:286(title)
msgid "See also"
msgstr ""

#: glib-mkenums.xml:289(refentrytitle)
msgid "glib-genmarshal"
msgstr ""

#: glib-mkenums.xml:290(manvolnum) glib-mkenums.xml:5(manvolnum)
msgid "1"
msgstr ""

#: glib-mkenums.xml:31(title)
msgid "Invocation"
msgstr ""

#: glib-mkenums.xml:32(para)
msgid ""
"<command>glib-mkenums</command> takes a list of valid C code files as input. "
"The options specified control the text that is output, certain substitutions "
"are performed on the text templates for keywords enclosed in @ characters."
msgstr ""

#: glib-mkenums.xml:38(title)
msgid "Options"
msgstr ""

#: glib-mkenums.xml:42(option)
msgid "--fhead"
msgstr ""

#: glib-mkenums.xml:42(replaceable) glib-mkenums.xml:49(replaceable)
#: glib-mkenums.xml:57(replaceable) glib-mkenums.xml:65(replaceable)
#: glib-mkenums.xml:73(replaceable) glib-mkenums.xml:81(replaceable)
#: glib-mkenums.xml:88(replaceable) glib-mkenums.xml:96(replaceable)
msgid "text"
msgstr ""

#: glib-mkenums.xml:43(para)
msgid ""
"Put out <replaceable>text</replaceable> prior to processing input files."
msgstr ""

#: glib-mkenums.xml:49(option)
msgid "--fprod"
msgstr ""

#: glib-mkenums.xml:50(para)
msgid ""
"Put out <replaceable>text</replaceable> everytime a new input file is being "
"processed."
msgstr ""

#: glib-mkenums.xml:57(option)
msgid "--ftail"
msgstr ""

#: glib-mkenums.xml:58(para)
msgid ""
"Put out <replaceable>text</replaceable> after all input files have been "
"processed."
msgstr ""

#: glib-mkenums.xml:6(refmiscinfo)
msgid "User Commands"
msgstr ""

#: glib-mkenums.xml:65(option)
msgid "--eprod"
msgstr ""

#: glib-mkenums.xml:66(para)
msgid ""
"Put out <replaceable>text</replaceable> everytime an enum is encountered in "
"the input files."
msgstr ""

#: glib-mkenums.xml:73(option)
msgid "--vhead"
msgstr ""

#: glib-mkenums.xml:74(para)
msgid ""
"Put out <replaceable>text</replaceable> before iterating over the set of "
"values of an enum."
msgstr ""

#: glib-mkenums.xml:81(option)
msgid "--vprod"
msgstr ""

#: glib-mkenums.xml:82(para)
msgid "Put out <replaceable>text</replaceable> for every value of an enum."
msgstr ""

#: glib-mkenums.xml:88(option)
msgid "--vtail"
msgstr ""

#: glib-mkenums.xml:89(para)
msgid ""
"Put out <replaceable>text</replaceable> after iterating over all values of "
"an enum."
msgstr ""

#: glib-mkenums.xml:96(option)
msgid "--comments"
msgstr ""

#: glib-mkenums.xml:97(para)
msgid ""
"Template for auto-generated comments, the default (for C code generations) "
"is <literal>\"/* @comment@ */\"</literal>."
msgstr ""
