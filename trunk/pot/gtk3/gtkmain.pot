# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-04-23 20:09-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"

#. used by: gtk_init_with_args:
#: gtkmain.c:1002:1
msgid "@error: a return location for errors"
msgstr ""

#. used by: gtk_init_with_args:
#: gtkmain.c:1004:5
msgid ""
"This function does the same work as gtk_init_check(). Additionally, it "
"allows you to add your own commandline options, and it automatically "
"generates nicely formatted <option>--help</option> output. Note that your "
"program will be terminated after writing out the help output."
msgstr ""

#. used by: gtk_init_with_args:
#: gtkmain.c:1010:2
msgid ""
"Returns: %TRUE if the windowing system has been successfully initialized, "
"%FALSE otherwise"
msgstr ""

#. #-#-#-#-#  gtkmain.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_get_option_group: (skip)
#. #-#-#-#-#  gtkmain.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_init_with_args:
#: gtkmain.c:1013:1 gtkmain.c:963:1
msgid "Since: 2.6"
msgstr ""

#. used by: gtk_parse_args:
#: gtkmain.c:1053:1
msgid "@argc: (inout): a pointer to the number of command line arguments"
msgstr ""

#. used by: gtk_parse_args:
#: gtkmain.c:1054:2
msgid ""
"@argv: (array length=argc) (inout): a pointer to the array of command line "
"arguments"
msgstr ""

#. used by: gtk_parse_args:
#: gtkmain.c:1057:3
msgid ""
"Parses command line arguments, and initializes global attributes of GTK+, "
"but does not actually open a connection to a display. (See gdk_display_open"
"(), gdk_get_display_arg_name())"
msgstr ""

#. used by: gtk_parse_args:
#: gtkmain.c:1061:2
msgid ""
"Any arguments used by GTK+ or GDK are removed from the array and @argc and "
"@argv are updated accordingly."
msgstr ""

#. used by: gtk_parse_args:
#: gtkmain.c:1064:2
msgid ""
"There is no need to call this function explicitely if you are using gtk_init"
"(), or gtk_init_check()."
msgstr ""

#. used by: gtk_parse_args:
#: gtkmain.c:1067:1
msgid "Return value: %TRUE if initialization succeeded, otherwise %FALSE"
msgstr ""

#. #-#-#-#-#  gtkmain.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_init_with_args:
#. #-#-#-#-#  gtkmain.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_init_check:
#. #-#-#-#-#  gtkmain.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_init:
#: gtkmain.c:1107:3 gtkmain.c:1141:3 gtkmain.c:988:3
msgid ""
"@argc: (inout): Address of the <parameter>argc</parameter> parameter of your "
"main() function (or 0 if @argv is %NULL). This will be changed if any "
"arguments were handled."
msgstr ""

#. #-#-#-#-#  gtkmain.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_init_with_args:
#. #-#-#-#-#  gtkmain.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_init_check:
#. #-#-#-#-#  gtkmain.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_init:
#: gtkmain.c:1110:3 gtkmain.c:1144:3 gtkmain.c:991:3
msgid ""
"@argv: (array length=argc) (inout) (allow-none): Address of the "
"<parameter>argv</parameter> parameter of main(), or %NULL. Any options "
"understood by GTK+ are stripped before return."
msgstr ""

#. used by: gtk_init_check:
#: gtkmain.c:1114:3
msgid ""
"This function does the same work as gtk_init() with only a single change: It "
"does not terminate the program if the windowing system can't be initialized. "
"Instead it returns %FALSE on failure."
msgstr ""

#. used by: gtk_init_check:
#: gtkmain.c:1118:3
msgid ""
"This way the application can fall back to some other means of communication "
"with the user - for example a curses or command line interface."
msgstr ""

#. used by: gtk_init_check:
#: gtkmain.c:1122:2
msgid ""
"Return value: %TRUE if the windowing system has been successfully "
"initialized, %FALSE otherwise"
msgstr ""

#. used by: gtk_init:
#: gtkmain.c:1148:3
msgid ""
"Call this function before using any other GTK+ functions in your GUI "
"applications.  It will initialize everything needed to operate the toolkit "
"and parses some standard command line options."
msgstr ""

#. used by: gtk_init:
#: gtkmain.c:1152:3
msgid ""
"Although you are expected to pass the @argc, @argv parameters from main() to "
"this function, it is possible to pass %NULL if @argv is not available or "
"commandline handling is not required."
msgstr ""

#. used by: gtk_init:
#: gtkmain.c:1156:2
msgid ""
"@argc and @argv are adjusted accordingly so your own code will never see "
"those standard arguments."
msgstr ""

#. used by: gtk_init:
#: gtkmain.c:1159:5
msgid ""
"Note that there are some alternative ways to initialize GTK+: if you are "
"calling gtk_parse_args(), gtk_init_check(), gtk_init_with_args() or "
"g_option_context_parse() with the option group returned by "
"gtk_get_option_group(), you <emphasis>don't</emphasis> have to call gtk_init"
"()."
msgstr ""

#. used by: gtk_init:
#: gtkmain.c:1165:6
msgid ""
"<note><para> This function will terminate your program if it was unable to "
"initialize the windowing system for some reason. If you want your program to "
"fall back to a textual interface you want to call gtk_init_check() instead. "
"</para></note>"
msgstr ""

#. used by: gtk_init:
#: gtkmain.c:1172:8
msgid ""
"<note><para> Since 2.18, GTK+ calls <literal>signal (SIGPIPE, SIG_IGN)</"
"literal> during initialization, to ignore SIGPIPE signals, since these are "
"almost never wanted in graphical applications. If you do need to handle "
"SIGPIPE for some reason, reset the handler after gtk_init(), but notice that "
"other libraries (e.g. libdbus or gvfs) might do similar things. </para></"
"note>"
msgstr ""

#. used by: gtk_get_default_language:
#: gtkmain.c:1319:5
msgid ""
"Returns the #PangoLanguage for the default language currently in effect. "
"(Note that this can change over the life of an application.) The default "
"language is derived from the current locale. It determines, for example, "
"whether GTK+ uses the right-to-left or left-to-right text direction."
msgstr ""

#. used by: gtk_get_default_language:
#: gtkmain.c:1325:2
msgid ""
"This function is equivalent to pango_language_get_default(). See that "
"function for details."
msgstr ""

#. used by: gtk_get_default_language:
#: gtkmain.c:1328:2
msgid ""
"Return value: the default language as a #PangoLanguage, must not be freed"
msgstr ""

#. used by: gtk_main:
#: gtkmain.c:1340:1
msgid "Runs the main loop until gtk_main_quit() is called."
msgstr ""

#. used by: gtk_main:
#: gtkmain.c:1342:2
msgid ""
"You can nest calls to gtk_main(). In that case gtk_main_quit() will make the "
"innermost invocation of the main loop return."
msgstr ""

#. used by: gtk_main_level:
#: gtkmain.c:1382:1
msgid "Asks for the current nesting level of the main loop."
msgstr ""

#. used by: gtk_main_level:
#: gtkmain.c:1384:2
msgid "Returns: the nesting level of the current invocation of the main loop"
msgstr ""

#. used by: gtk_main_quit:
#: gtkmain.c:1396:2
msgid ""
"Makes the innermost invocation of the main loop return when it regains "
"control."
msgstr ""

#. used by: gtk_events_pending:
#: gtkmain.c:1410:1
msgid "Checks if any events are pending."
msgstr ""

#. used by: gtk_events_pending:
#: gtkmain.c:1412:2
msgid ""
"This can be used to update the UI and invoke timeouts etc. while doing some "
"time intensive computation."
msgstr ""

#. used by: gtk_events_pending:
#: gtkmain.c:1415:2
msgid "<example> <title>Updating the UI during a long computation</title>"
msgstr ""

#. #-#-#-#-#  gtkmain.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_events_pending:
#. #-#-#-#-#  gtkmain.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_true:
#: gtkmain.c:1425:1 gtkmain.c:1967:1
msgid "</example>"
msgstr ""

#. used by: gtk_events_pending:
#: gtkmain.c:1427:1
msgid "Returns: %TRUE if any events are pending, %FALSE otherwise"
msgstr ""

#. used by: gtk_main_iteration:
#: gtkmain.c:1444:1
msgid "Runs a single iteration of the mainloop."
msgstr ""

#. used by: gtk_main_iteration:
#: gtkmain.c:1446:4
msgid ""
"If no events are waiting to be processed GTK+ will block until the next "
"event is noticed. If you don't want to block look at gtk_main_iteration_do() "
"or check if any events are pending with gtk_events_pending() first."
msgstr ""

#. #-#-#-#-#  gtkmain.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_main_iteration:
#. #-#-#-#-#  gtkmain.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_main_iteration_do:
#: gtkmain.c:1451:2 gtkmain.c:1475:2
msgid ""
"Returns: %TRUE if gtk_main_quit() has been called for the innermost mainloop"
msgstr ""

#. used by: gtk_main_iteration_do:
#: gtkmain.c:1469:1
msgid "@blocking: %TRUE if you want GTK+ to block if no events are pending"
msgstr ""

#. used by: gtk_main_iteration_do:
#: gtkmain.c:1471:3
msgid ""
"Runs a single iteration of the mainloop. If no events are available either "
"return or block depending on the value of @blocking."
msgstr ""

#. used by: gtk_main_do_event:
#: gtkmain.c:1608:1
msgid "@event: An event to process (normally passed by GDK)"
msgstr ""

#. used by: gtk_main_do_event:
#: gtkmain.c:1610:1
msgid "Processes a single GDK event."
msgstr ""

#. used by: gtk_main_do_event:
#: gtkmain.c:1612:2
msgid ""
"This is public only to allow filtering of events between GDK and GTK+. You "
"will not usually need to call this function directly."
msgstr ""

#. used by: gtk_main_do_event:
#: gtkmain.c:1615:3
msgid ""
"While you should not call this function directly, you might want to know how "
"exactly events are handled. So here is what this function does with the "
"event:"
msgstr ""

#. used by: gtk_main_do_event:
#: gtkmain.c:1619:46
msgid ""
"<orderedlist> <listitem><para> Compress enter/leave notify events. If the "
"event passed build an enter/leave pair together with the next event (peeked "
"from GDK), both events are thrown away. This is to avoid a backlog of (de-)"
"highlighting widgets crossed by the pointer. </para></listitem> "
"<listitem><para> Find the widget which got the event. If the widget can't be "
"determined the event is thrown away unless it belongs to a INCR transaction. "
"In that case it is passed to gtk_selection_incr_event(). </para></listitem> "
"<listitem><para> Then the event is pushed onto a stack so you can query the "
"currently handled event with gtk_get_current_event(). </para></listitem> "
"<listitem><para> The event is sent to a widget. If a grab is active all "
"events for widgets that are not in the contained in the grab widget are sent "
"to the latter with a few exceptions: <itemizedlist> <listitem><para> "
"Deletion and destruction events are still sent to the event widget for "
"obvious reasons. </para></listitem> <listitem><para> Events which directly "
"relate to the visual representation of the event widget. </para></listitem> "
"<listitem><para> Leave events are delivered to the event widget if there was "
"an enter event delivered to it before without the paired leave event. </"
"para></listitem> <listitem><para> Drag events are not redirected because it "
"is unclear what the semantics of that would be. </para></listitem> </"
"itemizedlist> Another point of interest might be that all key events are "
"first passed through the key snooper functions if there are any. Read the "
"description of gtk_key_snooper_install() if you need this feature. </para></"
"listitem> <listitem><para> After finishing the delivery the event is popped "
"from the event stack. </para></listitem> </orderedlist>"
msgstr ""

#. used by: gtk_true:
#: gtkmain.c:1931:1
msgid "All this function does it to return %TRUE."
msgstr ""

#. used by: gtk_true:
#: gtkmain.c:1933:3
msgid ""
"This can be useful for example if you want to inhibit the deletion of a "
"window. Of course you should not do this as the user expects a reaction from "
"clicking the close icon of the window..."
msgstr ""

#. used by: gtk_true:
#: gtkmain.c:1937:2
msgid "<example> <title>A persistent window</title>"
msgstr ""

#. used by: gtk_true:
#: gtkmain.c:1969:1
msgid "Returns: %TRUE"
msgstr ""

#. used by: gtk_false:
#: gtkmain.c:1980:2
msgid ""
"Analogical to gtk_true(), this function does nothing but always returns "
"%FALSE."
msgstr ""

#. used by: gtk_false:
#: gtkmain.c:1983:1
msgid "Returns: %FALSE"
msgstr ""

#. used by: gtk_grab_add: (method)
#: gtkmain.c:2175:1
msgid "@widget: The widget that grabs keyboard and pointer events"
msgstr ""

#. used by: gtk_grab_add: (method)
#: gtkmain.c:2177:1
msgid "Makes @widget the current grabbed widget."
msgstr ""

#. used by: gtk_grab_add: (method)
#: gtkmain.c:2179:3
msgid ""
"This means that interaction with other widgets in the same application is "
"blocked and mouse as well as keyboard events are delivered to this widget."
msgstr ""

#. used by: gtk_grab_add: (method)
#: gtkmain.c:2183:2
msgid ""
"If @widget is not sensitive, it is not set as the current grabbed widget and "
"this function does nothing."
msgstr ""

#. used by: gtk_grab_get_current:
#: gtkmain.c:2212:1
msgid "Queries the current grab of the default window group."
msgstr ""

#. used by: gtk_grab_get_current:
#: gtkmain.c:2214:2
msgid ""
"Return value: (transfer none): The widget which currently has the grab or "
"%NULL if no grab is active"
msgstr ""

#. used by: gtk_grab_remove: (method)
#: gtkmain.c:2229:1
msgid "@widget: The widget which gives up the grab"
msgstr ""

#. used by: gtk_grab_remove: (method)
#: gtkmain.c:2231:1
msgid "Removes the grab from the given widget."
msgstr ""

#. used by: gtk_grab_remove: (method)
#: gtkmain.c:2233:1
msgid "You have to pair calls to gtk_grab_add() and gtk_grab_remove()."
msgstr ""

#. used by: gtk_grab_remove: (method)
#: gtkmain.c:2235:1
msgid "If @widget does not have the grab, this function does nothing."
msgstr ""

#. #-#-#-#-#  gtkmain.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_device_grab_add:
#. #-#-#-#-#  gtkmain.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_device_grab_remove:
#. #-#-#-#-#  gtkmain.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_propagate_event:
#: gtkmain.c:2261:1 gtkmain.c:2294:1 gtkmain.c:2511:1
msgid "@widget: a #GtkWidget"
msgstr ""

#. used by: gtk_device_grab_add:
#: gtkmain.c:2262:1
msgid "@device: a #GtkDevice to grab on."
msgstr ""

#. used by: gtk_device_grab_add:
#: gtkmain.c:2263:1
msgid "@block_others: %TRUE to prevent other devices to interact with @widget."
msgstr ""

#. used by: gtk_device_grab_add:
#: gtkmain.c:2265:4
msgid ""
"Adds a GTK+ grab on @device, so all the events on @device and its associated "
"pointer or keyboard (if any) are delivered to @widget. If the @block_others "
"parameter is %TRUE, any other devices will be unable to interact with "
"@widget during the grab."
msgstr ""

#. #-#-#-#-#  gtkmain.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_get_major_version:
#. #-#-#-#-#  gtkmain.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_get_minor_version:
#. #-#-#-#-#  gtkmain.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_get_micro_version:
#. #-#-#-#-#  gtkmain.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_get_binary_age:
#. #-#-#-#-#  gtkmain.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_get_interface_age:
#. #-#-#-#-#  gtkmain.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_device_grab_add:
#. #-#-#-#-#  gtkmain.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_device_grab_remove:
#: gtkmain.c:2270:1 gtkmain.c:2302:1 gtkmain.c:267:1 gtkmain.c:288:1
#: gtkmain.c:309:1 gtkmain.c:327:1 gtkmain.c:345:1
msgid "Since: 3.0"
msgstr ""

#. used by: gtk_device_grab_remove:
#: gtkmain.c:2295:1
msgid "@device: a #GdkDevice"
msgstr ""

#. used by: gtk_device_grab_remove:
#: gtkmain.c:2297:1
msgid "Removes a device grab from the given widget."
msgstr ""

#. used by: gtk_device_grab_remove:
#: gtkmain.c:2299:2
msgid ""
"You have to pair calls to gtk_device_grab_add() and gtk_device_grab_remove()."
msgstr ""

#. used by: gtk_key_snooper_install: (skip)
#: gtkmain.c:2323:1
msgid "@snooper: a #GtkKeySnoopFunc"
msgstr ""

#. used by: gtk_key_snooper_install: (skip)
#: gtkmain.c:2324:1
msgid "@func_data: data to pass to @snooper"
msgstr ""

#. used by: gtk_key_snooper_install: (skip)
#: gtkmain.c:2326:2
msgid ""
"Installs a key snooper function, which will get called on all key events "
"before delivering them normally."
msgstr ""

#. used by: gtk_key_snooper_install: (skip)
#: gtkmain.c:2329:2
msgid ""
"Returns: a unique id for this key snooper for use with gtk_key_snooper_remove"
"()."
msgstr ""

#. used by: gtk_key_snooper_remove:
#: gtkmain.c:2352:1
msgid "@snooper_handler_id: Identifies the key snooper to remove"
msgstr ""

#. used by: gtk_key_snooper_remove:
#: gtkmain.c:2354:1
msgid "Removes the key snooper function with the given id."
msgstr ""

#. used by: gtk_get_current_event:
#: gtkmain.c:2402:1
msgid "Obtains a copy of the event currently being processed by GTK+."
msgstr ""

#. used by: gtk_get_current_event:
#: gtkmain.c:2404:3
msgid ""
"For example, if you are handling a #GtkButton::clicked signal, the current "
"event will be the #GdkEventButton that triggered the ::clicked signal."
msgstr ""

#. used by: gtk_get_current_event:
#: gtkmain.c:2408:3
msgid ""
"Return value: (transfer full): a copy of the current event, or %NULL if "
"there is no current event. The returned event must be freed with "
"gdk_event_free()."
msgstr ""

#. used by: gtk_get_current_event_time:
#: gtkmain.c:2424:2
msgid ""
"If there is a current event and it has a timestamp, return that timestamp, "
"otherwise return %GDK_CURRENT_TIME."
msgstr ""

#. used by: gtk_get_current_event_time:
#: gtkmain.c:2427:2
msgid ""
"Return value: the timestamp from the current event, or %GDK_CURRENT_TIME."
msgstr ""

#. used by: gtk_get_current_event_state:
#: gtkmain.c:2441:1
msgid "@state: (out): a location to store the state of the current event"
msgstr ""

#. used by: gtk_get_current_event_state:
#: gtkmain.c:2443:3
msgid ""
"If there is a current event and it has a state field, place that state field "
"in @state and return %TRUE, otherwise return %FALSE."
msgstr ""

#. used by: gtk_get_current_event_state:
#: gtkmain.c:2447:2
msgid ""
"Return value: %TRUE if there was a current event and it had a state field"
msgstr ""

#. used by: gtk_get_current_event_device:
#: gtkmain.c:2467:2
msgid ""
"If there is a current event and it has a device, return that device, "
"otherwise return %NULL."
msgstr ""

#. used by: gtk_get_current_event_device:
#: gtkmain.c:2470:1
msgid "Returns: (transfer none): a #GdkDevice, or %NULL"
msgstr ""

#. used by: gtk_get_event_widget:
#: gtkmain.c:2483:1
msgid "@event: a #GdkEvent"
msgstr ""

#. used by: gtk_get_event_widget:
#: gtkmain.c:2485:3
msgid ""
"If @event is %NULL or the event was not associated with any widget, returns "
"%NULL, otherwise returns the widget that received the event originally."
msgstr ""

#. used by: gtk_get_event_widget:
#: gtkmain.c:2489:2
msgid ""
"Return value: (transfer none): the widget that originally received @event, "
"or %NULL"
msgstr ""

#. used by: gtk_propagate_event:
#: gtkmain.c:2512:1
msgid "@event: an event"
msgstr ""

#. used by: gtk_propagate_event:
#: gtkmain.c:2514:2
msgid ""
"Sends an event to a widget, propagating the event to parent widgets if the "
"event remains unhandled."
msgstr ""

#. used by: gtk_propagate_event:
#: gtkmain.c:2517:3
msgid ""
"Events received by GTK+ from GDK normally begin in gtk_main_do_event(). "
"Depending on the type of event, existence of modal dialogs, grabs, etc., the "
"event may be propagated; if so, this function is used."
msgstr ""

#. used by: gtk_propagate_event:
#: gtkmain.c:2521:5
msgid ""
"gtk_propagate_event() calls gtk_widget_event() on each widget it decides to "
"send the event to. So gtk_widget_event() is the lowest-level function; it "
"simply emits the #GtkWidget::event and possibly an event-specific signal on "
"a widget. gtk_propagate_event() is a bit higher-level, and gtk_main_do_event"
"() is the highest level."
msgstr ""

#. used by: gtk_propagate_event:
#: gtkmain.c:2527:5
msgid ""
"All that said, you most likely don't want to use any of these functions; "
"synthesizing events is rarely needed. There are almost certainly better ways "
"to achieve your goals. For example, use gdk_window_invalidate_rect() or "
"gtk_widget_queue_draw() instead of making up expose events."
msgstr ""

#. used by: gtk_get_major_version:
#: gtkmain.c:257:2
msgid ""
"Returns the major version number of the GTK+ library. (e.g. in GTK+ version "
"3.1.5 this is 3.)"
msgstr ""

#. used by: gtk_get_major_version:
#: gtkmain.c:260:4
msgid ""
"This function is in the library, so it represents the GTK+ library your code "
"is running against. Contrast with the #GTK_MAJOR_VERSION macro, which "
"represents the major version of the GTK+ headers you have included when "
"compiling your code."
msgstr ""

#. used by: gtk_get_major_version:
#: gtkmain.c:265:1
msgid "Returns: the major version number of the GTK+ library"
msgstr ""

#. used by: gtk_get_minor_version:
#: gtkmain.c:278:2
msgid ""
"Returns the minor version number of the GTK+ library. (e.g. in GTK+ version "
"3.1.5 this is 1.)"
msgstr ""

#. used by: gtk_get_minor_version:
#: gtkmain.c:281:4
msgid ""
"This function is in the library, so it represents the GTK+ library your code "
"is are running against. Contrast with the #GTK_MINOR_VERSION macro, which "
"represents the minor version of the GTK+ headers you have included when "
"compiling your code."
msgstr ""

#. used by: gtk_get_minor_version:
#: gtkmain.c:286:1
msgid "Returns: the minor version number of the GTK+ library"
msgstr ""

#. used by: SECTION:gtkmain
#: gtkmain.c:29:1
msgid "@Short_description: Library initialization, main event loop, and events"
msgstr ""

#. used by: gtk_get_micro_version:
#: gtkmain.c:299:2
msgid ""
"Returns the micro version number of the GTK+ library. (e.g. in GTK+ version "
"3.1.5 this is 5.)"
msgstr ""

#. used by: SECTION:gtkmain
#: gtkmain.c:30:1
msgid "@Title: Main loop and Events"
msgstr ""

#. used by: gtk_get_micro_version:
#: gtkmain.c:302:4
msgid ""
"This function is in the library, so it represents the GTK+ library your code "
"is are running against. Contrast with the #GTK_MICRO_VERSION macro, which "
"represents the micro version of the GTK+ headers you have included when "
"compiling your code."
msgstr ""

#. used by: gtk_get_micro_version:
#: gtkmain.c:307:1
msgid "Returns: the micro version number of the GTK+ library"
msgstr ""

#. used by: SECTION:gtkmain
#: gtkmain.c:31:2
msgid ""
"@See_also:See the GLib manual, especially #GMainLoop and signal-related "
"functions such as g_signal_connect()"
msgstr ""

#. used by: gtk_get_binary_age:
#: gtkmain.c:320:4
msgid ""
"Returns the binary age as passed to <application>libtool</application> when "
"building the GTK+ library the process is running against. If "
"<application>libtool</application> means nothing to you, don't worry about "
"it."
msgstr ""

#. used by: gtk_get_binary_age:
#: gtkmain.c:325:1
msgid "Returns: the binary age of the GTK+ library"
msgstr ""

#. used by: gtk_get_interface_age:
#: gtkmain.c:338:4
msgid ""
"Returns the interface age as passed to <application>libtool</application> "
"when building the GTK+ library the process is running against. If "
"<application>libtool</application> means nothing to you, don't worry about "
"it."
msgstr ""

#. used by: SECTION:gtkmain
#: gtkmain.c:34:6
msgid ""
"Before using GTK+, you need to initialize it; initialization connects to the "
"window system display, and parses some standard command line arguments. The "
"gtk_init() macro initializes GTK+. gtk_init() exits the application if "
"errors occur; to avoid this, use gtk_init_check(). gtk_init_check() allows "
"you to recover from a failed GTK+ initialization - you might start up your "
"application in text mode instead."
msgstr ""

#. used by: gtk_get_interface_age:
#: gtkmain.c:343:1
msgid "Returns: the interface age of the GTK+ library"
msgstr ""

#. used by: gtk_check_version:
#: gtkmain.c:355:1
msgid "@required_major: the required major version"
msgstr ""

#. used by: gtk_check_version:
#: gtkmain.c:356:1
msgid "@required_minor: the required minor version"
msgstr ""

#. used by: gtk_check_version:
#: gtkmain.c:357:1
msgid "@required_micro: the required micro version"
msgstr ""

#. used by: gtk_check_version:
#: gtkmain.c:359:7
msgid ""
"Checks that the GTK+ library in use is compatible with the given version. "
"Generally you would pass in the constants #GTK_MAJOR_VERSION, "
"#GTK_MINOR_VERSION, #GTK_MICRO_VERSION as the three arguments to this "
"function; that produces a check that the library in use is compatible with "
"the version of GTK+ the application or module was compiled against."
msgstr ""

#. used by: gtk_check_version:
#: gtkmain.c:367:6
msgid ""
"Compatibility is defined by two things: first the version of the running "
"library is newer than the version @required_major.required_minor."
"@required_micro. Second the running library must be binary compatible with "
"the version @required_major.required_minor.@required_micro (same major "
"version.)"
msgstr ""

#. used by: gtk_check_version:
#: gtkmain.c:374:7
msgid ""
"This function is primarily for GTK+ modules; the module can call this "
"function to check that it wasn't loaded into an incompatible version of GTK"
"+. However, such a check isn't completely reliable, since the module may be "
"linked against an old version of GTK+ and calling the old version of "
"gtk_check_version(), but still get loaded into an application using a newer "
"version of GTK+."
msgstr ""

#. used by: gtk_check_version:
#: gtkmain.c:382:4
msgid ""
"Return value: %NULL if the GTK+ library is compatible with the given "
"version, or a string describing the version mismatch. The returned string is "
"owned by GTK+ and should not be modified or freed."
msgstr ""

#. used by: SECTION:gtkmain
#: gtkmain.c:41:5
msgid ""
"Like all GUI toolkits, GTK+ uses an event-driven programming model. When the "
"user is doing nothing, GTK+ sits in the <firstterm>main loop</firstterm> and "
"waits for input. If the user performs some action - say, a mouse click - "
"then the main loop \"wakes up\" and delivers an event to GTK+. GTK+ forwards "
"the event to one or more widgets."
msgstr ""

#. used by: SECTION:gtkmain
#: gtkmain.c:47:5
msgid ""
"When widgets receive an event, they frequently emit one or more "
"<firstterm>signals</firstterm>. Signals notify your program that \"something "
"interesting happened\" by invoking functions you've connected to the signal "
"with g_signal_connect(). Functions connected to a signal are often termed "
"<firstterm>callbacks</firstterm>."
msgstr ""

#. used by: gtk_disable_setlocale:
#: gtkmain.c:498:6
msgid ""
"Prevents gtk_init(), gtk_init_check(), gtk_init_with_args() and "
"gtk_parse_args() from automatically calling <literal>setlocale (LC_ALL, \"\")"
"</literal>. You would want to use this function if you wanted to set the "
"locale for your program to something other than the user's locale, or if you "
"wanted to set different values for different locale categories."
msgstr ""

#. used by: gtk_disable_setlocale:
#: gtkmain.c:505:1
msgid "Most programs should not need to call this function."
msgstr ""

#. used by: SECTION:gtkmain
#: gtkmain.c:53:7
msgid ""
"When your callbacks are invoked, you would typically take some action - for "
"example, when an Open button is clicked you might display a "
"#GtkFileChooserDialog. After a callback finishes, GTK+ will return to the "
"main loop and await more user input. </para> <example> <title>Typical "
"<function>main()</function> function for a GTK+ application</title>"
msgstr ""

#. used by: SECTION:gtkmain
#: gtkmain.c:86:4
msgid ""
"</example> <para> It's OK to use the GLib main loop directly instead of "
"gtk_main(), though it involves slightly more typing. See #GMainLoop in the "
"GLib documentation."
msgstr ""

#. used by: gtk_get_debug_flags:
#: gtkmain.c:924:1
msgid "Returns the GTK+ debug flags."
msgstr ""

#. used by: gtk_get_debug_flags:
#: gtkmain.c:926:2
msgid ""
"This function is intended for GTK+ modules that want to adjust their debug "
"output based on GTK+ debug flags."
msgstr ""

#. used by: gtk_get_debug_flags:
#: gtkmain.c:929:1
msgid "Returns: the GTK+ debug flags."
msgstr ""

#. used by: gtk_set_debug_flags:
#: gtkmain.c:940:1
msgid "Sets the GTK+ debug flags."
msgstr ""

#. used by: gtk_get_option_group: (skip)
#: gtkmain.c:950:2
msgid ""
"@open_default_display: whether to open the default display when parsing the "
"commandline arguments"
msgstr ""

#. used by: gtk_get_option_group: (skip)
#: gtkmain.c:953:2
msgid ""
"Returns a #GOptionGroup for the commandline arguments recognized by GTK+ and "
"GDK."
msgstr ""

#. used by: gtk_get_option_group: (skip)
#: gtkmain.c:956:3
msgid ""
"You should add this group to your #GOptionContext with "
"g_option_context_add_group(), if you are using g_option_context_parse() to "
"parse your commandline arguments."
msgstr ""

#. used by: gtk_get_option_group: (skip)
#: gtkmain.c:960:2
msgid ""
"Returns: a #GOptionGroup for the commandline arguments recognized by GTK+"
msgstr ""

#. used by: gtk_init_with_args:
#: gtkmain.c:994:3
msgid ""
"@parameter_string: a string which is displayed in the first line of "
"<option>--help</option> output, after <literal><replaceable>programname</"
"replaceable> [OPTION...]</literal>"
msgstr ""

#. used by: gtk_init_with_args:
#: gtkmain.c:997:2
msgid ""
"@entries: (array zero-terminated=1): a %NULL-terminated array of "
"#GOptionEntrys describing the options of your program"
msgstr ""

#. used by: gtk_init_with_args:
#: gtkmain.c:999:3
msgid ""
"@translation_domain: a translation domain to use for translating the "
"<option>--help</option> output for the options in @entries and the "
"@parameter_string with gettext(), or %NULL"
msgstr ""

#. used by: GTK_PRIORITY_RESIZE:
#: gtkmain.h:47:1
msgid "Use this priority for functionality related to size allocation."
msgstr ""

#. used by: GTK_PRIORITY_RESIZE:
#: gtkmain.h:49:3
msgid ""
"It is used internally by GTK+ to compute the sizes of widgets. This priority "
"is higher than %GDK_PRIORITY_REDRAW to avoid resizing a widget which was "
"just redrawn."
msgstr ""

#. used by: GtkKeySnoopFunc:
#: gtkmain.h:57:1
msgid "@grab_widget: the widget to which the event will be delivered"
msgstr ""

#. used by: GtkKeySnoopFunc:
#: gtkmain.h:58:1
msgid "@event: the key event"
msgstr ""

#. used by: GtkKeySnoopFunc:
#: gtkmain.h:59:1
msgid "@func_data: data supplied to gtk_key_snooper_install()"
msgstr ""

#. used by: GtkKeySnoopFunc:
#: gtkmain.h:61:2
msgid ""
"Key snooper functions are called before normal event delivery. They can be "
"used to implement custom key event handling."
msgstr ""

#. used by: GtkKeySnoopFunc:
#: gtkmain.h:64:1
msgid ""
"Returns: %TRUE to stop further processing of @event, %FALSE to continue."
msgstr ""
