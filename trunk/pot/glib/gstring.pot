# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-04-17 15:16-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"

#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_free:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_truncate:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_set_size:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_insert_len:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_append_uri_escaped:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_append:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_append_len:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_append_c:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_append_unichar:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_prepend:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_prepend_len:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_prepend_c:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_prepend_unichar:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_insert:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_insert_c:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_insert_unichar:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_overwrite:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_overwrite_len:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_erase:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_down:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_up:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_append_vprintf:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_vprintf:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_sprintf:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_printf:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_sprintfa:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_append_printf:
#: gstring.c:1011:1 gstring.c:1035:1 gstring.c:1072:1 gstring.c:1155:1
#: gstring.c:1176:1 gstring.c:1225:1 gstring.c:1325:1 gstring.c:1359:1
#: gstring.c:1393:1 gstring.c:1428:1 gstring.c:1449:1 gstring.c:1464:1
#: gstring.c:1490:1 gstring.c:1503:1 gstring.c:491:1 gstring.c:616:1
#: gstring.c:637:1 gstring.c:665:1 gstring.c:785:1 gstring.c:840:1
#: gstring.c:860:1 gstring.c:887:1 gstring.c:907:1 gstring.c:926:1
#: gstring.c:946:1 gstring.c:973:1 gstring.c:992:1
msgid "@string: a #GString"
msgstr ""

#. used by: g_string_insert:
#: gstring.c:1012:1
msgid "@pos: the position to insert the copy of the string"
msgstr ""

#. used by: g_string_insert:
#: gstring.c:1013:1
msgid "@val: the string to insert"
msgstr ""

#. used by: g_string_insert:
#: gstring.c:1015:2
msgid "Inserts a copy of a string into a #GString, expanding it if necessary."
msgstr ""

#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_assign:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_truncate:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_insert_len:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_append_uri_escaped:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_append:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_append_len:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_append_c:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_prepend:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_prepend_len:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_prepend_c:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_insert:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_insert_c:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_erase:
#: gstring.c:1018:1 gstring.c:1041:1 gstring.c:1233:1 gstring.c:593:1
#: gstring.c:621:1 gstring.c:680:1 gstring.c:793:1 gstring.c:846:1
#: gstring.c:872:1 gstring.c:893:1 gstring.c:932:1 gstring.c:958:1
#: gstring.c:979:1
msgid "Returns: @string"
msgstr ""

#. used by: g_str_equal:
#: gstring.c:103:3
msgid ""
"Note that this function is primarily meant as a hash table comparison "
"function. For a general-purpose, %NULL-safe string comparison function, see "
"g_strcmp0()."
msgstr ""

#. used by: g_string_insert_c:
#: gstring.c:1036:1
msgid "@pos: the position to insert the byte"
msgstr ""

#. used by: g_string_insert_c:
#: gstring.c:1037:1
msgid "@c: the byte to insert"
msgstr ""

#. used by: g_string_insert_c:
#: gstring.c:1039:1
msgid "Inserts a byte into a #GString, expanding it if necessary."
msgstr ""

#. used by: g_str_equal:
#: gstring.c:107:1
msgid "Returns: %TRUE if the two keys match"
msgstr ""

#. used by: g_string_insert_unichar:
#: gstring.c:1073:2
msgid ""
"@pos: the position at which to insert character, or -1 to append at the end "
"of the string"
msgstr ""

#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_append_unichar:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_prepend_unichar:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_insert_unichar:
#: gstring.c:1075:1 gstring.c:908:1 gstring.c:993:1
msgid "@wc: a Unicode character"
msgstr ""

#. used by: g_string_insert_unichar:
#: gstring.c:1077:2
msgid ""
"Converts a Unicode character into UTF-8, and insert it into the string at "
"the given position."
msgstr ""

#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_set_size:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_append_unichar:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_prepend_unichar:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_insert_unichar:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_overwrite:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_overwrite_len:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_up:
#: gstring.c:1080:1 gstring.c:1161:1 gstring.c:1184:1 gstring.c:1363:1
#: gstring.c:646:1 gstring.c:913:1 gstring.c:998:1
msgid "Return value: @string"
msgstr ""

#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_overwrite:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_overwrite_len:
#: gstring.c:1156:1 gstring.c:1177:1
msgid "@pos: the position at which to start overwriting"
msgstr ""

#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_overwrite:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_overwrite_len:
#: gstring.c:1157:1 gstring.c:1178:1
msgid "@val: the string that will overwrite the @string starting at @pos"
msgstr ""

#. used by: g_string_overwrite:
#: gstring.c:1159:1
msgid "Overwrites part of a string, lengthening it if necessary."
msgstr ""

#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_chunk_clear:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_overwrite:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_overwrite_len:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_append_vprintf:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_vprintf:
#: gstring.c:1163:1 gstring.c:1186:1 gstring.c:1402:1 gstring.c:1436:1
#: gstring.c:231:1
msgid "Since: 2.14"
msgstr ""

#. used by: g_string_overwrite_len:
#: gstring.c:1179:1
msgid "@len: the number of bytes to write from @val"
msgstr ""

#. used by: g_string_overwrite_len:
#: gstring.c:1181:2
msgid ""
"Overwrites part of a string, lengthening it if necessary. This function will "
"work with embedded nuls."
msgstr ""

#. used by: g_str_hash:
#: gstring.c:121:1
msgid "@v: a string key"
msgstr ""

#. used by: g_string_erase:
#: gstring.c:1226:1
msgid "@pos: the position of the content to remove"
msgstr ""

#. used by: g_string_erase:
#: gstring.c:1227:2
msgid ""
"@len: the number of bytes to remove, or -1 to remove all following bytes"
msgstr ""

#. used by: g_str_hash:
#: gstring.c:123:3
msgid ""
"Converts a string to a hash value. It can be passed to g_hash_table_new() as "
"the @hash_func parameter, when using strings as keys in a #GHashTable."
msgstr ""

#. used by: g_string_erase:
#: gstring.c:1230:2
msgid ""
"Removes @len bytes from a #GString, starting at position @pos. The rest of "
"the #GString is shifted down to fill the gap."
msgstr ""

#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_ascii_down:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_ascii_up:
#: gstring.c:1263:1 gstring.c:1294:1
msgid "@string: a GString"
msgstr ""

#. used by: g_string_ascii_down:
#: gstring.c:1265:1
msgid "Converts all upper case ASCII letters to lower case ASCII letters."
msgstr ""

#. used by: g_string_ascii_down:
#: gstring.c:1267:3
msgid ""
"Return value: passed-in @string pointer, with all the upper case characters "
"converted to lower case in place, with semantics that exactly match "
"g_ascii_tolower()."
msgstr ""

#. used by: g_str_hash:
#: gstring.c:127:1
msgid "Returns: a hash value corresponding to the key"
msgstr ""

#. used by: g_string_ascii_up:
#: gstring.c:1296:1
msgid "Converts all lower case ASCII letters to upper case ASCII letters."
msgstr ""

#. used by: g_string_ascii_up:
#: gstring.c:1298:3
msgid ""
"Return value: passed-in @string pointer, with all the lower case characters "
"converted to upper case in place, with semantics that exactly match "
"g_ascii_toupper()."
msgstr ""

#. used by: g_string_down:
#: gstring.c:1327:1
msgid "Converts a #GString to lowercase."
msgstr ""

#. used by: g_string_down:
#: gstring.c:1329:1
msgid "Returns: the #GString."
msgstr ""

#. used by: g_string_down:
#: gstring.c:1331:3
msgid ""
"Deprecated:2.2: This function uses the locale-specific tolower() function, "
"which is almost never the right thing. Use g_string_ascii_down() or "
"g_utf8_strdown() instead."
msgstr ""

#. used by: g_string_up:
#: gstring.c:1361:1
msgid "Converts a #GString to uppercase."
msgstr ""

#. used by: g_string_up:
#: gstring.c:1365:3
msgid ""
"Deprecated:2.2: This function uses the locale-specific toupper() function, "
"which is almost never the right thing. Use g_string_ascii_up() or "
"g_utf8_strup() instead."
msgstr ""

#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_append_vprintf:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_vprintf:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_printf:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_append_printf:
#: gstring.c:1394:1 gstring.c:1429:1 gstring.c:1465:1 gstring.c:1504:1
msgid "@format: the string format. See the printf() documentation"
msgstr ""

#. used by: g_string_append_vprintf:
#: gstring.c:1395:1
msgid "@args: the list of arguments to insert in the output"
msgstr ""

#. used by: g_string_append_vprintf:
#: gstring.c:1397:4
msgid ""
"Appends a formatted string onto the end of a #GString. This function is "
"similar to g_string_append_printf() except that the arguments to the format "
"string are passed as a va_list."
msgstr ""

#. used by: g_string_vprintf:
#: gstring.c:1430:1
msgid "@args: the parameters to insert into the format string"
msgstr ""

#. used by: g_string_vprintf:
#: gstring.c:1432:3
msgid ""
"Writes a formatted string into a #GString. This function is similar to "
"g_string_printf() except that the arguments to the format string are passed "
"as a va_list."
msgstr ""

#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_sprintf:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_sprintfa:
#: gstring.c:1450:1 gstring.c:1491:1
msgid "@format: the string format. See the sprintf() documentation"
msgstr ""

#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_sprintf:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_printf:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_sprintfa:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_append_printf:
#: gstring.c:1451:1 gstring.c:1466:1 gstring.c:1492:1 gstring.c:1505:1
msgid "@Varargs: the parameters to insert into the format string"
msgstr ""

#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_sprintf:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_printf:
#: gstring.c:1453:5 gstring.c:1468:5
msgid ""
"Writes a formatted string into a #GString. This is similar to the standard "
"sprintf() function, except that the #GString buffer automatically expands to "
"contain the results. The previous contents of the #GString are destroyed."
msgstr ""

#. used by: g_string_sprintf:
#: gstring.c:1459:1
msgid "Deprecated: This function has been renamed to g_string_printf()."
msgstr ""

#. used by: g_string_sprintfa:
#: gstring.c:1494:3
msgid ""
"Appends a formatted string onto the end of a #GString. This function is "
"similar to g_string_sprintf() except that the text is appended to the "
"#GString."
msgstr ""

#. used by: g_string_sprintfa:
#: gstring.c:1498:1
msgid "Deprecated: This function has been renamed to g_string_append_printf()"
msgstr ""

#. used by: g_string_append_printf:
#: gstring.c:1507:3
msgid ""
"Appends a formatted string onto the end of a #GString. This function is "
"similar to g_string_printf() except that the text is appended to the "
"#GString."
msgstr ""

#. used by: g_string_chunk_new:
#: gstring.c:168:4
msgid ""
"@size: the default size of the blocks of memory which are allocated to store "
"the strings. If a particular string is larger than this default size, a "
"larger block of memory will be allocated for it."
msgstr ""

#. used by: g_string_chunk_new:
#: gstring.c:173:1
msgid "Creates a new #GStringChunk."
msgstr ""

#. used by: g_string_chunk_new:
#: gstring.c:175:1
msgid "Returns: a new #GStringChunk"
msgstr ""

#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_chunk_free:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_chunk_clear:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_chunk_insert:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_chunk_insert_const:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_chunk_insert_len:
#: gstring.c:196:1 gstring.c:225:1 gstring.c:258:1 gstring.c:287:1
#: gstring.c:331:1
msgid "@chunk: a #GStringChunk"
msgstr ""

#. used by: g_string_chunk_free:
#: gstring.c:198:3
msgid ""
"Frees all memory allocated by the #GStringChunk. After calling "
"g_string_chunk_free() it is not safe to access any of the strings which were "
"contained within it."
msgstr ""

#. used by: g_string_chunk_clear:
#: gstring.c:227:3
msgid ""
"Frees all strings contained within the #GStringChunk. After calling "
"g_string_chunk_clear() it is not safe to access any of the strings which "
"were contained within it."
msgstr ""

#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_chunk_insert:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_chunk_insert_const:
#: gstring.c:259:1 gstring.c:288:1
msgid "@string: the string to add"
msgstr ""

#. used by: g_string_chunk_insert:
#: gstring.c:261:5
msgid ""
"Adds a copy of @string to the #GStringChunk. It returns a pointer to the new "
"copy of the string in the #GStringChunk. The characters in the string can be "
"changed, if necessary, though you should not change anything after the end "
"of the string."
msgstr ""

#. used by: g_string_chunk_insert:
#: gstring.c:267:5
msgid ""
"Unlike g_string_chunk_insert_const(), this function does not check for "
"duplicates. Also strings added with g_string_chunk_insert() will not be "
"searched by g_string_chunk_insert_const() when looking for duplicates."
msgstr ""

#. used by: g_string_chunk_insert:
#: gstring.c:273:2
msgid "Returns: a pointer to the copy of @string within the #GStringChunk"
msgstr ""

#. used by: g_string_chunk_insert_const:
#: gstring.c:290:3
msgid ""
"Adds a copy of @string to the #GStringChunk, unless the same string has "
"already been added to the #GStringChunk with g_string_chunk_insert_const()."
msgstr ""

#. used by: g_string_chunk_insert_const:
#: gstring.c:294:5
msgid ""
"This function is useful if you need to copy a large number of strings but do "
"not want to waste space storing duplicates. But you must remember that there "
"may be several pointers to the same string, and so any changes made to the "
"strings should be done very carefully."
msgstr ""

#. used by: g_string_chunk_insert_const:
#: gstring.c:300:3
msgid ""
"Note that g_string_chunk_insert_const() will not return a pointer to a "
"string added with g_string_chunk_insert(), even if they do match."
msgstr ""

#. used by: g_string_chunk_insert_const:
#: gstring.c:304:2
msgid ""
"Returns: a pointer to the new or existing copy of @string within the "
"#GStringChunk"
msgstr ""

#. used by: g_string_chunk_insert_len:
#: gstring.c:332:1
msgid "@string: bytes to insert"
msgstr ""

#. used by: g_string_chunk_insert_len:
#: gstring.c:333:2
msgid ""
"@len: number of bytes of @string to insert, or -1 to insert a nul-terminated "
"string"
msgstr ""

#. used by: g_string_chunk_insert_len:
#: gstring.c:336:2
msgid ""
"Adds a copy of the first @len bytes of @string to the #GStringChunk. The "
"copy is nul-terminated."
msgstr ""

#. used by: g_string_chunk_insert_len:
#: gstring.c:339:3
msgid ""
"Since this function does not stop at nul bytes, it is the caller's "
"responsibility to ensure that @string has at least @len addressable bytes."
msgstr ""

#. used by: g_string_chunk_insert_len:
#: gstring.c:343:2
msgid ""
"The characters in the returned string can be changed, if necessary, though "
"you should not change anything after the end of the string."
msgstr ""

#. used by: g_string_chunk_insert_len:
#: gstring.c:346:1
msgid "Return value: a pointer to the copy of @string within the #GStringChunk"
msgstr ""

#. used by: g_string_chunk_insert_len:
#: gstring.c:348:1
msgid "Since: 2.4"
msgstr ""

#. used by: g_string_sized_new:
#: gstring.c:402:2
msgid "@dfl_size: the default size of the space allocated to hold the string"
msgstr ""

#. used by: g_string_sized_new:
#: gstring.c:405:4
msgid ""
"Creates a new #GString, with enough space for @dfl_size bytes. This is "
"useful if you are going to add a lot of text to the string and don't want it "
"to be reallocated too often."
msgstr ""

#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_sized_new:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_new:
#: gstring.c:410:1 gstring.c:433:1
msgid "Returns: the new #GString"
msgstr ""

#. used by: g_string_new:
#: gstring.c:429:1
msgid "@init: the initial text to copy into the string"
msgstr ""

#. used by: g_string_new:
#: gstring.c:431:1
msgid "Creates a new #GString, initialized with the given string."
msgstr ""

#. used by: g_string_new_len:
#: gstring.c:457:1
msgid "@init: initial contents of the string"
msgstr ""

#. used by: g_string_new_len:
#: gstring.c:458:1
msgid "@len: length of @init to use"
msgstr ""

#. used by: g_string_new_len:
#: gstring.c:460:3
msgid ""
"Creates a new #GString with @len bytes of the @init buffer. Because a length "
"is provided, @init need not be nul-terminated, and can contain embedded nul "
"bytes."
msgstr ""

#. used by: g_string_new_len:
#: gstring.c:464:3
msgid ""
"Since this function does not stop at nul bytes, it is the caller's "
"responsibility to ensure that @init has at least @len addressable bytes."
msgstr ""

#. used by: g_string_new_len:
#: gstring.c:468:1
msgid "Returns: a new #GString"
msgstr ""

#. used by: SECTION: string_chunks
#: gstring.c:49:1
msgid "@title: String Chunks"
msgstr ""

#. used by: g_string_free:
#: gstring.c:492:1
msgid "@free_segment: if %TRUE the actual character data is freed as well"
msgstr ""

#. used by: g_string_free:
#: gstring.c:494:2
msgid ""
"Frees the memory allocated for the #GString. If @free_segment is %TRUE it "
"also frees the character data."
msgstr ""

#. used by: g_string_free:
#: gstring.c:497:2
msgid ""
"Returns: the character data of @string (i.e. %NULL if @free_segment is %TRUE)"
msgstr ""

#. used by: SECTION: string_chunks
#: gstring.c:50:1
msgid "@short_description: efficient storage of groups of strings"
msgstr ""

#. used by: SECTION: string_chunks
#: gstring.c:52:4
msgid ""
"String chunks are used to store groups of strings. Memory is allocated in "
"blocks, and as strings are added to the #GStringChunk they are copied into "
"the next free position in a block. When a block is full a new block is "
"allocated."
msgstr ""

#. used by: g_string_equal:
#: gstring.c:523:2
msgid "@v: a #GString @v2: another #GString"
msgstr ""

#. used by: g_string_equal:
#: gstring.c:526:2
msgid ""
"Compares two strings for equality, returning %TRUE if they are equal. For "
"use with #GHashTable."
msgstr ""

#. used by: g_string_equal:
#: gstring.c:529:2
msgid ""
"Returns: %TRUE if they strings are the same length and contain the same bytes"
msgstr ""

#. used by: g_string_hash:
#: gstring.c:559:1
msgid "@str: a string to hash"
msgstr ""

#. used by: g_string_hash:
#: gstring.c:561:1
msgid "Creates a hash code for @str; for use with #GHashTable."
msgstr ""

#. used by: g_string_hash:
#: gstring.c:563:1
msgid "Returns: hash code for @str"
msgstr ""

#. used by: SECTION: string_chunks
#: gstring.c:57:3
msgid ""
"When storing a large number of strings, string chunks are more efficient "
"than using g_strdup() since fewer calls to malloc() are needed, and less "
"memory is wasted in memory allocation overheads."
msgstr ""

#. used by: g_string_assign:
#: gstring.c:584:2
msgid "@string: the destination #GString. Its current contents are destroyed."
msgstr ""

#. used by: g_string_assign:
#: gstring.c:586:1
msgid "@rval: the string to copy into @string"
msgstr ""

#. used by: g_string_assign:
#: gstring.c:588:4
msgid ""
"Copies the bytes from a string into a #GString, destroying any previous "
"contents. It is rather like the standard strcpy() function, except that you "
"do not have to worry about having enough space to copy the string."
msgstr ""

#. used by: SECTION: string_chunks
#: gstring.c:61:2
msgid ""
"By adding strings with g_string_chunk_insert_const() it is also possible to "
"remove duplicates."
msgstr ""

#. used by: g_string_truncate:
#: gstring.c:617:1
msgid "@len: the new size of @string"
msgstr ""

#. used by: g_string_truncate:
#: gstring.c:619:1
msgid "Cuts off the end of the GString, leaving the first @len bytes."
msgstr ""

#. used by: g_string_set_size:
#: gstring.c:638:1
msgid "@len: the new length"
msgstr ""

#. used by: SECTION: string_chunks
#: gstring.c:64:1
msgid "To create a new #GStringChunk use g_string_chunk_new()."
msgstr ""

#. used by: g_string_set_size:
#: gstring.c:640:5
msgid ""
"Sets the length of a #GString. If the length is less than the current "
"length, the string will be truncated. If the length is greater than the "
"current length, the contents of the newly added area are undefined. "
"(However, as always, string->str[string->len] will be a nul byte.)"
msgstr ""

#. used by: SECTION: string_chunks
#: gstring.c:66:1
msgid "To add strings to a #GStringChunk use g_string_chunk_insert()."
msgstr ""

#. used by: g_string_insert_len:
#: gstring.c:666:2
msgid ""
"@pos: position in @string where insertion should happen, or -1 for at the end"
msgstr ""

#. used by: g_string_insert_len:
#: gstring.c:668:1
msgid "@val: bytes to insert"
msgstr ""

#. used by: g_string_insert_len:
#: gstring.c:669:1
msgid "@len: number of bytes of @val to insert"
msgstr ""

#. used by: g_string_insert_len:
#: gstring.c:671:4
msgid ""
"Inserts @len bytes of @val into @string at @pos. Because @len is provided, "
"@val may contain embedded nuls and need not be nul-terminated. If @pos is "
"-1, bytes are inserted at the end of the string."
msgstr ""

#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_insert_len:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_append_len:
#. #-#-#-#-#  gstring.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_string_prepend_len:
#: gstring.c:676:3 gstring.c:868:3 gstring.c:954:3
msgid ""
"Since this function does not stop at nul bytes, it is the caller's "
"responsibility to ensure that @val has at least @len addressable bytes."
msgstr ""

#. used by: SECTION: string_chunks
#: gstring.c:68:3
msgid ""
"To add strings to a #GStringChunk, but without duplicating strings which are "
"already in the #GStringChunk, use g_string_chunk_insert_const()."
msgstr ""

#. used by: SECTION: string_chunks
#: gstring.c:72:2
msgid ""
"To free the entire #GStringChunk use g_string_chunk_free(). It is not "
"possible to free individual strings."
msgstr ""

#. used by: g_string_append_uri_escaped:
#: gstring.c:786:1
msgid "@unescaped: a string"
msgstr ""

#. used by: g_string_append_uri_escaped:
#: gstring.c:787:2
msgid ""
"@reserved_chars_allowed: a string of reserved characters allowed to be used, "
"or %NULL @allow_utf8: set %TRUE if the escaped string may include UTF8 "
"characters"
msgstr ""

#. used by: GStringChunk:
#: gstring.c:79:2
msgid ""
"An opaque data structure representing String Chunks. It should only be "
"accessed by using the following functions."
msgstr ""

#. used by: g_string_append_uri_escaped:
#: gstring.c:790:2
msgid ""
"Appends @unescaped to @string, escaped any characters that are reserved in "
"URIs using URI-style escape sequences."
msgstr ""

#. used by: g_string_append_uri_escaped:
#: gstring.c:795:1
msgid "Since: 2.16"
msgstr ""

#. used by: g_string_append:
#: gstring.c:841:1
msgid "@val: the string to append onto the end of @string"
msgstr ""

#. used by: g_string_append:
#: gstring.c:843:2
msgid "Adds a string onto the end of a #GString, expanding it if necessary."
msgstr ""

#. used by: g_string_append_len:
#: gstring.c:861:1
msgid "@val: bytes to append"
msgstr ""

#. used by: g_string_append_len:
#: gstring.c:862:1
msgid "@len: number of bytes of @val to use"
msgstr ""

#. used by: g_string_append_len:
#: gstring.c:864:3
msgid ""
"Appends @len bytes of @val to @string. Because @len is provided, @val may "
"contain embedded nuls and need not be nul-terminated."
msgstr ""

#. used by: g_string_append_c:
#: gstring.c:888:1
msgid "@c: the byte to append onto the end of @string"
msgstr ""

#. used by: g_string_append_c:
#: gstring.c:890:2
msgid "Adds a byte onto the end of a #GString, expanding it if necessary."
msgstr ""

#. used by: g_string_append_unichar:
#: gstring.c:910:2
msgid "Converts a Unicode character into UTF-8, and appends it to the string."
msgstr ""

#. used by: g_string_prepend:
#: gstring.c:927:1
msgid "@val: the string to prepend on the start of @string"
msgstr ""

#. used by: g_string_prepend:
#: gstring.c:929:2
msgid "Adds a string on to the start of a #GString, expanding it if necessary."
msgstr ""

#. used by: g_string_prepend_len:
#: gstring.c:947:1
msgid "@val: bytes to prepend"
msgstr ""

#. used by: g_string_prepend_len:
#: gstring.c:948:1
msgid "@len: number of bytes in @val to prepend"
msgstr ""

#. used by: g_string_prepend_len:
#: gstring.c:950:3
msgid ""
"Prepends @len bytes of @val to @string. Because @len is provided, @val may "
"contain embedded nuls and need not be nul-terminated."
msgstr ""

#. used by: g_str_equal:
#: gstring.c:96:2
msgid "@v1: a key @v2: a key to compare with @v1"
msgstr ""

#. used by: g_string_prepend_c:
#: gstring.c:974:1
msgid "@c: the byte to prepend on the start of the #GString"
msgstr ""

#. used by: g_string_prepend_c:
#: gstring.c:976:2
msgid "Adds a byte onto the start of a #GString, expanding it if necessary."
msgstr ""

#. used by: g_str_equal:
#: gstring.c:99:3
msgid ""
"Compares two strings for byte-by-byte equality and returns %TRUE if they are "
"equal. It can be passed to g_hash_table_new() as the @key_equal_func "
"parameter, when using strings as keys in a #GHashTable."
msgstr ""

#. used by: g_string_prepend_unichar:
#: gstring.c:995:2
msgid "Converts a Unicode character into UTF-8, and prepends it to the string."
msgstr ""
