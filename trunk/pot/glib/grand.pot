# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-04-14 21:51-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"

# #used by: GRand:
#: grand.c:108:2
msgid ""
"The #GRand struct is an opaque data structure. It should only be accessed "
"through the <function>g_rand_*</function> functions."
msgstr ""

# used by: g_rand_new_with_seed:
#: grand.c:173:1
msgid "@seed: a value to initialize the random number generator."
msgstr ""

# #-#-#-#-#  grand.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_rand_new_with_seed:
# #-#-#-#-#  grand.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_rand_new_with_seed_array:
#: grand.c:175:1 grand.c:192:1
msgid "Creates a new random number generator initialized with @seed."
msgstr ""

# #-#-#-#-#  grand.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_rand_new_with_seed:
# #-#-#-#-#  grand.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_rand_new_with_seed_array:
# #-#-#-#-#  grand.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_rand_new:
# #-#-#-#-#  grand.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_rand_copy:
#: grand.c:177:1 grand.c:194:1 grand.c:213:1 grand.c:296:1
msgid "Return value: the new #GRand."
msgstr ""

# used by: g_rand_new_with_seed_array:
#: grand.c:189:1
msgid "@seed: an array of seeds to initialize the random number generator."
msgstr ""

# used by: g_rand_new_with_seed_array:
#: grand.c:190:1
msgid ""
"@seed_length: an array of seeds to initialize the random number generator."
msgstr ""

# #-#-#-#-#  grand.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_rand_new_with_seed_array:
# #-#-#-#-#  grand.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_rand_copy:
# #-#-#-#-#  grand.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_rand_set_seed_array:
#: grand.c:196:1 grand.c:298:1 grand.c:368:1
msgid "Since: 2.4"
msgstr ""

# #used by: g_rand_new:
#: grand.c:209:3
msgid ""
"Creates a new random number generator initialized with a seed taken either "
"from <filename>/dev/urandom</filename> (if existing) or from the current "
"time (as a fallback)."
msgstr ""

# #-#-#-#-#  grand.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_rand_free:
# #-#-#-#-#  grand.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_rand_copy:
# #-#-#-#-#  grand.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_rand_set_seed:
# #-#-#-#-#  grand.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_rand_set_seed_array:
# #-#-#-#-#  grand.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_rand_boolean:
# #-#-#-#-#  grand.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_rand_int:
# #-#-#-#-#  grand.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_rand_int_range:
# #-#-#-#-#  grand.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_rand_double:
# #-#-#-#-#  grand.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_rand_double_range:
#: grand.c:276:1 grand.c:290:1 grand.c:315:1 grand.c:358:1 grand.c:416:1
#: grand.c:424:1 grand.c:471:1 grand.c:552:1 grand.c:577:1
msgid "@rand_: a #GRand."
msgstr ""

# #used by: g_rand_free:
#: grand.c:278:1
msgid "Frees the memory allocated for the #GRand."
msgstr ""

# #used by: g_rand_copy:
#: grand.c:292:3
msgid ""
"Copies a #GRand into a new one with the same exact state as before. This way "
"you can take a snapshot of the random number generator for replaying later."
msgstr ""

# used by: g_rand_set_seed:
#: grand.c:316:1
msgid "@seed: a value to reinitialize the random number generator."
msgstr ""

# #used by: g_rand_set_seed:
#: grand.c:318:1
msgid "Sets the seed for the random number generator #GRand to @seed."
msgstr ""

# used by: g_rand_set_seed_array:
#: grand.c:359:1
msgid "@seed: array to initialize with"
msgstr ""

# used by: g_rand_set_seed_array:
#: grand.c:360:1
msgid "@seed_length: length of array"
msgstr ""

# #used by: g_rand_set_seed_array:
#: grand.c:362:5
msgid ""
"Initializes the random number generator by an array of longs.  Array can be "
"of arbitrary size, though only the first 624 values are taken.  This "
"function is useful if you have many low entropy seeds, or if you require "
"more then 32bits of actual entropy for your application."
msgstr ""

# #-#-#-#-#  grand.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_rand_boolean:
# #-#-#-#-#  grand.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_random_boolean:
#: grand.c:417:1 grand.c:594:1
msgid "@Returns: a random #gboolean."
msgstr ""

# #used by: g_rand_boolean:
#: grand.c:419:2
msgid ""
"Returns a random #gboolean from @rand_. This corresponds to a unbiased coin "
"toss."
msgstr ""

# #used by: g_rand_int:
#: grand.c:426:2
msgid ""
"Returns the next random #guint32 from @rand_ equally distributed over the "
"range [0..2^32-1]."
msgstr ""

# #-#-#-#-#  grand.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_rand_int:
# #-#-#-#-#  grand.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_rand_int_range:
# #-#-#-#-#  grand.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_rand_double:
# #-#-#-#-#  grand.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_rand_double_range:
# #-#-#-#-#  grand.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_random_int:
# #-#-#-#-#  grand.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_random_int_range:
# #-#-#-#-#  grand.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_random_double:
# #-#-#-#-#  grand.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_random_double_range:
#: grand.c:429:1 grand.c:478:1 grand.c:557:1 grand.c:584:1 grand.c:604:1
#: grand.c:627:1 grand.c:647:1 grand.c:669:1
msgid "Return value: A random number."
msgstr ""

# #-#-#-#-#  grand.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_rand_int_range:
# #-#-#-#-#  grand.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_rand_double_range:
# #-#-#-#-#  grand.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_random_int_range:
# #-#-#-#-#  grand.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_random_double_range:
#: grand.c:472:1 grand.c:578:1 grand.c:621:1 grand.c:664:1
msgid "@begin: lower closed bound of the interval."
msgstr ""

# #-#-#-#-#  grand.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_rand_int_range:
# #-#-#-#-#  grand.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_rand_double_range:
# #-#-#-#-#  grand.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_random_int_range:
# #-#-#-#-#  grand.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_random_double_range:
#: grand.c:473:1 grand.c:579:1 grand.c:622:1 grand.c:665:1
msgid "@end: upper open bound of the interval."
msgstr ""

# #used by: g_rand_int_range:
#: grand.c:475:2
msgid ""
"Returns the next random #gint32 from @rand_ equally distributed over the "
"range [@begin..@end-1]."
msgstr ""

# #used by: g_rand_double:
#: grand.c:554:2
msgid ""
"Returns the next random #gdouble from @rand_ equally distributed over the "
"range [0..1)."
msgstr ""

# #used by: g_rand_double_range:
#: grand.c:581:2
msgid ""
"Returns the next random #gdouble from @rand_ equally distributed over the "
"range [@begin..@end)."
msgstr ""

# #used by: g_random_boolean:
#: grand.c:596:1
msgid "Returns a random #gboolean. This corresponds to a unbiased coin toss."
msgstr ""

# #used by: g_random_int:
#: grand.c:601:2
msgid ""
"Return a random #guint32 equally distributed over the range [0..2^32-1]."
msgstr ""

# #used by: g_random_int_range:
#: grand.c:624:2
msgid ""
"Returns a random #gint32 equally distributed over the range [@begin..@end-1]."
msgstr ""

# used by: SECTION: random_numbers
#: grand.c:64:1
msgid "@title: Random Numbers"
msgstr ""

# #used by: g_random_double:
#: grand.c:645:1
msgid "Returns a random #gdouble equally distributed over the range [0..1)."
msgstr ""

# used by: SECTION: random_numbers
#: grand.c:65:1
msgid "@short_description: pseudo-random number generator"
msgstr ""

# #used by: g_random_double_range:
#: grand.c:667:1
msgid ""
"Returns a random #gdouble equally distributed over the range [@begin..@end)."
msgstr ""

# #used by: SECTION: random_numbers
#: grand.c:67:6
msgid ""
"The following functions allow you to use a portable, fast and good pseudo-"
"random number generator (PRNG). It uses the Mersenne Twister PRNG, which was "
"originally developed by Makoto Matsumoto and Takuji Nishimura. Further "
"information can be found at <ulink url=|$_1_$|http://www.math.keio.ac.jp/"
"~matumoto/emt.html|$_1_$|> www.math.keio.ac.jp/~matumoto/emt.html</ulink>."
msgstr ""

# used by: g_random_set_seed:
#: grand.c:686:1
msgid "@seed: a value to reinitialize the global random number generator."
msgstr ""

# #used by: g_random_set_seed:
#: grand.c:688:2
msgid ""
"Sets the seed for the global random number generator, which is used by the "
"<function>g_random_*</function> functions, to @seed."
msgstr ""

# #used by: SECTION: random_numbers
#: grand.c:74:10
msgid ""
"If you just need a random number, you simply call the <function>g_random_*</"
"function> functions, which will create a globally used #GRand and use the "
"according <function>g_rand_*</function> functions internally. Whenever you "
"need a stream of reproducible random numbers, you better create a #GRand "
"yourself and use the <function>g_rand_*</function> functions directly, which "
"will also be slightly faster. Initializing a #GRand with a certain seed will "
"produce exactly the same series of random numbers on all platforms. This can "
"thus be used as a seed for e.g. games."
msgstr ""

# #used by: SECTION: random_numbers
#: grand.c:85:4
msgid ""
"The <function>g_rand*_range</function> functions will return high quality "
"equally distributed random numbers, whereas for example the <literal>"
"(g_random_int()&percnt;max)</literal> approach often doesn't yield equally "
"distributed numbers."
msgstr ""

# #used by: SECTION: random_numbers
#: grand.c:90:7
msgid ""
"GLib changed the seeding algorithm for the pseudo-random number generator "
"Mersenne Twister, as used by <structname>GRand</structname> and "
"<structname>GRandom</structname>. This was necessary, because some seeds "
"would yield very bad pseudo-random streams.  Also the pseudo-random integers "
"generated by <function>g_rand*_int_range()</function> will have a slightly "
"better equal distribution with the new version of GLib."
msgstr ""

# #used by: SECTION: random_numbers
#: grand.c:98:5
msgid ""
"The original seeding and generation algorithms, as found in GLib 2.0.x, can "
"be used instead of the new ones by setting the environment variable "
"<envar>G_RANDOM_VERSION</envar> to the value of '2.0'. Use the GLib-2.0 "
"algorithms only if you have sequences of numbers generated with Glib-2.0 "
"that you need to reproduce exactly."
msgstr ""
