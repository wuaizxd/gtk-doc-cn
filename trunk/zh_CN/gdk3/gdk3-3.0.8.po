# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-04-20 21:44-0800\n"
"PO-Revision-Date: 2011-04-13 17:53+0800\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_seconds_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_seconds:
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_threads_add_timeout_seconds_full:
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_threads_add_timeout_seconds: (skip)
#: gdk.c:1010:1 gdk.c:971:1
msgid "@interval: the time between calls to the function, in seconds"
msgstr "@interval: 两次函数调用之间的间隔时间，以秒为单位"

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_idle_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_idle:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_seconds_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_seconds:
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_threads_add_idle_full:
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_threads_add_idle: (skip)
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_threads_add_timeout_full:
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_threads_add_timeout: (skip)
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_threads_add_timeout_seconds_full:
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_threads_add_timeout_seconds: (skip)
#: gdk.c:1011:1 gdk.c:764:1 gdk.c:838:1 gdk.c:865:1 gdk.c:945:1 gdk.c:972:1
msgid "@function: function to call"
msgstr "@function: 被调用的函数"

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_idle_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_idle:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_seconds_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_seconds:
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_threads_add_idle_full:
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_threads_add_idle: (skip)
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_threads_add_timeout_full:
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_threads_add_timeout: (skip)
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_threads_add_timeout_seconds_full:
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_threads_add_timeout_seconds: (skip)
#: gdk.c:1012:1 gdk.c:765:1 gdk.c:839:1 gdk.c:866:1 gdk.c:946:1 gdk.c:973:1
msgid "@data:     data to pass to @function"
msgstr "@data: 传递给@function的数据"

# #used by: gdk_threads_add_timeout_seconds:
#. used by: gdk_threads_add_timeout_seconds: (skip)
#: gdk.c:1014:2
msgid ""
"A wrapper for the common usage of gdk_threads_add_timeout_seconds_full() "
"assigning the default priority, #G_PRIORITY_DEFAULT."
msgstr ""
"对gdk_threads_add_timeout_seconds_full()函数常见用法的封装，指定默认的优先级"
"为#G_PRIORITY_DEFAULT。"

# #used by: gdk_threads_add_timeout_seconds:
#. used by: gdk_threads_add_timeout_seconds: (skip)
#: gdk.c:1017:1
msgid "For details, see gdk_threads_add_timeout_full()."
msgstr "有关详细信息，请参见gdk_threads_add_timeout_full()。"

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_seconds_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_seconds:
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_threads_add_idle_full:
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_threads_add_idle: (skip)
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_threads_add_timeout_full:
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_threads_add_timeout: (skip)
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_threads_add_timeout_seconds_full:
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_threads_add_timeout_seconds: (skip)
#: gdk.c:1019:1 gdk.c:810:1 gdk.c:846:1 gdk.c:913:1 gdk.c:953:1 gdk.c:980:1
msgid "Return value: the ID (greater than 0) of the event source."
msgstr "Return value: 事件源的ID（大于0）。"

# #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_seconds_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_seconds:
# #-#-#-#-#  gdkapplaunchcontext.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkapplaunchcontext.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_app_launch_context_set_display:
# #-#-#-#-#  gdkapplaunchcontext.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_app_launch_context_set_screen:
# #-#-#-#-#  gdkapplaunchcontext.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_app_launch_context_set_desktop:
# #-#-#-#-#  gdkapplaunchcontext.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_app_launch_context_set_timestamp:
# #-#-#-#-#  gdkapplaunchcontext.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_app_launch_context_set_icon:
# #-#-#-#-#  gdkapplaunchcontext.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_app_launch_context_set_icon_name:
# #-#-#-#-#  gdkapplaunchcontext.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_app_launch_context_new:
# #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkScreen::monitors-changed:
# #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_window_remove_redirection:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_window_redirect_to_drawable:
#. #-#-#-#-#  gdkapplaunchcontext.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkapplaunchcontext.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_app_launch_context_set_display:
#. #-#-#-#-#  gdkapplaunchcontext.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_app_launch_context_set_screen:
#. #-#-#-#-#  gdkapplaunchcontext.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_app_launch_context_set_desktop:
#. #-#-#-#-#  gdkapplaunchcontext.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_app_launch_context_set_timestamp:
#. #-#-#-#-#  gdkapplaunchcontext.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_app_launch_context_set_icon:
#. #-#-#-#-#  gdkapplaunchcontext.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_app_launch_context_set_icon_name:
#. #-#-#-#-#  gdkapplaunchcontext.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_app_launch_context_new:
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_threads_add_timeout_seconds: (skip)
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkScreen::monitors-changed:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_monitor_width_mm:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_monitor_height_mm:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_monitor_plug_name:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_test_render_sync:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_test_simulate_key:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_test_simulate_button:
#: gdk.c:1021:1 gdkapplaunchcontext.c:186:1 gdkapplaunchcontext.c:212:1
#: gdkapplaunchcontext.c:248:1 gdkapplaunchcontext.c:272:1
#: gdkapplaunchcontext.c:296:1 gdkapplaunchcontext.c:329:1
#: gdkapplaunchcontext.c:348:1 gdkscreen.c:156:1 gdkscreen.c:701:1
#: gdkscreen.c:719:1 gdkscreen.c:740:1 gdkwindow.c:10665:1 gdkwindow.c:10702:1
#: gdkwindow.c:10741:1
msgid "Since: 2.14"
msgstr "Since: 2.14"

# #used by: gdk_get_program_class:
#. used by: gdk_get_program_class:
#: gdk.c:1035:4
msgid ""
"Gets the program class. Unless the program class has explicitly been set "
"with gdk_set_program_class() or with the <option>--class</option> "
"commandline option, the default value is the program name (determined with "
"g_get_prgname()) with the first character converted to uppercase."
msgstr ""

# #used by: gdk_get_program_class:
#. used by: gdk_get_program_class:
#: gdk.c:1040:1
msgid "Returns: the program class."
msgstr ""

# used by: gdk_set_program_class:
#. used by: gdk_set_program_class:
#: gdk.c:1050:1
msgid "@program_class: a string."
msgstr ""

# #used by: gdk_set_program_class:
#. used by: gdk_set_program_class:
#: gdk.c:1052:3
msgid ""
"Sets the program class. The X11 backend uses the program class to set the "
"class name part of the <literal>WM_CLASS</literal> property on toplevel "
"windows; see the ICCCM."
msgstr ""

# #used by: gdk_disable_multidevice:
#. used by: gdk_disable_multidevice:
#: gdk.c:1067:3
msgid ""
"Disables multidevice support in GDK. This call must happen prior to "
"gdk_display_open(), gtk_init(), gtk_init_with_args() or gtk_init_check() in "
"order to take effect."
msgstr ""

# #used by: gdk_disable_multidevice:
#. used by: gdk_disable_multidevice:
#: gdk.c:1071:4
msgid ""
"Most common GTK+ applications won't ever need to call this. Only "
"applications that do mixed GDK/Xlib calls could want to disable multidevice "
"support if such Xlib code deals with input devices in any way and doesn't "
"observe the presence of XInput 2."
msgstr ""

# #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_parse_args:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_get_display_arg_name:
# #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkDisplay::closed:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_close:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_event:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_peek_event:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_put_event:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_core_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_window_at_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_set_pointer_hooks:
# #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkDisplayManager::display-opened:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_get:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_get_default_display:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_default:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_default:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_set_default_display:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_list_displays:
# #-#-#-#-#  gdkdraw.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkdraw.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_drawable_get_screen:
# #-#-#-#-#  gdkdraw.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_drawable_get_display:
# #-#-#-#-#  gdkdraw.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_draw_pixbuf:
# #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_event_new:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_event_set_screen:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_event_get_screen:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_set_double_click_time:
# #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkKeymap::keys-changed:
# #-#-#-#-#  gdkpango.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_pango_context_get_for_screen:
# #-#-#-#-#  gdkrgb.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkrgb.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_rgb_colormap:
# #-#-#-#-#  gdkrgb.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_rgb_visual:
# #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkScreen::size-changed:
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_monitor_at_point:
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_monitor_at_window:
# #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_toplevel_windows:
#. #-#-#-#-#  gdkcairo.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_cairo_set_source_rgba:
#. #-#-#-#-#  gdkdevicemanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkdevicemanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_manager_get_display:
#. #-#-#-#-#  gdkdevicemanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_manager_list_devices:
#. #-#-#-#-#  gdkdevicemanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_manager_get_client_pointer:
#. #-#-#-#-#  gdkdevice.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkDevice:display:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkDevice:device-manager:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkDevice:name:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkDevice:type:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkDevice:associated-device:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkDevice:input-source:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkDevice:input-mode:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkDevice:has-cursor:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkDevice:n-axes:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_get_position:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_get_window_at_position:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_get_display:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_get_associated_device:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_get_device_type:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_get_n_axes:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_list_axes:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_get_axis_value: (skip)
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_grab:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_ungrab:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_warp:
#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_manager_open_display:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_device_manager:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_app_launch_context:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_has_pending:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_notify_startup_complete:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_error_trap_pop_ignored:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_context_get_dest_window:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_context_get_protocol:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_event_set_device:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_event_get_device:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_event_set_source_device:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_event_get_source_device:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_events_get_distance:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_events_get_angle:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_events_get_center:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_get_num_lock_state:
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_disable_multidevice:
#. #-#-#-#-#  gdkrgba.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkrgba.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_rgba_copy:
#. #-#-#-#-#  gdkrgba.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_rgba_free:
#. #-#-#-#-#  gdkrgba.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_rgba_parse:
#. #-#-#-#-#  gdkrgba.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_rgba_hash:
#. #-#-#-#-#  gdkrgba.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_rgba_equal:
#. #-#-#-#-#  gdkrgba.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_rgba_to_string:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkWindow::create-surface:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_device_position:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_device_events:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_device_events:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_device_cursor:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_device_cursor:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_support_multidevice:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_support_multidevice:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_source_events:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_drag_protocol:
#: gdk.c:1076:1 gdkcairo.c:113:1 gdkdevice.c:1003:1 gdkdevice.c:1024:1
#: gdkdevice.c:1059:1 gdkdevice.c:106:1 gdkdevice.c:1202:1 gdkdevice.c:121:1
#: gdkdevice.c:1274:1 gdkdevice.c:1304:1 gdkdevice.c:136:1 gdkdevice.c:151:1
#: gdkdevice.c:168:1 gdkdevice.c:182:1 gdkdevice.c:198:1 gdkdevice.c:214:1
#: gdkdevice.c:229:1 gdkdevice.c:423:1 gdkdevice.c:477:1 gdkdevice.c:851:1
#: gdkdevice.c:877:1 gdkdevice.c:985:1 gdkdevicemanager.c:267:1
#: gdkdevicemanager.c:290:1 gdkdevicemanager.c:315:1 gdkdisplay.c:1318:1
#: gdkdisplay.c:1693:1 gdkdisplay.c:1730:1 gdkdisplay.c:1928:1
#: gdkdisplay.c:2108:1 gdkdisplaymanager.c:356:1 gdkdnd.c:149:1 gdkdnd.c:167:1
#: gdkevents.c:1031:1 gdkevents.c:1077:1 gdkevents.c:1168:1 gdkevents.c:1200:1
#: gdkevents.c:1301:1 gdkevents.c:1326:1 gdkevents.c:1369:1 gdkkeys.c:357:1
#: gdkrgba.c:170:1 gdkrgba.c:283:1 gdkrgba.c:305:1 gdkrgba.c:347:1
#: gdkrgba.c:69:1 gdkrgba.c:91:1 gdkwindow.c:10595:1 gdkwindow.c:485:1
#: gdkwindow.c:4942:1 gdkwindow.c:5788:1 gdkwindow.c:5852:1 gdkwindow.c:6661:1
#: gdkwindow.c:6688:1 gdkwindow.c:7989:1 gdkwindow.c:8017:1 gdkwindow.c:8877:1
msgid "Since: 3.0"
msgstr "Since: 3.0"

# used by: gdk_add_option_entries_libgtk_only:
#. used by: gdk_add_option_entries_libgtk_only:
#: gdk.c:204:1
msgid "@group: An option group."
msgstr "@group: 一个选项组。"

# #used by: gdk_add_option_entries_libgtk_only:
#. used by: gdk_add_option_entries_libgtk_only:
#: gdk.c:206:2
msgid ""
"Appends gdk option entries to the passed in option group. This is not public "
"API and must not be used by applications."
msgstr "追加gdk的选项到已传入的选项组中。这不是公开的API，不能由应用程序使用。"

# used by: gdk_parse_args:
#. used by: gdk_parse_args:
#: gdk.c:253:1
msgid "@argc: the number of command line arguments."
msgstr "@argc: 在命令行参数的个数。"

# used by: gdk_parse_args:
#. used by: gdk_parse_args:
#: gdk.c:254:1
#, fuzzy
msgid ""
"@argv: (inout) (array length=argc): the array of command line arguments."
msgstr "@argv: 命令行参数数组。"

# #used by: gdk_parse_args:
#. used by: gdk_parse_args:
#: gdk.c:256:2
msgid ""
"Parse command line arguments, and store for future use by calls to "
"gdk_display_open()."
msgstr "解析命令行参数并存储, 以供将来调用gdk_display_open()时使用。"

# #used by: gdk_parse_args:
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_parse_args:
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_init_check:
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_init:
#: gdk.c:259:2 gdk.c:354:2 gdk.c:381:2
msgid ""
"Any arguments used by GDK are removed from the array and @argc and @argv are "
"updated accordingly."
msgstr "由GDK使用的任何参数将被从数组中删除, 并且@argc和@argv已被更新。"

# #used by: gdk_parse_args:
#. used by: gdk_parse_args:
#: gdk.c:262:2
msgid ""
"You shouldn't call this function explicitely if you are using gtk_init(), "
"gtk_init_check(), gdk_init(), or gdk_init_check()."
msgstr ""
"如果您使用了gtk_init()、gtk_init_check()、gdk_init()或gdk_init_check()，你不"
"应该显式地调用这个函数。"

# #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_parse_args:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_get_display_arg_name:
# #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkDisplay::closed:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_close:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_event:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_peek_event:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_put_event:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_core_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_window_at_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_set_pointer_hooks:
# #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkDisplayManager::display-opened:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_get:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_get_default_display:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_default:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_default:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_set_default_display:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_list_displays:
# #-#-#-#-#  gdkdraw.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkdraw.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_drawable_get_screen:
# #-#-#-#-#  gdkdraw.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_drawable_get_display:
# #-#-#-#-#  gdkdraw.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_draw_pixbuf:
# #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_event_new:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_event_set_screen:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_event_get_screen:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_set_double_click_time:
# #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkKeymap::keys-changed:
# #-#-#-#-#  gdkpango.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_pango_context_get_for_screen:
# #-#-#-#-#  gdkrgb.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkrgb.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_rgb_colormap:
# #-#-#-#-#  gdkrgb.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_rgb_visual:
# #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkScreen::size-changed:
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_monitor_at_point:
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_monitor_at_window:
# #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_toplevel_windows:
#. #-#-#-#-#  gdkcursor.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkcursor.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_cursor_new_for_display:
#. #-#-#-#-#  gdkcursor.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_cursor_get_display:
#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkDisplayManager::display-opened:
#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_manager_get:
#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_manager_get_default_display:
#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_default:
#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_default:
#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_manager_set_default_display:
#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_manager_list_displays:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkDisplay::closed:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_close:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_event:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_peek_event:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_put_event:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_pointer_ungrab:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_keyboard_ungrab:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_pointer:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_window_at_pointer:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_pointer_is_grabbed:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_name:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_n_screens:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_screen:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_default_screen:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_beep:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_sync:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_list_devices:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_open:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_notify_startup_complete:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_get_for_display:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_find_window_for_screen:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_event_new:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_event_set_screen:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_event_get_screen:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_set_double_click_time:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkKeymap::keys-changed:
#. #-#-#-#-#  gdkpango.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_pango_context_get_for_screen:
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_parse_args:
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_get_display_arg_name:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkScreen::size-changed:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_monitor_at_point:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_monitor_at_window:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_display:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_width:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_height:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_width_mm:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_height_mm:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_number:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_root_window:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_n_monitors:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_monitor_geometry:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_list_visuals:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_system_visual:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_make_display_name:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_setting:
#. #-#-#-#-#  gdkselection.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkselection.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_selection_owner_set_for_display:
#. #-#-#-#-#  gdkselection.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_selection_owner_get_for_display:
#. #-#-#-#-#  gdkselection.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_selection_send_notify_for_display:
#. #-#-#-#-#  gdkselection.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_text_property_to_utf8_list_for_display:
#. #-#-#-#-#  gdkvisual.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_visual_get_screen:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_toplevel_windows:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_skip_taskbar_hint:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_skip_pager_hint:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_fullscreen:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_unfullscreen:
#: gdk.c:265:1 gdk.c:307:1 gdkcursor.c:283:1 gdkcursor.c:366:1
#: gdkdisplay.c:120:1 gdkdisplay.c:1255:1 gdkdisplay.c:1337:1
#: gdkdisplay.c:1361:1 gdkdisplay.c:1380:1 gdkdisplay.c:1399:1
#: gdkdisplay.c:1415:1 gdkdisplay.c:1439:1 gdkdisplay.c:1659:1
#: gdkdisplay.c:1712:1 gdkdisplay.c:1881:1 gdkdisplay.c:1986:1
#: gdkdisplay.c:257:1 gdkdisplay.c:303:1 gdkdisplay.c:327:1 gdkdisplay.c:352:1
#: gdkdisplay.c:373:1 gdkdisplay.c:449:1 gdkdisplay.c:574:1 gdkdisplay.c:632:1
#: gdkdisplaymanager.c:138:1 gdkdisplaymanager.c:216:1
#: gdkdisplaymanager.c:261:1 gdkdisplaymanager.c:279:1
#: gdkdisplaymanager.c:295:1 gdkdisplaymanager.c:317:1
#: gdkdisplaymanager.c:338:1 gdkdnd.c:265:1 gdkevents.c:1401:1
#: gdkevents.c:1430:1 gdkevents.c:1632:1 gdkevents.c:417:1 gdkkeys.c:145:1
#: gdkpango.c:350:1 gdkscreen.c:115:1 gdkscreen.c:257:1 gdkscreen.c:297:1
#: gdkscreen.c:545:1 gdkscreen.c:562:1 gdkscreen.c:578:1 gdkscreen.c:595:1
#: gdkscreen.c:612:1 gdkscreen.c:629:1 gdkscreen.c:645:1 gdkscreen.c:661:1
#: gdkscreen.c:761:1 gdkscreen.c:785:1 gdkscreen.c:803:1 gdkscreen.c:871:1
#: gdkscreen.c:955:1 gdkselection.c:157:1 gdkselection.c:188:1
#: gdkselection.c:212:1 gdkselection.c:296:1 gdkvisual.c:461:1
#: gdkwindow.c:10253:1 gdkwindow.c:10276:1 gdkwindow.c:2513:1
#: gdkwindow.c:9806:1 gdkwindow.c:9829:1
msgid "Since: 2.2"
msgstr "Since: 2.2"

# #used by: gdk_get_display_arg_name:
#. used by: gdk_get_display_arg_name:
#: gdk.c:301:2
msgid ""
"Gets the display name specified in the command line arguments passed to "
"gdk_init() or gdk_parse_args(), if any."
msgstr ""
"获取从命令行传递给gdk_init()或gdk_parse_args()的显示(display)名称参数（如果有"
"的话）。"

# #used by: gdk_get_display_arg_name:
#. used by: gdk_get_display_arg_name:
#: gdk.c:304:2
msgid ""
"Returns: the display name, if specified explicitely, otherwise %NULL this "
"string is owned by GTK+ and must not be modified or freed."
msgstr ""
"Returns: 如果显式地指定的话，返回显示(display)名称，否则返回%NULL。这个字符串"
"将被GTK+拥有, 不得修改或释放。"

# #used by: gdk_display_open_default_libgtk_only:
#. used by: gdk_display_open_default_libgtk_only:
#: gdk.c:321:5
msgid ""
"Opens the default display specified by command line arguments or environment "
"variables, sets it as the default display, and returns it.  gdk_parse_args "
"must have been called first. If the default display has previously been set, "
"simply returns that. An internal function that should not be used by "
"applications."
msgstr ""
"打开从命令行参数或环境变量中指定的默认显示(display)，将它设置为默认显示"
"(display)，并返回。gdk_parse_args()必须在此之前被调用。如果默认显示(display)"
"先前已设置，就简单地返回此前的设置。这是一个内部函数，不应该由应用程序使用。"

# #used by: gdk_display_open_default_libgtk_only:
#. used by: gdk_display_open_default_libgtk_only:
#: gdk.c:327:2
#, fuzzy
msgid ""
"Return value: (transfer none): the default display, if it could be opened, "
"otherwise %NULL."
msgstr "Return value: 如果可以打开，返回默认显示，否则返回%NULL。"

# used by: gdk_parse_args:
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_init_check:
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_init:
#: gdk.c:348:1 gdk.c:374:1
#, fuzzy
msgid "@argc: (inout): the number of command line arguments."
msgstr "@argc: 在命令行参数的个数。"

# used by: gdk_parse_args:
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_init_check:
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_init:
#: gdk.c:349:1 gdk.c:375:1
#, fuzzy
msgid ""
"@argv: (array length=argc) (inout): the array of command line arguments."
msgstr "@argv: 命令行参数数组。"

# #used by: gdk_init_check:
#. used by: gdk_init_check:
#: gdk.c:351:2
msgid ""
"Initializes the GDK library and connects to the windowing system, returning "
"%TRUE on success."
msgstr ""

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_init_check:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_init:
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_init_check:
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_init:
#: gdk.c:357:2 gdk.c:384:2
msgid ""
"GTK+ initializes GDK in gtk_init() and so this function is not usually "
"needed by GTK+ applications."
msgstr ""

# #used by: gdk_init_check:
#. used by: gdk_init_check:
#: gdk.c:360:1
msgid "Returns: %TRUE if initialization succeeded."
msgstr ""

# #used by: gdk_init:
#. used by: gdk_init:
#: gdk.c:377:3
msgid ""
"Initializes the GDK library and connects to the windowing system. If "
"initialization fails, a warning message is output and the application "
"terminates with a call to <literal>exit(1)</literal>."
msgstr ""

# used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:402:1
msgid "@Short_description: Functions for using GDK in multi-threaded programs"
msgstr ""

# used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:403:1
msgid "@Title: Threads"
msgstr ""

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:405:2
msgid ""
"For thread safety, GDK relies on the thread primitives in GLib, and on the "
"thread-safe GLib main loop."
msgstr ""

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:408:4
msgid ""
"GLib is completely thread safe (all global data is automatically locked), "
"but individual data structure instances are not automatically locked for "
"performance reasons. So e.g. you must coordinate accesses to the same "
"#GHashTable from multiple threads."
msgstr ""

#. used by: SECTION:threads
#: gdk.c:413:4
msgid ""
"GTK+ is \"thread aware\" but not thread safe &mdash; it provides a global "
"lock controlled by gdk_threads_enter()/gdk_threads_leave() which protects "
"all use of GTK+. That is, only one thread can use GTK+ at any given time."
msgstr ""

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:418:3
msgid ""
"Unfortunately the above holds with the X11 backend only. With the Win32 "
"backend, GDK calls should not be attempted from multiple threads at all."
msgstr ""

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:422:2
msgid ""
"You must call g_thread_init() and gdk_threads_init() before executing any "
"other GTK+ or GDK functions in a threaded GTK+ program."
msgstr ""

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:425:8
msgid ""
"Idles, timeouts, and input functions from GLib, such as g_idle_add(), are "
"executed outside of the main GTK+ lock. So, if you need to call GTK+ inside "
"of such a callback, you must surround the callback with a gdk_threads_enter"
"()/gdk_threads_leave() pair or use gdk_threads_add_idle_full() which does "
"this for you. However, event dispatching from the mainloop is still executed "
"within the main GTK+ lock, so callback functions connected to event signals "
"like #GtkWidget::button-press-event, do not need thread protection."
msgstr ""

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:434:3
msgid ""
"In particular, this means, if you are writing widgets that might be used in "
"threaded programs, you <emphasis>must</emphasis> surround timeouts and idle "
"functions in this matter."
msgstr ""

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:438:2
msgid ""
"As always, you must also surround any calls to GTK+ not made within a signal "
"handler with a gdk_threads_enter()/gdk_threads_leave() pair."
msgstr ""

# used by: SECTION:general
#. used by: SECTION:general
#: gdk.c:44:1
msgid "@Short_description: Library initialization and miscellaneous functions"
msgstr ""

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:441:7
msgid ""
"Before calling gdk_threads_leave() from a thread other than your main "
"thread, you probably want to call gdk_flush() to send all pending commands "
"to the windowing system. (The reason you don't need to do this from the main "
"thread is that GDK always automatically flushes pending commands when it "
"runs out of incoming events to process and has to sleep while waiting for "
"more events.)"
msgstr ""

#. used by: SECTION:threads
#: gdk.c:449:8
msgid ""
"A minimal main program for a threaded GTK+ application looks like: "
"<informalexample> <programlisting role=\"C\"> int main (int argc, char *argv"
"[]) { GtkWidget *window;"
msgstr ""

# used by: SECTION:general
#. used by: SECTION:general
#: gdk.c:45:1
msgid "@Title: General"
msgstr ""

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:458:3
msgid ""
"g_thread_init (NULL); gdk_threads_init (<!-- -->); gdk_threads_enter (<!-- --"
">);"
msgstr ""

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:462:1
msgid "gtk_init (&argc, &argv);"
msgstr ""

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:464:2
msgid "window = create_window (<!-- -->); gtk_widget_show (window);"
msgstr ""

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:467:2
msgid "gtk_main (<!-- -->); gdk_threads_leave (<!-- -->);"
msgstr ""

# #used by: SECTION:general
#. used by: SECTION:general
#: gdk.c:47:2
msgid ""
"This section describes the GDK initialization functions and miscellaneous "
"utility functions."
msgstr ""

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:470:4 gdk.c:621:4
msgid "return 0; } </programlisting> </informalexample>"
msgstr ""

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:475:6
msgid ""
"Callbacks require a bit of attention. Callbacks from GTK+ signals are made "
"within the GTK+ lock. However callbacks from GLib (timeouts, IO callbacks, "
"and idle functions) are made outside of the GTK+ lock. So, within a signal "
"handler you do not need to call gdk_threads_enter(), but within the other "
"types of callbacks, you do."
msgstr ""

#. used by: SECTION:threads
#: gdk.c:482:23
msgid ""
"Erik Mouw contributed the following code example to illustrate how to use "
"threads within GTK+ programs. <informalexample> <programlisting role=\"C\"> /"
"<!----"
">*------------------------------------------------------------------------- "
"* Filename:      gtk-thread.c * Version:       0.99.1 * Copyright:     "
"Copyright (C) 1999, Erik Mouw * Author:        Erik Mouw &lt;J.A.K.Mouw@its."
"tudelft.nl&gt; * Description:   GTK threads example. * Created at:    Sun "
"Oct 17 21:27:09 1999 * Modified by:   Erik Mouw &lt;J.A.K.Mouw@its.tudelft."
"nl&gt; * Modified at:   Sun Oct 24 17:21:41 1999 "
"*-----------------------------------------------------------------------"
"*<!---->/ /<!---->* * Compile with: * * cc -o gtk-thread gtk-thread.c `gtk-"
"config --cflags --libs gthread` * * Thanks to Sebastian Wilhelmi and Owen "
"Taylor for pointing out some * bugs. * *<!---->/"
msgstr ""

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:506:7
msgid ""
"#include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <time.h> "
"#include <gtk/gtk.h> #include <glib.h> #include <pthread.h>"
msgstr ""

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:514:2
msgid "#define YES_IT_IS    (1) #define NO_IT_IS_NOT (0)"
msgstr ""

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:517:5
msgid "typedef struct { GtkWidget *label; int what; } yes_or_no_args;"
msgstr ""

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:523:2
msgid ""
"G_LOCK_DEFINE_STATIC (yes_or_no); static volatile int yes_or_no = YES_IT_IS;"
msgstr ""

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:526:4
msgid ""
"void destroy (GtkWidget *widget, gpointer data) { gtk_main_quit (<!-- -->); }"
msgstr ""

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:531:4
msgid ""
"void *argument_thread (void *args) { yes_or_no_args *data = (yes_or_no_args "
"*)args; gboolean say_something;"
msgstr ""

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:536:4
msgid ""
"for (;;) { /<!---->* sleep a while *<!---->/ sleep(rand(<!-- -->) / "
"(RAND_MAX / 3) + 1);"
msgstr ""

# #used by: GDK_WINDOWING_X11:
#. used by: GDK_WINDOWING_X11:
#: gdk.c:54:2
msgid ""
"The #GDK_WINDOWING_X11 macro is defined if the X11 backend is supported."
msgstr ""

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:541:2
msgid "/<!---->* lock the yes_or_no_variable *<!---->/ G_LOCK(yes_or_no);"
msgstr ""

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:544:2
msgid ""
"/<!---->* do we have to say something? *<!---->/ say_something = (yes_or_no !"
"= data->what);"
msgstr ""

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:547:5
msgid ""
"if(say_something) { /<!---->* set the variable *<!---->/ yes_or_no = data-"
">what; }"
msgstr ""

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:553:2
msgid "/<!---->* Unlock the yes_or_no variable *<!---->/ G_UNLOCK (yes_or_no);"
msgstr ""

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:556:4
msgid ""
"if (say_something) { /<!---->* get GTK thread lock *<!---->/ "
"gdk_threads_enter (<!-- -->);"
msgstr ""

#. used by: SECTION:threads
#: gdk.c:561:5
msgid ""
"/<!---->* set label text *<!---->/ if(data->what == YES_IT_IS) "
"gtk_label_set_text (GTK_LABEL (data->label), \"O yes, it is!\"); else "
"gtk_label_set_text (GTK_LABEL (data->label), \"O no, it isn't!\");"
msgstr ""

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:567:4
msgid ""
"/<!---->* release GTK thread lock *<!---->/ gdk_threads_leave (<!-- -->); } }"
msgstr ""

# #used by: GDK_WINDOWING_X11:
#. used by: GDK_WINDOWING_X11:
#: gdk.c:57:1
msgid "Use this macro to guard code that is specific to the X11 backend."
msgstr ""

# #used by: gdk_threads_add_timeout_full:
#. used by: SECTION:threads
#: gdk.c:572:2
#, fuzzy
msgid "return NULL; }"
msgstr "return FALSE; }"

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:575:6
msgid ""
"int main (int argc, char *argv[]) { GtkWidget *window; GtkWidget *label; "
"yes_or_no_args yes_args, no_args; pthread_t no_tid, yes_tid;"
msgstr ""

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:582:4
msgid ""
"/<!---->* init threads *<!---->/ g_thread_init (NULL); gdk_threads_init "
"(<!-- -->); gdk_threads_enter (<!-- -->);"
msgstr ""

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:587:2
msgid "/<!---->* init gtk *<!---->/ gtk_init(&argc, &argv);"
msgstr ""

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:590:2
msgid ""
"/<!---->* init random number generator *<!---->/ srand ((unsigned int) time "
"(NULL));"
msgstr ""

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:593:2
msgid ""
"/<!---->* create a window *<!---->/ window = gtk_window_new "
"(GTK_WINDOW_TOPLEVEL);"
msgstr ""

#. used by: SECTION:threads
#: gdk.c:596:1
msgid "g_signal_connect (window, \"destroy\", G_CALLBACK (destroy), NULL);"
msgstr ""

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:598:1
msgid "gtk_container_set_border_width (GTK_CONTAINER (window), 10);"
msgstr ""

#. used by: SECTION:threads
#: gdk.c:600:3
msgid ""
"/<!---->* create a label *<!---->/ label = gtk_label_new (\"And now for "
"something completely different ...\"); gtk_container_add (GTK_CONTAINER "
"(window), label);"
msgstr ""

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:604:3
msgid ""
"/<!---->* show everything *<!---->/ gtk_widget_show (label); gtk_widget_show "
"(window);"
msgstr ""

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:608:4
msgid ""
"/<!---->* create the threads *<!---->/ yes_args.label = label; yes_args.what "
"= YES_IT_IS; pthread_create (&yes_tid, NULL, argument_thread, &yes_args);"
msgstr ""

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:613:3
msgid ""
"no_args.label = label; no_args.what = NO_IT_IS_NOT; pthread_create (&no_tid, "
"NULL, argument_thread, &no_args);"
msgstr ""

# #used by: SECTION:threads
#. used by: SECTION:threads
#: gdk.c:617:3
msgid ""
"/<!---->* enter the GTK main loop *<!---->/ gtk_main (<!-- -->); "
"gdk_threads_leave (<!-- -->);"
msgstr ""

# #used by: GDK_WINDOWING_WIN32:
#. used by: GDK_WINDOWING_WIN32:
#: gdk.c:63:2
msgid ""
"The #GDK_WINDOWING_WIN32 macro is defined if the Win32 backend is supported."
msgstr ""

# #used by: gdk_threads_enter:
#. used by: gdk_threads_enter:
#: gdk.c:631:4
msgid ""
"This macro marks the beginning of a critical section in which GDK and GTK+ "
"functions can be called safely and without causing race conditions.  Only "
"one thread at a time can be in such a critial section."
msgstr ""

# #used by: gdk_threads_leave:
#. used by: gdk_threads_leave:
#: gdk.c:646:1
msgid "Leaves a critical region begun with gdk_threads_enter()."
msgstr ""

# #used by: GDK_WINDOWING_WIN32:
#. used by: GDK_WINDOWING_WIN32:
#: gdk.c:66:1
msgid "Use this macro to guard code that is specific to the Win32 backend."
msgstr ""

# #used by: gdk_threads_init:
#. used by: gdk_threads_init:
#: gdk.c:672:3
msgid ""
"Initializes GDK so that it can be used from multiple threads in conjunction "
"with gdk_threads_enter() and gdk_threads_leave(). g_thread_init() must be "
"called previous to this function."
msgstr ""
"初始化GDK，以便它可以在多线程中与 gdk_threads_enter() 和gdk_threads_leave() "
"结合。 在使用此函数前必须先调用 g_thread_init()。"

# #used by: gdk_threads_init:
#. used by: gdk_threads_init:
#: gdk.c:676:2
msgid ""
"This call must be made before any use of the main loop from GTK+; to be "
"safe, call it before gtk_init()."
msgstr ""
"这个函数必须在任何使用 GTK+ 的主事件循环之前调用，在 gtk_init() 之前调用是安"
"全的。"

# used by: gdk_threads_set_lock_functions:
#. used by: gdk_threads_set_lock_functions: (skip)
#: gdk.c:694:1
msgid "@enter_fn:   function called to guard GDK"
msgstr "@enter_fn:  调用函数来守护GDK"

# used by: gdk_threads_set_lock_functions:
#. used by: gdk_threads_set_lock_functions: (skip)
#: gdk.c:695:1
msgid "@leave_fn: function called to release the guard"
msgstr "@leave_fn: 调用函数来释放守护"

# #used by: gdk_threads_set_lock_functions:
#. used by: gdk_threads_set_lock_functions: (skip)
#: gdk.c:697:7
msgid ""
"Allows the application to replace the standard method that GDK uses to "
"protect its data structures. Normally, GDK creates a single #GMutex that is "
"locked by gdk_threads_enter(), and released by gdk_threads_leave(); using "
"this function an application provides, instead, a function @enter_fn that is "
"called by gdk_threads_enter() and a function @leave_fn that is called by "
"gdk_threads_leave()."
msgstr ""

# #used by: gdk_threads_set_lock_functions:
#. used by: gdk_threads_set_lock_functions: (skip)
#: gdk.c:705:3
msgid ""
"The functions must provide at least same locking functionality as the "
"default implementation, but can also do extra application specific "
"processing."
msgstr ""

# #used by: gdk_threads_set_lock_functions:
#. used by: gdk_threads_set_lock_functions: (skip)
#: gdk.c:709:4
msgid ""
"As an example, consider an application that has its own recursive lock that "
"when held, holds the GTK+ lock as well. When GTK+ unlocks the GTK+ lock when "
"entering a recursive main loop, the application must temporarily release its "
"lock as well."
msgstr ""

# #used by: gdk_threads_set_lock_functions:
#. used by: gdk_threads_set_lock_functions: (skip)
#: gdk.c:714:1
msgid "Most threaded GTK+ apps won't need to use this method."
msgstr "大多数多线程GTK+的应用程序不需要使用此方法。"

# #used by: gdk_threads_set_lock_functions:
#. used by: gdk_threads_set_lock_functions: (skip)
#: gdk.c:716:2
msgid ""
"This method must be called before gdk_threads_init(), and cannot be called "
"multiple times."
msgstr "此方法必须在调用 gdk_threads_init() 之前，并且不能多次调用。"

# #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_set_lock_functions:
# #-#-#-#-#  gdkdraw.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkdraw.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_drawable_copy_to_image:
# #-#-#-#-#  gdkdraw.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: _gdk_drawable_get_scratch_gc:
# #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_set_double_click_distance:
#. #-#-#-#-#  gdkcursor.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_cursor_new_from_pixbuf:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_flush:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_default_group:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_supports_cursor_alpha:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_supports_cursor_color:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_default_cursor_size:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_maximal_cursor_size:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_set_double_click_distance:
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_threads_set_lock_functions: (skip)
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_accept_focus:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_keep_above:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_keep_below:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_group:
#: gdk.c:719:1 gdkcursor.c:344:1 gdkdisplay.c:1463:1 gdkdisplay.c:1484:1
#: gdkdisplay.c:1750:1 gdkdisplay.c:1770:1 gdkdisplay.c:1788:1
#: gdkdisplay.c:1812:1 gdkevents.c:1668:1 gdkwindow.c:10043:1
#: gdkwindow.c:10299:1 gdkwindow.c:10323:1 gdkwindow.c:10339:1
msgid "Since: 2.4"
msgstr "Since: 2.4"

# #used by: GDK_WINDOWING_QUARTZ:
#. used by: GDK_WINDOWING_QUARTZ:
#: gdk.c:72:2
msgid ""
"The #GDK_WINDOWING_QUARTZ macro is defined if the Quartz backend is "
"supported."
msgstr ""

# #used by: GDK_WINDOWING_QUARTZ:
#. used by: GDK_WINDOWING_QUARTZ:
#: gdk.c:75:1
msgid "Use this macro to guard code that is specific to the Quartz backend."
msgstr ""

# used by: gdk_threads_add_idle_full:
#. used by: gdk_threads_add_idle_full:
#: gdk.c:762:2
msgid ""
"@priority: the priority of the idle source. Typically this will be in the "
"range between #G_PRIORITY_DEFAULT_IDLE and #G_PRIORITY_HIGH_IDLE"
msgstr ""

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_seconds_full:
#. used by: gdk_threads_add_idle_full:
#: gdk.c:766:1
#, fuzzy
msgid ""
"@notify: (allow-none):   function to call when the idle is removed, or %NULL"
msgstr "@notify:  超时被删除时调用的函数，或%NULL。"

# #used by: gdk_threads_add_idle_full:
#. used by: gdk_threads_add_idle_full:
#: gdk.c:768:3
msgid ""
"Adds a function to be called whenever there are no higher priority events "
"pending.  If the function returns %FALSE it is automatically removed from "
"the list of event sources and will not be called again."
msgstr ""

# #used by: gdk_threads_add_idle_full:
#. used by: gdk_threads_add_idle_full:
#: gdk.c:772:5
msgid ""
"This variant of g_idle_add_full() calls @function with the GDK lock held. It "
"can be thought of a MT-safe version for GTK+ widgets for the following use "
"case, where you have to worry about idle_callback() running in thread A and "
"accessing @self after it has been finalized in thread B:"
msgstr ""

# #used by: gdk_threads_add_idle_full:
#. used by: gdk_threads_add_idle_full:
#: gdk.c:778:5
msgid ""
"|[ static gboolean idle_callback (gpointer data) { /&ast; gdk_threads_enter"
"(); would be needed for g_idle_add() &ast;/"
msgstr ""
"|[ static gboolean idle_callback (gpointer data) { /&ast; gdk_threads_enter"
"(); would be needed for g_idle_add() &ast;/"

# #used by: gdk_threads_add_idle_full:
#. used by: gdk_threads_add_idle_full:
#: gdk.c:784:2
msgid "SomeWidget *self = data; /&ast; do stuff with self &ast;/"
msgstr "SomeWidget *self = data; /&ast; 你在这里做点啥吧 &ast;/"

# #used by: gdk_threads_add_idle_full:
#. used by: gdk_threads_add_idle_full:
#: gdk.c:787:1
msgid "self->idle_id = 0;"
msgstr "self->idle_id = 0;"

# #used by: gdk_threads_add_idle_full:
#. used by: gdk_threads_add_idle_full:
#: gdk.c:789:3
msgid ""
"/&ast; gdk_threads_leave(); would be needed for g_idle_add() &ast;/ return "
"FALSE; }"
msgstr ""
"/&ast; gdk_threads_leave(); would be needed for g_idle_add() &ast;/ return "
"FALSE; }"

# #used by: gdk_threads_add_idle_full:
#. used by: gdk_threads_add_idle_full:
#: gdk.c:793:6
msgid ""
"static void some_widget_do_stuff_later (SomeWidget *self) { self->idle_id = "
"gdk_threads_add_idle (idle_callback, self) /&ast; using g_idle_add() here "
"would require thread protection in the callback &ast;/ }"
msgstr ""

# #used by: gdk_threads_add_idle_full:
#. used by: gdk_threads_add_idle_full:
#: gdk.c:800:9
msgid ""
"static void some_widget_finalize (GObject *object) { SomeWidget *self = "
"SOME_WIDGET (object); if (self->idle_id) g_source_remove (self->idle_id); "
"G_OBJECT_CLASS (parent_class)->finalize (object); } ]|"
msgstr ""

# #used by: gdk_threads_add_idle:
#. used by: gdk_threads_add_idle_full:
#: gdk.c:812:2
#, fuzzy
msgid "Since: 2.12 Rename to: gdk_threads_add_idle"
msgstr "见 gdk_threads_add_idle_full()。"

# #used by: gdk_threads_add_idle:
#. used by: gdk_threads_add_idle: (skip)
#: gdk.c:841:2
msgid ""
"A wrapper for the common usage of gdk_threads_add_idle_full() assigning the "
"default priority, #G_PRIORITY_DEFAULT_IDLE."
msgstr ""

# #used by: gdk_threads_add_idle:
#. used by: gdk_threads_add_idle: (skip)
#: gdk.c:844:1
msgid "See gdk_threads_add_idle_full()."
msgstr "见 gdk_threads_add_idle_full()。"

# #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout:
# #-#-#-#-#  gdkcolor.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_color_to_string:
# #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_event_request_motions:
# #-#-#-#-#  gdkpango.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_pango_attr_emboss_color_new:
# #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_window_set_composited:
#. #-#-#-#-#  gdkcolor.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_color_to_string:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_supports_composite:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_notify_startup_complete_with_id:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_event_request_motions:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_have_bidi_layouts:
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_threads_add_idle: (skip)
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_threads_add_timeout: (skip)
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_composited:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_beep:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_startup_id:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_opacity:
#: gdk.c:848:1 gdk.c:955:1 gdkcolor.c:179:1 gdkdisplay.c:1639:1
#: gdkdisplay.c:1902:1 gdkevents.c:1243:1 gdkkeys.c:325:1 gdkwindow.c:10555:1
#: gdkwindow.c:7403:1 gdkwindow.c:7953:1 gdkwindow.c:9944:1
msgid "Since: 2.12"
msgstr "Since: 2.12"

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_seconds_full:
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_threads_add_timeout_full:
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_threads_add_timeout_seconds_full:
#: gdk.c:861:2 gdk.c:969:2
msgid ""
"@priority: the priority of the timeout source. Typically this will be in the "
"range between #G_PRIORITY_DEFAULT_IDLE and #G_PRIORITY_HIGH_IDLE."
msgstr ""

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout:
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_threads_add_timeout_full:
#. #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_threads_add_timeout: (skip)
#: gdk.c:863:2 gdk.c:943:2
msgid ""
"@interval: the time between calls to the function, in milliseconds "
"(1/1000ths of a second)"
msgstr ""

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_seconds_full:
#. used by: gdk_threads_add_timeout_full:
#: gdk.c:867:1
#, fuzzy
msgid ""
"@notify: (allow-none):   function to call when the timeout is removed, or "
"%NULL"
msgstr "@notify:  超时被删除时调用的函数，或%NULL。"

# #used by: gdk_threads_add_timeout_full:
#. used by: gdk_threads_add_timeout_full:
#: gdk.c:869:6
msgid ""
"Sets a function to be called at regular intervals holding the GDK lock, with "
"the given priority.  The function is called repeatedly until it returns "
"%FALSE, at which point the timeout is automatically destroyed and the "
"function will not be called again.  The @notify function is called when the "
"timeout is destroyed.  The first call to the function will be at the end of "
"the first @interval."
msgstr ""

# #used by: gdk_threads_add_timeout_full:
#. used by: gdk_threads_add_timeout_full:
#: gdk.c:876:5
msgid ""
"Note that timeout functions may be delayed, due to the processing of other "
"event sources. Thus they should not be relied on for precise timing. After "
"each call to the timeout function, the time of the next timeout is "
"recalculated based on the current time and the given interval (it does not "
"try to 'catch up' time lost in delays)."
msgstr ""

# #used by: gdk_threads_add_timeout_full:
#. used by: gdk_threads_add_timeout_full:
#: gdk.c:882:2
msgid ""
"This variant of g_timeout_add_full() can be thought of a MT-safe version for "
"GTK+ widgets for the following use case:"
msgstr ""

# #used by: gdk_threads_add_timeout_full:
#. used by: gdk_threads_add_timeout_full:
#: gdk.c:885:4
msgid ""
"|[ static gboolean timeout_callback (gpointer data) { SomeWidget *self = "
"data;"
msgstr ""
"|[ static gboolean timeout_callback (gpointer data) { SomeWidget *self = "
"data;"

# #used by: gdk_threads_add_timeout_full:
#. used by: gdk_threads_add_timeout_full:
#: gdk.c:890:1
msgid "/&ast; do stuff with self &ast;/"
msgstr "/&ast; 在这里做点啥事吧 &ast;/"

# #used by: gdk_threads_add_timeout_full:
#. used by: gdk_threads_add_timeout_full:
#: gdk.c:892:1
msgid "self->timeout_id = 0;"
msgstr "self->timeout_id = 0;"

# #used by: gdk_threads_add_timeout_full:
#. used by: gdk_threads_add_timeout_full:
#: gdk.c:894:2
msgid "return FALSE; }"
msgstr "return FALSE; }"

# #used by: gdk_threads_add_timeout_full:
#. used by: gdk_threads_add_timeout_full:
#: gdk.c:897:4
msgid ""
"static void some_widget_do_stuff_later (SomeWidget *self) { self->timeout_id "
"= g_timeout_add (timeout_callback, self) }"
msgstr ""
"static void some_widget_do_stuff_later (SomeWidget *self) { self->timeout_id "
"= g_timeout_add (timeout_callback, self) }"

# #used by: gdk_threads_add_timeout_full:
#. used by: gdk_threads_add_timeout_full:
#: gdk.c:902:3
msgid ""
"static void some_widget_finalize (GObject *object) { SomeWidget *self = "
"SOME_WIDGET (object);"
msgstr ""
"static void some_widget_finalize (GObject *object) { SomeWidget *self = "
"SOME_WIDGET (object);"

# #used by: gdk_threads_add_timeout_full:
#. used by: gdk_threads_add_timeout_full:
#: gdk.c:906:2
msgid "if (self->timeout_id) g_source_remove (self->timeout_id);"
msgstr "if (self->timeout_id) g_source_remove (self->timeout_id);"

# #used by: gdk_threads_add_timeout_full:
#. used by: gdk_threads_add_timeout_full:
#: gdk.c:909:3
msgid "G_OBJECT_CLASS (parent_class)->finalize (object); } ]|"
msgstr "G_OBJECT_CLASS (parent_class)->finalize (object); } ]|"

# #used by: gdk_threads_add_timeout:
#. used by: gdk_threads_add_timeout_full:
#: gdk.c:915:2
#, fuzzy
msgid "Since: 2.12 Rename to: gdk_threads_add_timeout"
msgstr "见 gdk_threads_add_timeout_full()。"

# #used by: gdk_threads_add_timeout:
#. used by: gdk_threads_add_timeout: (skip)
#: gdk.c:948:2
msgid ""
"A wrapper for the common usage of gdk_threads_add_timeout_full() assigning "
"the default priority, #G_PRIORITY_DEFAULT."
msgstr ""

# #used by: gdk_threads_add_timeout:
#. used by: gdk_threads_add_timeout: (skip)
#: gdk.c:951:1
msgid "See gdk_threads_add_timeout_full()."
msgstr "见 gdk_threads_add_timeout_full()。"

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_seconds_full:
#. used by: gdk_threads_add_timeout_seconds_full:
#: gdk.c:974:1
#, fuzzy
msgid ""
"@notify: (allow-none): function to call when the timeout is removed, or %NULL"
msgstr "@notify:  超时被删除时调用的函数，或%NULL。"

# #used by: gdk_threads_add_timeout_seconds_full:
#. used by: gdk_threads_add_timeout_seconds_full:
#: gdk.c:976:3
msgid ""
"A variant of gdk_threads_add_timeout_full() with second-granularity. See "
"g_timeout_add_seconds_full() for a discussion of why it is a good idea to "
"use this function if you don't need finer granularity."
msgstr ""

# #used by: gdk_threads_add_timeout:
#. used by: gdk_threads_add_timeout_seconds_full:
#: gdk.c:982:2
#, fuzzy
msgid "Since: 2.14 Rename to: gdk_threads_add_timeout_seconds"
msgstr "见 gdk_threads_add_timeout_full()。"

# #-#-#-#-#  gdkapplaunchcontext.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_app_launch_context_set_display:
# #-#-#-#-#  gdkapplaunchcontext.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_app_launch_context_set_screen:
# #-#-#-#-#  gdkapplaunchcontext.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_app_launch_context_set_desktop:
# #-#-#-#-#  gdkapplaunchcontext.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_app_launch_context_set_timestamp:
# #-#-#-#-#  gdkapplaunchcontext.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_app_launch_context_set_icon:
# #-#-#-#-#  gdkapplaunchcontext.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_app_launch_context_set_icon_name:
#. #-#-#-#-#  gdkapplaunchcontext.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_app_launch_context_set_display:
#. #-#-#-#-#  gdkapplaunchcontext.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_app_launch_context_set_screen:
#. #-#-#-#-#  gdkapplaunchcontext.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_app_launch_context_set_desktop:
#. #-#-#-#-#  gdkapplaunchcontext.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_app_launch_context_set_timestamp:
#. #-#-#-#-#  gdkapplaunchcontext.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_app_launch_context_set_icon:
#. #-#-#-#-#  gdkapplaunchcontext.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_app_launch_context_set_icon_name:
#: gdkapplaunchcontext.c:180:1 gdkapplaunchcontext.c:202:1
#: gdkapplaunchcontext.c:235:1 gdkapplaunchcontext.c:261:1
#: gdkapplaunchcontext.c:285:1 gdkapplaunchcontext.c:317:1
msgid "@context: a #GdkAppLaunchContext"
msgstr ""

# #-#-#-#-#  gdkapplaunchcontext.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_app_launch_context_set_display:
# #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_display_close:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_display_get_event:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_display_peek_event:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_display_put_event:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_display_get_core_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_display_get_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_display_get_window_at_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_display_set_pointer_hooks:
# #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_display_manager_set_default_display:
# #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: _gdk_event_queue_find_first:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: _gdk_event_queue_prepend:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: _gdk_event_queue_append:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: _gdk_event_queue_remove_link:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: _gdk_event_unqueue:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_display_set_double_click_time:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_display_set_double_click_distance:
#. #-#-#-#-#  gdkapplaunchcontext.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_app_launch_context_set_display:
#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_manager_set_default_display:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_close:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_is_closed:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_event:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_peek_event:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_put_event:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_pointer:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_window_at_pointer:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_pointer_is_grabbed:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_device_is_grabbed:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_name:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_n_screens:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_screen:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_default_screen:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_beep:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_sync:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_flush:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_default_group:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_supports_selection_notification:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_request_selection_notification:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_supports_clipboard_persistence
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_supports_shapes:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_supports_input_shapes:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_supports_composite:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_list_devices:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_app_launch_context:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_has_pending:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_supports_cursor_alpha:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_supports_cursor_color:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_default_cursor_size:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_maximal_cursor_size:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_warp_pointer:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_notify_startup_complete:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: _gdk_event_queue_find_first:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: _gdk_event_queue_prepend:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: _gdk_event_queue_append:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: _gdk_event_queue_insert_after:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: _gdk_event_queue_insert_after:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: _gdk_event_queue_remove_link:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: _gdk_event_unqueue:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_set_double_click_time:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_set_double_click_distance:
#. #-#-#-#-#  gdkselection.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_selection_owner_get_for_display:
#: gdkapplaunchcontext.c:181:1 gdkdisplay.c:1249:1 gdkdisplay.c:1285:1
#: gdkdisplay.c:1330:1 gdkdisplay.c:1355:1 gdkdisplay.c:1373:1
#: gdkdisplay.c:1393:1 gdkdisplay.c:1411:1 gdkdisplay.c:1427:1
#: gdkdisplay.c:1451:1 gdkdisplay.c:1475:1 gdkdisplay.c:1496:1
#: gdkdisplay.c:1516:1 gdkdisplay.c:1540:1 gdkdisplay.c:1591:1
#: gdkdisplay.c:1610:1 gdkdisplay.c:1629:1 gdkdisplay.c:1651:1
#: gdkdisplay.c:1685:1 gdkdisplay.c:1723:1 gdkdisplay.c:1742:1
#: gdkdisplay.c:1762:1 gdkdisplay.c:1782:1 gdkdisplay.c:1806:1
#: gdkdisplay.c:1828:1 gdkdisplay.c:1916:1 gdkdisplay.c:252:1
#: gdkdisplay.c:277:1 gdkdisplay.c:295:1 gdkdisplay.c:316:1 gdkdisplay.c:346:1
#: gdkdisplay.c:564:1 gdkdisplay.c:619:1 gdkdisplaymanager.c:313:1
#: gdkevents.c:106:1 gdkevents.c:125:1 gdkevents.c:148:1 gdkevents.c:1624:1
#: gdkevents.c:1659:1 gdkevents.c:176:1 gdkevents.c:205:1 gdkevents.c:227:1
#: gdkevents.c:80:1 gdkselection.c:175:1
msgid "@display: a #GdkDisplay"
msgstr ""

# #used by: gdk_app_launch_context_set_display:
#. used by: gdk_app_launch_context_set_display:
#: gdkapplaunchcontext.c:183:2
msgid ""
"Sets the display on which applications will be launched when using this "
"context. See also gdk_app_launch_context_set_screen()."
msgstr ""

# #-#-#-#-#  gdkapplaunchcontext.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_app_launch_context_set_display:
# #-#-#-#-#  gdkapplaunchcontext.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_app_launch_context_new:
#. #-#-#-#-#  gdkapplaunchcontext.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_app_launch_context_set_display:
#. #-#-#-#-#  gdkapplaunchcontext.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_app_launch_context_new:
#: gdkapplaunchcontext.c:188:1 gdkapplaunchcontext.c:350:1
msgid "Deprecated: 3.0: Use gdk_display_get_app_launch_context() instead"
msgstr ""

# #-#-#-#-#  gdkapplaunchcontext.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_app_launch_context_set_screen:
# #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_event_set_screen:
# #-#-#-#-#  gdkimage.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: _gdk_image_get_scratch:
# #-#-#-#-#  gdkpango.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkpango.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_pango_renderer_new:
# #-#-#-#-#  gdkpango.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_pango_renderer_get_default:
# #-#-#-#-#  gdkrgb.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_screen_get_rgb_visual:
# #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_screen_set_font_options:
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_screen_get_font_options:
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_screen_set_resolution:
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_screen_get_resolution:
#. #-#-#-#-#  gdkapplaunchcontext.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_app_launch_context_set_screen:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_event_set_screen:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_set_font_options:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_font_options:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_set_resolution:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_resolution:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_display:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_width:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_height:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_width_mm:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_height_mm:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_number:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_root_window:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_n_monitors:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_monitor_width_mm:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_monitor_height_mm:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_monitor_plug_name:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_monitor_geometry:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_rgba_visual:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_is_composited:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_make_display_name:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_active_window:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_window_stack:
#: gdkapplaunchcontext.c:203:1 gdkevents.c:1395:1 gdkscreen.c:392:1
#: gdkscreen.c:426:1 gdkscreen.c:445:1 gdkscreen.c:475:1 gdkscreen.c:539:1
#: gdkscreen.c:556:1 gdkscreen.c:572:1 gdkscreen.c:588:1 gdkscreen.c:605:1
#: gdkscreen.c:622:1 gdkscreen.c:639:1 gdkscreen.c:655:1 gdkscreen.c:694:1
#: gdkscreen.c:712:1 gdkscreen.c:730:1 gdkscreen.c:751:1 gdkscreen.c:813:1
#: gdkscreen.c:842:1 gdkscreen.c:864:1 gdkscreen.c:881:1 gdkscreen.c:910:1
msgid "@screen: a #GdkScreen"
msgstr ""

# #used by: gdk_app_launch_context_set_screen:
#. used by: gdk_app_launch_context_set_screen:
#: gdkapplaunchcontext.c:205:2
msgid ""
"Sets the screen on which applications will be launched when using this "
"context. See also gdk_app_launch_context_set_display()."
msgstr ""

# #used by: gdk_app_launch_context_set_screen:
#. used by: gdk_app_launch_context_set_screen:
#: gdkapplaunchcontext.c:208:3
msgid ""
"If both @screen and @display are set, the @screen takes priority. If neither "
"@screen or @display are set, the default screen and display are used."
msgstr ""

# used by: gdk_app_launch_context_set_desktop:
#. used by: gdk_app_launch_context_set_desktop:
#: gdkapplaunchcontext.c:236:1
msgid "@desktop: the number of a workspace, or -1"
msgstr ""

#. used by: gdk_app_launch_context_set_desktop:
#: gdkapplaunchcontext.c:238:5
msgid ""
"Sets the workspace on which applications will be launched when using this "
"context when running under a window manager that supports multiple "
"workspaces, as described in the <ulink url=\"http://www.freedesktop.org/"
"Standards/wm-spec\">Extended Window Manager Hints</ulink>."
msgstr ""

# #used by: gdk_app_launch_context_set_desktop:
#. used by: gdk_app_launch_context_set_desktop:
#: gdkapplaunchcontext.c:244:3
msgid ""
"When the workspace is not specified or @desktop is set to -1, it is up to "
"the window manager to pick one, typically it will be the current workspace."
msgstr ""

# used by: gdk_app_launch_context_set_timestamp:
#. used by: gdk_app_launch_context_set_timestamp:
#: gdkapplaunchcontext.c:262:1
msgid "@timestamp: a timestamp"
msgstr ""

# #used by: gdk_app_launch_context_set_timestamp:
#. used by: gdk_app_launch_context_set_timestamp:
#: gdkapplaunchcontext.c:264:2
msgid ""
"Sets the timestamp of @context. The timestamp should ideally be taken from "
"the event that triggered the launch."
msgstr ""

# #used by: gdk_app_launch_context_set_timestamp:
#. used by: gdk_app_launch_context_set_timestamp:
#: gdkapplaunchcontext.c:267:4
msgid ""
"Window managers can use this information to avoid moving the focus to the "
"newly launched application when the user is busy typing in another window. "
"This is also known as 'focus stealing prevention'."
msgstr ""

# used by: gdk_app_launch_context_set_icon:
#. used by: gdk_app_launch_context_set_icon:
#: gdkapplaunchcontext.c:286:1
msgid "@icon: (allow-none): a #GIcon, or %NULL"
msgstr ""

# #used by: gdk_app_launch_context_set_icon:
#. used by: gdk_app_launch_context_set_icon:
#: gdkapplaunchcontext.c:288:2
msgid "Sets the icon for applications that are launched with this context."
msgstr ""

# #used by: gdk_app_launch_context_set_icon:
#. used by: gdk_app_launch_context_set_icon:
#: gdkapplaunchcontext.c:291:2
msgid ""
"Window Managers can use this information when displaying startup "
"notification."
msgstr ""

# #used by: gdk_app_launch_context_set_icon:
#. used by: gdk_app_launch_context_set_icon:
#: gdkapplaunchcontext.c:294:1
msgid "See also gdk_app_launch_context_set_icon_name()."
msgstr ""

# used by: gdk_app_launch_context_set_icon_name:
#. used by: gdk_app_launch_context_set_icon_name:
#: gdkapplaunchcontext.c:318:1
msgid "@icon_name: (allow-none): an icon name, or %NULL"
msgstr ""

# used by: SECTION:gdkapplaunchcontext
#. used by: SECTION:gdkapplaunchcontext
#: gdkapplaunchcontext.c:32:1
msgid "@Short_description: Startup notification for applications"
msgstr ""

# #used by: gdk_app_launch_context_set_icon_name:
#. used by: gdk_app_launch_context_set_icon_name:
#: gdkapplaunchcontext.c:320:3
msgid ""
"Sets the icon for applications that are launched with this context. The "
"@icon_name will be interpreted in the same way as the Icon field in desktop "
"files. See also gdk_app_launch_context_set_icon()."
msgstr ""

# #used by: gdk_app_launch_context_set_icon_name:
#. used by: gdk_app_launch_context_set_icon_name:
#: gdkapplaunchcontext.c:324:4
msgid ""
"If both @icon and @icon_name are set, the @icon_name takes priority. If "
"neither @icon or @icon_name is set, the icon is taken from either the file "
"that is passed to launched application or from the #GAppInfo for the "
"launched application itself."
msgstr ""

# used by: SECTION:gdkapplaunchcontext
#. used by: SECTION:gdkapplaunchcontext
#: gdkapplaunchcontext.c:33:1
msgid "@Title: Application launching"
msgstr ""

# #used by: gdk_app_launch_context_new:
#. used by: gdk_app_launch_context_new:
#: gdkapplaunchcontext.c:344:1
msgid "Creates a new #GdkAppLaunchContext."
msgstr ""

# #used by: gdk_app_launch_context_new:
#. used by: gdk_app_launch_context_new:
#: gdkapplaunchcontext.c:346:1
msgid "Returns: a new #GdkAppLaunchContext"
msgstr ""

# #used by: SECTION:gdkapplaunchcontext
#. used by: SECTION:gdkapplaunchcontext
#: gdkapplaunchcontext.c:35:6
msgid ""
"GdkAppLaunchContext is an implementation of #GAppLaunchContext that handles "
"launching an application in a graphical context. It provides startup "
"notification and allows to launch applications on a specific screen or "
"workspace. <example> <title>Launching an application</title>"
msgstr ""

# #-#-#-#-#  gdkapplaunchcontext.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: SECTION:gdkapplaunchcontext
# #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: SECTION:gdkdisplaymanager
# #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_error_trap_push:
#. #-#-#-#-#  gdkapplaunchcontext.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: SECTION:gdkapplaunchcontext
#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: SECTION:gdkdisplaymanager
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_error_trap_push:
#: gdkapplaunchcontext.c:54:1 gdkdisplay.c:2035:1 gdkdisplaymanager.c:95:1
msgid "</example>"
msgstr ""

# #-#-#-#-#  gdkcairo.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_cairo_get_clip_rectangle:
# #-#-#-#-#  gdkcairo.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_cairo_set_source_color:
# #-#-#-#-#  gdkcairo.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_cairo_set_source_rgba:
# #-#-#-#-#  gdkcairo.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_cairo_rectangle:
# #-#-#-#-#  gdkcairo.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_cairo_region:
# #-#-#-#-#  gdkcairo.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_cairo_set_source_pixbuf:
# #-#-#-#-#  gdkcairo.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_cairo_set_source_window:
#. #-#-#-#-#  gdkcairo.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_cairo_get_clip_rectangle:
#. #-#-#-#-#  gdkcairo.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_cairo_set_source_color:
#. #-#-#-#-#  gdkcairo.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_cairo_set_source_rgba:
#. #-#-#-#-#  gdkcairo.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_cairo_rectangle:
#. #-#-#-#-#  gdkcairo.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_cairo_region:
#. #-#-#-#-#  gdkcairo.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_cairo_set_source_pixbuf:
#. #-#-#-#-#  gdkcairo.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_cairo_set_source_window:
#: gdkcairo.c:108:1 gdkcairo.c:131:1 gdkcairo.c:152:1 gdkcairo.c:180:1
#: gdkcairo.c:286:1 gdkcairo.c:47:1 gdkcairo.c:86:1
msgid "@cr: a cairo context"
msgstr ""

# #-#-#-#-#  gdkcairo.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_cairo_set_source_rgba:
# #-#-#-#-#  gdkrgba.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkrgba.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_rgba_copy:
# #-#-#-#-#  gdkrgba.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_rgba_free:
# #-#-#-#-#  gdkrgba.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_rgba_to_string:
#. #-#-#-#-#  gdkcairo.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_cairo_set_source_rgba:
#. #-#-#-#-#  gdkrgba.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkrgba.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_rgba_copy:
#. #-#-#-#-#  gdkrgba.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_rgba_free:
#. #-#-#-#-#  gdkrgba.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_rgba_to_string:
#: gdkcairo.c:109:1 gdkrgba.c:327:1 gdkrgba.c:61:1 gdkrgba.c:87:1
msgid "@rgba: a #GdkRGBA"
msgstr ""

# #used by: gdk_cairo_set_source_rgba:
#. used by: gdk_cairo_set_source_rgba:
#: gdkcairo.c:111:1
msgid "Sets the specified #GdkRGBA as the source color of @cr."
msgstr ""

# #-#-#-#-#  gdkcairo.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_cairo_rectangle:
# #-#-#-#-#  gdkregion-generic.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_region_rectangle:
#. used by: gdk_cairo_rectangle:
#: gdkcairo.c:132:1
msgid "@rectangle: a #GdkRectangle"
msgstr ""

# #used by: gdk_cairo_rectangle:
#. used by: gdk_cairo_rectangle:
#: gdkcairo.c:134:1
msgid "Adds the given rectangle to the current path of @cr."
msgstr ""

# #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_parse_args:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_get_display_arg_name:
# #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkDisplay::closed:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_close:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_event:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_peek_event:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_put_event:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_core_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_window_at_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_set_pointer_hooks:
# #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkDisplayManager::display-opened:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_get:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_get_default_display:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_default:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_default:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_set_default_display:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_list_displays:
# #-#-#-#-#  gdkdraw.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkdraw.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_drawable_get_screen:
# #-#-#-#-#  gdkdraw.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_drawable_get_display:
# #-#-#-#-#  gdkdraw.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_draw_pixbuf:
# #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_event_new:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_event_set_screen:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_event_get_screen:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_set_double_click_time:
# #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkKeymap::keys-changed:
# #-#-#-#-#  gdkpango.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_pango_context_get_for_screen:
# #-#-#-#-#  gdkrgb.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkrgb.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_rgb_colormap:
# #-#-#-#-#  gdkrgb.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_rgb_visual:
# #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkScreen::size-changed:
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_monitor_at_point:
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_monitor_at_window:
# #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_toplevel_windows:
#. #-#-#-#-#  gdkcairo.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkcairo.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_cairo_set_source_color:
#. #-#-#-#-#  gdkcairo.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_cairo_rectangle:
#. #-#-#-#-#  gdkcairo.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_cairo_region:
#. #-#-#-#-#  gdkcairo.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_cairo_set_source_pixbuf:
#. #-#-#-#-#  gdkcursor.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkcursor.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_cursor_new_from_name:
#. #-#-#-#-#  gdkcursor.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_cursor_get_image:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_warp_pointer:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventGrabBroken:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_rgba_visual:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_cairo_create:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_move_region:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_urgency_hint:
#: gdkcairo.c:136:1 gdkcairo.c:157:1 gdkcairo.c:190:1 gdkcairo.c:91:1
#: gdkcursor.c:305:1 gdkcursor.c:389:1 gdkdisplay.c:1845:1 gdkevents.h:938:1
#: gdkscreen.c:832:1 gdkwindow.c:3604:1 gdkwindow.c:6412:1 gdkwindow.c:9846:1
msgid "Since: 2.8"
msgstr "Since: 2.8"

# #-#-#-#-#  gdkcairo.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_cairo_region:
# #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_invalidate_maybe_recurse:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_invalidate_region:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: _gdk_window_invalidate_for_expose:
#. #-#-#-#-#  gdkcairo.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_cairo_region:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_invalidate_maybe_recurse:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_invalidate_region:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: _gdk_window_invalidate_for_expose:
#: gdkcairo.c:153:1 gdkwindow.c:4419:1 gdkwindow.c:4473:1 gdkwindow.c:4508:1
msgid "@region: a #cairo_region_t"
msgstr ""

# #used by: gdk_cairo_region:
#. used by: gdk_cairo_region:
#: gdkcairo.c:155:1
msgid "Adds the given region to the current path of @cr."
msgstr ""

# #-#-#-#-#  gdkcairo.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_cairo_set_source_pixbuf:
# #-#-#-#-#  gdkdraw.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_draw_pixbuf:
#. used by: gdk_cairo_set_source_pixbuf:
#: gdkcairo.c:181:1
msgid "@pixbuf: a #GdkPixbuf"
msgstr ""

# used by: gdk_cairo_set_source_pixbuf:
#. used by: gdk_cairo_set_source_pixbuf:
#: gdkcairo.c:182:1
msgid ""
"@pixbuf_x: X coordinate of location to place upper left corner of @pixbuf"
msgstr ""

# used by: gdk_cairo_set_source_pixbuf:
#. used by: gdk_cairo_set_source_pixbuf:
#: gdkcairo.c:183:1
msgid ""
"@pixbuf_y: Y coordinate of location to place upper left corner of @pixbuf"
msgstr ""

# #used by: gdk_cairo_set_source_pixbuf:
#. used by: gdk_cairo_set_source_pixbuf:
#: gdkcairo.c:185:1
msgid "Sets the given pixbuf as the source pattern for @cr."
msgstr ""

# #used by: gdk_cairo_set_source_pixbuf:
#. used by: gdk_cairo_set_source_pixbuf:
#: gdkcairo.c:187:2
msgid ""
"The pattern has an extend mode of %CAIRO_EXTEND_NONE and is aligned so that "
"the origin of @pixbuf is @pixbuf_x, @pixbuf_y."
msgstr ""

# #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_screen_get_monitor_at_window:
# #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_reparent:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: _gdk_window_destroy_hierarchy:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: _gdk_window_destroy:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_destroy:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_set_user_data:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_get_user_data:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_get_window_type:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_get_position:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_get_parent:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_get_toplevel:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_get_children:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_peek_children:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_add_filter:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_remove_filter:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_is_visible:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_is_viewable:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_get_state:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_begin_paint_rect:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_begin_paint_region:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_end_paint:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_get_internal_paint_info:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_clear:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_clear_area:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_clear_area_e:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_process_updates:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_invalidate_rect:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_invalidate_maybe_recurse:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_invalidate_region:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_get_update_area:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_freeze_updates:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_thaw_updates:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_freeze_toplevel_updates_libgtk_only:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_thaw_toplevel_updates_libgtk_only:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_get_pointer:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_show_unraised:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_raise:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_lower:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_show:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_hide:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_set_events:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_get_events:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_move:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_resize:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_move_resize:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_scroll:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_move_region:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_set_background:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_set_back_pixmap:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_set_cursor:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_get_geometry:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_get_origin:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_shape_combine_mask:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_shape_combine_region:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_set_child_shapes:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_merge_child_shapes:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_set_static_gravities:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_set_composited:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_remove_redirection:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_redirect_to_drawable:
#. #-#-#-#-#  gdkcairo.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_cairo_set_source_window:
#. #-#-#-#-#  gdkoffscreenwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkoffscreenwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_offscreen_window_get_surface:
#. #-#-#-#-#  gdkoffscreenwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_offscreen_window_set_embedder:
#. #-#-#-#-#  gdkoffscreenwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_offscreen_window_get_embedder:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_monitor_at_window:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkWindowChildFunc:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_reparent:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_ensure_native:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: _gdk_window_destroy_hierarchy:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: _gdk_window_destroy:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_destroy:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_user_data:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_user_data:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_window_type:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_visual:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_screen:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_display:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_is_destroyed:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_has_native:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_position:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_parent:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_effective_parent:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_toplevel:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_effective_toplevel:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_children:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_peek_children:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_add_filter: (skip)
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_remove_filter: (skip)
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_is_visible:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_is_viewable:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_state:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_begin_paint_rect:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_begin_paint_region:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_end_paint:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_flush:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_clip_region:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_visible_region:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_cairo_create:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_process_updates:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_invalidate_rect:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_invalidate_maybe_recurse:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_invalidate_region:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: _gdk_window_invalidate_for_expose:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_update_area:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_freeze_updates:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_thaw_updates:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_freeze_toplevel_updates_libgtk_only:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_thaw_toplevel_updates_libgtk_only:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_pointer:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_show_unraised:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_raise:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_lower:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_restack:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_show:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_hide:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_events:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_events:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_device_events:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_move:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_resize:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_move_resize:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_scroll:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_move_region:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_background:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_background_rgba:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_background_pattern:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_cursor:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_cursor:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_geometry:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_width:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_height:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_origin:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_root_coords:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_shape_combine_region:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_child_shapes:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_merge_child_shapes:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_input_shape_combine_region:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_child_input_shapes:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_merge_child_input_shapes:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_static_gravities:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_composited:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_composited:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_source_events:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_source_events:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_focus:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_property_get:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_property_change: (skip)
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_property_delete:
#: gdkcairo.c:287:1 gdkoffscreenwindow.c:327:1 gdkoffscreenwindow.c:610:1
#: gdkoffscreenwindow.c:652:1 gdkscreen.c:289:1 gdkwindow.c:10757:1
#: gdkwindow.c:10829:1 gdkwindow.c:10862:1 gdkwindow.c:1498:1
#: gdkwindow.c:1665:1 gdkwindow.c:1837:1 gdkwindow.c:2008:1 gdkwindow.c:2026:1
#: gdkwindow.c:2045:1 gdkwindow.c:2068:1 gdkwindow.c:2086:1 gdkwindow.c:2102:1
#: gdkwindow.c:2120:1 gdkwindow.c:2138:1 gdkwindow.c:2155:1 gdkwindow.c:2195:1
#: gdkwindow.c:2214:1 gdkwindow.c:2242:1 gdkwindow.c:2268:1 gdkwindow.c:2293:1
#: gdkwindow.c:2325:1 gdkwindow.c:2354:1 gdkwindow.c:2380:1 gdkwindow.c:2401:1
#: gdkwindow.c:2462:1 gdkwindow.c:2541:1 gdkwindow.c:2558:1 gdkwindow.c:2580:1
#: gdkwindow.c:2765:1 gdkwindow.c:2788:1 gdkwindow.c:2915:1 gdkwindow.c:3272:1
#: gdkwindow.c:3349:1 gdkwindow.c:3392:1 gdkwindow.c:3592:1 gdkwindow.c:4170:1
#: gdkwindow.c:4266:1 gdkwindow.c:4418:1 gdkwindow.c:4472:1 gdkwindow.c:4507:1
#: gdkwindow.c:4567:1 gdkwindow.c:4646:1 gdkwindow.c:4667:1 gdkwindow.c:4688:1
#: gdkwindow.c:4712:1 gdkwindow.c:4894:1 gdkwindow.c:5256:1 gdkwindow.c:5274:1
#: gdkwindow.c:5407:1 gdkwindow.c:5441:1 gdkwindow.c:5558:1 gdkwindow.c:5578:1
#: gdkwindow.c:5710:1 gdkwindow.c:5758:1 gdkwindow.c:5778:1 gdkwindow.c:6207:1
#: gdkwindow.c:6230:1 gdkwindow.c:6254:1 gdkwindow.c:6278:1 gdkwindow.c:6401:1
#: gdkwindow.c:6460:1 gdkwindow.c:6489:1 gdkwindow.c:6515:1 gdkwindow.c:6584:1
#: gdkwindow.c:6608:1 gdkwindow.c:6722:1 gdkwindow.c:6805:1 gdkwindow.c:6827:1
#: gdkwindow.c:6849:1 gdkwindow.c:6889:1 gdkwindow.c:7049:1 gdkwindow.c:7162:1
#: gdkwindow.c:7179:1 gdkwindow.c:7200:1 gdkwindow.c:7284:1 gdkwindow.c:7303:1
#: gdkwindow.c:7327:1 gdkwindow.c:7356:1 gdkwindow.c:7376:1 gdkwindow.c:8868:1
#: gdkwindow.c:8937:1 gdkwindow.c:9725:1 gdkwindow.h:809:1
msgid "@window: a #GdkWindow"
msgstr ""

# used by: gdk_cairo_set_source_window:
#. used by: gdk_cairo_set_source_window:
#: gdkcairo.c:288:1
msgid "@x: X coordinate of location to place upper left corner of @window"
msgstr ""

# used by: gdk_cairo_set_source_window:
#. used by: gdk_cairo_set_source_window:
#: gdkcairo.c:289:1
msgid "@y: Y coordinate of location to place upper left corner of @window"
msgstr ""

# #used by: gdk_cairo_set_source_window:
#. used by: gdk_cairo_set_source_window:
#: gdkcairo.c:291:1
msgid "Sets the given window as the source pattern for @cr."
msgstr ""

# #used by: gdk_cairo_set_source_window:
#. used by: gdk_cairo_set_source_window:
#: gdkcairo.c:293:3
msgid ""
"The pattern has an extend mode of %CAIRO_EXTEND_NONE and is aligned so that "
"the origin of @window is @x, @y. The window contains all its subwindows when "
"rendering."
msgstr ""

# #used by: gdk_cairo_set_source_window:
#. used by: gdk_cairo_set_source_window:
#: gdkcairo.c:297:2
msgid ""
"Note that the contents of @window are undefined outside of the visible part "
"of @window, so use this function with care."
msgstr ""

# used by: SECTION:cairo_interaction
#. used by: SECTION:cairo_interaction
#: gdkcairo.c:30:1
msgid "@Short_description: Functions to support using cairo"
msgstr "@Short_description: 使用开罗(Cairo)库的支持函数"

# #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_parse_args:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_get_display_arg_name:
# #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkDisplay::closed:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_close:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_event:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_peek_event:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_put_event:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_core_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_window_at_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_set_pointer_hooks:
# #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkDisplayManager::display-opened:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_get:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_get_default_display:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_default:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_default:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_set_default_display:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_list_displays:
# #-#-#-#-#  gdkdraw.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkdraw.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_drawable_get_screen:
# #-#-#-#-#  gdkdraw.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_drawable_get_display:
# #-#-#-#-#  gdkdraw.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_draw_pixbuf:
# #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_event_new:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_event_set_screen:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_event_get_screen:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_set_double_click_time:
# #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkKeymap::keys-changed:
# #-#-#-#-#  gdkpango.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_pango_context_get_for_screen:
# #-#-#-#-#  gdkrgb.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkrgb.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_rgb_colormap:
# #-#-#-#-#  gdkrgb.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_rgb_visual:
# #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkScreen::size-changed:
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_monitor_at_point:
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_monitor_at_window:
# #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_toplevel_windows:
#. #-#-#-#-#  gdkcairo.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_cairo_set_source_window:
#. #-#-#-#-#  gdkdevice.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_get_n_keys:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_visual:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_screen:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_display:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_width:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_height:
#: gdkcairo.c:300:1 gdkdevice.c:706:1 gdkwindow.c:2108:1 gdkwindow.c:2126:1
#: gdkwindow.c:2144:1 gdkwindow.c:6815:1 gdkwindow.c:6837:1
msgid "Since: 2.24"
msgstr "Since: 2.24"

# used by: SECTION:cairo_interaction
#. used by: SECTION:cairo_interaction
#: gdkcairo.c:31:1
msgid "@Title: Cairo Interaction"
msgstr ""

# #used by: SECTION:cairo_interaction
#. used by: SECTION:cairo_interaction
#: gdkcairo.c:33:3
#, fuzzy
msgid ""
"<link href=\"http://cairographics.org\">Cairo</link> is a graphics library "
"that supports vector graphics and image compositing that can be used with "
"GDK. GTK+ does all of its drawing using cairo."
msgstr ""
"<link href=|$_1_$|http://cairographics.org|$_1_$|>Cairo</link>是GDK使用的支持"
"矢量和点阵的图形库。GTK+ 所有的绘画使用了开罗(Cairo)。"

# #used by: SECTION:cairo_interaction
#. used by: SECTION:cairo_interaction
#: gdkcairo.c:37:5
msgid ""
"GDK does not wrap the cairo API, instead it allows to create cairo contexts "
"which can be used to draw on #GdkWindows. Additional functions allow use "
"#GdkRectangles with cairo and to use #GdkColors, #GdkRGBAs, #GdkPixbufs and "
"#GdkWindows as sources for drawing operations."
msgstr ""
"GDK没有封装开罗(Cairo) API, 但是允许创建开罗上下文来绘制 #GdkWindows。另外，"
"GDK函数允许将 #GdkRectangles, #GdkRGBAs, #GdkPixbufs 和 #GdkWindows 做为开罗"
"(Cairo)源来进行绘图操作。"

# used by: gdk_cairo_region_create_from_surface:
#. used by: gdk_cairo_region_create_from_surface:
#: gdkcairo.c:378:1
msgid "@surface: a cairo surface"
msgstr ""

# #used by: gdk_cairo_region_create_from_surface:
#. used by: gdk_cairo_region_create_from_surface:
#: gdkcairo.c:380:2
msgid ""
"Creates region that describes covers the area where the given @surface is "
"more than 50% opaque."
msgstr ""

# #used by: gdk_cairo_region_create_from_surface:
#. used by: gdk_cairo_region_create_from_surface:
#: gdkcairo.c:383:2
msgid ""
"This function takes into account device offsets that might be set with "
"cairo_surface_set_device_offset()."
msgstr ""

# #used by: gdk_cairo_region_create_from_surface:
#. used by: gdk_cairo_region_create_from_surface:
#: gdkcairo.c:386:1
msgid "Returns: A #cairo_region_t; must be freed with cairo_region_destroy()"
msgstr ""

# used by: gdk_cairo_get_clip_rectangle:
#. used by: gdk_cairo_get_clip_rectangle:
#: gdkcairo.c:48:1
msgid "@rect: (out) (allow-none): return location for the clip, or %NULL"
msgstr ""

# #used by: gdk_cairo_get_clip_rectangle:
#. used by: gdk_cairo_get_clip_rectangle:
#: gdkcairo.c:50:3
msgid ""
"This is a convenience function around cairo_clip_extents(). It rounds the "
"clip extents to integer coordinates and returns a boolean indicating if a "
"clip area exists."
msgstr ""

# #used by: gdk_cairo_get_clip_rectangle:
#. used by: gdk_cairo_get_clip_rectangle:
#: gdkcairo.c:54:2
msgid ""
"Returns: %TRUE if a clip rectangle exists, %FALSE if all of @cr is clipped "
"and all drawing can be skipped"
msgstr ""

# #-#-#-#-#  gdkcairo.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_cairo_set_source_color:
# #-#-#-#-#  gdkcolor.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_color_to_string:
# #-#-#-#-#  gdkrgb.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_rgb_find_color:
#. #-#-#-#-#  gdkcairo.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_cairo_set_source_color:
#. #-#-#-#-#  gdkcolor.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkcolor.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_color_copy:
#. #-#-#-#-#  gdkcolor.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_color_free:
#. #-#-#-#-#  gdkcolor.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_color_hash:
#. #-#-#-#-#  gdkcolor.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_color_to_string:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_background:
#: gdkcairo.c:87:1 gdkcolor.c:168:1 gdkcolor.c:50:1 gdkcolor.c:72:1
#: gdkcolor.c:86:1 gdkwindow.c:6461:1
msgid "@color: a #GdkColor"
msgstr ""

# #used by: gdk_cairo_set_source_color:
#. used by: gdk_cairo_set_source_color:
#: gdkcairo.c:89:1
msgid "Sets the specified #GdkColor as the source color of @cr."
msgstr ""

# used by: gdk_color_equal:
#. used by: gdk_color_equal:
#: gdkcolor.c:104:1
msgid "@colora: a #GdkColor"
msgstr ""

# used by: gdk_color_equal:
#. used by: gdk_color_equal:
#: gdkcolor.c:105:1
msgid "@colorb: another #GdkColor"
msgstr ""

# #used by: gdk_color_equal:
#. used by: gdk_color_equal:
#: gdkcolor.c:107:1
msgid "Compares two colors."
msgstr ""

# #used by: gdk_color_equal:
#. #-#-#-#-#  gdkcolor.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_color_equal:
#. #-#-#-#-#  gdkrgba.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_rgba_equal:
#: gdkcolor.c:109:1 gdkrgba.c:303:1
msgid "Return value: %TRUE if the two colors compare equal"
msgstr ""

# #-#-#-#-#  gdkcolor.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_color_parse:
# #-#-#-#-#  gdkrgba.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_rgba_parse:
#. #-#-#-#-#  gdkcolor.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_color_parse:
#. #-#-#-#-#  gdkrgba.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_rgba_parse:
#: gdkcolor.c:129:1 gdkrgba.c:139:1
msgid "@spec: the string specifying the color"
msgstr ""

# used by: gdk_color_parse:
#. used by: gdk_color_parse:
#: gdkcolor.c:130:1
msgid "@color: (out): the #GdkColor to fill in"
msgstr ""

# #used by: gdk_color_parse:
#. used by: gdk_color_parse:
#: gdkcolor.c:132:4
msgid ""
"Parses a textual specification of a color and fill in the <structfield>red</"
"structfield>, <structfield>green</structfield>, and <structfield>blue</"
"structfield> fields of a #GdkColor structure."
msgstr ""

# #used by: gdk_color_parse:
#. used by: gdk_color_parse:
#: gdkcolor.c:137:8
msgid ""
"The string can either one of a large set of standard names (taken from the "
"X11 <filename>rgb.txt</filename> file), or it can be a hex value in the form "
"'&num;rgb' '&num;rrggbb' '&num;rrrgggbbb' or '&num;rrrrggggbbbb' where 'r', "
"'g' and 'b' are hex digits of the red, green, and blue components of the "
"color, respectively. (White in the four forms is '&num;fff', '&num;ffffff', "
"'&num;fffffffff' and '&num;ffffffffffff')."
msgstr ""

# #used by: gdk_display_open_default_libgtk_only:
#. used by: gdk_color_parse:
#: gdkcolor.c:146:1
#, fuzzy
msgid "Return value: %TRUE if the parsing succeeded"
msgstr "Return value: 如果指定的axis 可以找到，返回%TRUE，否则返回%NULL。"

# #used by: gdk_color_to_string:
#. used by: gdk_color_to_string:
#: gdkcolor.c:170:4
msgid ""
"Returns a textual specification of @color in the hexadecimal form "
"<literal>&num;rrrrggggbbbb</literal>, where <literal>r</literal>, "
"<literal>g</literal> and <literal>b</literal> are hex digits representing "
"the red, green and blue components respectively."
msgstr ""

# #used by: gdk_color_to_string:
#. used by: gdk_color_to_string:
#: gdkcolor.c:175:1
msgid "The returned string can be parsed by gdk_color_parse()."
msgstr ""

# #used by: gdk_color_to_string:
#. used by: gdk_color_to_string:
#: gdkcolor.c:177:1
msgid "Return value: a newly-allocated text string"
msgstr ""

# used by: SECTION:colors
#. used by: SECTION:colors
#: gdkcolor.c:38:1
msgid "@Short_description: Manipulation of colors"
msgstr ""

# used by: SECTION:colors
#. used by: SECTION:colors
#: gdkcolor.c:39:1
msgid "@Title: Colors"
msgstr ""

# #used by: SECTION:colors
#. used by: SECTION:colors
#: gdkcolor.c:41:1
msgid "A #GdkColor represents a color."
msgstr ""

# #used by: SECTION:colors
#. used by: SECTION:colors
#: gdkcolor.c:43:2
msgid ""
"When working with cairo, it is often more convenient to use a #GdkRGBA "
"instead."
msgstr ""

# #used by: gdk_color_copy:
#. used by: gdk_color_copy:
#: gdkcolor.c:52:1
msgid "Makes a copy of a color structure."
msgstr ""

# #used by: gdk_color_copy:
#. used by: gdk_color_copy:
#: gdkcolor.c:54:1
msgid "The result must be freed using gdk_color_free()."
msgstr ""

# #used by: gdk_display_open_default_libgtk_only:
#. used by: gdk_color_copy:
#: gdkcolor.c:56:1
#, fuzzy
msgid "Return value: a copy of @color"
msgstr "Return value: 返回colormap 对象或者%NULL。"

# #used by: gdk_color_free:
#. used by: gdk_color_free:
#: gdkcolor.c:74:1
msgid "Frees a color structure created with gdk_color_copy()."
msgstr ""

# #used by: gdk_color_hash:
#. used by: gdk_color_hash:
#: gdkcolor.c:88:2
msgid ""
"A hash function suitable for using for a hash table that stores #GdkColors."
msgstr ""

# #used by: gdk_color_hash:
#. used by: gdk_color_hash:
#: gdkcolor.c:91:1
msgid "Return value: The hash function applied to @color"
msgstr ""

#. used by: GdkColor:
#: gdkcolor.h:42:2
msgid ""
"@pixel: For allocated colors, the pixel value used to draw this color on the "
"screen. Not used anymore."
msgstr ""

#. used by: GdkColor:
#: gdkcolor.h:44:3
msgid ""
"@red: The red component of the color. This is a value between 0 and 65535, "
"with 65535 indicating full intensitiy"
msgstr ""

#. used by: GdkColor:
#: gdkcolor.h:47:1
msgid "@green: The green component of the color"
msgstr ""

#. used by: GdkColor:
#: gdkcolor.h:48:1
msgid "@blue: The blue component of the color"
msgstr ""

#. used by: GdkColor:
#: gdkcolor.h:50:2
msgid ""
"The #GdkColor structure is used to describe a color, similar to the XColor "
"struct used in the X11 drawing API."
msgstr ""

# #-#-#-#-#  gdkcursor.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_cursor_ref:
# #-#-#-#-#  gdkcursor.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_cursor_unref:
#. #-#-#-#-#  gdkcursor.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkcursor.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_cursor_ref:
#. #-#-#-#-#  gdkcursor.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_cursor_unref:
#. #-#-#-#-#  gdkcursor.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_cursor_get_image:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_device_cursor:
#: gdkcursor.c:149:1 gdkcursor.c:167:1 gdkcursor.c:379:1 gdkwindow.c:6679:1
msgid "@cursor: a #GdkCursor"
msgstr ""

# #used by: gdk_cursor_ref:
#. used by: gdk_cursor_ref:
#: gdkcursor.c:151:1
msgid "Adds a reference to @cursor."
msgstr ""

# #used by: gdk_cursor_ref:
#. used by: gdk_cursor_ref:
#: gdkcursor.c:153:1
msgid "Return value: (transfer full): Same @cursor that was passed in"
msgstr ""

# #used by: gdk_cursor_ref:
#. used by: gdk_cursor_ref:
#: gdkcursor.c:155:1
msgid "Deprecated: 3.0: Use g_object_ref() instead"
msgstr ""

# #used by: gdk_cursor_unref:
#. used by: gdk_cursor_unref:
#: gdkcursor.c:169:2
msgid ""
"Removes a reference from @cursor, deallocating the cursor if no references "
"remain."
msgstr ""

# #used by: gdk_cursor_unref:
#. used by: gdk_cursor_unref:
#: gdkcursor.c:172:1
msgid "Deprecated: 3.0: Use g_object_unref() instead"
msgstr ""

# used by: gdk_cursor_new:
#. #-#-#-#-#  gdkcursor.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_cursor_new:
#. #-#-#-#-#  gdkcursor.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_cursor_new_for_display:
#: gdkcursor.c:184:1 gdkcursor.c:220:1
msgid "@cursor_type: cursor to create"
msgstr ""

# #used by: gdk_cursor_new:
#. used by: gdk_cursor_new:
#: gdkcursor.c:186:2
msgid ""
"Creates a new cursor from the set of builtin cursors for the default "
"display. See gdk_cursor_new_for_display()."
msgstr ""

# #used by: gdk_cursor_new:
#. used by: gdk_cursor_new:
#: gdkcursor.c:189:1
msgid "To make the cursor invisible, use %GDK_BLANK_CURSOR."
msgstr ""

# #used by: gdk_cursor_new:
#. #-#-#-#-#  gdkcursor.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_cursor_new:
#. #-#-#-#-#  gdkcursor.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_cursor_new_for_display:
#: gdkcursor.c:191:1 gdkcursor.c:281:1
msgid "Return value: a new #GdkCursor"
msgstr ""

# used by: gdk_cursor_get_cursor_type:
#. used by: gdk_cursor_get_cursor_type:
#: gdkcursor.c:201:1
msgid "@cursor:  a #GdkCursor"
msgstr ""

# #used by: gdk_cursor_get_cursor_type:
#. used by: gdk_cursor_get_cursor_type:
#: gdkcursor.c:203:1
msgid "Returns the cursor type for this cursor."
msgstr ""

# #used by: gdk_cursor_get_cursor_type:
#. used by: gdk_cursor_get_cursor_type:
#: gdkcursor.c:205:1
msgid "Return value: a #GdkCursorType"
msgstr ""

# #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_parse_args:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_get_display_arg_name:
# #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkDisplay::closed:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_close:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_event:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_peek_event:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_put_event:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_core_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_window_at_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_set_pointer_hooks:
# #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkDisplayManager::display-opened:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_get:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_get_default_display:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_default:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_default:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_set_default_display:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_list_displays:
# #-#-#-#-#  gdkdraw.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkdraw.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_drawable_get_screen:
# #-#-#-#-#  gdkdraw.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_drawable_get_display:
# #-#-#-#-#  gdkdraw.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_draw_pixbuf:
# #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_event_new:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_event_set_screen:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_event_get_screen:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_set_double_click_time:
# #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkKeymap::keys-changed:
# #-#-#-#-#  gdkpango.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_pango_context_get_for_screen:
# #-#-#-#-#  gdkrgb.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkrgb.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_rgb_colormap:
# #-#-#-#-#  gdkrgb.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_rgb_visual:
# #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkScreen::size-changed:
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_monitor_at_point:
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_monitor_at_window:
# #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_toplevel_windows:
#. #-#-#-#-#  gdkcursor.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_cursor_get_cursor_type:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_is_closed:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_context_list_targets:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_context_get_actions:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_context_get_suggested_action:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_context_get_selected_action:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_context_get_source_window:
#. #-#-#-#-#  gdkvisual.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkvisual.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_visual_get_visual_type:
#. #-#-#-#-#  gdkvisual.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_visual_get_depth:
#. #-#-#-#-#  gdkvisual.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_visual_get_byte_order:
#. #-#-#-#-#  gdkvisual.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_visual_get_colormap_size:
#. #-#-#-#-#  gdkvisual.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_visual_get_bits_per_rgb:
#. #-#-#-#-#  gdkvisual.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_visual_get_red_pixel_details:
#. #-#-#-#-#  gdkvisual.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_visual_get_green_pixel_details:
#. #-#-#-#-#  gdkvisual.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_visual_get_blue_pixel_details:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_has_native:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_effective_parent:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_effective_toplevel:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_background_pattern:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_coords_to_parent:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_coords_from_parent:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_composited:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_modal_hint:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_accept_focus:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_focus_on_map:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_is_input_only:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_is_shaped:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_create_similar_surface:
#: gdkcursor.c:207:1 gdkdisplay.c:283:1 gdkdnd.c:113:1 gdkdnd.c:131:1
#: gdkdnd.c:58:1 gdkdnd.c:77:1 gdkdnd.c:95:1 gdkvisual.c:272:1
#: gdkvisual.c:290:1 gdkvisual.c:308:1 gdkvisual.c:326:1 gdkvisual.c:344:1
#: gdkvisual.c:367:1 gdkvisual.c:400:1 gdkvisual.c:433:1 gdkwindow.c:2202:1
#: gdkwindow.c:2278:1 gdkwindow.c:2336:1 gdkwindow.c:6557:1 gdkwindow.c:6956:1
#: gdkwindow.c:7014:1 gdkwindow.c:7364:1 gdkwindow.c:7452:1 gdkwindow.c:7471:1
#: gdkwindow.c:7491:1 gdkwindow.c:7509:1 gdkwindow.c:7527:1 gdkwindow.c:9700:1
msgid "Since: 2.22"
msgstr "Since: 2.22"

# #-#-#-#-#  gdkcursor.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_cursor_new_for_display:
# #-#-#-#-#  gdkcursor.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_cursor_new_from_name:
# #-#-#-#-#  gdkcursor.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_cursor_new_from_pixbuf:
#. #-#-#-#-#  gdkcursor.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_cursor_new_for_display:
#. #-#-#-#-#  gdkcursor.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_cursor_new_from_name:
#. #-#-#-#-#  gdkcursor.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_cursor_new_from_pixbuf:
#: gdkcursor.c:219:1 gdkcursor.c:296:1 gdkcursor.c:318:1
msgid "@display: the #GdkDisplay for which the cursor will be created"
msgstr ""

#. used by: gdk_cursor_new_for_display:
#: gdkcursor.c:222:58
msgid ""
"Creates a new cursor from the set of builtin cursors. Some useful ones are: "
"<itemizedlist> <listitem><para> <inlinegraphic format=\"PNG\" fileref="
"\"right_ptr.png\"></inlinegraphic> #GDK_RIGHT_PTR (right-facing arrow) </"
"para></listitem> <listitem><para> <inlinegraphic format=\"PNG\" fileref="
"\"crosshair.png\"></inlinegraphic> #GDK_CROSSHAIR (crosshair) </para></"
"listitem> <listitem><para> <inlinegraphic format=\"PNG\" fileref=\"xterm.png"
"\"></inlinegraphic> #GDK_XTERM (I-beam) </para></listitem> <listitem><para> "
"<inlinegraphic format=\"PNG\" fileref=\"watch.png\"></inlinegraphic> "
"#GDK_WATCH (busy) </para></listitem> <listitem><para> <inlinegraphic format="
"\"PNG\" fileref=\"fleur.png\"></inlinegraphic> #GDK_FLEUR (for moving "
"objects) </para></listitem> <listitem><para> <inlinegraphic format=\"PNG\" "
"fileref=\"hand1.png\"></inlinegraphic> #GDK_HAND1 (a right-pointing hand) </"
"para></listitem> <listitem><para> <inlinegraphic format=\"PNG\" fileref="
"\"hand2.png\"></inlinegraphic> #GDK_HAND2 (a left-pointing hand) </para></"
"listitem> <listitem><para> <inlinegraphic format=\"PNG\" fileref=\"left_side."
"png\"></inlinegraphic> #GDK_LEFT_SIDE (resize left side) </para></listitem> "
"<listitem><para> <inlinegraphic format=\"PNG\" fileref=\"right_side.png\"></"
"inlinegraphic> #GDK_RIGHT_SIDE (resize right side) </para></listitem> "
"<listitem><para> <inlinegraphic format=\"PNG\" fileref=\"top_left_corner.png"
"\"></inlinegraphic> #GDK_TOP_LEFT_CORNER (resize northwest corner) </para></"
"listitem> <listitem><para> <inlinegraphic format=\"PNG\" fileref="
"\"top_right_corner.png\"></inlinegraphic> #GDK_TOP_RIGHT_CORNER (resize "
"northeast corner) </para></listitem> <listitem><para> <inlinegraphic format="
"\"PNG\" fileref=\"bottom_left_corner.png\"></inlinegraphic> "
"#GDK_BOTTOM_LEFT_CORNER (resize southwest corner) </para></listitem> "
"<listitem><para> <inlinegraphic format=\"PNG\" fileref=\"bottom_right_corner."
"png\"></inlinegraphic> #GDK_BOTTOM_RIGHT_CORNER (resize southeast corner) </"
"para></listitem> <listitem><para> <inlinegraphic format=\"PNG\" fileref="
"\"top_side.png\"></inlinegraphic> #GDK_TOP_SIDE (resize top side) </para></"
"listitem> <listitem><para> <inlinegraphic format=\"PNG\" fileref="
"\"bottom_side.png\"></inlinegraphic> #GDK_BOTTOM_SIDE (resize bottom side) </"
"para></listitem> <listitem><para> <inlinegraphic format=\"PNG\" fileref="
"\"sb_h_double_arrow.png\"></inlinegraphic> #GDK_SB_H_DOUBLE_ARROW (move "
"vertical splitter) </para></listitem> <listitem><para> <inlinegraphic format="
"\"PNG\" fileref=\"sb_v_double_arrow.png\"></inlinegraphic> "
"#GDK_SB_V_DOUBLE_ARROW (move horizontal splitter) </para></listitem> "
"<listitem><para> #GDK_BLANK_CURSOR (Blank cursor). Since 2.16 </para></"
"listitem> </itemizedlist>"
msgstr ""

# used by: gdk_cursor_new_from_name:
#. used by: gdk_cursor_new_from_name:
#: gdkcursor.c:297:1
msgid "@name: the name of the cursor"
msgstr ""

# #used by: gdk_cursor_new_from_name:
#. used by: gdk_cursor_new_from_name:
#: gdkcursor.c:299:2
msgid "Creates a new cursor by looking up @name in the current cursor theme."
msgstr ""

# #used by: gdk_cursor_new_from_name:
#. used by: gdk_cursor_new_from_name:
#: gdkcursor.c:302:2
msgid ""
"Returns: a new #GdkCursor, or %NULL if there is no cursor with the given name"
msgstr ""

# used by: gdk_cursor_new_from_pixbuf:
#. used by: gdk_cursor_new_from_pixbuf:
#: gdkcursor.c:319:1
msgid "@pixbuf: the #GdkPixbuf containing the cursor image"
msgstr ""

# used by: gdk_cursor_new_from_pixbuf:
#. used by: gdk_cursor_new_from_pixbuf:
#: gdkcursor.c:320:1
msgid "@x: the horizontal offset of the 'hotspot' of the cursor."
msgstr ""

# used by: gdk_cursor_new_from_pixbuf:
#. used by: gdk_cursor_new_from_pixbuf:
#: gdkcursor.c:321:1
msgid "@y: the vertical offset of the 'hotspot' of the cursor."
msgstr ""

# #used by: gdk_cursor_new_from_pixbuf:
#. used by: gdk_cursor_new_from_pixbuf:
#: gdkcursor.c:323:1
msgid "Creates a new cursor from a pixbuf."
msgstr ""

# #used by: gdk_cursor_new_from_pixbuf:
#. used by: gdk_cursor_new_from_pixbuf:
#: gdkcursor.c:325:8
msgid ""
"Not all GDK backends support RGBA cursors. If they are not supported, a "
"monochrome approximation will be displayed. The functions "
"gdk_display_supports_cursor_alpha() and gdk_display_supports_cursor_color() "
"can be used to determine whether RGBA cursors are supported; "
"gdk_display_get_default_cursor_size() and gdk_display_get_maximal_cursor_size"
"() give information about cursor sizes."
msgstr ""

#. used by: gdk_cursor_new_from_pixbuf:
#: gdkcursor.c:334:4
msgid ""
"If @x or @y are <literal>-1</literal>, the pixbuf must have options named "
"\"x_hot\" and \"y_hot\", resp., containing integer values between %0 and the "
"width resp. height of the pixbuf. (Since: 3.0)"
msgstr ""

# #used by: gdk_cursor_new_from_pixbuf:
#. used by: gdk_cursor_new_from_pixbuf:
#: gdkcursor.c:339:2
msgid ""
"On the X backend, support for RGBA cursors requires a sufficently new "
"version of the X Render extension."
msgstr ""

# #used by: gdk_cursor_new_from_pixbuf:
#. used by: gdk_cursor_new_from_pixbuf:
#: gdkcursor.c:342:1
msgid "Returns: a new #GdkCursor."
msgstr ""

# used by: gdk_cursor_get_display:
#. used by: gdk_cursor_get_display:
#: gdkcursor.c:360:1
msgid "@cursor: a #GdkCursor."
msgstr ""

# #used by: gdk_cursor_get_display:
#. used by: gdk_cursor_get_display:
#: gdkcursor.c:362:1
msgid "Returns the display on which the #GdkCursor is defined."
msgstr ""

# #used by: gdk_cursor_get_display:
#. used by: gdk_cursor_get_display:
#: gdkcursor.c:364:1
msgid "Returns: (transfer none): the #GdkDisplay associated to @cursor"
msgstr ""

# used by: SECTION:cursors
#. used by: SECTION:cursors
#: gdkcursor.c:38:1
msgid "@Short_description: Standard and pixmap cursors"
msgstr ""

# #used by: gdk_cursor_get_image:
#. used by: gdk_cursor_get_image:
#: gdkcursor.c:381:1
msgid "Returns a #GdkPixbuf with the image used to display the cursor."
msgstr ""

# #used by: gdk_cursor_get_image:
#. used by: gdk_cursor_get_image:
#: gdkcursor.c:383:3
msgid ""
"Note that depending on the capabilities of the windowing system and on the "
"cursor, GDK may not be able to obtain the image data. In this case, %NULL is "
"returned."
msgstr ""

# #used by: gdk_cursor_get_image:
#. used by: gdk_cursor_get_image:
#: gdkcursor.c:387:1
msgid "Returns: (transfer full): a #GdkPixbuf representing @cursor, or %NULL"
msgstr ""

# used by: SECTION:cursors
#. used by: SECTION:cursors
#: gdkcursor.c:39:1
msgid "@Title: Cursors"
msgstr ""

# #used by: SECTION:cursors
#. used by: SECTION:cursors
#: gdkcursor.c:41:9
msgid ""
"These functions are used to create and destroy cursors. There is a number of "
"standard cursors, but it is also possible to construct new cursors from "
"pixbufs. There may be limitations as to what kinds of cursors can be "
"constructed on a given display, see gdk_display_supports_cursor_alpha(), "
"gdk_display_supports_cursor_color(), gdk_display_get_default_cursor_size() "
"and gdk_display_get_maximal_cursor_size()."
msgstr ""

# #used by: SECTION:cursors
#. used by: SECTION:cursors
#: gdkcursor.c:51:4
msgid ""
"Cursors by themselves are not very interesting, they must be be bound to a "
"window for users to see them. This is done with gdk_window_set_cursor() or "
"by setting the cursor member of the #GdkWindowAttr struct passed to "
"gdk_window_new()."
msgstr ""

# #used by: GdkCursor:
#. used by: GdkCursor:
#: gdkcursor.c:60:1
msgid "The #GdkCursor structure represents a cursor. Its contents are private."
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:100:1
msgid ""
"@GDK_SB_H_DOUBLE_ARROW: <inlinegraphic format=\"PNG\" fileref="
"\"sb_h_double_arrow.png\"></inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:101:1
msgid ""
"@GDK_SB_LEFT_ARROW: <inlinegraphic format=\"PNG\" fileref=\"sb_left_arrow.png"
"\"></inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:102:1
msgid ""
"@GDK_SB_RIGHT_ARROW: <inlinegraphic format=\"PNG\" fileref=\"sb_right_arrow."
"png\"></inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:103:1
msgid ""
"@GDK_SB_UP_ARROW: <inlinegraphic format=\"PNG\" fileref=\"sb_up_arrow.png"
"\"></inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:104:1
msgid ""
"@GDK_SB_V_DOUBLE_ARROW: <inlinegraphic format=\"PNG\" fileref="
"\"sb_v_double_arrow.png\"></inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:105:1
msgid ""
"@GDK_SHUTTLE: <inlinegraphic format=\"PNG\" fileref=\"shuttle.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:106:1
msgid ""
"@GDK_SIZING: <inlinegraphic format=\"PNG\" fileref=\"sizing.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:107:1
msgid ""
"@GDK_SPIDER: <inlinegraphic format=\"PNG\" fileref=\"spider.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:108:1
msgid ""
"@GDK_SPRAYCAN: <inlinegraphic format=\"PNG\" fileref=\"spraycan.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:109:1
msgid ""
"@GDK_STAR: <inlinegraphic format=\"PNG\" fileref=\"star.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:110:1
msgid ""
"@GDK_TARGET: <inlinegraphic format=\"PNG\" fileref=\"target.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:111:1
msgid ""
"@GDK_TCROSS: <inlinegraphic format=\"PNG\" fileref=\"tcross.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:112:1
msgid ""
"@GDK_TOP_LEFT_ARROW: <inlinegraphic format=\"PNG\" fileref=\"top_left_arrow."
"png\"></inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:113:1
msgid ""
"@GDK_TOP_LEFT_CORNER: <inlinegraphic format=\"PNG\" fileref="
"\"top_left_corner.png\"></inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:114:1
msgid ""
"@GDK_TOP_RIGHT_CORNER: <inlinegraphic format=\"PNG\" fileref="
"\"top_right_corner.png\"></inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:115:1
msgid ""
"@GDK_TOP_SIDE: <inlinegraphic format=\"PNG\" fileref=\"top_side.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:116:1
msgid ""
"@GDK_TOP_TEE: <inlinegraphic format=\"PNG\" fileref=\"top_tee.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:117:1
msgid ""
"@GDK_TREK: <inlinegraphic format=\"PNG\" fileref=\"trek.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:118:1
msgid ""
"@GDK_UL_ANGLE: <inlinegraphic format=\"PNG\" fileref=\"ul_angle.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:119:1
msgid ""
"@GDK_UMBRELLA: <inlinegraphic format=\"PNG\" fileref=\"umbrella.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:120:1
msgid ""
"@GDK_UR_ANGLE: <inlinegraphic format=\"PNG\" fileref=\"ur_angle.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:121:1
msgid ""
"@GDK_WATCH: <inlinegraphic format=\"PNG\" fileref=\"watch.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:122:1
msgid ""
"@GDK_XTERM: <inlinegraphic format=\"PNG\" fileref=\"xterm.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:123:1
msgid "@GDK_LAST_CURSOR: last cursor type"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:124:1
msgid "@GDK_BLANK_CURSOR: Blank cursor. Since 2.16"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:125:2
msgid ""
"@GDK_CURSOR_IS_PIXMAP: type of cursors constructed with "
"gdk_cursor_new_from_pixbuf()"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:128:1
msgid "The standard cursors available."
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:46:1
msgid ""
"@GDK_X_CURSOR: <inlinegraphic format=\"PNG\" fileref=\"X_cursor.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:47:1
msgid ""
"@GDK_ARROW: <inlinegraphic format=\"PNG\" fileref=\"arrow.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:48:1
msgid ""
"@GDK_BASED_ARROW_DOWN: <inlinegraphic format=\"PNG\" fileref="
"\"based_arrow_down.png\"></inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:49:1
msgid ""
"@GDK_BASED_ARROW_UP: <inlinegraphic format=\"PNG\" fileref=\"based_arrow_up."
"png\"></inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:50:1
msgid ""
"@GDK_BOAT: <inlinegraphic format=\"PNG\" fileref=\"boat.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:51:1
msgid ""
"@GDK_BOGOSITY: <inlinegraphic format=\"PNG\" fileref=\"bogosity.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:52:1
msgid ""
"@GDK_BOTTOM_LEFT_CORNER: <inlinegraphic format=\"PNG\" fileref="
"\"bottom_left_corner.png\"></inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:53:1
msgid ""
"@GDK_BOTTOM_RIGHT_CORNER: <inlinegraphic format=\"PNG\" fileref="
"\"bottom_right_corner.png\"></inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:54:1
msgid ""
"@GDK_BOTTOM_SIDE: <inlinegraphic format=\"PNG\" fileref=\"bottom_side.png"
"\"></inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:55:1
msgid ""
"@GDK_BOTTOM_TEE: <inlinegraphic format=\"PNG\" fileref=\"bottom_tee.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:56:1
msgid ""
"@GDK_BOX_SPIRAL: <inlinegraphic format=\"PNG\" fileref=\"box_spiral.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:57:1
msgid ""
"@GDK_CENTER_PTR: <inlinegraphic format=\"PNG\" fileref=\"center_ptr.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:58:1
msgid ""
"@GDK_CIRCLE: <inlinegraphic format=\"PNG\" fileref=\"circle.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:59:1
msgid ""
"@GDK_CLOCK: <inlinegraphic format=\"PNG\" fileref=\"clock.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:60:1
msgid ""
"@GDK_COFFEE_MUG: <inlinegraphic format=\"PNG\" fileref=\"coffee_mug.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:61:1
msgid ""
"@GDK_CROSS: <inlinegraphic format=\"PNG\" fileref=\"cross.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:62:1
msgid ""
"@GDK_CROSS_REVERSE: <inlinegraphic format=\"PNG\" fileref=\"cross_reverse.png"
"\"></inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:63:1
msgid ""
"@GDK_CROSSHAIR: <inlinegraphic format=\"PNG\" fileref=\"crosshair.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:64:1
msgid ""
"@GDK_DIAMOND_CROSS: <inlinegraphic format=\"PNG\" fileref=\"diamond_cross.png"
"\"></inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:65:1
msgid ""
"@GDK_DOT: <inlinegraphic format=\"PNG\" fileref=\"dot.png\"></inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:66:1
msgid ""
"@GDK_DOTBOX: <inlinegraphic format=\"PNG\" fileref=\"dotbox.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:67:1
msgid ""
"@GDK_DOUBLE_ARROW: <inlinegraphic format=\"PNG\" fileref=\"double_arrow.png"
"\"></inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:68:1
msgid ""
"@GDK_DRAFT_LARGE: <inlinegraphic format=\"PNG\" fileref=\"draft_large.png"
"\"></inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:69:1
msgid ""
"@GDK_DRAFT_SMALL: <inlinegraphic format=\"PNG\" fileref=\"draft_small.png"
"\"></inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:70:1
msgid ""
"@GDK_DRAPED_BOX: <inlinegraphic format=\"PNG\" fileref=\"draped_box.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:71:1
msgid ""
"@GDK_EXCHANGE: <inlinegraphic format=\"PNG\" fileref=\"exchange.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:72:1
msgid ""
"@GDK_FLEUR: <inlinegraphic format=\"PNG\" fileref=\"fleur.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:73:1
msgid ""
"@GDK_GOBBLER: <inlinegraphic format=\"PNG\" fileref=\"gobbler.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:74:3
msgid ""
"@GDK_GUMBY: <inlinegraphic format=\"PNG\" fileref=\"gumby.png\"></"
"inlinegraphic> @GDK_HAND1: <inlinegraphic format=\"PNG\" fileref=\"hand1.png"
"\"></inlinegraphic> @GDK_HAND2: <inlinegraphic format=\"PNG\" fileref="
"\"hand2.png\"></inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:77:1
msgid ""
"@GDK_HEART: <inlinegraphic format=\"PNG\" fileref=\"heart.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:78:1
msgid ""
"@GDK_ICON: <inlinegraphic format=\"PNG\" fileref=\"icon.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:79:1
msgid ""
"@GDK_IRON_CROSS: <inlinegraphic format=\"PNG\" fileref=\"iron_cross.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:80:1
msgid ""
"@GDK_LEFT_PTR: <inlinegraphic format=\"PNG\" fileref=\"left_ptr.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:81:1
msgid ""
"@GDK_LEFT_SIDE: <inlinegraphic format=\"PNG\" fileref=\"left_side.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:82:1
msgid ""
"@GDK_LEFT_TEE: <inlinegraphic format=\"PNG\" fileref=\"left_tee.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:83:1
msgid ""
"@GDK_LEFTBUTTON: <inlinegraphic format=\"PNG\" fileref=\"leftbutton.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:84:1
msgid ""
"@GDK_LL_ANGLE: <inlinegraphic format=\"PNG\" fileref=\"ll_angle.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:85:1
msgid ""
"@GDK_LR_ANGLE: <inlinegraphic format=\"PNG\" fileref=\"lr_angle.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:86:1
msgid ""
"@GDK_MAN: <inlinegraphic format=\"PNG\" fileref=\"man.png\"></inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:87:1
msgid ""
"@GDK_MIDDLEBUTTON: <inlinegraphic format=\"PNG\" fileref=\"middlebutton.png"
"\"></inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:88:1
msgid ""
"@GDK_MOUSE: <inlinegraphic format=\"PNG\" fileref=\"mouse.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:89:1
msgid ""
"@GDK_PENCIL: <inlinegraphic format=\"PNG\" fileref=\"pencil.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:90:1
msgid ""
"@GDK_PIRATE: <inlinegraphic format=\"PNG\" fileref=\"pirate.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:91:1
msgid ""
"@GDK_PLUS: <inlinegraphic format=\"PNG\" fileref=\"plus.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:92:1
msgid ""
"@GDK_QUESTION_ARROW: <inlinegraphic format=\"PNG\" fileref=\"question_arrow."
"png\"></inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:93:1
msgid ""
"@GDK_RIGHT_PTR: <inlinegraphic format=\"PNG\" fileref=\"right_ptr.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:94:1
msgid ""
"@GDK_RIGHT_SIDE: <inlinegraphic format=\"PNG\" fileref=\"right_side.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:95:1
msgid ""
"@GDK_RIGHT_TEE: <inlinegraphic format=\"PNG\" fileref=\"right_tee.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:96:1
msgid ""
"@GDK_RIGHTBUTTON: <inlinegraphic format=\"PNG\" fileref=\"rightbutton.png"
"\"></inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:97:1
msgid ""
"@GDK_RTL_LOGO: <inlinegraphic format=\"PNG\" fileref=\"rtl_logo.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:98:1
msgid ""
"@GDK_SAILBOAT: <inlinegraphic format=\"PNG\" fileref=\"sailboat.png\"></"
"inlinegraphic>"
msgstr ""

#. used by: GdkCursorType:
#: gdkcursor.h:99:1
msgid ""
"@GDK_SB_DOWN_ARROW: <inlinegraphic format=\"PNG\" fileref=\"sb_down_arrow.png"
"\"></inlinegraphic>"
msgstr ""

# #used by: gdk_device_get_n_axes:
#. used by: gdk_device_get_n_axes:
#: gdkdevice.c:1001:1
msgid "Returns: the number of axes."
msgstr ""

# #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_device_set_axis_use:
# #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_device_get_n_axes:
# #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_device_list_axes:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_set_axis_use:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_get_n_axes:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_list_axes:
#: gdkdevice.c:1016:1 gdkdevice.c:803:1 gdkdevice.c:997:1
msgid "@device: a pointer #GdkDevice"
msgstr ""

# #used by: gdk_device_list_axes:
#. used by: gdk_device_list_axes:
#: gdkdevice.c:1018:2
msgid ""
"Returns a #GList of #GdkAtom<!-- -->s, containing the labels for the axes "
"that @device currently has."
msgstr ""

# #used by: gdk_device_list_axes:
#. used by: gdk_device_list_axes:
#: gdkdevice.c:1021:2
msgid ""
"Returns: (transfer container) (element-type GdkAtom): A #GList of "
"#GdkAtom<!-- -->s, free with g_list_free()."
msgstr ""

# #used by: GdkDevice:display:
#. used by: GdkDevice:display:
#: gdkdevice.c:104:1
msgid "The #GdkDisplay the #GdkDevice pertains to."
msgstr ""

# #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_device_get_axis_use:
# #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_device_get_axis_value: (skip)
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_get_axis_use:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_get_axis_value: (skip)
#: gdkdevice.c:1048:1 gdkdevice.c:777:1
msgid "@device: a pointer #GdkDevice."
msgstr ""

# #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_device_get_axis_value: (skip)
# #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_device_get_axis: (skip)
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_get_axis_value: (skip)
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_get_axis: (skip)
#: gdkdevice.c:1049:1 gdkdevice.c:1096:1
msgid "@axes: (array): pointer to an array of axes"
msgstr ""

# used by: gdk_device_get_axis_value: (skip)
#. used by: gdk_device_get_axis_value: (skip)
#: gdkdevice.c:1050:1
msgid "@axis_label: #GdkAtom with the axis label."
msgstr ""

# used by: gdk_device_get_axis_value: (skip)
#. used by: gdk_device_get_axis_value: (skip)
#: gdkdevice.c:1051:1
msgid "@value: location to store the found value."
msgstr ""

# #used by: gdk_device_get_axis_value: (skip)
#. used by: gdk_device_get_axis_value: (skip)
#: gdkdevice.c:1053:3
msgid ""
"Interprets an array of double as axis values for a given device, and locates "
"the value in the array for a given axis label, as returned by "
"gdk_device_list_axes()"
msgstr ""

# #used by: gdk_display_open_default_libgtk_only:
#. used by: gdk_device_get_axis_value: (skip)
#: gdkdevice.c:1057:1
#, fuzzy
msgid "Returns: %TRUE if the given axis use was found, otherwise %FALSE."
msgstr "Return value: 如果指定的axis 可以找到，返回%TRUE，否则返回%NULL。"

# #-#-#-#-#  gdkdevice.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_device_get_history: (skip)
# #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_device_get_name:
# #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_device_get_has_cursor:
# #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_device_get_source:
# #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_device_get_mode:
# #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_device_get_n_keys:
# #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_device_set_key:
# #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_device_get_display:
# #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_device_get_associated_device:
# #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_device_list_slave_devices:
# #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_device_get_device_type:
# #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_device_get_axis: (skip)
# #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_device_ungrab:
# #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_display_device_is_grabbed:
# #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_drag_context_set_device:
# #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_event_set_device:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_event_set_source_device:
#. #-#-#-#-#  gdkdevice.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_get_history: (skip)
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_get_name:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_get_has_cursor:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_get_source:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_get_mode:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_get_n_keys:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_set_key:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_get_display:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_get_associated_device:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_list_slave_devices:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_get_device_type:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_get_axis: (skip)
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_ungrab:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_device_is_grabbed:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_context_set_device:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_event_set_device:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_event_set_source_device:
#: gdkdevice.c:1095:1 gdkdevice.c:1269:1 gdkdevice.c:517:1 gdkdevice.c:597:1
#: gdkdevice.c:615:1 gdkdevice.c:634:1 gdkdevice.c:652:1 gdkdevice.c:700:1
#: gdkdevice.c:754:1 gdkdevice.c:844:1 gdkdevice.c:863:1 gdkdevice.c:929:1
#: gdkdevice.c:979:1 gdkdisplay.c:1286:1 gdkdnd.c:180:1 gdkevents.c:1025:1
#: gdkevents.c:1161:1
msgid "@device: a #GdkDevice"
msgstr ""

# used by: gdk_device_get_axis: (skip)
#. used by: gdk_device_get_axis: (skip)
#: gdkdevice.c:1097:1
msgid "@use: the use to look for"
msgstr ""

# used by: gdk_device_get_axis: (skip)
#. used by: gdk_device_get_axis: (skip)
#: gdkdevice.c:1098:1
msgid "@value: (out): location to store the found value."
msgstr ""

# #used by: gdk_device_get_axis: (skip)
#. used by: gdk_device_get_axis: (skip)
#: gdkdevice.c:1100:2
msgid ""
"Interprets an array of double as axis values for a given device, and locates "
"the value in the array for a given axis use."
msgstr ""

# #used by: gdk_display_open_default_libgtk_only:
#. used by: gdk_device_get_axis: (skip)
#: gdkdevice.c:1103:1
#, fuzzy
msgid "Return value: %TRUE if the given axis use was found, otherwise %FALSE"
msgstr "Return value: 如果指定的axis 可以找到，返回%TRUE，否则返回%NULL。"

# used by: gdk_device_grab:
#. used by: gdk_device_grab:
#: gdkdevice.c:1158:4
msgid ""
"@device: a #GdkDevice. To get the device you can use "
"gtk_get_current_event_device() or gdk_event_get_device() if the grab is in "
"reaction to an event. Also, you can use gdk_device_manager_get_client_pointer"
"() but only in code that isn't triggered by a #GdkEvent and there aren't "
"other means to get a meaningful #GdkDevice to operate on."
msgstr ""

# used by: gdk_device_grab:
#. used by: gdk_device_grab:
#: gdkdevice.c:1162:1
msgid "@window: the #GdkWindow which will own the grab (the grab window)"
msgstr ""

# used by: gdk_device_grab:
#. used by: gdk_device_grab:
#: gdkdevice.c:1163:1
msgid "@grab_ownership: specifies the grab ownership."
msgstr ""

# used by: gdk_device_grab:
#. used by: gdk_device_grab:
#: gdkdevice.c:1164:6
msgid ""
"@owner_events: if %FALSE then all device events are reported with respect to "
"@window and are only reported if selected by @event_mask. If %TRUE then "
"pointer events for this application are reported as normal, but pointer "
"events outside this application are reported with respect to @window and "
"only if selected by @event_mask. In either mode, unreported events are "
"discarded."
msgstr ""

# used by: gdk_device_grab:
#. used by: gdk_device_grab:
#: gdkdevice.c:1170:2
msgid ""
"@event_mask: specifies the event mask, which is used in accordance with "
"@owner_events."
msgstr ""

# used by: gdk_device_grab:
#. used by: gdk_device_grab:
#: gdkdevice.c:1172:4
msgid ""
"@cursor: (allow-none): the cursor to display while the grab is active if the "
"device is a pointer. If this is %NULL then the normal cursors are used for "
"@window and its descendants, and the cursor for @window is used elsewhere."
msgstr ""

# used by: gdk_device_grab:
#. used by: gdk_device_grab:
#: gdkdevice.c:1176:3
msgid ""
"@time_: the timestamp of the event which led to this pointer grab. This "
"usually comes from the #GdkEvent struct, though %GDK_CURRENT_TIME can be "
"used if the time isn't known."
msgstr ""

# #used by: gdk_device_grab:
#. used by: gdk_device_grab:
#: gdkdevice.c:1180:4
msgid ""
"Grabs the device so that all events coming from this device are passed to "
"this application until the device is ungrabbed with gdk_device_ungrab(), or "
"the window becomes unviewable. This overrides any previous grab on the "
"device by this client."
msgstr ""

# #used by: gdk_device_grab:
#. used by: gdk_device_grab:
#: gdkdevice.c:1185:3
msgid ""
"Device grabs are used for operations which need complete control over the "
"given device events (either pointer or keyboard). For example in GTK+ this "
"is used for Drag and Drop operations, popup menus and such."
msgstr ""

# #-#-#-#-#  gdkdevice.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_device_grab:
# #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_pointer_grab:
#. #-#-#-#-#  gdkdevice.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_grab:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_pointer_grab:
#: gdkdevice.c:1189:6 gdkwindow.c:8594:7
msgid ""
"Note that if the event mask of an X window has selected both button press "
"and button release events, then a button press event will cause an automatic "
"pointer grab until the button is released. X does this automatically since "
"most applications expect to receive button press and release events in "
"pairs. It is equivalent to a pointer grab on the window with @owner_events "
"set to %TRUE."
msgstr ""

# #used by: GdkDevice:device-manager:
#. used by: GdkDevice:device-manager:
#: gdkdevice.c:119:1
msgid "The #GdkDeviceManager the #GdkDevice pertains to."
msgstr ""

# #-#-#-#-#  gdkdevice.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_device_grab:
# #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_pointer_grab:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_keyboard_grab:
#. #-#-#-#-#  gdkdevice.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_grab:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_pointer_grab:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keyboard_grab:
#: gdkdevice.c:1196:3 gdkwindow.c:8602:3 gdkwindow.c:8717:3
msgid ""
"If you set up anything at the time you take the grab that needs to be "
"cleaned up when the grab ends, you should handle the #GdkEventGrabBroken "
"events that are emitted when the grab ends unvoluntarily."
msgstr ""

# #-#-#-#-#  gdkdevice.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_device_grab:
# #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_pointer_grab:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_keyboard_grab:
#. #-#-#-#-#  gdkdevice.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_grab:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_pointer_grab:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keyboard_grab:
#: gdkdevice.c:1200:1 gdkwindow.c:8606:1 gdkwindow.c:8721:1
msgid "Returns: %GDK_GRAB_SUCCESS if the grab was successful."
msgstr ""

# #-#-#-#-#  gdkdevice.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_device_ungrab:
# #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_display_pointer_ungrab:
#. #-#-#-#-#  gdkdevice.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_ungrab:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_pointer_ungrab:
#: gdkdevice.c:1270:1 gdkdisplay.c:369:1
msgid "@time_: a timestap (e.g. %GDK_CURRENT_TIME)."
msgstr ""

# #used by: gdk_device_ungrab:
#. used by: gdk_device_ungrab:
#: gdkdevice.c:1272:1
msgid "Release any grab on @device."
msgstr ""

# used by: gdk_device_warp:
#. used by: gdk_device_warp:
#: gdkdevice.c:1287:1
msgid "@device: the device to warp."
msgstr ""

# used by: gdk_device_warp:
#. used by: gdk_device_warp:
#: gdkdevice.c:1288:1
msgid "@screen: the screen to warp @device to."
msgstr ""

# used by: gdk_device_warp:
#. used by: gdk_device_warp:
#: gdkdevice.c:1289:1
msgid "@x: the X coordinate of the destination."
msgstr ""

# used by: gdk_device_warp:
#. used by: gdk_device_warp:
#: gdkdevice.c:1290:1
msgid "@y: the Y coordinate of the destination."
msgstr ""

# #used by: gdk_device_warp:
#. used by: gdk_device_warp:
#: gdkdevice.c:1292:6
msgid ""
"Warps @device in @display to the point @x,@y on the screen @screen, unless "
"the device is confined to a window by a grab, in which case it will be moved "
"as far as allowed by the grab. Warping the pointer creates events as if the "
"user had moved the mouse instantaneously to the destination."
msgstr ""

# #-#-#-#-#  gdkdevice.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_device_warp:
# #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_warp_pointer:
#. #-#-#-#-#  gdkdevice.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_warp:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_warp_pointer:
#: gdkdevice.c:1299:4 gdkdisplay.c:1840:4
msgid ""
"Note that the pointer should normally be under the control of the user. This "
"function was added to cover some rare use cases like keyboard navigation "
"support for the color picker in the #GtkColorSelectionDialog."
msgstr ""

# #used by: GdkDevice:name:
#. used by: GdkDevice:name:
#: gdkdevice.c:134:1
msgid "The device name."
msgstr ""

# #used by: GdkDevice:type:
#. used by: GdkDevice:type:
#: gdkdevice.c:149:1
msgid "Device role in the device manager."
msgstr ""

# #used by: GdkDevice:associated-device:
#. used by: GdkDevice:associated-device:
#: gdkdevice.c:165:2
msgid ""
"Associated pointer or keyboard with this device, if any. Devices of type "
"#GDK_DEVICE_TYPE_MASTER always come in keyboard/pointer pairs. Other device "
"types will have a %NULL associated device."
msgstr ""

# #used by: GdkDevice:input-source:
#. used by: GdkDevice:input-source:
#: gdkdevice.c:180:1
msgid "Source type for the device."
msgstr ""

# #used by: GdkDevice:input-mode:
#. used by: GdkDevice:input-mode:
#: gdkdevice.c:196:1
msgid "Input mode for the device."
msgstr ""

# #used by: GdkDevice:has-cursor:
#. used by: GdkDevice:has-cursor:
#: gdkdevice.c:211:2
msgid ""
"Whether the device is represented by a cursor on the screen. Devices of type "
"%GDK_DEVICE_TYPE_MASTER will have %TRUE here."
msgstr ""

# #used by: GdkDevice:n-axes:
#. used by: GdkDevice:n-axes:
#: gdkdevice.c:227:1
msgid "Number of axes in the device."
msgstr ""

# #-#-#-#-#  gdkdevicemanager.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: GdkDeviceManager::device-changed:
# #-#-#-#-#  gdkdevice.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: GdkDevice::changed:
#. #-#-#-#-#  gdkdevicemanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkDeviceManager::device-changed:
#. #-#-#-#-#  gdkdevice.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkDevice::changed:
#: gdkdevice.c:241:1 gdkdevicemanager.c:193:1
msgid "@device: the #GdkDevice that changed."
msgstr ""

# #used by: GdkDevice::changed:
#. used by: GdkDevice::changed:
#: gdkdevice.c:243:7
msgid ""
"The ::changed signal is emitted either when the #GdkDevice has changed the "
"number of either axes or keys. For example In X this will normally happen "
"when the slave device routing events through the master device changes (for "
"example, user switches from the USB mouse to a tablet), in that case the "
"master device will change to reflect the new slave device axes and keys."
msgstr ""

# used by: SECTION:gdkdevice
#. used by: SECTION:gdkdevice
#: gdkdevice.c:31:1
msgid "@Short_description: Object representing an input device"
msgstr ""

# used by: SECTION:gdkdevice
#. used by: SECTION:gdkdevice
#: gdkdevice.c:32:1
msgid "@Title: GdkDevice"
msgstr ""

# used by: SECTION:gdkdevice
#. used by: SECTION:gdkdevice
#: gdkdevice.c:33:1
msgid "@See_also: #GdkDeviceManager"
msgstr ""

# #used by: SECTION:gdkdevice
#. used by: SECTION:gdkdevice
#: gdkdevice.c:35:2
msgid ""
"The #GdkDevice object represents a single input device, such as a keyboard, "
"a mouse, a touchpad, etc."
msgstr ""

# #used by: SECTION:gdkdevice
#. used by: SECTION:gdkdevice
#: gdkdevice.c:38:3
msgid ""
"See the #GdkDeviceManager documentation for more information about the "
"various kinds of master and slave devices, and their relationships."
msgstr ""

# #-#-#-#-#  gdkdevice.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_device_get_state: (skip)
# #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_device_set_mode:
# #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_device_get_key:
# #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_get_device_events:
#. #-#-#-#-#  gdkdevice.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_get_state: (skip)
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_set_mode:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_get_key:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_device_events:
#: gdkdevice.c:383:1 gdkdevice.c:670:1 gdkdevice.c:718:1 gdkwindow.c:5846:1
msgid "@device: a #GdkDevice."
msgstr ""

# used by: _gdk_window_clear_update_area:
#. #-#-#-#-#  gdkdevice.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_get_state: (skip)
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: _gdk_window_clear_update_area:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_device_position:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_device_events:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_device_cursor:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_support_multidevice:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_support_multidevice:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_register_dnd:
#: gdkdevice.c:384:1 gdkwindow.c:10574:1 gdkwindow.c:4625:1 gdkwindow.c:4929:1
#: gdkwindow.c:5845:1 gdkwindow.c:6648:1 gdkwindow.c:7981:1 gdkwindow.c:8010:1
msgid "@window: a #GdkWindow."
msgstr ""

# used by: gdk_device_get_state: (skip)
#. used by: gdk_device_get_state: (skip)
#: gdkdevice.c:385:2
msgid ""
"@axes: an array of doubles to store the values of the axes of @device in, or "
"%NULL."
msgstr ""

# used by: gdk_device_get_state: (skip)
#. used by: gdk_device_get_state: (skip)
#: gdkdevice.c:387:1
msgid "@mask: location to store the modifiers, or %NULL."
msgstr ""

# #used by: gdk_device_get_state: (skip)
#. used by: gdk_device_get_state: (skip)
#: gdkdevice.c:389:4
msgid ""
"Gets the current state of a pointer device relative to @window. As a slave "
"device coordinates are those of its master pointer, This function may not be "
"called on devices of type %GDK_DEVICE_TYPE_SLAVE, unless there is an ongoing "
"grab on them, see gdk_device_grab()."
msgstr ""

# used by: gdk_device_get_position:
#. used by: gdk_device_get_position:
#: gdkdevice.c:412:1
msgid "@device: pointer device to query status about."
msgstr ""

# used by: gdk_device_get_position:
#. used by: gdk_device_get_position:
#: gdkdevice.c:413:2
msgid ""
"@screen: (out) (transfer none) (allow-none): location to store the "
"#GdkScreen the @device is on, or %NULL."
msgstr ""

# used by: gdk_device_get_position:
#. used by: gdk_device_get_position:
#: gdkdevice.c:415:1
msgid ""
"@x: (out) (allow-none): location to store root window X coordinate of "
"@device, or %NULL."
msgstr ""

# used by: gdk_device_get_position:
#. used by: gdk_device_get_position:
#: gdkdevice.c:416:1
msgid ""
"@y: (out) (allow-none): location to store root window Y coordinate of "
"@device, or %NULL."
msgstr ""

# #used by: gdk_device_get_position:
#. used by: gdk_device_get_position:
#: gdkdevice.c:418:4
msgid ""
"Gets the current location of @device. As a slave device coordinates are "
"those of its master pointer, This function may not be called on devices of "
"type %GDK_DEVICE_TYPE_SLAVE, unless there is an ongoing grab on them, see "
"gdk_device_grab()."
msgstr ""

# used by: gdk_device_get_window_at_position:
#. used by: gdk_device_get_window_at_position:
#: gdkdevice.c:462:1
msgid "@device: pointer #GdkDevice to query info to."
msgstr ""

# used by: gdk_device_get_window_at_position:
#. used by: gdk_device_get_window_at_position:
#: gdkdevice.c:463:2
msgid ""
"@win_x: (out) (allow-none): return location for the X coordinate of the "
"device location, relative to the window origin, or %NULL."
msgstr ""

# used by: gdk_device_get_window_at_position:
#. used by: gdk_device_get_window_at_position:
#: gdkdevice.c:465:2
msgid ""
"@win_y: (out) (allow-none): return location for the Y coordinate of the "
"device location, relative to the window origin, or %NULL."
msgstr ""

# #used by: gdk_device_get_window_at_position:
#. used by: gdk_device_get_window_at_position:
#: gdkdevice.c:468:2
msgid ""
"Obtains the window underneath @device, returning the location of the device "
"in @win_x and @win_y. Returns %NULL if the window tree under @device is not "
"known to GDK (for example, belongs to another application)."
msgstr ""

# #used by: gdk_device_get_window_at_position:
#. used by: gdk_device_get_window_at_position:
#: gdkdevice.c:471:3
msgid ""
"As a slave device coordinates are those of its master pointer, This function "
"may not be called on devices of type %GDK_DEVICE_TYPE_SLAVE, unless there is "
"an ongoing grab on them, see gdk_device_grab()."
msgstr ""

# #used by: gdk_device_get_window_at_position:
#. used by: gdk_device_get_window_at_position:
#: gdkdevice.c:475:1
msgid ""
"Returns: (transfer none): the #GdkWindow under the device position, or %NULL."
msgstr ""

# used by: gdk_device_get_history: (skip)
#. used by: gdk_device_get_history: (skip)
#: gdkdevice.c:518:1
msgid ""
"@window: the window with respect to which which the event coordinates will "
"be reported"
msgstr ""

# used by: gdk_device_get_history: (skip)
#. used by: gdk_device_get_history: (skip)
#: gdkdevice.c:519:1
msgid "@start: starting timestamp for range of events to return"
msgstr ""

# used by: gdk_device_get_history: (skip)
#. used by: gdk_device_get_history: (skip)
#: gdkdevice.c:520:1
msgid "@stop: ending timestamp for the range of events to return"
msgstr ""

# used by: gdk_device_get_history: (skip)
#. used by: gdk_device_get_history: (skip)
#: gdkdevice.c:521:1
msgid ""
"@events: (array length=n_events) (out) (transfer full): location to store a "
"newly-allocated array of #GdkTimeCoord, or %NULL"
msgstr ""

# used by: gdk_device_get_history: (skip)
#. used by: gdk_device_get_history: (skip)
#: gdkdevice.c:522:1
msgid "@n_events: location to store the length of @events, or %NULL"
msgstr ""

# #used by: gdk_device_get_history: (skip)
#. used by: gdk_device_get_history: (skip)
#: gdkdevice.c:524:6
msgid ""
"Obtains the motion history for a pointer device; given a starting and ending "
"timestamp, return all events in the motion history for the device in the "
"given range of time. Some windowing systems do not support motion history, "
"in which case, %FALSE will be returned. (This is not distinguishable from "
"the case where motion history is supported and no events were found.)"
msgstr ""

# #used by: gdk_device_get_history: (skip)
#. used by: gdk_device_get_history: (skip)
#: gdkdevice.c:531:2
msgid ""
"Return value: %TRUE if the windowing system supports motion history and at "
"least one event was found."
msgstr ""

# used by: gdk_device_free_history: (skip)
#. used by: gdk_device_free_history: (skip)
#: gdkdevice.c:578:1
msgid "@events: an array of #GdkTimeCoord."
msgstr ""

# used by: gdk_device_free_history: (skip)
#. used by: gdk_device_free_history: (skip)
#: gdkdevice.c:579:1
msgid "@n_events: the length of the array."
msgstr ""

# #used by: gdk_device_free_history: (skip)
#. used by: gdk_device_free_history: (skip)
#: gdkdevice.c:581:1
msgid ""
"Frees an array of #GdkTimeCoord that was returned by gdk_device_get_history"
"()."
msgstr ""

# #used by: gdk_device_get_name:
#. used by: gdk_device_get_name:
#: gdkdevice.c:599:1
msgid "Determines the name of the device."
msgstr ""

# #used by: gdk_device_get_name:
#. used by: gdk_device_get_name:
#: gdkdevice.c:601:1
msgid "Return value: a name"
msgstr ""

# #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_parse_args:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_get_display_arg_name:
# #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkDisplay::closed:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_close:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_event:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_peek_event:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_put_event:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_core_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_window_at_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_set_pointer_hooks:
# #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkDisplayManager::display-opened:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_get:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_get_default_display:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_default:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_default:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_set_default_display:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_list_displays:
# #-#-#-#-#  gdkdraw.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkdraw.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_drawable_get_screen:
# #-#-#-#-#  gdkdraw.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_drawable_get_display:
# #-#-#-#-#  gdkdraw.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_draw_pixbuf:
# #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_event_new:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_event_set_screen:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_event_get_screen:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_set_double_click_time:
# #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkKeymap::keys-changed:
# #-#-#-#-#  gdkpango.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_pango_context_get_for_screen:
# #-#-#-#-#  gdkrgb.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkrgb.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_rgb_colormap:
# #-#-#-#-#  gdkrgb.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_rgb_visual:
# #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkScreen::size-changed:
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_monitor_at_point:
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_monitor_at_window:
# #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_toplevel_windows:
#. #-#-#-#-#  gdkdevice.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_get_name:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_get_has_cursor:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_get_source:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_get_mode:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_get_key:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_get_axis_use:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_add_virtual_modifiers:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_map_virtual_modifiers:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_primary_monitor:
#: gdkdevice.c:603:1 gdkdevice.c:621:1 gdkdevice.c:640:1 gdkdevice.c:658:1
#: gdkdevice.c:728:1 gdkdevice.c:784:1 gdkkeys.c:551:1 gdkkeys.c:577:1
#: gdkscreen.c:684:1
#, fuzzy
msgid "Since: 2.20"
msgstr "Since: 2.20"

# #used by: gdk_device_get_has_cursor:
#. used by: gdk_device_get_has_cursor:
#: gdkdevice.c:617:1
msgid "Determines whether the pointer follows device motion."
msgstr ""

# #used by: gdk_display_open_default_libgtk_only:
#. used by: gdk_device_get_has_cursor:
#: gdkdevice.c:619:1
#, fuzzy
msgid "Return value: %TRUE if the pointer follows device motion"
msgstr "Return value: 如果指定的axis 可以找到，返回%TRUE，否则返回%NULL。"

# #used by: gdk_device_get_source:
#. used by: gdk_device_get_source:
#: gdkdevice.c:636:1
msgid "Determines the type of the device."
msgstr ""

# #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_device_get_source:
# #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_device_get_mode:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_get_source:
#. #-#-#-#-#  gdkdevice.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_get_mode:
#: gdkdevice.c:638:1 gdkdevice.c:656:1
msgid "Return value: a #GdkInputSource"
msgstr ""

# #used by: gdk_device_get_mode:
#. used by: gdk_device_get_mode:
#: gdkdevice.c:654:1
msgid "Determines the mode of the device."
msgstr ""

# used by: gdk_device_set_mode:
#. used by: gdk_device_set_mode:
#: gdkdevice.c:671:1
msgid "@mode: the input mode."
msgstr ""

# #used by: gdk_device_set_mode:
#. used by: gdk_device_set_mode:
#: gdkdevice.c:673:3
msgid ""
"Sets a the mode of an input device. The mode controls if the device is "
"active and whether the device's range is mapped to the entire screen or to a "
"single window."
msgstr ""

# #used by: gdk_device_set_mode:
#. used by: gdk_device_set_mode:
#: gdkdevice.c:677:1
msgid "Returns: %TRUE if the mode was successfully changed."
msgstr ""

# #used by: gdk_device_get_n_keys:
#. used by: gdk_device_get_n_keys:
#: gdkdevice.c:702:1
msgid "Returns the number of keys the device currently has."
msgstr ""

# #used by: gdk_device_get_n_keys:
#. used by: gdk_device_get_n_keys:
#: gdkdevice.c:704:1
msgid "Returns: the number of keys."
msgstr ""

# used by: gdk_device_get_key:
#. used by: gdk_device_get_key:
#: gdkdevice.c:719:1
msgid "@index_: the index of the macro button to get."
msgstr ""

# used by: gdk_device_get_key:
#. used by: gdk_device_get_key:
#: gdkdevice.c:720:1
msgid "@keyval: (out): return value for the keyval."
msgstr ""

# used by: gdk_device_get_key:
#. used by: gdk_device_get_key:
#: gdkdevice.c:721:1
msgid "@modifiers: (out): return value for modifiers."
msgstr ""

# #used by: gdk_device_get_key:
#. used by: gdk_device_get_key:
#: gdkdevice.c:723:2
msgid ""
"If @index_ has a valid keyval, this function will return %TRUE and fill in "
"@keyval and @modifiers with the keyval settings."
msgstr ""

# #used by: gdk_device_get_key:
#. used by: gdk_device_get_key:
#: gdkdevice.c:726:1
msgid "Returns: %TRUE if keyval is set for @index."
msgstr ""

# used by: gdk_device_set_key:
#. used by: gdk_device_set_key:
#: gdkdevice.c:755:1
msgid "@index_: the index of the macro button to set"
msgstr ""

# used by: gdk_device_set_key:
#. used by: gdk_device_set_key:
#: gdkdevice.c:756:1
msgid "@keyval: the keyval to generate"
msgstr ""

# used by: gdk_device_set_key:
#. used by: gdk_device_set_key:
#: gdkdevice.c:757:1
msgid "@modifiers: the modifiers to set"
msgstr ""

# #used by: gdk_device_set_key:
#. used by: gdk_device_set_key:
#: gdkdevice.c:759:2
msgid ""
"Specifies the X key event to generate when a macro button of a device is "
"pressed."
msgstr ""

# used by: gdk_device_get_axis_use:
#. used by: gdk_device_get_axis_use:
#: gdkdevice.c:778:1
msgid "@index_: the index of the axis."
msgstr ""

# #used by: gdk_device_get_axis_use:
#. used by: gdk_device_get_axis_use:
#: gdkdevice.c:780:1
msgid "Returns the axis use for @index_."
msgstr ""

# #used by: gdk_device_get_axis_use:
#. used by: gdk_device_get_axis_use:
#: gdkdevice.c:782:1
msgid "Returns: a #GdkAxisUse specifying how the axis is used."
msgstr ""

# used by: gdk_device_set_axis_use:
#. used by: gdk_device_set_axis_use:
#: gdkdevice.c:804:1
msgid "@index_: the index of the axis"
msgstr ""

# used by: gdk_device_set_axis_use:
#. used by: gdk_device_set_axis_use:
#: gdkdevice.c:805:1
msgid "@use: specifies how the axis is used"
msgstr ""

# #used by: gdk_device_set_axis_use:
#. used by: gdk_device_set_axis_use:
#: gdkdevice.c:807:1
msgid "Specifies how an axis of a device is used."
msgstr ""

# #used by: gdk_device_get_display:
#. used by: gdk_device_get_display:
#: gdkdevice.c:846:1
msgid "Returns the #GdkDisplay to which @device pertains."
msgstr ""

# #used by: gdk_get_display_arg_name:
#. used by: gdk_device_get_display:
#: gdkdevice.c:848:2
#, fuzzy
msgid ""
"Returns: (transfer none): a #GdkDisplay. This memory is owned by GTK+, and "
"must not be freed or unreffed."
msgstr ""
"Returns: 如果显式地指定的话，返回显示(display)名称，否则返回%NULL。这个字符串"
"将被GTK+拥有, 不得修改或释放。"

# #used by: gdk_device_get_associated_device:
#. used by: gdk_device_get_associated_device:
#: gdkdevice.c:865:3
msgid ""
"Returns the associated device to @device, if @device is of type "
"%GDK_DEVICE_TYPE_MASTER, it will return the paired pointer or keyboard."
msgstr ""

# #used by: gdk_device_get_associated_device:
#. used by: gdk_device_get_associated_device:
#: gdkdevice.c:869:2
msgid ""
"If @device is of type %GDK_DEVICE_TYPE_SLAVE, it will return the master "
"device to which @device is attached to."
msgstr ""

# #used by: gdk_device_get_associated_device:
#. used by: gdk_device_get_associated_device:
#: gdkdevice.c:872:2
msgid ""
"If @device is of type %GDK_DEVICE_TYPE_FLOATING, %NULL will be returned, as "
"there is no associated device."
msgstr ""

# #used by: gdk_device_get_associated_device:
#. used by: gdk_device_get_associated_device:
#: gdkdevice.c:875:1
msgid "Returns: (transfer none): The associated device, or %NULL"
msgstr ""

# #used by: gdk_device_list_slave_devices:
#. used by: gdk_device_list_slave_devices:
#: gdkdevice.c:931:3
msgid ""
"If the device if of type %GDK_DEVICE_TYPE_MASTER, it will return the list of "
"slave devices attached to it, otherwise it will return %NULL"
msgstr ""

# #used by: gdk_device_list_slave_devices:
#. used by: gdk_device_list_slave_devices:
#: gdkdevice.c:935:4
msgid ""
"Returns: (transfer container) (element-type GdkDevice): the list of slave "
"devices, or %NULL. The list must be freed with g_list_free(), the contents "
"of the list are owned by GTK+ and should not be freed."
msgstr ""

# #used by: gdk_device_get_device_type:
#. used by: gdk_device_get_device_type:
#: gdkdevice.c:981:1
msgid "Returns the device type for @device."
msgstr ""

# #used by: gdk_device_get_device_type:
#. used by: gdk_device_get_device_type:
#: gdkdevice.c:983:1
msgid "Returns: the #GdkDeviceType for @device."
msgstr ""

# #used by: gdk_device_get_n_axes:
#. used by: gdk_device_get_n_axes:
#: gdkdevice.c:999:1
msgid "Returns the number of axes the device currently has."
msgstr ""

#. used by: GdkAxisUse:
#: gdkdevice.h:100:1
msgid "@GDK_AXIS_PRESSURE: the axis is used for pressure information."
msgstr ""

#. used by: GdkAxisUse:
#: gdkdevice.h:101:1
msgid "@GDK_AXIS_XTILT: the axis is used for x tilt information."
msgstr ""

#. used by: GdkAxisUse:
#: gdkdevice.h:102:1
msgid "@GDK_AXIS_YTILT: the axis is used for y tilt information."
msgstr ""

#. used by: GdkAxisUse:
#: gdkdevice.h:103:1
msgid "@GDK_AXIS_WHEEL: the axis is used for wheel information."
msgstr ""

#. used by: GdkAxisUse:
#: gdkdevice.h:104:1
msgid "@GDK_AXIS_LAST: a constant equal to the numerically highest axis value."
msgstr ""

#. used by: GdkAxisUse:
#: gdkdevice.h:106:3
msgid ""
"An enumeration describing the way in which a device axis (valuator) maps "
"onto the predefined valuator types that GTK+ understands."
msgstr ""

#. used by: GdkDeviceType:
#: gdkdevice.h:124:2
msgid ""
"@GDK_DEVICE_TYPE_MASTER: Device is a master (or virtual) device. There will "
"be an associated focus indicator on the screen."
msgstr ""

#. used by: GdkDeviceType:
#: gdkdevice.h:126:1
msgid "@GDK_DEVICE_TYPE_SLAVE: Device is a slave (or physical) device."
msgstr ""

#. used by: GdkDeviceType:
#: gdkdevice.h:127:2
msgid ""
"@GDK_DEVICE_TYPE_FLOATING: Device is a physical device, currently not "
"attached to any virtual device."
msgstr ""

#. used by: GdkDeviceType:
#: gdkdevice.h:130:2
msgid ""
"Indicates the device type. See <link linkend=\"GdkDeviceManager.description"
"\">above</link> for more information about the meaning of these device types."
msgstr ""

#. used by: GdkTimeCoord:
#: gdkdevice.h:146:1
msgid "@time: The timestamp for this event."
msgstr ""

# #used by: gdk_display_manager_get_default_display:
#. used by: GdkTimeCoord:
#: gdkdevice.h:147:1
#, fuzzy
msgid "@axes: the values of the device's axes."
msgstr "得到默认的#GdkDisplay。"

#. used by: GdkTimeCoord:
#: gdkdevice.h:149:1
msgid "The #GdkTimeCoord structure stores a single event in a motion history."
msgstr ""

#. used by: GdkExtensionMode:
#: gdkdevice.h:40:1
msgid "@GDK_EXTENSION_EVENTS_NONE: no extension events are desired."
msgstr ""

#. used by: GdkExtensionMode:
#: gdkdevice.h:41:1
msgid "@GDK_EXTENSION_EVENTS_ALL: all extension events are desired."
msgstr ""

#. used by: GdkExtensionMode:
#: gdkdevice.h:42:2
msgid ""
"@GDK_EXTENSION_EVENTS_CURSOR: extension events are desired only if a cursor "
"will be displayed for the device."
msgstr ""

#. used by: GdkExtensionMode:
#: gdkdevice.h:45:2
msgid ""
"An enumeration used to specify which extension events are desired for a "
"particular widget."
msgstr ""

#. used by: GdkInputSource:
#: gdkdevice.h:57:2
msgid ""
"@GDK_SOURCE_MOUSE: the device is a mouse. (This will be reported for the "
"core pointer, even if it is something else, such as a trackball.)"
msgstr ""

#. used by: GdkInputSource:
#: gdkdevice.h:59:1
msgid ""
"@GDK_SOURCE_PEN: the device is a stylus of a graphics tablet or similar "
"device."
msgstr ""

#. used by: GdkInputSource:
#: gdkdevice.h:60:2
msgid ""
"@GDK_SOURCE_ERASER: the device is an eraser. Typically, this would be the "
"other end of a stylus on a graphics tablet."
msgstr ""

#. used by: GdkInputSource:
#: gdkdevice.h:62:1
msgid ""
"@GDK_SOURCE_CURSOR: the device is a graphics tablet \"puck\" or similar "
"device."
msgstr ""

#. used by: GdkInputSource:
#: gdkdevice.h:63:1
msgid "@GDK_SOURCE_KEYBOARD: the device is a keyboard."
msgstr ""

#. used by: GdkInputSource:
#: gdkdevice.h:65:1
msgid "An enumeration describing the type of an input device in general terms."
msgstr ""

#. used by: GdkInputMode:
#: gdkdevice.h:78:1
msgid ""
"@GDK_MODE_DISABLED: the device is disabled and will not report any events."
msgstr ""

#. used by: GdkInputMode:
#: gdkdevice.h:79:2
msgid ""
"@GDK_MODE_SCREEN: the device is enabled. The device's coordinate space maps "
"to the entire screen."
msgstr ""

#. used by: GdkInputMode:
#: gdkdevice.h:81:4
msgid ""
"@GDK_MODE_WINDOW: the device is enabled. The device's coordinate space is "
"mapped to a single window. The manner in which this window is chosen is "
"undefined, but it will typically be the same way in which the focus window "
"for key events is determined."
msgstr ""

#. used by: GdkInputMode:
#: gdkdevice.h:86:1
msgid "An enumeration that describes the mode of an input device."
msgstr ""

#. used by: GdkAxisUse:
#: gdkdevice.h:97:1
msgid "@GDK_AXIS_IGNORE: the axis is ignored."
msgstr ""

#. used by: GdkAxisUse:
#: gdkdevice.h:98:1
msgid "@GDK_AXIS_X: the axis is used as the x axis."
msgstr ""

#. used by: GdkAxisUse:
#: gdkdevice.h:99:1
msgid "@GDK_AXIS_Y: the axis is used as the y axis."
msgstr ""

# #-#-#-#-#  gdkdevicemanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: GdkDeviceManager::device-added:
# #-#-#-#-#  gdkdevicemanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: GdkDeviceManager::device-removed:
# #-#-#-#-#  gdkdevicemanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: GdkDeviceManager::device-changed:
#. #-#-#-#-#  gdkdevicemanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkDeviceManager::device-added:
#. #-#-#-#-#  gdkdevicemanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkDeviceManager::device-removed:
#. #-#-#-#-#  gdkdevicemanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkDeviceManager::device-changed:
#: gdkdevicemanager.c:154:1 gdkdevicemanager.c:173:1 gdkdevicemanager.c:192:1
msgid "@device_manager: the object on which the signal is emitted"
msgstr ""

# used by: GdkDeviceManager::device-added:
#. used by: GdkDeviceManager::device-added:
#: gdkdevicemanager.c:155:1
msgid "@device: the newly added #GdkDevice."
msgstr ""

# #used by: GdkDeviceManager::device-added:
#. used by: GdkDeviceManager::device-added:
#: gdkdevicemanager.c:157:3
msgid ""
"The ::device-added signal is emitted either when a new master pointer is "
"created, or when a slave (Hardware) input device is plugged in."
msgstr ""

# used by: GdkDeviceManager::device-removed:
#. used by: GdkDeviceManager::device-removed:
#: gdkdevicemanager.c:174:1
msgid "@device: the just removed #GdkDevice."
msgstr ""

# #used by: GdkDeviceManager::device-removed:
#. used by: GdkDeviceManager::device-removed:
#: gdkdevicemanager.c:176:3
msgid ""
"The ::device-removed signal is emitted either when a master pointer is "
"removed, or when a slave (Hardware) input device is unplugged."
msgstr ""

# #used by: GdkDeviceManager::device-changed:
#. used by: GdkDeviceManager::device-changed:
#: gdkdevicemanager.c:195:5
msgid ""
"The ::device-changed signal is emitted whenever a device has changed in the "
"hierarchy, either slave devices being disconnected from their master device "
"or connected to another one, or master devices being added or removed a "
"slave device."
msgstr ""

# #used by: GdkDeviceManager::device-changed:
#. used by: GdkDeviceManager::device-changed:
#: gdkdevicemanager.c:201:4
msgid ""
"If a slave device is detached from all master devices "
"(gdk_device_get_associated_device() returns %NULL), its #GdkDeviceType will "
"change to %GDK_DEVICE_TYPE_FLOATING, if it's attached, it will change to "
"%GDK_DEVICE_TYPE_SLAVE."
msgstr ""

# #-#-#-#-#  gdkdevicemanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_device_manager_get_display:
# #-#-#-#-#  gdkdevicemanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_device_manager_list_devices:
# #-#-#-#-#  gdkdevicemanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_device_manager_get_client_pointer:
#. #-#-#-#-#  gdkdevicemanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_manager_get_display:
#. #-#-#-#-#  gdkdevicemanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_manager_list_devices:
#. #-#-#-#-#  gdkdevicemanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_device_manager_get_client_pointer:
#: gdkdevicemanager.c:259:1 gdkdevicemanager.c:279:1 gdkdevicemanager.c:303:1
msgid "@device_manager: a #GdkDeviceManager"
msgstr ""

# #used by: gdk_device_manager_get_display:
#. used by: gdk_device_manager_get_display:
#: gdkdevicemanager.c:261:1
msgid "Gets the #GdkDisplay associated to @device_manager."
msgstr ""

# #used by: gdk_get_display_arg_name:
#. used by: gdk_device_manager_get_display:
#: gdkdevicemanager.c:263:3
#, fuzzy
msgid ""
"Returns: (transfer none): the #GdkDisplay to which @device_manager is "
"associated to, or #NULL. This memory is owned by GDK and must not be freed "
"or unreferenced."
msgstr ""
"Returns: 如果显式地指定的话，返回显示(display)名称，否则返回%NULL。这个字符串"
"将被GTK+拥有, 不得修改或释放。"

# used by: gdk_device_manager_list_devices:
#. used by: gdk_device_manager_list_devices:
#: gdkdevicemanager.c:280:1
msgid "@type: device type to get."
msgstr ""

# #used by: gdk_device_manager_list_devices:
#. used by: gdk_device_manager_list_devices:
#: gdkdevicemanager.c:282:2
msgid ""
"Returns the list of devices of type @type currently attached to "
"@device_manager."
msgstr ""

# #used by: gdk_device_manager_list_devices:
#. used by: gdk_device_manager_list_devices:
#: gdkdevicemanager.c:285:4
msgid ""
"Returns: (transfer container) (element-type Gdk.Device): a list of "
"#GdkDevice<!-- -->s. The returned list must be freed with g_list_free (). "
"The list elements are owned by GTK+ and must not be freed or unreffed."
msgstr ""

# used by: SECTION:gdkdevicemanager
#. used by: SECTION:gdkdevicemanager
#: gdkdevicemanager.c:29:1
msgid "@Short_description: Functions for handling input devices"
msgstr ""

# used by: SECTION:gdkdevicemanager
#. used by: SECTION:gdkdevicemanager
#: gdkdevicemanager.c:30:1
msgid "@Title: GdkDeviceManager"
msgstr ""

# #used by: gdk_device_manager_get_client_pointer:
#. used by: gdk_device_manager_get_client_pointer:
#: gdkdevicemanager.c:305:3
msgid ""
"Returns the client pointer, that is, the master pointer that acts as the "
"core pointer for this application. In X11, window managers may change this "
"depending on the interaction pattern under the presence of several pointers."
msgstr ""

# #used by: gdk_device_manager_get_client_pointer:
#. used by: gdk_device_manager_get_client_pointer:
#: gdkdevicemanager.c:309:2
msgid ""
"You should use this function sheldomly, only in code that isn't triggered by "
"a #GdkEvent and there aren't other means to get a meaningful #GdkDevice to "
"operate on."
msgstr ""

# used by: SECTION:gdkdevicemanager
#. used by: SECTION:gdkdevicemanager
#: gdkdevicemanager.c:31:1
msgid "@See_also: #GdkDevice, #GdkEvent"
msgstr ""

# #used by: gdk_get_display_arg_name:
#. used by: gdk_device_manager_get_client_pointer:
#: gdkdevicemanager.c:312:2
#, fuzzy
msgid ""
"Returns: (transfer none): The client pointer. This memory is owned by GDK "
"and must not be freed or unreferenced."
msgstr ""
"Returns: 如果显式地指定的话，返回显示(display)名称，否则返回%NULL。这个字符串"
"将被GTK+拥有, 不得修改或释放。"

# #used by: SECTION:gdkdevicemanager
#. used by: SECTION:gdkdevicemanager
#: gdkdevicemanager.c:33:7
msgid ""
"In addition to a single pointer and keyboard for user interface input, GDK "
"contains support for a variety of input devices, including graphics tablets, "
"touchscreens and multiple pointers/keyboards interacting simultaneously with "
"the user interface. Under X, the support for multiple input devices is done "
"through the <firstterm>XInput 2</firstterm> extension, which also supports "
"additional features such as sub-pixel positioning information and additional "
"device-dependent information."
msgstr ""

# #used by: SECTION:gdkdevicemanager
#. used by: SECTION:gdkdevicemanager
#: gdkdevicemanager.c:41:7
msgid ""
"By default, and if the platform supports it, GDK is aware of multiple "
"keyboard/pointer pairs and multitouch devices, this behavior can be changed "
"by calling gdk_disable_multidevice() before gdk_display_open(), although "
"there would rarely be a reason to do that. For a widget or window to be "
"dealt as multipointer aware, gdk_window_set_support_multidevice() or "
"gtk_widget_set_support_multidevice() must have been called on it."
msgstr ""

# #used by: SECTION:gdkdevicemanager
#. used by: SECTION:gdkdevicemanager
#: gdkdevicemanager.c:49:5
msgid ""
"Conceptually, in multidevice mode there are 2 device types. Virtual devices "
"(or master devices) are represented by the pointer cursors and keyboard foci "
"that are seen on the screen. Physical devices (or slave devices) represent "
"the hardware that is controlling the virtual devices, and thus have no "
"visible cursor on the screen."
msgstr ""

# #used by: SECTION:gdkdevicemanager
#. used by: SECTION:gdkdevicemanager
#: gdkdevicemanager.c:55:3
msgid ""
"Virtual devices are always paired, so there is a keyboard device for every "
"pointer device. Associations between devices may be inspected through "
"gdk_device_get_associated_device()."
msgstr ""

#. used by: SECTION:gdkdevicemanager
#: gdkdevicemanager.c:59:3
msgid ""
"There may be several virtual devices, and several physical devices could be "
"controlling each of these virtual devices. Physical devices may also be "
"\"floating\", which means they are not attached to any virtual device."
msgstr ""

# #used by: SECTION:gdkdevicemanager
#. used by: SECTION:gdkdevicemanager
#: gdkdevicemanager.c:63:18
msgid ""
"By default, GDK will automatically listen for events coming from all master "
"devices, setting the #GdkDevice for all events coming from input devices, "
"<footnote> Events containing device information are #GDK_MOTION_NOTIFY, "
"#GDK_BUTTON_PRESS, #GDK_2BUTTON_PRESS, #GDK_3BUTTON_PRESS, "
"#GDK_BUTTON_RELEASE, #GDK_SCROLL, #GDK_KEY_PRESS, #GDK_KEY_RELEASE, "
"#GDK_ENTER_NOTIFY, #GDK_LEAVE_NOTIFY, #GDK_FOCUS_CHANGE, #GDK_PROXIMITY_IN, "
"#GDK_PROXIMITY_OUT, #GDK_DRAG_ENTER, #GDK_DRAG_LEAVE, #GDK_DRAG_MOTION, "
"#GDK_DRAG_STATUS, #GDK_DROP_START, #GDK_DROP_FINISHED and #GDK_GRAB_BROKEN. "
"</footnote> Although gdk_window_set_support_multidevice() must be called on "
"#GdkWindows in order to support additional features of multiple pointer "
"interaction, such as multiple per-device enter/leave events, the default "
"setting will emit just one enter/leave event pair for all devices on the "
"window. See gdk_window_set_support_multidevice() documentation for more "
"information."
msgstr ""

# #used by: SECTION:gdkdevicemanager
#. used by: SECTION:gdkdevicemanager
#: gdkdevicemanager.c:82:3
msgid ""
"In order to listen for events coming from other than a virtual device, "
"gdk_window_set_device_events() must be called. Generally, this function can "
"be used to modify the event mask for any given device."
msgstr ""

# #used by: SECTION:gdkdevicemanager
#. used by: SECTION:gdkdevicemanager
#: gdkdevicemanager.c:86:8
msgid ""
"Input devices may also provide additional information besides X/Y. For "
"example, graphics tablets may also provide pressure and X/Y tilt "
"information. This information is device-dependent, and may be queried "
"through gdk_device_get_axis(). In multidevice mode, virtual devices will "
"change axes in order to always represent the physical device that is routing "
"events through it. Whenever the physical device changes, the #GdkDevice:n-"
"axes property will be notified, and gdk_device_list_axes() will return the "
"new device axes."
msgstr ""

# #used by: SECTION:gdkdevicemanager
#. used by: SECTION:gdkdevicemanager
#: gdkdevicemanager.c:95:3
msgid ""
"Devices may also have associated <firstterm>keys</firstterm> or macro "
"buttons. Such keys can be globally set to map into normal X keyboard events. "
"The mapping is set using gdk_device_set_key()."
msgstr ""

# #used by: SECTION:gdkdevicemanager
#. used by: SECTION:gdkdevicemanager
#: gdkdevicemanager.c:99:7
msgid ""
"In order to query the device hierarchy and be aware of changes in the device "
"hierarchy (such as virtual devices being created or removed, or physical "
"devices being plugged or unplugged), GDK provides #GdkDeviceManager. On X11, "
"multidevice support is implemented through XInput 2. Unless "
"gdk_disable_multidevice() is called, the XInput 2.x #GdkDeviceManager "
"implementation will be used as the input source. Otherwise either the core "
"or XInput 1.x implementations will be used."
msgstr ""

# #used by: GdkDisplay::opened:
#. used by: GdkDisplay::opened:
#: gdkdisplay.c:101:2
msgid ""
"The ::opened signal is emitted when the connection to the windowing system "
"for @display is opened."
msgstr ""

# used by: GdkDisplay::closed:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkDisplay::opened:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkDisplay::closed:
#: gdkdisplay.c:114:1 gdkdisplay.c:99:1
msgid "@display: the object on which the signal is emitted"
msgstr ""

# used by: GdkDisplay::closed:
#. used by: GdkDisplay::closed:
#: gdkdisplay.c:115:1
msgid "@is_error: %TRUE if the display was closed due to an error"
msgstr ""

# #used by: GdkDisplay::closed:
#. used by: GdkDisplay::closed:
#: gdkdisplay.c:117:2
msgid ""
"The ::closed signal is emitted when the connection to the windowing system "
"for @display is closed."
msgstr ""

# used by: gdk_device_grab_info_libgtk_only:
#. used by: gdk_device_grab_info_libgtk_only:
#: gdkdisplay.c:1208:1
msgid "@display: the display for which to get the grab information"
msgstr ""

# used by: gdk_device_grab_info_libgtk_only:
#. used by: gdk_device_grab_info_libgtk_only:
#: gdkdisplay.c:1209:1
msgid "@device: device to get the grab information from"
msgstr ""

# used by: gdk_device_grab_info_libgtk_only:
#. used by: gdk_device_grab_info_libgtk_only:
#: gdkdisplay.c:1210:1
msgid ""
"@grab_window: (out) (transfer none): location to store current grab window"
msgstr ""

# used by: gdk_device_grab_info_libgtk_only:
#. used by: gdk_device_grab_info_libgtk_only:
#: gdkdisplay.c:1211:3
msgid ""
"@owner_events: (out): location to store boolean indicating whether the "
"@owner_events flag to gdk_keyboard_grab() or gdk_pointer_grab() was %TRUE."
msgstr ""

# #used by: gdk_add_option_entries_libgtk_only:
#. used by: gdk_device_grab_info_libgtk_only:
#: gdkdisplay.c:1215:2
#, fuzzy
msgid ""
"Determines information about the current keyboard grab. This is not public "
"API and must not be used by applications."
msgstr "追加gdk的选项到已传入的选项组中。这不是公开的API，不能由应用程序使用。"

# #used by: gdk_device_grab_info_libgtk_only:
#. used by: gdk_device_grab_info_libgtk_only:
#: gdkdisplay.c:1218:2
msgid ""
"Return value: %TRUE if this application currently has the keyboard grabbed."
msgstr ""

# #used by: gdk_display_pointer_is_grabbed:
#. used by: gdk_display_pointer_is_grabbed:
#: gdkdisplay.c:1251:1
msgid "Test if the pointer is grabbed."
msgstr ""

# #used by: gdk_display_pointer_is_grabbed:
#. used by: gdk_display_pointer_is_grabbed:
#: gdkdisplay.c:1253:1
msgid "Returns: %TRUE if an active X pointer grab is in effect"
msgstr ""

# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_pointer_is_grabbed:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_pointer_is_grabbed:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_pointer_is_grabbed:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_pointer_is_grabbed:
#: gdkdisplay.c:1257:1 gdkdisplay.c:434:1
msgid "Deprecated: 3.0: Use gdk_display_device_is_grabbed() instead."
msgstr ""

# #used by: gdk_display_device_is_grabbed:
#. used by: gdk_display_device_is_grabbed:
#: gdkdisplay.c:1288:1
msgid "Returns %TRUE if there is an ongoing grab on @device for @display."
msgstr ""

# #used by: gdk_display_device_is_grabbed:
#. used by: gdk_display_device_is_grabbed:
#: gdkdisplay.c:1290:1
msgid "Returns: %TRUE if there is a grab in effect for @device."
msgstr ""

# #used by: gdk_display_manager_set_default_display:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_pointer_ungrab:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_keyboard_ungrab:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_device_manager:
#: gdkdisplay.c:1311:1 gdkdisplay.c:368:1 gdkdisplay.c:444:1
#, fuzzy
msgid "@display: a #GdkDisplay."
msgstr "设置@display作为默认的显示(display)。"

# #used by: gdk_display_get_device_manager:
#. used by: gdk_display_get_device_manager:
#: gdkdisplay.c:1313:1
msgid "Returns the #GdkDeviceManager associated to @display."
msgstr ""

# #used by: gdk_get_display_arg_name:
#. used by: gdk_display_get_device_manager:
#: gdkdisplay.c:1315:2
#, fuzzy
msgid ""
"Returns: (transfer none): A #GdkDeviceManager, or %NULL. This memory is "
"owned by GDK and must not be freed or unreferenced."
msgstr ""
"Returns: 如果显式地指定的话，返回显示(display)名称，否则返回%NULL。这个字符串"
"将被GTK+拥有, 不得修改或释放。"

# #used by: gdk_display_manager_get_default_display:
#. used by: gdk_display_get_name:
#: gdkdisplay.c:1332:1
#, fuzzy
msgid "Gets the name of the display."
msgstr "得到默认的#GdkDisplay。"

# #used by: gdk_get_display_arg_name:
#. used by: gdk_display_get_name:
#: gdkdisplay.c:1334:2
#, fuzzy
msgid ""
"Returns: a string representing the display name. This string is owned by GDK "
"and should not be modified or freed."
msgstr ""
"Returns: 如果显式地指定的话，返回显示(display)名称，否则返回%NULL。这个字符串"
"将被GTK+拥有, 不得修改或释放。"

# #used by: gdk_display_get_n_screens:
#. used by: gdk_display_get_n_screens:
#: gdkdisplay.c:1357:1
msgid "Gets the number of screen managed by the @display."
msgstr ""

# #used by: gdk_display_get_n_screens:
#. used by: gdk_display_get_n_screens:
#: gdkdisplay.c:1359:1
msgid "Returns: number of screens."
msgstr ""

# used by: gdk_display_get_screen:
#. used by: gdk_display_get_screen:
#: gdkdisplay.c:1374:1
msgid "@screen_num: the screen number"
msgstr ""

# #used by: gdk_display_get_screen:
#. used by: gdk_display_get_screen:
#: gdkdisplay.c:1376:1
msgid "Returns a screen object for one of the screens of the display."
msgstr ""

# #used by: gdk_display_get_screen:
#. used by: gdk_display_get_screen:
#: gdkdisplay.c:1378:1
msgid "Returns: (transfer none): the #GdkScreen object"
msgstr ""

# #used by: gdk_display_manager_get_default_display:
#. used by: gdk_display_get_default_screen:
#: gdkdisplay.c:1395:1
#, fuzzy
msgid "Get the default #GdkScreen for @display."
msgstr "得到默认的#GdkDisplay。"

# #used by: gdk_display_get_default_screen:
#. used by: gdk_display_get_default_screen:
#: gdkdisplay.c:1397:1
msgid "Returns: (transfer none): the default #GdkScreen object for @display"
msgstr ""

# #used by: gdk_display_beep:
#. used by: gdk_display_beep:
#: gdkdisplay.c:1413:1
msgid "Emits a short beep on @display"
msgstr ""

# #used by: gdk_display_sync:
#. used by: gdk_display_sync:
#: gdkdisplay.c:1429:6
msgid ""
"Flushes any requests queued for the windowing system and waits until all "
"requests have been handled. This is often used for making sure that the "
"display is synchronized with the current state of the program. Calling "
"gdk_display_sync() before gdk_error_trap_pop() makes sure that any errors "
"generated from earlier requests are handled before the error trap is removed."
msgstr ""

# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_sync:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_flush:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_sync:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_flush:
#: gdkdisplay.c:1436:2 gdkdisplay.c:1460:2
msgid ""
"This is most useful for X11. On windowing systems where requests are handled "
"synchronously, this function will do nothing."
msgstr ""

# #used by: gdk_display_flush:
#. used by: gdk_display_flush:
#: gdkdisplay.c:1453:6
msgid ""
"Flushes any requests queued for the windowing system; this happens "
"automatically when the main loop blocks waiting for new events, but if your "
"application is drawing without returning control to the main loop, you may "
"need to call this function explicitely. A common case where this function "
"needs to be called is when an application is executing drawing commands from "
"a thread other than the thread where the main loop is running."
msgstr ""

# #used by: gdk_display_get_default_group:
#. used by: gdk_display_get_default_group:
#: gdkdisplay.c:1477:3
msgid ""
"Returns the default group leader window for all toplevel windows on "
"@display. This window is implicitly created by GDK. See gdk_window_set_group"
"()."
msgstr ""

# #used by: gdk_display_get_default_group:
#. used by: gdk_display_get_default_group:
#: gdkdisplay.c:1481:2
msgid ""
"Return value: (transfer none): The default group leader window for @display"
msgstr ""

# #used by: gdk_display_supports_selection_notification:
#. used by: gdk_display_supports_selection_notification:
#: gdkdisplay.c:1498:2
msgid ""
"Returns whether #GdkEventOwnerChange events will be sent when the owner of a "
"selection changes."
msgstr ""

# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_supports_selection_notification:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_request_selection_notification:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_supports_selection_notification:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_request_selection_notification:
#: gdkdisplay.c:1501:2 gdkdisplay.c:1523:2
msgid "Return value: whether #GdkEventOwnerChange events will be sent."
msgstr ""

# #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_parse_args:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_get_display_arg_name:
# #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkDisplay::closed:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_close:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_event:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_peek_event:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_put_event:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_core_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_window_at_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_set_pointer_hooks:
# #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkDisplayManager::display-opened:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_get:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_get_default_display:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_default:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_default:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_set_default_display:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_list_displays:
# #-#-#-#-#  gdkdraw.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkdraw.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_drawable_get_screen:
# #-#-#-#-#  gdkdraw.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_drawable_get_display:
# #-#-#-#-#  gdkdraw.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_draw_pixbuf:
# #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_event_new:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_event_set_screen:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_event_get_screen:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_set_double_click_time:
# #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkKeymap::keys-changed:
# #-#-#-#-#  gdkpango.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_pango_context_get_for_screen:
# #-#-#-#-#  gdkrgb.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkrgb.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_rgb_colormap:
# #-#-#-#-#  gdkrgb.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_rgb_visual:
# #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkScreen::size-changed:
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_monitor_at_point:
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_monitor_at_window:
# #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_toplevel_windows:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_supports_selection_notification:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_request_selection_notification:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_supports_clipboard_persistence
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_store_clipboard
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_drop_succeeded:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventOwnerChange:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_focus_on_map:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_enable_synchronized_configure:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_configure_finished:
#: gdkdisplay.c:1504:1 gdkdisplay.c:1526:1 gdkdisplay.c:1549:1
#: gdkdisplay.c:1575:1 gdkdnd.c:432:1 gdkevents.h:835:1 gdkwindow.c:10066:1
#: gdkwindow.c:10510:1 gdkwindow.c:10531:1
msgid "Since: 2.6"
msgstr "Since: 2.6"

# used by: gdk_display_request_selection_notification:
#. used by: gdk_display_request_selection_notification:
#: gdkdisplay.c:1517:2
msgid ""
"@selection: the #GdkAtom naming the selection for which ownership change "
"notification is requested"
msgstr ""

# #used by: gdk_display_request_selection_notification:
#. used by: gdk_display_request_selection_notification:
#: gdkdisplay.c:1520:2
msgid ""
"Request #GdkEventOwnerChange events for ownership changes of the selection "
"named by the given atom."
msgstr ""

# #used by: gdk_display_supports_clipboard_persistence
#. used by: gdk_display_supports_clipboard_persistence
#: gdkdisplay.c:1542:4
msgid ""
"Returns whether the speicifed display supports clipboard persistance; i.e. "
"if it's possible to store the clipboard data after an application has quit. "
"On X11 this checks if a clipboard daemon is running."
msgstr ""

# #used by: gdk_display_supports_clipboard_persistence
#. used by: gdk_display_supports_clipboard_persistence
#: gdkdisplay.c:1547:1
msgid "Returns: %TRUE if the display supports clipboard persistance."
msgstr ""

# used by: gdk_display_store_clipboard
#. used by: gdk_display_store_clipboard
#: gdkdisplay.c:1561:1
msgid "@display:          a #GdkDisplay"
msgstr ""

# used by: gdk_display_store_clipboard
#. used by: gdk_display_store_clipboard
#: gdkdisplay.c:1562:1
msgid "@clipboard_window: a #GdkWindow belonging to the clipboard owner"
msgstr ""

# used by: gdk_display_store_clipboard
#. used by: gdk_display_store_clipboard
#: gdkdisplay.c:1563:1
msgid "@time_:            a timestamp"
msgstr ""

# used by: gdk_display_store_clipboard
#. used by: gdk_display_store_clipboard
#: gdkdisplay.c:1564:3
msgid ""
"@targets:          (array length=n_targets): an array of targets that should "
"be saved, or %NULL if all available targets should be saved."
msgstr ""

# used by: gdk_display_store_clipboard
#. used by: gdk_display_store_clipboard
#: gdkdisplay.c:1567:1
msgid "@n_targets:        length of the @targets array"
msgstr ""

#. used by: gdk_display_store_clipboard
#: gdkdisplay.c:1569:5
msgid ""
"Issues a request to the clipboard manager to store the clipboard data. On "
"X11, this is a special program that works according to the freedesktop "
"clipboard specification, available at <ulink url=\"http://www.freedesktop."
"org/Standards/clipboard-manager-spec\"> http://www.freedesktop.org/Standards/"
"clipboard-manager-spec</ulink>."
msgstr ""

# #used by: gdk_display_supports_shapes:
#. used by: gdk_display_supports_shapes:
#: gdkdisplay.c:1593:2
msgid ""
"Returns %TRUE if gdk_window_shape_combine_mask() can be used to create "
"shaped windows on @display."
msgstr ""

# #used by: gdk_display_supports_shapes:
#. used by: gdk_display_supports_shapes:
#: gdkdisplay.c:1596:1
msgid "Returns: %TRUE if shaped windows are supported"
msgstr ""

# #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout:
# #-#-#-#-#  gdkcolor.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_color_to_string:
# #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_event_request_motions:
# #-#-#-#-#  gdkpango.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_pango_attr_emboss_color_new:
# #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_window_set_composited:
#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_atom_intern_static_string:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_supports_shapes:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_supports_input_shapes:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkScreen::composited-changed:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_set_font_options:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_font_options:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_set_resolution:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_resolution:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_is_composited:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_active_window:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_window_stack:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_input_shape_combine_region:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_child_input_shapes:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_merge_child_input_shapes:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_type_hint:
#: gdkdisplay.c:1598:1 gdkdisplay.c:1617:1 gdkdisplaymanager.c:403:1
#: gdkscreen.c:134:1 gdkscreen.c:402:1 gdkscreen.c:433:1 gdkscreen.c:454:1
#: gdkscreen.c:483:1 gdkscreen.c:854:1 gdkscreen.c:900:1 gdkscreen.c:932:1
#: gdkwindow.c:7222:1 gdkwindow.c:7291:1 gdkwindow.c:7314:1 gdkwindow.c:9766:1
msgid "Since: 2.10"
msgstr "Since: 2.10"

# #used by: gdk_display_supports_input_shapes:
#. used by: gdk_display_supports_input_shapes:
#: gdkdisplay.c:1612:2
msgid ""
"Returns %TRUE if gdk_window_input_shape_combine_mask() can be used to modify "
"the input shape of windows on @display."
msgstr ""

# #used by: gdk_display_supports_input_shapes:
#. used by: gdk_display_supports_input_shapes:
#: gdkdisplay.c:1615:1
msgid "Returns: %TRUE if windows with modified input shape are supported"
msgstr ""

# #used by: gdk_display_supports_composite:
#. used by: gdk_display_supports_composite:
#: gdkdisplay.c:1631:2
msgid ""
"Returns %TRUE if gdk_window_set_composited() can be used to redirect drawing "
"on the window using compositing."
msgstr ""

# #used by: gdk_display_supports_composite:
#. used by: gdk_display_supports_composite:
#: gdkdisplay.c:1634:2
msgid ""
"Currently this only works on X11 with XComposite and XDamage extensions "
"available."
msgstr ""

# #used by: gdk_display_supports_composite:
#. used by: gdk_display_supports_composite:
#: gdkdisplay.c:1637:1
msgid "Returns: %TRUE if windows may be composited."
msgstr ""

# #used by: gdk_display_list_devices:
#. used by: gdk_display_list_devices:
#: gdkdisplay.c:1653:2
msgid ""
"Returns the list of available input devices attached to @display. The list "
"is statically allocated and should not be freed."
msgstr ""

# #used by: gdk_display_list_devices:
#. used by: gdk_display_list_devices:
#: gdkdisplay.c:1656:2
msgid ""
"Return value: (transfer none) (element-type GdkDevice): a list of #GdkDevice"
msgstr ""

# #used by: gdk_display_list_devices:
#. used by: gdk_display_list_devices:
#: gdkdisplay.c:1661:1
msgid "Deprecated: 3.0: Use gdk_device_manager_list_devices() instead."
msgstr ""

# #used by: gdk_display_get_app_launch_context:
#. used by: gdk_display_get_app_launch_context:
#: gdkdisplay.c:1687:2
msgid ""
"Returns a #GdkAppLaunchContext suitable for launching applications on the "
"given display."
msgstr ""

# #used by: gdk_display_get_app_launch_context:
#. used by: gdk_display_get_app_launch_context:
#: gdkdisplay.c:1690:2
msgid ""
"Returns: (transfer full): a new #GdkAppLaunchContext for @display. Free with "
"g_object_unref() when done"
msgstr ""

# #used by: gdk_display_manager_set_default_display:
#. used by: gdk_display_open:
#: gdkdisplay.c:1705:1
#, fuzzy
msgid "@display_name: the name of the display to open"
msgstr "设置@display作为默认的显示(display)。"

# #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_open_display:
# #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_open:
#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_manager_open_display:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_open:
#: gdkdisplay.c:1707:1 gdkdisplaymanager.c:351:1
msgid "Opens a display."
msgstr ""

# #used by: gdk_display_open_default_libgtk_only:
#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_manager_open_display:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_open:
#: gdkdisplay.c:1709:2 gdkdisplaymanager.c:353:2
#, fuzzy
msgid ""
"Return value: (transfer none): a #GdkDisplay, or %NULL if the display could "
"not be opened"
msgstr "Return value: 如果可以打开，返回默认显示，否则返回%NULL。"

# #used by: gdk_display_has_pending:
#. used by: gdk_display_has_pending:
#: gdkdisplay.c:1725:2
msgid ""
"Returns whether the display has events that are waiting to be processed."
msgstr ""

# #used by: gdk_display_has_pending:
#. used by: gdk_display_has_pending:
#: gdkdisplay.c:1728:1
msgid "Returns: %TRUE if there are events ready to be processed."
msgstr ""

# #used by: gdk_display_supports_cursor_alpha:
#. used by: gdk_display_supports_cursor_alpha:
#: gdkdisplay.c:1744:3
msgid ""
"Returns %TRUE if cursors can use an 8bit alpha channel on @display. "
"Otherwise, cursors are restricted to bilevel alpha (i.e. a mask)."
msgstr ""

# #used by: gdk_display_supports_cursor_alpha:
#. used by: gdk_display_supports_cursor_alpha:
#: gdkdisplay.c:1748:1
msgid "Returns: whether cursors can have alpha channels."
msgstr ""

# #used by: gdk_display_supports_cursor_color:
#. used by: gdk_display_supports_cursor_color:
#: gdkdisplay.c:1764:3
msgid ""
"Returns %TRUE if multicolored cursors are supported on @display. Otherwise, "
"cursors have only a forground and a background color."
msgstr ""

# #used by: gdk_display_supports_cursor_color:
#. used by: gdk_display_supports_cursor_color:
#: gdkdisplay.c:1768:1
msgid "Returns: whether cursors can have multiple colors."
msgstr ""

# #used by: gdk_display_get_default_cursor_size:
#. used by: gdk_display_get_default_cursor_size:
#: gdkdisplay.c:1784:1
msgid "Returns the default size to use for cursors on @display."
msgstr ""

# #used by: gdk_display_get_default_cursor_size:
#. used by: gdk_display_get_default_cursor_size:
#: gdkdisplay.c:1786:1
msgid "Returns: the default cursor size."
msgstr ""

# used by: gdk_display_get_maximal_cursor_size:
#. used by: gdk_display_get_maximal_cursor_size:
#: gdkdisplay.c:1807:1
msgid "@width: (out): the return location for the maximal cursor width"
msgstr ""

# used by: gdk_display_get_maximal_cursor_size:
#. used by: gdk_display_get_maximal_cursor_size:
#: gdkdisplay.c:1808:1
msgid "@height: (out): the return location for the maximal cursor height"
msgstr ""

# #used by: gdk_display_get_maximal_cursor_size:
#. used by: gdk_display_get_maximal_cursor_size:
#: gdkdisplay.c:1810:1
msgid "Gets the maximal size to use for cursors on @display."
msgstr ""

# used by: gdk_display_warp_pointer:
#. used by: gdk_display_warp_pointer:
#: gdkdisplay.c:1829:1
msgid "@screen: the screen of @display to warp the pointer to"
msgstr ""

# used by: gdk_display_warp_pointer:
#. used by: gdk_display_warp_pointer:
#: gdkdisplay.c:1830:1
msgid "@x: the x coordinate of the destination"
msgstr ""

# used by: gdk_display_warp_pointer:
#. used by: gdk_display_warp_pointer:
#: gdkdisplay.c:1831:1
msgid "@y: the y coordinate of the destination"
msgstr ""

# #used by: gdk_display_warp_pointer:
#. used by: gdk_display_warp_pointer:
#: gdkdisplay.c:1833:6
msgid ""
"Warps the pointer of @display to the point @x,@y on the screen @screen, "
"unless the pointer is confined to a window by a grab, in which case it will "
"be moved as far as allowed by the grab. Warping the pointer creates events "
"as if the user had moved the mouse instantaneously to the destination."
msgstr ""

# #used by: gdk_display_warp_pointer:
#. used by: gdk_display_warp_pointer:
#: gdkdisplay.c:1847:1
msgid "Deprecated: 3.0: Use gdk_device_warp() instead."
msgstr ""

# #used by: gdk_notify_startup_complete:
#. used by: gdk_notify_startup_complete:
#: gdkdisplay.c:1872:4
msgid ""
"Indicates to the GUI environment that the application has finished loading. "
"If the applications opens windows, this function is normally called after "
"opening the application's initial set of windows."
msgstr ""

# #used by: gdk_notify_startup_complete:
#. used by: gdk_notify_startup_complete:
#: gdkdisplay.c:1877:3
msgid ""
"GTK+ will call this function automatically after opening the first "
"#GtkWindow unless gtk_window_set_auto_startup_notification() is called to "
"disable that feature."
msgstr ""

# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_notify_startup_complete_with_id:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_display_notify_startup_complete:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_notify_startup_complete_with_id:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_notify_startup_complete:
#: gdkdisplay.c:1891:2 gdkdisplay.c:1917:2
msgid ""
"@startup_id: a startup-notification identifier, for which notification "
"process should be completed"
msgstr ""

# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_notify_startup_complete_with_id:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_notify_startup_complete:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_notify_startup_complete_with_id:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_notify_startup_complete:
#: gdkdisplay.c:1894:2 gdkdisplay.c:1920:2
msgid ""
"Indicates to the GUI environment that the application has finished loading, "
"using a given identifier."
msgstr ""

# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_notify_startup_complete_with_id:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_notify_startup_complete:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_notify_startup_complete_with_id:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_notify_startup_complete:
#: gdkdisplay.c:1897:4 gdkdisplay.c:1923:4
msgid ""
"GTK+ will call this function automatically for #GtkWindow with custom "
"startup-notification identifier unless "
"gtk_window_set_auto_startup_notification() is called to disable that feature."
msgstr ""

# #used by: gdk_display_manager_set_default_display:
#. used by: gdk_keymap_get_for_display:
#: gdkdisplay.c:1980:1
#, fuzzy
msgid "@display: the #GdkDisplay."
msgstr "设置@display作为默认的显示(display)。"

# #used by: gdk_keymap_get_for_display:
#. used by: gdk_keymap_get_for_display:
#: gdkdisplay.c:1982:1
msgid "Returns the #GdkKeymap attached to @display."
msgstr ""

# #used by: gdk_keymap_get_for_display:
#. used by: gdk_keymap_get_for_display:
#: gdkdisplay.c:1984:1
msgid "Return value: (transfer none): the #GdkKeymap attached to @display."
msgstr ""

# #used by: gdk_error_trap_push:
#. used by: gdk_error_trap_push:
#: gdkdisplay.c:2008:8
msgid ""
"This function allows X errors to be trapped instead of the normal behavior "
"of exiting the application. It should only be used if it is not possible to "
"avoid the X error in any other way. Errors are ignored on all #GdkDisplay "
"currently known to the #GdkDisplayManager. If you don't care which error "
"happens and just want to ignore everything, pop with "
"gdk_error_trap_pop_ignored(). If you need the error code, use "
"gdk_error_trap_pop() which may have to block and wait for the error to "
"arrive from the X server."
msgstr ""

# #used by: gdk_error_trap_push:
#. used by: gdk_error_trap_push:
#: gdkdisplay.c:2017:1
msgid "This API exists on all platforms but only does anything on X."
msgstr ""

# #used by: gdk_error_trap_push:
#. used by: gdk_error_trap_push:
#: gdkdisplay.c:2019:2
msgid ""
"You can use gdk_x11_display_error_trap_push() to ignore errors on only a "
"single display."
msgstr ""

# #used by: gdk_error_trap_push:
#. used by: gdk_error_trap_push:
#: gdkdisplay.c:2022:2
msgid "<example> <title>Trapping an X error</title>"
msgstr ""

# #used by: gdk_error_trap_pop_ignored:
#. used by: gdk_error_trap_pop_ignored:
#: gdkdisplay.c:2103:4
msgid ""
"Removes an error trap pushed with gdk_error_trap_push(), but without "
"bothering to wait and see whether an error occurred.  If an error arrives "
"later asynchronously that was triggered while the trap was pushed, that "
"error will be ignored."
msgstr ""

# #used by: gdk_error_trap_pop:
#. used by: gdk_error_trap_pop:
#: gdkdisplay.c:2119:7
msgid ""
"Removes an error trap pushed with gdk_error_trap_push(). May block until an "
"error has been definitively received or not received from the X server. "
"gdk_error_trap_pop_ignored() is preferred if you don't need to know whether "
"an error occurred, because it never has to block. If you don't need the "
"return value of gdk_error_trap_pop(), use gdk_error_trap_pop_ignored()."
msgstr ""

# #used by: gdk_error_trap_pop:
#. used by: gdk_error_trap_pop:
#: gdkdisplay.c:2127:3
msgid ""
"Prior to GDK 3.0, this function would not automatically sync for you, so you "
"had to gdk_flush() if your last call to Xlib was not a blocking round trip."
msgstr ""

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_seconds_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_seconds:
#. used by: gdk_error_trap_pop:
#: gdkdisplay.c:2131:1
#, fuzzy
msgid "Return value: X error code or 0 on success"
msgstr "Return value: 事件的屏幕。"

# #used by: gdk_display_close:
#. used by: gdk_display_close:
#: gdkdisplay.c:254:2
msgid ""
"Closes the connection to the windowing system for the given display, and "
"cleans up associated resources."
msgstr ""

# #used by: gdk_display_is_closed:
#. used by: gdk_display_is_closed:
#: gdkdisplay.c:279:1
msgid "Finds out if the display has been closed."
msgstr ""

# #used by: gdk_display_is_closed:
#. used by: gdk_display_is_closed:
#: gdkdisplay.c:281:1
msgid "Returns: %TRUE if the display is closed."
msgstr ""

# #used by: gdk_display_get_event:
#. used by: gdk_display_get_event:
#: gdkdisplay.c:297:2
msgid ""
"Gets the next #GdkEvent to be processed for @display, fetching events from "
"the windowing system if necessary."
msgstr ""

# #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_event:
# #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_event_get:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_event:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_event_get:
#: gdkdisplay.c:300:2 gdkevents.c:326:2
msgid ""
"Return value: the next #GdkEvent to be processed, or %NULL if no events are "
"pending. The returned #GdkEvent should be freed with gdk_event_free()."
msgstr ""

# #used by: gdk_display_peek_event:
#. used by: gdk_display_peek_event:
#: gdkdisplay.c:318:4
msgid ""
"Gets a copy of the first #GdkEvent in the @display's event queue, without "
"removing the event from the queue.  (Note that this function will not get "
"more events from the windowing system.  It only checks the events that have "
"already been moved to the GDK event queue.)"
msgstr ""

# #used by: gdk_display_peek_event:
#. used by: gdk_display_peek_event:
#: gdkdisplay.c:323:3
msgid ""
"Return value: a copy of the first #GdkEvent on the event queue, or %NULL if "
"no events are in the queue. The returned #GdkEvent should be freed with "
"gdk_event_free()."
msgstr ""

# #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_display_put_event:
# #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_event_put:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_put_event:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_event_put:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_event_get_device:
#: gdkdisplay.c:347:1 gdkevents.c:1070:1 gdkevents.c:381:1
msgid "@event: a #GdkEvent."
msgstr ""

# #used by: gdk_display_put_event:
#. used by: gdk_display_put_event:
#: gdkdisplay.c:349:2
msgid ""
"Appends a copy of the given event onto the front of the event queue for "
"@display."
msgstr ""

# #used by: gdk_display_pointer_ungrab:
#. used by: gdk_display_pointer_ungrab:
#: gdkdisplay.c:371:1
msgid "Release any pointer grab."
msgstr ""

# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_pointer_ungrab:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_pointer_ungrab:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_keyboard_ungrab:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_keyboard_ungrab:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_pointer_ungrab:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_pointer_ungrab:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_keyboard_ungrab:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keyboard_ungrab:
#: gdkdisplay.c:375:2 gdkdisplay.c:414:2 gdkdisplay.c:451:2 gdkdisplay.c:490:2
msgid ""
"Deprecated: 3.0: Use gdk_device_ungrab(), together with gdk_device_grab() "
"instead."
msgstr ""

# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_pointer_ungrab:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_keyboard_ungrab:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_pointer_ungrab:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keyboard_ungrab:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keyboard_grab:
#: gdkdisplay.c:408:2 gdkdisplay.c:484:2 gdkwindow.c:8710:2
msgid ""
"@time_: a timestamp from a #GdkEvent, or %GDK_CURRENT_TIME if no timestamp "
"is available."
msgstr ""

# used by: SECTION:gdkdisplay
#. used by: SECTION:gdkdisplay
#: gdkdisplay.c:41:1
msgid ""
"@Short_description: Controls a set of GdkScreens and their associated input "
"devices"
msgstr ""

# #used by: gdk_pointer_ungrab:
#. used by: gdk_pointer_ungrab:
#: gdkdisplay.c:411:2
msgid ""
"Ungrabs the pointer on the default display, if it is grabbed by this "
"application."
msgstr ""

# used by: SECTION:gdkdisplay
#. used by: SECTION:gdkdisplay
#: gdkdisplay.c:42:1
msgid "@Title: GdkDisplay"
msgstr ""

# #used by: gdk_pointer_is_grabbed:
#. used by: gdk_pointer_is_grabbed:
#: gdkdisplay.c:426:2
msgid ""
"Returns %TRUE if the pointer on the default display is currently grabbed by "
"this application."
msgstr ""

# #used by: gdk_pointer_is_grabbed:
#. used by: gdk_pointer_is_grabbed:
#: gdkdisplay.c:429:2
msgid ""
"Note that this does not take the inmplicit pointer grab on button presses "
"into account."
msgstr ""

# #used by: gdk_pointer_is_grabbed:
#. used by: gdk_pointer_is_grabbed:
#: gdkdisplay.c:432:1
msgid ""
"Return value: %TRUE if the pointer is currently grabbed by this application."
msgstr ""

# #used by: SECTION:gdkdisplay
#. used by: SECTION:gdkdisplay
#: gdkdisplay.c:44:10
msgid ""
"#GdkDisplay objects purpose are two fold: <itemizedlist> <listitem> To "
"manage and provide information about input devices (pointers and keyboards) "
"</listitem> <listitem> To manage and provide information about the available "
"#GdkScreens </listitem> </itemizedlist>"
msgstr ""

# used by: gdk_display_keyboard_ungrab:
#. used by: gdk_display_keyboard_ungrab:
#: gdkdisplay.c:445:1
msgid "@time_: a timestap (e.g #GDK_CURRENT_TIME)."
msgstr ""

# #used by: gdk_display_keyboard_ungrab:
#. used by: gdk_display_keyboard_ungrab:
#: gdkdisplay.c:447:1
msgid "Release any keyboard grab"
msgstr ""

# #used by: gdk_keyboard_ungrab:
#. used by: gdk_keyboard_ungrab:
#: gdkdisplay.c:487:2
msgid ""
"Ungrabs the keyboard on the default display, if it is grabbed by this "
"application."
msgstr ""

# #used by: gdk_beep:
#. used by: gdk_beep:
#: gdkdisplay.c:502:1
msgid "Emits a short beep on the default display."
msgstr ""

# #used by: gdk_flush:
#. used by: gdk_flush:
#: gdkdisplay.c:513:3
msgid ""
"Flushes the output buffers of all display connections and waits until all "
"requests have been processed. This is rarely needed by applications."
msgstr ""

# #used by: SECTION:gdkdisplay
#. used by: SECTION:gdkdisplay
#: gdkdisplay.c:55:7
msgid ""
"GdkDisplay objects are the GDK representation of an X Display, which can be "
"described as <emphasis>a workstation consisting of a keyboard, a pointing "
"device (such as a mouse) and one or more screens</emphasis>. It is used to "
"open and keep track of various GdkScreen objects currently instantiated by "
"the application. It is also used to access the keyboard(s) and mouse pointer"
"(s) of the display."
msgstr ""

# used by: gdk_display_get_pointer:
#. used by: gdk_display_get_pointer:
#: gdkdisplay.c:565:2
msgid ""
"@screen: (out) (allow-none): location to store the screen that the cursor is "
"on, or %NULL."
msgstr ""

# used by: gdk_display_get_pointer:
#. used by: gdk_display_get_pointer:
#: gdkdisplay.c:567:1
msgid ""
"@x: (out) (allow-none): location to store root window X coordinate of "
"pointer, or %NULL."
msgstr ""

# used by: gdk_display_get_pointer:
#. used by: gdk_display_get_pointer:
#: gdkdisplay.c:568:1
msgid ""
"@y: (out) (allow-none): location to store root window Y coordinate of "
"pointer, or %NULL."
msgstr ""

# used by: gdk_display_get_pointer:
#. used by: gdk_display_get_pointer:
#: gdkdisplay.c:569:1
msgid ""
"@mask: (out) (allow-none): location to store current modifier mask, or %NULL"
msgstr ""

# #used by: gdk_display_get_pointer:
#. used by: gdk_display_get_pointer:
#: gdkdisplay.c:571:2
msgid ""
"Gets the current location of the pointer and the current modifier mask for a "
"given display."
msgstr ""

# #used by: gdk_display_get_pointer:
#. used by: gdk_display_get_pointer:
#: gdkdisplay.c:576:1
msgid "Deprecated: 3.0: Use gdk_device_get_position() instead."
msgstr ""

# used by: gdk_display_get_window_at_pointer:
#. used by: gdk_display_get_window_at_pointer:
#: gdkdisplay.c:620:2
msgid ""
"@win_x: (out) (allow-none): return location for x coordinate of the pointer "
"location relative to the window origin, or %NULL"
msgstr ""

# used by: gdk_display_get_window_at_pointer:
#. used by: gdk_display_get_window_at_pointer:
#: gdkdisplay.c:622:2
msgid ""
"@win_y: (out) (allow-none): return location for y coordinate of the pointer "
"location relative &    to the window origin, or %NULL"
msgstr ""

# #used by: gdk_display_get_window_at_pointer:
#. used by: gdk_display_get_window_at_pointer:
#: gdkdisplay.c:625:4
msgid ""
"Obtains the window underneath the mouse pointer, returning the location of "
"the pointer in that window in @win_x, @win_y for @screen. Returns %NULL if "
"the window under the mouse pointer is not known to GDK (for example, belongs "
"to another application)."
msgstr ""

# #used by: SECTION:gdkdisplay
#. used by: SECTION:gdkdisplay
#: gdkdisplay.c:63:4
msgid ""
"Most of the input device handling has been factored out into the separate "
"#GdkDeviceManager object. Every display has a device manager, which you can "
"obtain using gdk_display_get_device_manager()."
msgstr ""

# #used by: gdk_display_get_window_at_pointer:
#. used by: gdk_display_get_window_at_pointer:
#: gdkdisplay.c:630:1
msgid "Returns: (transfer none): the window under the mouse pointer, or %NULL"
msgstr ""

# #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_window_at_pointer:
# #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_window_at_pointer:
#. #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_window_at_pointer:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_at_pointer:
#: gdkdisplay.c:634:1 gdkwindow.c:4997:1
msgid "Deprecated: 3.0: Use gdk_device_get_window_at_position() instead."
msgstr ""

# used by: GdkDisplayManager::display-opened:
#. used by: GdkDisplayManager::display-opened:
#: gdkdisplaymanager.c:133:1
msgid "@manager: the object on which the signal is emitted"
msgstr ""

# used by: GdkDisplayManager::display-opened:
#. used by: GdkDisplayManager::display-opened:
#: gdkdisplaymanager.c:134:1
msgid "@display: the opened display"
msgstr ""

# #used by: GdkDisplayManager::display-opened:
#. used by: GdkDisplayManager::display-opened:
#: gdkdisplaymanager.c:136:1
msgid "The ::display-opened signal is emitted when a display is opened."
msgstr ""

# #used by: gdk_display_manager_get_default_display:
#. used by: gdk_display_manager_get:
#: gdkdisplaymanager.c:205:1
#, fuzzy
msgid "Gets the singleton #GdkDisplayManager object."
msgstr "得到默认的#GdkDisplay。"

# #used by: gdk_display_manager_get:
#. used by: gdk_display_manager_get:
#: gdkdisplaymanager.c:207:4
msgid ""
"When called for the first time, this function consults the "
"<envar>GDK_BACKEND</envar> environment variable to find out which of the "
"supported GDK backends to use (in case GDK has been compiled with multiple "
"backends)."
msgstr ""

# #used by: gdk_display_manager_get:
#. used by: gdk_display_manager_get:
#: gdkdisplaymanager.c:212:3
msgid ""
"Returns: (transfer none): The global #GdkDisplayManager singleton; "
"gdk_parse_args(), gdk_init(), or gdk_init_check() must have been called "
"first."
msgstr ""

# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_display_manager_get_default_display:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_display_manager_set_default_display:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_display_manager_list_displays:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_display_manager_open_display:
#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_manager_get_default_display:
#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_manager_set_default_display:
#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_manager_list_displays:
#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_manager_open_display:
#: gdkdisplaymanager.c:254:1 gdkdisplaymanager.c:312:1
#: gdkdisplaymanager.c:330:1 gdkdisplaymanager.c:348:1
msgid "@manager: a #GdkDisplayManager"
msgstr ""

# #used by: gdk_display_manager_get_default_display:
#. used by: gdk_display_manager_get_default_display:
#: gdkdisplaymanager.c:256:1
msgid "Gets the default #GdkDisplay."
msgstr "得到默认的#GdkDisplay。"

# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_get_default_display:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_default:
#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_manager_get_default_display:
#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_get_default:
#: gdkdisplaymanager.c:258:2 gdkdisplaymanager.c:276:2
msgid ""
"Returns: (transfer none): a #GdkDisplay, or %NULL if there is no default "
"display."
msgstr ""

# #used by: gdk_display_get_default:
#. used by: gdk_display_get_default:
#: gdkdisplaymanager.c:272:3
msgid ""
"Gets the default #GdkDisplay. This is a convenience function for "
"<literal>gdk_display_manager_get_default_display (gdk_display_manager_get ())"
"</literal>."
msgstr ""

# #used by: gdk_screen_get_default:
#. used by: gdk_screen_get_default:
#: gdkdisplaymanager.c:290:2
msgid ""
"Gets the default screen for the default display. (See "
"gdk_display_get_default ())."
msgstr ""

# #used by: gdk_screen_get_default:
#. used by: gdk_screen_get_default:
#: gdkdisplaymanager.c:293:1
msgid ""
"Returns: (transfer none): a #GdkScreen, or %NULL if there is no default "
"display."
msgstr ""

# #used by: gdk_display_manager_set_default_display:
#. used by: gdk_display_manager_set_default_display:
#: gdkdisplaymanager.c:315:1
msgid "Sets @display as the default display."
msgstr "设置@display作为默认的显示(display)。"

# #used by: gdk_display_manager_list_displays:
#. used by: gdk_display_manager_list_displays:
#: gdkdisplaymanager.c:332:1
msgid "List all currently open displays."
msgstr "列出所有当前打开的显示(displays)。"

# #used by: gdk_display_manager_list_displays:
#. used by: gdk_display_manager_list_displays:
#: gdkdisplaymanager.c:334:3
msgid ""
"Return value: (transfer container) (element-type GdkDisplay): a newly "
"allocated #GSList of #GdkDisplay objects. Free with g_slist_free() when you "
"are done with it."
msgstr ""

# used by: gdk_display_manager_open_display:
#. used by: gdk_display_manager_open_display:
#: gdkdisplaymanager.c:349:1
msgid "@name: the name of the display to open"
msgstr ""

# used by: gdk_atom_intern:
#. used by: gdk_atom_intern:
#: gdkdisplaymanager.c:367:1
msgid "@atom_name: a string."
msgstr "@atom_name: 一个字符串。"

# used by: gdk_atom_intern:
#. used by: gdk_atom_intern:
#: gdkdisplaymanager.c:368:4
msgid ""
"@only_if_exists: if %TRUE, GDK is allowed to not create a new atom, but just "
"return %GDK_NONE if the requested atom doesn't already exists. Currently, "
"the flag is ignored, since checking the existance of an atom is as expensive "
"as creating it."
msgstr ""

# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_atom_intern:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_atom_intern_static_string:
#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_atom_intern:
#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_atom_intern_static_string:
#: gdkdisplaymanager.c:373:1 gdkdisplaymanager.c:390:1
msgid "Finds or creates an atom corresponding to a given string."
msgstr ""

# #used by: gdk_atom_intern:
#. used by: gdk_atom_intern:
#: gdkdisplaymanager.c:375:1
msgid "Returns: (transfer none): the atom corresponding to @atom_name."
msgstr ""

# used by: gdk_atom_intern_static_string:
#. used by: gdk_atom_intern_static_string:
#: gdkdisplaymanager.c:388:1
msgid "@atom_name: a static string"
msgstr ""

# #used by: gdk_atom_intern_static_string:
#. used by: gdk_atom_intern_static_string:
#: gdkdisplaymanager.c:392:8
msgid ""
"Note that this function is identical to gdk_atom_intern() except that if a "
"new #GdkAtom is created the string itself is used rather than a copy. This "
"saves memory, but can only be used if the string will <emphasis>always</"
"emphasis> exist. It can be used with statically allocated strings in the "
"main program, but not with statically allocated memory in dynamically loaded "
"modules, if you expect to ever unload the module again (e.g. do not use this "
"function in GTK+ theme engines)."
msgstr ""

# #used by: gdk_atom_intern_static_string:
#. used by: gdk_atom_intern_static_string:
#: gdkdisplaymanager.c:401:1
msgid "Returns: (transfer none): the atom corresponding to @atom_name"
msgstr ""

# used by: gdk_atom_name:
#. #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_atom_name:
#. #-#-#-#-#  gdktypes.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GDK_ATOM_TO_POINTER:
#: gdkdisplaymanager.c:415:1 gdktypes.h:92:1
msgid "@atom: a #GdkAtom."
msgstr ""

# #used by: gdk_atom_name:
#. used by: gdk_atom_name:
#: gdkdisplaymanager.c:417:1
msgid "Determines the string corresponding to an atom."
msgstr ""

# #used by: gdk_atom_name:
#. used by: gdk_atom_name:
#: gdkdisplaymanager.c:419:3
msgid ""
"Returns: a newly-allocated string containing the string corresponding to "
"@atom. When you are done with the return value, you should free it using "
"g_free()."
msgstr ""

# used by: SECTION:gdkdisplaymanager
#. used by: SECTION:gdkdisplaymanager
#: gdkdisplaymanager.c:53:1
msgid "@Short_description: Maintains a list of all open GdkDisplays"
msgstr ""

# used by: SECTION:gdkdisplaymanager
#. used by: SECTION:gdkdisplaymanager
#: gdkdisplaymanager.c:54:1
msgid "@Title: GdkDisplayManager"
msgstr ""

# #used by: SECTION:gdkdisplaymanager
#. used by: SECTION:gdkdisplaymanager
#: gdkdisplaymanager.c:56:3
msgid ""
"The purpose of the #GdkDisplayManager singleton object is to offer "
"notification when displays appear or disappear or the default display "
"changes."
msgstr ""

# #used by: SECTION:gdkdisplaymanager
#. used by: SECTION:gdkdisplaymanager
#: gdkdisplaymanager.c:60:4
msgid ""
"You can use gdk_display_manager_get() to obtain the GdkDisplayManager "
"singleton, but that should be rarely necessary. Typically, initializing GTK+ "
"opens a display that you can work with without ever accessing the "
"GdkDisplayManager."
msgstr ""

# #used by: SECTION:gdkdisplaymanager
#. used by: SECTION:gdkdisplaymanager
#: gdkdisplaymanager.c:65:3
msgid ""
"The GDK library can be built with support for multiple backends. The "
"GdkDisplayManager object determines which backend is used at runtime."
msgstr ""

# #used by: SECTION:gdkdisplaymanager
#. used by: SECTION:gdkdisplaymanager
#: gdkdisplaymanager.c:69:6
msgid ""
"When writing backend-specific code that is supposed to work with multiple "
"GDK backends, you have to consider both compile time and runtime. At compile "
"time, use the #GDK_WINDOWING_X11, #GDK_WINDOWING_WIN32 macros, etc. to find "
"out which backends are present in the GDK library you are building your "
"application against. At runtime, use type-check macros like "
"GDK_IS_X11_DISPLAY() to find out which backend is in use:"
msgstr ""

#. used by: SECTION:gdkdisplaymanager
#: gdkdisplaymanager.c:76:2
msgid "<example id=\"backend-specific\"> <title>Backend-specific code</title>"
msgstr ""

# used by: gdk_drag_find_window:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_context_list_targets:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_context_get_actions:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_context_get_suggested_action:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_context_get_selected_action:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_context_get_source_window:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_context_get_dest_window:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_context_get_protocol:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_context_set_device:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_context_get_device:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_find_window_for_screen:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_status:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_motion:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_abort:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_drop:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drop_reply:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_drop_succeeded:
#: gdkdnd.c:107:1 gdkdnd.c:125:1 gdkdnd.c:143:1 gdkdnd.c:161:1 gdkdnd.c:179:1
#: gdkdnd.c:203:1 gdkdnd.c:250:1 gdkdnd.c:284:1 gdkdnd.c:306:1 gdkdnd.c:346:1
#: gdkdnd.c:364:1 gdkdnd.c:382:1 gdkdnd.c:423:1 gdkdnd.c:52:1 gdkdnd.c:70:1
#: gdkdnd.c:89:1
#, fuzzy
msgid "@context: a #GdkDragContext"
msgstr "@context: 一个 #GdkDragContext."

# #used by: gdk_drag_context_get_selected_action:
#. used by: gdk_drag_context_get_selected_action:
#: gdkdnd.c:109:1
msgid "Determines the action chosen by the drag destination."
msgstr ""

# #-#-#-#-#  gdkdnd.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_drag_context_get_suggested_action:
# #-#-#-#-#  gdkdnd.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_drag_context_get_selected_action:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_context_get_suggested_action:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_context_get_selected_action:
#: gdkdnd.c:111:1 gdkdnd.c:93:1
msgid "Return value: a #GdkDragAction value"
msgstr ""

# #used by: gdk_drag_context_get_source_window:
#. used by: gdk_drag_context_get_source_window:
#: gdkdnd.c:127:1
msgid "Returns the #GdkWindow where the DND operation started."
msgstr ""

# #-#-#-#-#  gdkdnd.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_drag_context_get_source_window:
# #-#-#-#-#  gdkdnd.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_drag_context_get_dest_window:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_context_get_source_window:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_context_get_dest_window:
#: gdkdnd.c:129:1 gdkdnd.c:147:1
msgid "Return value: (transfer none): a #GdkWindow"
msgstr ""

# #used by: gdk_drag_context_get_dest_window:
#. used by: gdk_drag_context_get_dest_window:
#: gdkdnd.c:145:1
msgid "Returns the destination windw for the DND operation."
msgstr ""

# #used by: gdk_drag_context_get_protocol:
#. used by: gdk_drag_context_get_protocol:
#: gdkdnd.c:163:1
msgid "Returns the drag protocol thats used by this context."
msgstr ""

# #used by: gdk_drag_context_get_protocol:
#. used by: gdk_drag_context_get_protocol:
#: gdkdnd.c:165:1
msgid "Returns: the drag protocol"
msgstr ""

# #used by: gdk_drag_context_set_device:
#. used by: gdk_drag_context_set_device:
#: gdkdnd.c:182:2
msgid ""
"Associates a #GdkDevice to @context, so all Drag and Drop events for "
"@context are emitted as if they came from this device."
msgstr ""

# #used by: gdk_drag_context_get_device:
#. used by: gdk_drag_context_get_device:
#: gdkdnd.c:205:1
msgid "Returns the #GdkDevice associated to the drag context."
msgstr ""

# #used by: gdk_drag_context_get_device:
#. used by: gdk_drag_context_get_device:
#: gdkdnd.c:207:1
msgid "Returns: (transfer none): The #GdkDevice associated to @context."
msgstr ""

# used by: gdk_drag_find_window_for_screen:
#. used by: gdk_drag_find_window_for_screen:
#: gdkdnd.c:251:2
msgid ""
"@drag_window: a window which may be at the pointer position, but should be "
"ignored, since it is put up by the drag source as an icon"
msgstr ""

# used by: gdk_drag_find_window_for_screen:
#. used by: gdk_drag_find_window_for_screen:
#: gdkdnd.c:253:1
msgid "@screen: the screen where the destination window is sought"
msgstr ""

# #-#-#-#-#  gdkdnd.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_drag_find_window_for_screen:
# #-#-#-#-#  gdkdnd.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_drag_motion:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_find_window_for_screen:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_motion:
#: gdkdnd.c:254:1 gdkdnd.c:310:1
msgid "@x_root: the x position of the pointer in root coordinates"
msgstr ""

# #-#-#-#-#  gdkdnd.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_drag_find_window_for_screen:
# #-#-#-#-#  gdkdnd.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_drag_motion:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_find_window_for_screen:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_motion:
#: gdkdnd.c:255:1 gdkdnd.c:311:1
msgid "@y_root: the y position of the pointer in root coordinates"
msgstr ""

# used by: gdk_drag_find_window_for_screen:
#. used by: gdk_drag_find_window_for_screen:
#: gdkdnd.c:256:1
msgid "@dest_window: (out): location to store the destination window in"
msgstr ""

# used by: gdk_drag_find_window_for_screen:
#. used by: gdk_drag_find_window_for_screen:
#: gdkdnd.c:257:1
msgid "@protocol: (out): location to store the DND protocol in"
msgstr ""

# #used by: gdk_drag_find_window:
#. used by: gdk_drag_find_window_for_screen:
#: gdkdnd.c:259:2
msgid ""
"Finds the destination window and DND protocol to use at the given pointer "
"position."
msgstr ""

# #used by: gdk_drag_find_window:
#. used by: gdk_drag_find_window_for_screen:
#: gdkdnd.c:262:2
msgid ""
"This function is called by the drag source to obtain the @dest_window and "
"@protocol parameters for gdk_drag_motion()."
msgstr ""

# used by: gdk_drag_status:
#. used by: gdk_drag_status:
#: gdkdnd.c:285:2
msgid ""
"@action: the selected action which will be taken when a drop happens, or 0 "
"to indicate that a drop will not be accepted"
msgstr ""

# #-#-#-#-#  gdkdnd.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_drag_status:
# #-#-#-#-#  gdkdnd.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_drag_motion:
# #-#-#-#-#  gdkdnd.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_drag_abort:
# #-#-#-#-#  gdkdnd.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_drag_drop:
# #-#-#-#-#  gdkdnd.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_drop_reply:
# #-#-#-#-#  gdkdnd.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_drop_finish:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_status:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_motion:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_abort:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_drop:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drop_reply:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drop_finish:
#: gdkdnd.c:287:1 gdkdnd.c:314:1 gdkdnd.c:347:1 gdkdnd.c:365:1 gdkdnd.c:384:1
#: gdkdnd.c:405:1
msgid "@time_: the timestamp for this operation"
msgstr ""

# #used by: gdk_drag_status:
#. used by: gdk_drag_status:
#: gdkdnd.c:289:1
msgid "Selects one of the actions offered by the drag source."
msgstr ""

# #used by: gdk_drag_status:
#. used by: gdk_drag_status:
#: gdkdnd.c:291:2
msgid ""
"This function is called by the drag destination in response to "
"gdk_drag_motion() called by the drag source."
msgstr ""

# used by: gdk_drag_motion:
#. used by: gdk_drag_motion:
#: gdkdnd.c:307:2
msgid ""
"@dest_window: the new destination window, obtained by gdk_drag_find_window()"
msgstr ""

# used by: gdk_drag_motion:
#. used by: gdk_drag_motion:
#: gdkdnd.c:309:1
msgid "@protocol: the DND protocol in use, obtained by gdk_drag_find_window()"
msgstr ""

# used by: gdk_drag_motion:
#. used by: gdk_drag_motion:
#: gdkdnd.c:312:1
msgid "@suggested_action: the suggested action"
msgstr ""

# used by: gdk_drag_motion:
#. used by: gdk_drag_motion:
#: gdkdnd.c:313:1
msgid "@possible_actions: the possible actions"
msgstr ""

# #used by: gdk_drag_motion:
#. used by: gdk_drag_motion:
#: gdkdnd.c:316:2
msgid ""
"Updates the drag context when the pointer moves or the set of actions "
"changes."
msgstr ""

# #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkdnd.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_drag_motion:
# #-#-#-#-#  gdkdnd.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_drag_abort:
# #-#-#-#-#  gdkdnd.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_drag_drop:
# #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_drag_begin:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_drag_begin_for_device:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_motion:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_abort:
#. #-#-#-#-#  gdkdnd.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_drop:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_begin:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_begin_for_device:
#: gdkdnd.c:319:1 gdkdnd.c:351:1 gdkdnd.c:369:1 gdkwindow.c:10617:1
#: gdkwindow.c:10643:1
msgid "This function is called by the drag source."
msgstr ""

# #used by: gdk_drag_abort:
#. used by: gdk_drag_abort:
#: gdkdnd.c:349:1
msgid "Aborts a drag without dropping."
msgstr ""

# used by: SECTION:dnd
#. used by: SECTION:dnd
#: gdkdnd.c:36:1
msgid "@title: Drag And Drop"
msgstr ""

# #used by: gdk_drag_drop:
#. used by: gdk_drag_drop:
#: gdkdnd.c:367:1
msgid "Drops on the current destination."
msgstr ""

# used by: SECTION:dnd
#. used by: SECTION:dnd
#: gdkdnd.c:37:1
msgid "@short_description: Functions for controlling drag and drop handling"
msgstr ""

# used by: gdk_drop_reply:
#. used by: gdk_drop_reply:
#: gdkdnd.c:383:1
msgid "@accepted: %TRUE if the drop is accepted"
msgstr ""

# #used by: gdk_drop_reply:
#. used by: gdk_drop_reply:
#: gdkdnd.c:386:1
msgid "Accepts or rejects a drop."
msgstr ""

# #used by: gdk_drop_reply:
#. used by: gdk_drop_reply:
#: gdkdnd.c:388:2
msgid ""
"This function is called by the drag destination in response to a drop "
"initiated by the drag source."
msgstr ""

# #used by: SECTION:dnd
#. used by: SECTION:dnd
#: gdkdnd.c:39:4
msgid ""
"These functions provide a low level interface for drag and drop. The X "
"backend of GDK supports both the Xdnd and Motif drag and drop protocols "
"transparently, the Win32 backend supports the WM_DROPFILES protocol."
msgstr ""

# used by: gdk_drag_find_window:
#. used by: gdk_drop_finish:
#: gdkdnd.c:403:1
#, fuzzy
msgid "@context: a #GtkDragContext"
msgstr "@context: 一个 #GdkDragContext."

# used by: gdk_drop_finish:
#. used by: gdk_drop_finish:
#: gdkdnd.c:404:1
msgid "@success: %TRUE if the data was successfully received"
msgstr ""

# #used by: gdk_drop_finish:
#. used by: gdk_drop_finish:
#: gdkdnd.c:407:1
msgid "Ends the drag operation after a drop."
msgstr ""

# #used by: gdk_drop_finish:
#. used by: gdk_drop_finish:
#: gdkdnd.c:409:1
msgid "This function is called by the drag destination."
msgstr ""

# #used by: gdk_drag_drop_succeeded:
#. used by: gdk_drag_drop_succeeded:
#: gdkdnd.c:425:4
msgid ""
"Returns whether the dropped data has been successfully transferred. This "
"function is intended to be used while handling a %GDK_DROP_FINISHED event, "
"its return value is meaningless at other times."
msgstr ""

# #used by: gdk_display_open_default_libgtk_only:
#. used by: gdk_drag_drop_succeeded:
#: gdkdnd.c:430:1
#, fuzzy
msgid "Return value: %TRUE if the drop was successful."
msgstr "Return value: 如果指定的axis 可以找到，返回%TRUE，否则返回%NULL。"

#. used by: SECTION:dnd
#: gdkdnd.c:44:4
msgid ""
"GTK+ provides a higher level abstraction based on top of these functions, "
"and so they are not normally needed in GTK+ applications. See the <link "
"linkend=\"gtk-Drag-and-Drop\">Drag and Drop</link> section of the GTK+ "
"documentation for more information."
msgstr ""

# used by: gdk_drag_find_window:
#. used by: gdk_drag_get_selection:
#: gdkdnd.c:444:1
msgid "@context: a #GdkDragContext."
msgstr "@context: 一个 #GdkDragContext."

# #used by: gdk_drag_get_selection:
#. used by: gdk_drag_get_selection:
#: gdkdnd.c:446:1
msgid "Returns the selection atom for the current source window."
msgstr ""

# #used by: gdk_drag_get_selection:
#. used by: gdk_drag_get_selection:
#: gdkdnd.c:448:1
msgid "Return value: (transfer none): the selection atom, or %GDK_NONE"
msgstr ""

# #used by: gdk_drag_context_list_targets:
#. used by: gdk_drag_context_list_targets:
#: gdkdnd.c:54:1
msgid "Retrieves the list of targets of the context."
msgstr ""

# #used by: gdk_drag_context_list_targets:
#. used by: gdk_drag_context_list_targets:
#: gdkdnd.c:56:1
msgid ""
"Return value: (transfer none) (element-type GdkAtom): a #GList of targets"
msgstr ""

# #used by: gdk_drag_context_get_actions:
#. used by: gdk_drag_context_get_actions:
#: gdkdnd.c:72:2
msgid ""
"Determines the bitmask of actions proposed by the source if "
"gdk_drag_context_get_suggested_action() returns GDK_ACTION_ASK."
msgstr ""

# #used by: gdk_drag_context_get_actions:
#. used by: gdk_drag_context_get_actions:
#: gdkdnd.c:75:1
msgid "Return value: the #GdkDragAction flags"
msgstr ""

# #used by: gdk_drag_context_get_suggested_action:
#. used by: gdk_drag_context_get_suggested_action:
#: gdkdnd.c:91:1
msgid "Determines the suggested drag action of the context."
msgstr ""

#. used by: GdkDragAction:
#: gdkdnd.h:45:1
msgid "@GDK_ACTION_DEFAULT: Means nothing, and should not be used."
msgstr ""

#. used by: GdkDragAction:
#: gdkdnd.h:46:1
msgid "@GDK_ACTION_COPY: Copy the data."
msgstr ""

#. used by: GdkDragAction:
#: gdkdnd.h:47:2
msgid ""
"@GDK_ACTION_MOVE: Move the data, i.e. first copy it, then delete it from the "
"source using the DELETE target of the X selection protocol."
msgstr ""

#. used by: GdkDragAction:
#: gdkdnd.h:49:2
msgid ""
"@GDK_ACTION_LINK: Add a link to the data. Note that this is only useful if "
"source and destination agree on what it means."
msgstr ""

#. used by: GdkDragAction:
#: gdkdnd.h:51:2
msgid ""
"@GDK_ACTION_PRIVATE: Special action which tells the source that the "
"destination will do something that the source doesn't understand."
msgstr ""

#. used by: GdkDragAction:
#: gdkdnd.h:53:1
msgid "@GDK_ACTION_ASK: Ask the user what to do with the data."
msgstr ""

#. used by: GdkDragAction:
#: gdkdnd.h:55:2
msgid ""
"Used in #GdkDragContext to indicate what the destination should do with the "
"dropped data."
msgstr ""

#. used by: GdkDragProtocol:
#: gdkdnd.h:70:1
msgid "@GDK_DRAG_PROTO_NONE: no protocol."
msgstr ""

#. used by: GdkDragProtocol:
#: gdkdnd.h:71:1
msgid "@GDK_DRAG_PROTO_MOTIF: The Motif DND protocol."
msgstr ""

#. used by: GdkDragProtocol:
#: gdkdnd.h:72:1
msgid "@GDK_DRAG_PROTO_XDND: The Xdnd protocol."
msgstr ""

#. used by: GdkDragProtocol:
#: gdkdnd.h:73:4
msgid ""
"@GDK_DRAG_PROTO_ROOTWIN: An extension to the Xdnd protocol for unclaimed "
"root window drops. @GDK_DRAG_PROTO_WIN32_DROPFILES: The simple WM_DROPFILES "
"protocol. @GDK_DRAG_PROTO_OLE2: The complex OLE2 DND protocol (not "
"implemented)."
msgstr ""

#. used by: GdkDragProtocol:
#: gdkdnd.h:77:1
msgid "@GDK_DRAG_PROTO_LOCAL: Intra-application DND."
msgstr ""

#. used by: GdkDragProtocol:
#: gdkdnd.h:79:2
msgid ""
"Used in #GdkDragContext to indicate the protocol according to which DND is "
"done."
msgstr ""

# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_event_copy:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_event_get_time:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_event_get_coords:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_event_get_root_coords:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_event_get_axis:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_event_set_screen:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_event_get_screen:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_event_copy:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_event_get_time:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_event_get_coords:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_event_get_root_coords:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_event_get_axis:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_event_set_device:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_event_set_source_device:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_event_get_source_device:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_event_set_screen:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_event_get_screen:
#: gdkevents.c:1024:1 gdkevents.c:1160:1 gdkevents.c:1186:1 gdkevents.c:1394:1
#: gdkevents.c:1418:1 gdkevents.c:493:1 gdkevents.c:681:1 gdkevents.c:827:1
#: gdkevents.c:886:1 gdkevents.c:950:1
msgid "@event: a #GdkEvent"
msgstr ""

# #used by: gdk_event_set_device:
#. used by: gdk_event_set_device:
#: gdkevents.c:1027:3
msgid ""
"Sets the device for @event to @device. The event must have been allocated by "
"GTK+, for instance, by gdk_event_copy()."
msgstr ""

# used by: _gdk_event_queue_prepend:
#. used by: _gdk_event_queue_prepend:
#: gdkevents.c:107:1
msgid "@event: Event to prepend."
msgstr ""

#. used by: gdk_event_get_device:
#: gdkevents.c:1072:2
msgid ""
"If the event contains a \"device\" field, this function will return it, else "
"it will return %NULL."
msgstr ""

# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_event_get_device:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_event_get_source_device:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_event_get_device:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_event_get_source_device:
#: gdkevents.c:1075:1 gdkevents.c:1198:1
msgid "Returns: (transfer none): a #GdkDevice, or %NULL."
msgstr ""

# #used by: _gdk_event_queue_prepend:
#. used by: _gdk_event_queue_prepend:
#: gdkevents.c:109:1
msgid "Prepends an event before the head of the event queue."
msgstr ""

# #used by: _gdk_event_queue_prepend:
#. used by: _gdk_event_queue_prepend:
#: gdkevents.c:111:1
msgid "Returns: the newly prepended list node."
msgstr ""

# #used by: gdk_event_set_source_device:
#. used by: gdk_event_set_source_device:
#: gdkevents.c:1163:1
msgid "Sets the slave device for @event to @device."
msgstr ""

# #used by: gdk_event_set_source_device:
#. used by: gdk_event_set_source_device:
#: gdkevents.c:1165:2
msgid ""
"The event must have been allocated by GTK+, for instance by gdk_event_copy()."
msgstr ""

# #used by: gdk_event_get_source_device:
#. used by: gdk_event_get_source_device:
#: gdkevents.c:1188:6
msgid ""
"This function returns the hardware (slave) #GdkDevice that has triggered the "
"event, falling back to the virtual (master) device (as in "
"gdk_event_get_device()) if the event wasn't caused by interaction with a "
"hardware device. This may happen for example in synthesized crossing events "
"after a #GdkWindow updates its geometry or a grab is acquired/released."
msgstr ""

# #used by: gdk_event_get_source_device:
#. used by: gdk_event_get_source_device:
#: gdkevents.c:1195:2
msgid ""
"If the event does not contain a device field, this function will return "
"%NULL."
msgstr ""

# used by: gdk_event_request_motions:
#. used by: gdk_event_request_motions:
#: gdkevents.c:1223:1
msgid "@event: a valid #GdkEvent"
msgstr ""

# #used by: gdk_event_request_motions:
#. used by: gdk_event_request_motions:
#: gdkevents.c:1225:1
msgid "Request more motion notifies if @event is a motion notify hint event."
msgstr ""

# #used by: gdk_event_request_motions:
#. used by: gdk_event_request_motions:
#: gdkevents.c:1227:5
msgid ""
"This function should be used instead of gdk_window_get_pointer() to request "
"further motion notifies, because it also works for extension events where "
"motion notifies are provided for devices other than the core pointer. "
"Coordinate extraction, processing and requesting more motion events from a "
"%GDK_MOTION_NOTIFY event usually works like this:"
msgstr ""

# #used by: gdk_event_request_motions:
#. used by: gdk_event_request_motions:
#: gdkevents.c:1233:9
msgid ""
"|[ { /&ast; motion_event handler &ast;/ x = motion_event->x; y = "
"motion_event->y; /&ast; handle (x,y) motion &ast;/ gdk_event_request_motions "
"(motion_event); /&ast; handles is_hint events &ast;/ } ]|"
msgstr ""

# used by: _gdk_event_queue_append:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: _gdk_event_queue_append:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: _gdk_event_queue_insert_after:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: _gdk_event_queue_insert_after:
#: gdkevents.c:126:1 gdkevents.c:150:1 gdkevents.c:178:1
msgid "@event: Event to append."
msgstr ""

# #used by: _gdk_event_queue_append:
#. used by: _gdk_event_queue_append:
#: gdkevents.c:128:1
msgid "Appends an event onto the tail of the event queue."
msgstr ""

# #used by: gdk_events_get_distance:
#. used by: gdk_events_get_distance:
#: gdkevents.c:1292:3
msgid ""
"@event1: first #GdkEvent @event2: second #GdkEvent @distance: (out): return "
"location for the distance"
msgstr ""

# #used by: gdk_events_get_distance:
#. used by: gdk_events_get_distance:
#: gdkevents.c:1296:2
msgid ""
"If both events have X/Y information, the distance between both coordinates "
"(as in a straight line going from @event1 to @event2) will be returned."
msgstr ""

# #used by: gdk_events_get_distance:
#. used by: gdk_events_get_distance:
#: gdkevents.c:1299:1
msgid "Returns: %TRUE if the distance could be calculated."
msgstr ""

# #used by: _gdk_event_queue_append:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: _gdk_event_queue_append:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: _gdk_event_queue_insert_after:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: _gdk_event_queue_insert_after:
#: gdkevents.c:130:1 gdkevents.c:155:1 gdkevents.c:183:1
msgid "Returns: the newly appended list node."
msgstr ""

# #used by: gdk_events_get_angle:
#. used by: gdk_events_get_angle:
#: gdkevents.c:1315:3
msgid ""
"@event1: first #GdkEvent @event2: second #GdkEvent @angle: (out): return "
"location for the relative angle between both events"
msgstr ""

# #used by: gdk_events_get_angle:
#. used by: gdk_events_get_angle:
#: gdkevents.c:1319:4
msgid ""
"If both events contain X/Y information, this function will return %TRUE and "
"return in @angle the relative angle from @event1 to @event2. The rotation "
"direction for positive angles is from the positive X axis towards the "
"positive Y axis."
msgstr ""

# #used by: gdk_events_get_angle:
#. used by: gdk_events_get_angle:
#: gdkevents.c:1324:1
msgid "Returns: %TRUE if the angle could be calculated."
msgstr ""

# #used by: gdk_events_get_center:
#. used by: gdk_events_get_center:
#: gdkevents.c:1359:4
msgid ""
"@event1: first #GdkEvent @event2: second #GdkEvent @x: (out): return "
"location for the X coordinate of the center @y: (out): return location for "
"the Y coordinate of the center"
msgstr ""

# #used by: gdk_events_get_center:
#. used by: gdk_events_get_center:
#: gdkevents.c:1364:2
msgid ""
"If both events contain X/Y information, the center of both coordinates will "
"be returned in @x and @y."
msgstr ""

# #used by: gdk_events_get_center:
#. used by: gdk_events_get_center:
#: gdkevents.c:1367:1
msgid "Returns: %TRUE if the center could be calculated."
msgstr ""

# #used by: gdk_event_set_screen:
#. used by: gdk_event_set_screen:
#: gdkevents.c:1397:3
msgid ""
"Sets the screen for @event to @screen. The event must have been allocated by "
"GTK+, for instance, by gdk_event_copy()."
msgstr ""

# #used by: gdk_event_get_screen:
#. used by: gdk_event_get_screen:
#: gdkevents.c:1420:7
msgid ""
"Returns the screen for the event. The screen is typically the screen for "
"<literal>event->any.window</literal>, but for events such as mouse events, "
"it is the screen where the pointer was when the event occurs - that is, the "
"screen which has the root window to which <literal>event->motion.x_root</"
"literal> and <literal>event->motion.y_root</literal> are relative."
msgstr ""

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_seconds_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_seconds:
#. used by: gdk_event_get_screen:
#: gdkevents.c:1428:1
#, fuzzy
msgid "Return value: (transfer none): the screen for the event"
msgstr "Return value: 事件的屏幕。"

# used by: gdk_set_show_events:
#. used by: gdk_set_show_events:
#: gdkevents.c:1451:1
msgid "@show_events:  %TRUE to output event debugging information."
msgstr ""

# #used by: gdk_set_show_events:
#. used by: gdk_set_show_events:
#: gdkevents.c:1453:4
msgid ""
"Sets whether a trace of received events is output. Note that GTK+ must be "
"compiled with debugging (that is, configured using the <option>--enable-"
"debug</option> option) to use this option."
msgstr ""

# #used by: gdk_get_show_events:
#. used by: gdk_get_show_events:
#: gdkevents.c:1470:1
msgid "Gets whether event debugging output is enabled."
msgstr ""

# #used by: gdk_get_show_events:
#. used by: gdk_get_show_events:
#: gdkevents.c:1472:1
msgid "Return value: %TRUE if event debugging output is enabled."
msgstr ""

# used by: _gdk_event_queue_insert_after:
#. used by: _gdk_event_queue_insert_after:
#: gdkevents.c:149:1 gdkevents.c:177:1
msgid "@sibling: Append after this event."
msgstr ""

# #used by: _gdk_event_queue_insert_after:
#. used by: _gdk_event_queue_insert_after:
#: gdkevents.c:152:2
msgid ""
"Appends an event after the specified event, or if it isn't in the queue, "
"onto the tail of the event queue."
msgstr ""

# #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout:
# #-#-#-#-#  gdkcolor.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_color_to_string:
# #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_event_request_motions:
# #-#-#-#-#  gdkpango.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_pango_attr_emboss_color_new:
# #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_window_set_composited:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: _gdk_event_queue_insert_after:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkKeymap::state-changed:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_get_caps_lock_state:
#: gdkevents.c:157:1 gdkevents.c:185:1 gdkkeys.c:165:1 gdkkeys.c:341:1
msgid "Since: 2.16"
msgstr "Since: 2.16"

# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_display_set_double_click_time:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_set_double_click_time:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_display_set_double_click_time:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_set_double_click_time:
#: gdkevents.c:1625:1 gdkevents.c:1643:1
msgid "@msec: double click time in milliseconds (thousandths of a second)"
msgstr ""

# #used by: gdk_display_set_double_click_time:
#. used by: gdk_display_set_double_click_time:
#: gdkevents.c:1627:4
msgid ""
"Sets the double click time (two clicks within this time interval count as a "
"double click and result in a #GDK_2BUTTON_PRESS event). Applications should "
"<emphasis>not</emphasis> set this, it is a global user-configured setting."
msgstr ""

# #used by: gdk_set_double_click_time:
#. used by: gdk_set_double_click_time:
#: gdkevents.c:1645:5
msgid ""
"Set the double click time for the default display. See "
"gdk_display_set_double_click_time(). See also "
"gdk_display_set_double_click_distance(). Applications should <emphasis>not</"
"emphasis> set this, it is a global user-configured setting."
msgstr ""

# used by: gdk_display_set_double_click_distance:
#. used by: gdk_display_set_double_click_distance:
#: gdkevents.c:1660:1
msgid "@distance: distance in pixels"
msgstr ""

# #used by: gdk_display_set_double_click_distance:
#. used by: gdk_display_set_double_click_distance:
#: gdkevents.c:1662:5
msgid ""
"Sets the double click distance (two clicks within this distance count as a "
"double click and result in a #GDK_2BUTTON_PRESS event). See also "
"gdk_display_set_double_click_time(). Applications should <emphasis>not</"
"emphasis> set this, it is a global user-configured setting."
msgstr ""

# used by: gdk_setting_get:
#. #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_setting_get:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventSetting:
#: gdkevents.c:1683:1 gdkevents.h:884:1
msgid "@name: the name of the setting."
msgstr ""

# used by: gdk_setting_get:
#. used by: gdk_setting_get:
#: gdkevents.c:1684:1
msgid "@value: location to store the value of the setting."
msgstr ""

# #used by: gdk_setting_get:
#. used by: gdk_setting_get:
#: gdkevents.c:1686:2
msgid ""
"Obtains a desktop-wide setting, such as the double-click time, for the "
"default screen. See gdk_screen_get_setting()."
msgstr ""

# #used by: gdk_setting_get:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_setting_get:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_setting:
#: gdkevents.c:1689:2 gdkscreen.c:952:2
msgid ""
"Returns: %TRUE if the setting existed and a value was stored in @value, "
"%FALSE otherwise."
msgstr ""

# #used by: _gdk_event_queue_insert_after:
#. used by: _gdk_event_queue_insert_after:
#: gdkevents.c:180:2
msgid ""
"Appends an event before the specified event, or if it isn't in the queue, "
"onto the tail of the event queue."
msgstr ""

# used by: _gdk_event_queue_remove_link:
#. used by: _gdk_event_queue_remove_link:
#: gdkevents.c:206:1
msgid "@node: node to remove"
msgstr ""

# #used by: _gdk_event_queue_remove_link:
#. used by: _gdk_event_queue_remove_link:
#: gdkevents.c:208:1
msgid "Removes a specified list node from the event queue."
msgstr ""

# #used by: _gdk_event_unqueue:
#. used by: _gdk_event_unqueue:
#: gdkevents.c:229:2
msgid ""
"Removes and returns the first event from the event queue that is not still "
"being filled in."
msgstr ""

# #used by: _gdk_event_unqueue:
#. used by: _gdk_event_unqueue:
#: gdkevents.c:232:2
msgid ""
"Return value: the event, or %NULL. Ownership is transferred to the caller."
msgstr ""

# used by: gdk_threads_set_lock_functions:
#. used by: gdk_event_handler_set:
#: gdkevents.c:255:1
msgid "@func: the function to call to handle events from GDK."
msgstr ""

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_idle_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_idle:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_seconds_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_seconds:
#. used by: gdk_event_handler_set:
#: gdkevents.c:256:1
msgid "@data: user data to pass to the function."
msgstr "@data: 传递给这个函数的用户数据"

# used by: gdk_event_handler_set:
#. used by: gdk_event_handler_set:
#: gdkevents.c:257:2
msgid ""
"@notify: the function to call when the handler function is removed, i.e. "
"when gdk_event_handler_set() is called with another event handler."
msgstr ""

# #used by: gdk_event_handler_set:
#. used by: gdk_event_handler_set:
#: gdkevents.c:260:1
msgid "Sets the function to call to handle all events from GDK."
msgstr ""

# #used by: gdk_event_handler_set:
#. used by: gdk_event_handler_set:
#: gdkevents.c:262:4
msgid ""
"Note that GTK+ uses this to install its own event handler, so it is usually "
"not useful for GTK+ applications. (Although an application can call this "
"function then call gtk_main_do_event() to pass events to GTK+.)"
msgstr ""

# #used by: gdk_events_pending:
#. used by: gdk_events_pending:
#: gdkevents.c:283:1
msgid "Checks if any events are ready to be processed for any display."
msgstr ""

# #used by: gdk_events_pending:
#. used by: gdk_events_pending:
#: gdkevents.c:285:1
msgid "Return value: %TRUE if any events are pending."
msgstr ""

# #used by: gdk_event_get:
#. used by: gdk_event_get:
#: gdkevents.c:322:3
msgid ""
"Checks all open displays for a #GdkEvent to process,to be processed on, "
"fetching events from the windowing system if necessary. See "
"gdk_display_get_event()."
msgstr ""

# #used by: gdk_event_peek:
#. used by: gdk_event_peek:
#: gdkevents.c:352:2
msgid ""
"If there is an event waiting in the event queue of some open display, "
"returns a copy of it. See gdk_display_peek_event()."
msgstr ""

# #used by: gdk_event_peek:
#. used by: gdk_event_peek:
#: gdkevents.c:355:3
msgid ""
"Return value: a copy of the first #GdkEvent on some event queue, or %NULL if "
"no events are in any queues. The returned #GdkEvent should be freed with "
"gdk_event_free()."
msgstr ""

# used by: SECTION:events
#. used by: SECTION:events
#: gdkevents.c:38:1
msgid ""
"@Short_description: Functions for handling events from the window system"
msgstr ""

# #used by: gdk_event_put:
#. used by: gdk_event_put:
#: gdkevents.c:383:3
msgid ""
"Appends a copy of the given event onto the front of the event queue for "
"event->any.window's display, or the default event queue if event->any.window "
"is %NULL. See gdk_display_put_event()."
msgstr ""

# used by: SECTION:events
#. used by: SECTION:events
#: gdkevents.c:39:1
msgid "@Title: Events"
msgstr ""

#. used by: SECTION:events
#: gdkevents.c:40:1
msgid ""
"@See_also: <link linkend=\"gdk-Event-Structures\">Event Structures</link>"
msgstr ""

# used by: gdk_event_new:
#. used by: gdk_event_new:
#: gdkevents.c:410:1
msgid "@type: a #GdkEventType"
msgstr ""

# #used by: gdk_event_new:
#. used by: gdk_event_new:
#: gdkevents.c:412:1
msgid "Creates a new event of the given type. All fields are set to 0."
msgstr ""

# #used by: gdk_event_new:
#. used by: gdk_event_new:
#: gdkevents.c:414:2
msgid ""
"Return value: a newly-allocated #GdkEvent. The returned #GdkEvent should be "
"freed with gdk_event_free()."
msgstr ""

# #used by: SECTION:events
#. used by: SECTION:events
#: gdkevents.c:42:2
msgid ""
"This section describes functions dealing with events from the window system."
msgstr ""

#. used by: SECTION:events
#: gdkevents.c:45:4
msgid ""
"In GTK+ applications the events are handled automatically in "
"gtk_main_do_event() and passed on to the appropriate widgets, so these "
"functions are rarely needed. Though some of the fields in the <link linkend="
"\"gdk-Event-Structures\">Event Structures</link> are useful."
msgstr ""

# #used by: gdk_event_copy:
#. used by: gdk_event_copy:
#: gdkevents.c:495:2
msgid ""
"Copies a #GdkEvent, copying or incrementing the reference count of the "
"resources associated with it (e.g. #GdkWindow's and strings)."
msgstr ""

# #used by: gdk_event_copy:
#. used by: gdk_event_copy:
#: gdkevents.c:498:2
msgid ""
"Return value: a copy of @event. The returned #GdkEvent should be freed with "
"gdk_event_free()."
msgstr ""

# used by: gdk_event_free:
#. used by: gdk_event_free:
#: gdkevents.c:598:1
msgid "@event:  a #GdkEvent."
msgstr ""

# #used by: gdk_event_free:
#. used by: gdk_event_free:
#: gdkevents.c:600:4
msgid ""
"Frees a #GdkEvent, freeing or decrementing any resources associated with it. "
"Note that this function should only be called with events returned from "
"functions such as gdk_event_peek(), gdk_event_get(), gdk_event_copy() and "
"gdk_event_new()."
msgstr ""

# #used by: gdk_event_get_time:
#. used by: gdk_event_get_time:
#: gdkevents.c:683:2
msgid ""
"Returns the time stamp from @event, if there is one; otherwise returns "
"#GDK_CURRENT_TIME. If @event is %NULL, returns #GDK_CURRENT_TIME."
msgstr ""

# #used by: gdk_event_get_time:
#. used by: gdk_event_get_time:
#: gdkevents.c:686:1
msgid "Return value: time stamp field from @event"
msgstr ""

# used by: gdk_event_get_state:
#. used by: gdk_event_get_state:
#: gdkevents.c:750:1
msgid "@event: a #GdkEvent or NULL"
msgstr ""

# used by: gdk_event_get_state:
#. used by: gdk_event_get_state:
#: gdkevents.c:751:1
msgid "@state: (out): return location for state"
msgstr ""

#. used by: gdk_event_get_state:
#: gdkevents.c:753:4
msgid ""
"If the event contains a \"state\" field, puts that field in @state. "
"Otherwise stores an empty state (0). Returns %TRUE if there was a state "
"field in the event. @event may be %NULL, in which case it's treated as if "
"the event had no state field."
msgstr ""

# #used by: gdk_event_get_state:
#. used by: gdk_event_get_state:
#: gdkevents.c:758:1
msgid "Return value: %TRUE if there was a state field in the event"
msgstr ""

# #used by: _gdk_event_queue_find_first:
#. used by: _gdk_event_queue_find_first:
#: gdkevents.c:82:2
msgid "Find the first event on the queue that is not still being filled in."
msgstr ""

# used by: gdk_event_get_coords:
#. used by: gdk_event_get_coords:
#: gdkevents.c:828:1
msgid "@x_win: (out): location to put event window x coordinate"
msgstr ""

# used by: gdk_event_get_coords:
#. used by: gdk_event_get_coords:
#: gdkevents.c:829:1
msgid "@y_win: (out): location to put event window y coordinate"
msgstr ""

# #used by: gdk_event_get_coords:
#. used by: gdk_event_get_coords:
#: gdkevents.c:831:1
msgid "Extract the event window relative x/y coordinates from an event."
msgstr ""

# #used by: gdk_event_get_coords:
#. used by: gdk_event_get_coords:
#: gdkevents.c:833:1
msgid "Return value: %TRUE if the event delivered event window coordinates"
msgstr ""

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_seconds_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_seconds:
#. used by: _gdk_event_queue_find_first:
#: gdkevents.c:85:1
msgid "Return value: Pointer to the list node for that event, or NULL."
msgstr ""

# used by: gdk_event_get_root_coords:
#. used by: gdk_event_get_root_coords:
#: gdkevents.c:887:1
msgid "@x_root: (out): location to put root window x coordinate"
msgstr ""

# used by: gdk_event_get_root_coords:
#. used by: gdk_event_get_root_coords:
#: gdkevents.c:888:1
msgid "@y_root: (out): location to put root window y coordinate"
msgstr ""

# #used by: gdk_event_get_root_coords:
#. used by: gdk_event_get_root_coords:
#: gdkevents.c:890:1
msgid "Extract the root window relative x/y coordinates from an event."
msgstr ""

# #used by: gdk_event_get_root_coords:
#. used by: gdk_event_get_root_coords:
#: gdkevents.c:892:1
msgid "Return value: %TRUE if the event delivered root window coordinates"
msgstr ""

# used by: gdk_event_get_axis:
#. used by: gdk_event_get_axis:
#: gdkevents.c:951:1
msgid "@axis_use: the axis use to look for"
msgstr ""

# used by: gdk_event_get_axis:
#. used by: gdk_event_get_axis:
#: gdkevents.c:952:1
msgid "@value: (out): location to store the value found"
msgstr ""

# #used by: gdk_event_get_axis:
#. used by: gdk_event_get_axis:
#: gdkevents.c:954:2
msgid ""
"Extract the axis value for a particular axis use from an event structure."
msgstr ""

# #used by: gdk_display_open_default_libgtk_only:
#. used by: gdk_event_get_axis:
#: gdkevents.c:957:1
msgid "Return value: %TRUE if the specified axis was found, otherwise %FALSE"
msgstr "Return value: 如果指定的axis 可以找到，返回%TRUE，否则返回%NULL。"

#. used by: GdkEvent:
#: gdkevents.h:1005:3
msgid "</informalexample> or: <informalexample>"
msgstr ""

#. used by: GdkEventFunc:
#: gdkevents.h:101:1
msgid "@event: the #GdkEvent to process."
msgstr ""

#. used by: GdkEvent:
#: gdkevents.h:1014:1 gdkevents.h:992:1
msgid "</informalexample>"
msgstr ""

#. used by: GdkEventFunc:
#: gdkevents.h:102:2
msgid ""
"@data: (closure): user data set when the event handler was installed with "
"gdk_event_handler_set()."
msgstr ""

#. used by: GdkEventFunc:
#: gdkevents.h:105:2
msgid ""
"Specifies the type of function passed to gdk_event_handler_set() to handle "
"all GDK events."
msgstr ""

#. used by: GdkXEvent:
#: gdkevents.h:116:2
msgid ""
"Used to represent native events (<type>XEvent</type>s for the X11 backend, "
"<type>MSG</type>s for Win32)."
msgstr ""

#. used by: GdkFilterReturn:
#: gdkevents.h:125:1
msgid "@GDK_FILTER_CONTINUE: event not handled, continue processing."
msgstr ""

#. used by: GdkFilterReturn:
#: gdkevents.h:126:2
msgid ""
"@GDK_FILTER_TRANSLATE: native event translated into a GDK event and stored "
"in the <literal>event</literal> structure that was passed in."
msgstr ""

#. used by: GdkFilterReturn:
#: gdkevents.h:128:1
msgid "@GDK_FILTER_REMOVE: event handled, terminate processing."
msgstr ""

#. used by: GdkFilterReturn:
#: gdkevents.h:130:1
msgid "Specifies the result of applying a #GdkFilterFunc to a native event."
msgstr ""

#. used by: GdkFilterFunc:
#: gdkevents.h:142:1
msgid "@xevent: the native event to filter."
msgstr ""

#. used by: GdkFilterFunc:
#: gdkevents.h:143:1
msgid "@event: the GDK event to which the X event will be translated."
msgstr ""

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_idle_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_idle:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_seconds_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_seconds:
#. used by: GdkFilterFunc:
#: gdkevents.h:144:1
#, fuzzy
msgid "@data: user data set when the filter was installed."
msgstr "@data: 传递给这个函数的用户数据"

#. used by: GdkFilterFunc:
#: gdkevents.h:146:2
msgid ""
"Specifies the type of function used to filter native events before they are "
"converted to GDK events."
msgstr ""

#. used by: GdkFilterFunc:
#: gdkevents.h:149:5
msgid ""
"When a filter is called, @event is unpopulated, except for <literal>event-"
">window</literal>. The filter may translate the native event to a GDK event "
"and store the result in @event, or handle it without translation. If the "
"filter translates the event and processing should continue, it should return "
"%GDK_FILTER_TRANSLATE."
msgstr ""

#. used by: GdkFilterFunc:
#: gdkevents.h:155:1
msgid "Returns: a #GdkFilterReturn value."
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:164:1
msgid "@GDK_NOTHING: a special code to indicate a null event."
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:165:3
msgid ""
"@GDK_DELETE: the window manager has requested that the toplevel window be "
"hidden or destroyed, usually when the user clicks on a special icon in the "
"title bar."
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:168:1
msgid "@GDK_DESTROY: the window has been destroyed."
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:169:2
msgid ""
"@GDK_EXPOSE: all or part of the window has become visible and needs to be "
"redrawn."
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:171:1
msgid "@GDK_MOTION_NOTIFY: the pointer (usually a mouse) has moved."
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:172:6
msgid ""
"@GDK_BUTTON_PRESS: a mouse button has been pressed. @GDK_2BUTTON_PRESS: a "
"mouse button has been double-clicked (clicked twice within a short period of "
"time). Note that each click also generates a %GDK_BUTTON_PRESS event. "
"@GDK_3BUTTON_PRESS: a mouse button has been clicked 3 times in a short "
"period of time. Note that each click also generates a %GDK_BUTTON_PRESS "
"event."
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:178:1
msgid "@GDK_BUTTON_RELEASE: a mouse button has been released."
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:179:1
msgid "@GDK_KEY_PRESS: a key has been pressed."
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:180:1
msgid "@GDK_KEY_RELEASE: a key has been released."
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:181:1
msgid "@GDK_ENTER_NOTIFY: the pointer has entered the window."
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:182:1
msgid "@GDK_LEAVE_NOTIFY: the pointer has left the window."
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:183:1
msgid "@GDK_FOCUS_CHANGE: the keyboard focus has entered or left the window."
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:184:2
msgid ""
"@GDK_CONFIGURE: the size, position or stacking order of the window has "
"changed. Note that GTK+ discards these events for %GDK_WINDOW_CHILD windows."
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:186:1
msgid "@GDK_MAP: the window has been mapped."
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:187:1
msgid "@GDK_UNMAP: the window has been unmapped."
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:188:1
msgid ""
"@GDK_PROPERTY_NOTIFY: a property on the window has been changed or deleted."
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:189:1
msgid ""
"@GDK_SELECTION_CLEAR: the application has lost ownership of a selection."
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:190:1
msgid "@GDK_SELECTION_REQUEST: another application has requested a selection."
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:191:1
msgid "@GDK_SELECTION_NOTIFY: a selection has been received."
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:192:2
msgid ""
"@GDK_PROXIMITY_IN: an input device has moved into contact with a sensing "
"surface (e.g. a touchscreen or graphics tablet)."
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:194:2
msgid ""
"@GDK_PROXIMITY_OUT: an input device has moved out of contact with a sensing "
"surface."
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:196:1
msgid ""
"@GDK_DRAG_ENTER: the mouse has entered the window while a drag is in "
"progress."
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:197:1
msgid ""
"@GDK_DRAG_LEAVE: the mouse has left the window while a drag is in progress."
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:198:2
msgid ""
"@GDK_DRAG_MOTION: the mouse has moved in the window while a drag is in "
"progress."
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:200:2
msgid ""
"@GDK_DRAG_STATUS: the status of the drag operation initiated by the window "
"has changed."
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:202:1
msgid "@GDK_DROP_START: a drop operation onto the window has started."
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:203:1
msgid ""
"@GDK_DROP_FINISHED: the drop operation initiated by the window has completed."
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:204:1
msgid ""
"@GDK_CLIENT_EVENT: a message has been received from another application."
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:205:1
msgid "@GDK_VISIBILITY_NOTIFY: the window visibility status has changed."
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:206:1
msgid "@GDK_SCROLL: the scroll wheel was turned"
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:207:2
msgid ""
"@GDK_WINDOW_STATE: the state of a window has changed. See #GdkWindowState "
"for the possible window states"
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:209:1
msgid "@GDK_SETTING: a setting has been modified."
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:210:2
msgid ""
"@GDK_OWNER_CHANGE: the owner of a selection has changed. This event type was "
"added in 2.6"
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:212:2
msgid ""
"@GDK_GRAB_BROKEN: a pointer or keyboard grab was broken. This event type was "
"added in 2.8."
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:214:2
msgid ""
"@GDK_DAMAGE: the content of the window has been changed. This event type was "
"added in 2.14."
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:216:1
msgid ""
"@GDK_EVENT_LAST: marks the end of the GdkEventType enumeration. Added in 2.18"
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:218:1
msgid "Specifies the type of the event."
msgstr ""

#. used by: GdkEventType:
#: gdkevents.h:220:3
msgid ""
"Do not confuse these events with the signals that GTK+ widgets emit. "
"Although many of these events result in corresponding signals being emitted, "
"the events are often transformed or filtered along the way."
msgstr ""

#. used by: GdkVisibilityState:
#: gdkevents.h:268:1
msgid "@GDK_VISIBILITY_UNOBSCURED: the window is completely visible."
msgstr ""

#. used by: GdkVisibilityState:
#: gdkevents.h:269:1
msgid "@GDK_VISIBILITY_PARTIAL: the window is partially visible."
msgstr ""

#. used by: GdkVisibilityState:
#: gdkevents.h:270:1
msgid "@GDK_VISIBILITY_FULLY_OBSCURED: the window is not visible at all."
msgstr ""

#. used by: GdkVisibilityState:
#: gdkevents.h:272:1
msgid "Specifies the visiblity status of a window for a #GdkEventVisibility."
msgstr ""

#. used by: GdkScrollDirection:
#: gdkevents.h:283:1
msgid "@GDK_SCROLL_UP: the window is scrolled up."
msgstr ""

#. used by: GdkScrollDirection:
#: gdkevents.h:284:1
msgid "@GDK_SCROLL_DOWN: the window is scrolled down."
msgstr ""

#. used by: GdkScrollDirection:
#: gdkevents.h:285:1
msgid "@GDK_SCROLL_LEFT: the window is scrolled to the left."
msgstr ""

#. used by: GdkScrollDirection:
#: gdkevents.h:286:1
msgid "@GDK_SCROLL_RIGHT: the window is scrolled to the right."
msgstr ""

#. used by: GdkScrollDirection:
#: gdkevents.h:288:1
msgid "Specifies the direction for #GdkEventScroll."
msgstr ""

#. used by: GdkNotifyType:
#: gdkevents.h:300:2
msgid ""
"@GDK_NOTIFY_ANCESTOR: the window is entered from an ancestor or left towards "
"an ancestor."
msgstr ""

#. used by: GdkNotifyType:
#: gdkevents.h:302:2
msgid ""
"@GDK_NOTIFY_VIRTUAL: the pointer moves between an ancestor and an inferior "
"of the window."
msgstr ""

#. used by: GdkNotifyType:
#: gdkevents.h:304:2
msgid ""
"@GDK_NOTIFY_INFERIOR: the window is entered from an inferior or left towards "
"an inferior."
msgstr ""

#. used by: GdkNotifyType:
#: gdkevents.h:306:2
msgid ""
"@GDK_NOTIFY_NONLINEAR: the window is entered from or left towards a window "
"which is neither an ancestor nor an inferior."
msgstr ""

#. used by: GdkNotifyType:
#: gdkevents.h:308:4
msgid ""
"@GDK_NOTIFY_NONLINEAR_VIRTUAL: the pointer moves between two windows which "
"are not ancestors of each other and the window is part of the ancestor chain "
"between one of these windows and their least common ancestor."
msgstr ""

#. used by: GdkNotifyType:
#: gdkevents.h:312:1
msgid "@GDK_NOTIFY_UNKNOWN: an unknown type of enter/leave event occurred."
msgstr ""

#. used by: GdkNotifyType:
#: gdkevents.h:314:1
msgid "Specifies the kind of crossing for #GdkEventCrossing."
msgstr ""

#. used by: GdkNotifyType:
#: gdkevents.h:316:2
msgid ""
"See the X11 protocol specification of <type>LeaveNotify</type> for full "
"details of crossing event generation."
msgstr ""

#. used by: GdkCrossingMode:
#: gdkevents.h:331:1
msgid "@GDK_CROSSING_NORMAL: crossing because of pointer motion."
msgstr ""

#. used by: GdkCrossingMode:
#: gdkevents.h:332:1
msgid "@GDK_CROSSING_GRAB: crossing because a grab is activated."
msgstr ""

#. used by: GdkCrossingMode:
#: gdkevents.h:333:1
msgid "@GDK_CROSSING_UNGRAB: crossing because a grab is deactivated."
msgstr ""

#. used by: GdkCrossingMode:
#: gdkevents.h:334:1
msgid "@GDK_CROSSING_GTK_GRAB: crossing because a GTK+ grab is activated."
msgstr ""

#. used by: GdkCrossingMode:
#: gdkevents.h:335:1
msgid "@GDK_CROSSING_GTK_UNGRAB: crossing because a GTK+ grab is deactivated."
msgstr ""

#. used by: GdkCrossingMode:
#: gdkevents.h:336:2
msgid ""
"@GDK_CROSSING_STATE_CHANGED: crossing because a GTK+ widget changed state (e."
"g. sensitivity)."
msgstr ""

#. used by: GdkCrossingMode:
#: gdkevents.h:339:1
msgid "Specifies the crossing mode for #GdkEventCrossing."
msgstr ""

#. used by: GdkPropertyState:
#: gdkevents.h:353:1
msgid "@GDK_PROPERTY_NEW_VALUE: the property value was changed."
msgstr ""

#. used by: GdkPropertyState:
#: gdkevents.h:354:1
msgid "@GDK_PROPERTY_DELETE: the property was deleted."
msgstr ""

#. used by: GdkPropertyState:
#: gdkevents.h:356:1
msgid "Specifies the type of a property change for a #GdkEventProperty."
msgstr ""

#. used by: GdkWindowState:
#: gdkevents.h:366:1
msgid "@GDK_WINDOW_STATE_WITHDRAWN: the window is not shown."
msgstr ""

#. used by: GdkWindowState:
#: gdkevents.h:367:1
msgid "@GDK_WINDOW_STATE_ICONIFIED: the window is minimized."
msgstr ""

#. used by: GdkWindowState:
#: gdkevents.h:368:1
msgid "@GDK_WINDOW_STATE_MAXIMIZED: the window is maximized."
msgstr ""

#. used by: GdkWindowState:
#: gdkevents.h:369:1
msgid "@GDK_WINDOW_STATE_STICKY: the window is sticky."
msgstr ""

#. used by: GdkWindowState:
#: gdkevents.h:370:2
msgid ""
"@GDK_WINDOW_STATE_FULLSCREEN: the window is maximized without decorations."
msgstr ""

#. used by: GdkWindowState:
#: gdkevents.h:372:1
msgid "@GDK_WINDOW_STATE_ABOVE: the window is kept above other windows."
msgstr ""

#. used by: GdkWindowState:
#: gdkevents.h:373:1
msgid "@GDK_WINDOW_STATE_BELOW: the window is kept below other windows."
msgstr ""

#. used by: GdkWindowState:
#: gdkevents.h:375:1
msgid "Specifies the state of a toplevel window."
msgstr ""

#. used by: GdkSettingAction:
#: gdkevents.h:390:1
msgid "@GDK_SETTING_ACTION_NEW: a setting was added."
msgstr ""

#. used by: GdkSettingAction:
#: gdkevents.h:391:1
msgid "@GDK_SETTING_ACTION_CHANGED: a setting was changed."
msgstr ""

#. used by: GdkSettingAction:
#: gdkevents.h:392:1
msgid "@GDK_SETTING_ACTION_DELETED: a setting was deleted."
msgstr ""

#. used by: GdkSettingAction:
#: gdkevents.h:394:2
msgid ""
"Specifies the kind of modification applied to a setting in a "
"#GdkEventSetting."
msgstr ""

#. used by: GdkOwnerChange:
#: gdkevents.h:406:1
msgid "@GDK_OWNER_CHANGE_NEW_OWNER: some other app claimed the ownership"
msgstr ""

#. used by: GdkOwnerChange:
#: gdkevents.h:407:1
msgid "@GDK_OWNER_CHANGE_DESTROY: the window was destroyed"
msgstr ""

#. used by: GdkOwnerChange:
#: gdkevents.h:408:1
msgid "@GDK_OWNER_CHANGE_CLOSE: the client was closed"
msgstr ""

#. used by: GdkOwnerChange:
#: gdkevents.h:410:1
msgid "Specifies why a selection ownership was changed."
msgstr ""

#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventAny:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventMotion:
#: gdkevents.h:421:1 gdkevents.h:484:1
msgid "@type: the type of the event."
msgstr ""

#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventAny:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventExpose:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventVisibility:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventMotion:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventButton:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventScroll:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventKey:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventCrossing:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventFocus:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventConfigure:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventProperty:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventSelection:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventProximity:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventSetting:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventWindowState:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventDND:
#: gdkevents.h:422:1 gdkevents.h:440:1 gdkevents.h:466:1 gdkevents.h:485:1
#: gdkevents.h:525:1 gdkevents.h:599:1 gdkevents.h:637:1 gdkevents.h:684:1
#: gdkevents.h:728:1 gdkevents.h:747:1 gdkevents.h:770:1 gdkevents.h:794:1
#: gdkevents.h:852:1 gdkevents.h:879:1 gdkevents.h:900:1 gdkevents.h:954:1
msgid "@window: the window which received the event."
msgstr ""

#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventAny:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventExpose:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventVisibility:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventMotion:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventButton:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventScroll:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventKey:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventCrossing:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventFocus:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventConfigure:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventProperty:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventSelection:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventProximity:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventSetting:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventWindowState:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventGrabBroken:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventDND:
#: gdkevents.h:423:2 gdkevents.h:441:2 gdkevents.h:467:2 gdkevents.h:486:2
#: gdkevents.h:526:2 gdkevents.h:600:2 gdkevents.h:638:2 gdkevents.h:685:2
#: gdkevents.h:729:2 gdkevents.h:748:2 gdkevents.h:771:2 gdkevents.h:795:2
#: gdkevents.h:853:1 gdkevents.h:880:2 gdkevents.h:901:2 gdkevents.h:923:2
#: gdkevents.h:955:2
msgid ""
"@send_event: %TRUE if the event was sent explicitly (e.g. using "
"<function>XSendEvent</function>)."
msgstr ""

#. used by: GdkEventAny:
#: gdkevents.h:426:3
msgid ""
"Contains the fields which are common to all event structs. Any event pointer "
"can safely be cast to a pointer to a #GdkEventAny to access these fields."
msgstr ""

#. used by: GdkEventExpose:
#: gdkevents.h:439:1
msgid "@type: the type of the event (%GDK_EXPOSE or %GDK_DAMAGE)."
msgstr ""

#. used by: SECTION:event_structs
#: gdkevents.h:44:1
msgid "@Short_description: Data structures specific to each type of event"
msgstr ""

#. used by: GdkEventExpose:
#: gdkevents.h:443:1
msgid "@area: bounding box of @region."
msgstr ""

#. used by: GdkEventExpose:
#: gdkevents.h:444:1
msgid "@region: the region that needs to be redrawn."
msgstr ""

#. used by: GdkEventExpose:
#: gdkevents.h:445:4
msgid ""
"@count: the number of contiguous %GDK_EXPOSE events following this one. The "
"only use for this is \"exposure compression\", i.e. handling all contiguous "
"%GDK_EXPOSE events in one go, though GDK performs some exposure compression "
"so this is not normally needed."
msgstr ""

#. used by: SECTION:event_structs
#: gdkevents.h:45:1
msgid "@Title: Event Structures"
msgstr ""

#. used by: GdkEventExpose:
#: gdkevents.h:450:2
msgid ""
"Generated when all or part of a window becomes visible and needs to be "
"redrawn."
msgstr ""

#. used by: GdkEventVisibility:
#: gdkevents.h:465:1
msgid "@type: the type of the event (%GDK_VISIBILITY_NOTIFY)."
msgstr ""

#. used by: GdkEventVisibility:
#: gdkevents.h:469:2
msgid ""
"@state: the new visibility state (%GDK_VISIBILITY_FULLY_OBSCURED, "
"%GDK_VISIBILITY_PARTIAL or %GDK_VISIBILITY_UNOBSCURED)."
msgstr ""

#. used by: SECTION:event_structs
#: gdkevents.h:47:1
msgid "The event structs contain data specific to each type of event in GDK."
msgstr ""

#. used by: GdkEventVisibility:
#: gdkevents.h:472:1
msgid "Generated when the window visibility status has changed."
msgstr ""

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_seconds_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_seconds:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventMotion:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventButton:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventScroll:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventKey:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventCrossing:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventProperty:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventSelection:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventProximity:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventDND:
#: gdkevents.h:488:1 gdkevents.h:528:1 gdkevents.h:602:1 gdkevents.h:640:1
#: gdkevents.h:688:1 gdkevents.h:774:1 gdkevents.h:800:1 gdkevents.h:854:1
#: gdkevents.h:958:1
#, fuzzy
msgid "@time: the time of the event in milliseconds."
msgstr "@interval: 两次函数调用之间的间隔时间，以秒为单位"

# used by: gdk_window_redirect_to_drawable:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventMotion:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventButton:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventScroll:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventCrossing:
#: gdkevents.h:489:1 gdkevents.h:529:1 gdkevents.h:603:1 gdkevents.h:689:1
#, fuzzy
msgid "@x: the x coordinate of the pointer relative to the window."
msgstr "@src_x: 在@window中的x 坐标位置"

#. used by: SECTION:event_structs
#: gdkevents.h:49:6
msgid ""
"<note> <para> A common mistake is to forget to set the event mask of a "
"widget so that the required events are received. See gtk_widget_set_events"
"(). </para> </note>"
msgstr ""

# used by: gdk_window_redirect_to_drawable:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventMotion:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventButton:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventScroll:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventCrossing:
#: gdkevents.h:490:1 gdkevents.h:530:1 gdkevents.h:604:1 gdkevents.h:690:1
#, fuzzy
msgid "@y: the y coordinate of the pointer relative to the window."
msgstr "@src_y: 在@window中的y 坐标位置"

#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventMotion:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventButton:
#: gdkevents.h:491:2 gdkevents.h:531:2
msgid ""
"@axes: @x, @y translated to the axes of @device, or %NULL if @device is the "
"mouse."
msgstr ""

#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventMotion:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventButton:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventScroll:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventKey:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventCrossing:
#: gdkevents.h:493:3 gdkevents.h:533:3 gdkevents.h:605:3 gdkevents.h:641:3
#: gdkevents.h:702:3
msgid ""
"@state: (type GdkModifierType): a bit-mask representing the state of the "
"modifier keys (e.g. Control, Shift and Alt) and the pointer buttons. See "
"#GdkModifierType."
msgstr ""

#. used by: GdkEventMotion:
#: gdkevents.h:496:2
msgid ""
"@is_hint: set to 1 if this event is just a hint, see the "
"%GDK_POINTER_MOTION_HINT_MASK value of #GdkEventMask."
msgstr ""

#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventMotion:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventButton:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventScroll:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventProximity:
#: gdkevents.h:498:1 gdkevents.h:540:1 gdkevents.h:610:1 gdkevents.h:855:1
msgid "@device: the device where the event originated."
msgstr ""

#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventMotion:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventButton:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventScroll:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventCrossing:
#: gdkevents.h:499:2 gdkevents.h:541:2 gdkevents.h:611:2 gdkevents.h:691:1
msgid ""
"@x_root: the x coordinate of the pointer relative to the root of the screen."
msgstr ""

#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventMotion:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventButton:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventScroll:
#. #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkEventCrossing:
#: gdkevents.h:501:2 gdkevents.h:543:2 gdkevents.h:613:2 gdkevents.h:692:1
msgid ""
"@y_root: the y coordinate of the pointer relative to the root of the screen."
msgstr ""

#. used by: GdkEventMotion:
#: gdkevents.h:504:1
msgid "Generated when the pointer moves."
msgstr ""

#. used by: GdkEventButton:
#: gdkevents.h:523:2
msgid ""
"@type: the type of the event (%GDK_BUTTON_PRESS, %GDK_2BUTTON_PRESS, "
"%GDK_3BUTTON_PRESS or %GDK_BUTTON_RELEASE)."
msgstr ""

#. used by: GdkEventButton:
#: gdkevents.h:536:4
msgid ""
"@button: the button which was pressed or released, numbered from 1 to 5. "
"Normally button 1 is the left mouse button, 2 is the middle button, and 3 is "
"the right button. On 2-button mice, the middle button can often be simulated "
"by pressing both mouse buttons together."
msgstr ""

#. used by: GdkEventButton:
#: gdkevents.h:546:3
msgid ""
"Used for button press and button release events. The @type field will be one "
"of %GDK_BUTTON_PRESS, %GDK_2BUTTON_PRESS, %GDK_3BUTTON_PRESS, and "
"%GDK_BUTTON_RELEASE."
msgstr ""

#. used by: GdkEventButton:
#: gdkevents.h:550:12
msgid ""
"Double and triple-clicks result in a sequence of events being received. For "
"double-clicks the order of events will be: <orderedlist> <listitem><para>"
"%GDK_BUTTON_PRESS</para></listitem> <listitem><para>%GDK_BUTTON_RELEASE</"
"para></listitem> <listitem><para>%GDK_BUTTON_PRESS</para></listitem> "
"<listitem><para>%GDK_2BUTTON_PRESS</para></listitem> <listitem><para>"
"%GDK_BUTTON_RELEASE</para></listitem> </orderedlist> Note that the first "
"click is received just like a normal button press, while the second click "
"results in a %GDK_2BUTTON_PRESS being received just after the "
"%GDK_BUTTON_PRESS."
msgstr ""

#. used by: GdkEventButton:
#: gdkevents.h:563:13
msgid ""
"Triple-clicks are very similar to double-clicks, except that "
"%GDK_3BUTTON_PRESS is inserted after the third click. The order of the "
"events is: <orderedlist> <listitem><para>%GDK_BUTTON_PRESS</para></listitem> "
"<listitem><para>%GDK_BUTTON_RELEASE</para></listitem> <listitem><para>"
"%GDK_BUTTON_PRESS</para></listitem> <listitem><para>%GDK_2BUTTON_PRESS</"
"para></listitem> <listitem><para>%GDK_BUTTON_RELEASE</para></listitem> "
"<listitem><para>%GDK_BUTTON_PRESS</para></listitem> <listitem><para>"
"%GDK_3BUTTON_PRESS</para></listitem> <listitem><para>%GDK_BUTTON_RELEASE</"
"para></listitem> </orderedlist>"
msgstr ""

#. used by: GdkEventButton:
#: gdkevents.h:577:3
msgid ""
"For a double click to occur, the second button press must occur within 1/4 "
"of a second of the first. For a triple click to occur, the third button "
"press must also occur within 1/2 second of the first button press."
msgstr ""

#. used by: GdkEventScroll:
#: gdkevents.h:598:1
msgid "@type: the type of the event (%GDK_SCROLL)."
msgstr ""

#. used by: GdkEventScroll:
#: gdkevents.h:608:2
msgid ""
"@direction: the direction to scroll to (one of %GDK_SCROLL_UP, "
"%GDK_SCROLL_DOWN, %GDK_SCROLL_LEFT and %GDK_SCROLL_RIGHT)."
msgstr ""

#. used by: GdkEventScroll:
#: gdkevents.h:616:3
msgid ""
"Generated from button presses for the buttons 4 to 7. Wheel mice are usually "
"configured to generate button press events for buttons 4 and 5 when the "
"wheel is turned."
msgstr ""

#. used by: GDK_PRIORITY_EVENTS:
#: gdkevents.h:63:2
msgid ""
"This is the priority that events from the X server are given in the <link "
"linkend=\"glib-The-Main-Event-Loop\">GLib Main Loop</link>."
msgstr ""

#. used by: GdkEventKey:
#: gdkevents.h:636:1
msgid "@type: the type of the event (%GDK_KEY_PRESS or %GDK_KEY_RELEASE)."
msgstr ""

#. used by: GdkEventKey:
#: gdkevents.h:644:3
msgid ""
"@keyval: the key that was pressed or released. See the <filename>&lt;gdk/"
"gdkkeysyms.h&gt;</filename> header file for a complete list of GDK key codes."
msgstr ""

#. used by: GdkEventKey:
#: gdkevents.h:647:1
msgid "@length: the length of @string."
msgstr ""

#. used by: GdkEventKey:
#: gdkevents.h:648:11
msgid ""
"@string: a string containing the an approximation of the text that would "
"result from this keypress. The only correct way to handle text input of text "
"is using input methods (see #GtkIMContext), so this field is deprecated and "
"should never be used. (gdk_unicode_to_keyval() provides a non-deprecated way "
"of getting an approximate translation for a key.) The string is encoded in "
"the encoding of the current locale (Note: this for backwards compatibility: "
"strings in GTK+ and GDK are typically in UTF-8.) and NUL-terminated. In some "
"cases, the translation of the key code will be a single NUL byte, in which "
"case looking at @length is necessary to distinguish it from the an empty "
"translation."
msgstr ""

#. used by: GdkEventKey:
#: gdkevents.h:659:1
msgid ""
"@hardware_keycode: the raw code of the key that was pressed or released."
msgstr ""

# used by: gdk_add_option_entries_libgtk_only:
#. used by: GdkEventKey:
#: gdkevents.h:660:1
#, fuzzy
msgid "@group: the keyboard group."
msgstr "@group: 一个选项组。"

#. used by: GdkEventKey:
#: gdkevents.h:661:2
msgid ""
"@is_modifier: a flag that indicates if @hardware_keycode is mapped to a "
"modifier. Since 2.10"
msgstr ""

#. used by: GdkEventKey:
#: gdkevents.h:664:1
msgid "Describes a key press or key release event."
msgstr ""

#. used by: GdkEventCrossing:
#: gdkevents.h:683:1
msgid "@type: the type of the event (%GDK_ENTER_NOTIFY or %GDK_LEAVE_NOTIFY)."
msgstr ""

#. used by: GdkEventCrossing:
#: gdkevents.h:687:1
msgid "@subwindow: the window that was entered or left."
msgstr ""

#. used by: GdkEventCrossing:
#: gdkevents.h:693:5
msgid ""
"@mode: the crossing mode (%GDK_CROSSING_NORMAL, %GDK_CROSSING_GRAB, "
"%GDK_CROSSING_UNGRAB, %GDK_CROSSING_GTK_GRAB, %GDK_CROSSING_GTK_UNGRAB or "
"%GDK_CROSSING_STATE_CHANGED).  %GDK_CROSSING_GTK_GRAB, "
"%GDK_CROSSING_GTK_UNGRAB, and %GDK_CROSSING_STATE_CHANGED were added in 2.14 "
"and are always synthesized, never native."
msgstr ""

#. used by: GdkEventCrossing:
#: gdkevents.h:698:3
msgid ""
"@detail: the kind of crossing that happened (%GDK_NOTIFY_INFERIOR, "
"%GDK_NOTIFY_ANCESTOR, %GDK_NOTIFY_VIRTUAL, %GDK_NOTIFY_NONLINEAR or "
"%GDK_NOTIFY_NONLINEAR_VIRTUAL)."
msgstr ""

#. used by: GdkEventCrossing:
#: gdkevents.h:701:1
msgid "@focus: %TRUE if @window is the focus window or an inferior."
msgstr ""

#. used by: GdkEventCrossing:
#: gdkevents.h:706:1
msgid "Generated when the pointer enters or leaves a window."
msgstr ""

#. used by: GDK_PRIORITY_REDRAW:
#: gdkevents.h:71:3
msgid ""
"This is the priority that the idle handler processing window updates is "
"given in the <link linkend=\"glib-The-Main-Event-Loop\">GLib Main Loop</"
"link>."
msgstr ""

#. used by: GdkEventFocus:
#: gdkevents.h:727:1
msgid "@type: the type of the event (%GDK_FOCUS_CHANGE)."
msgstr ""

# #used by: gdk_display_open_default_libgtk_only:
#. used by: GdkEventFocus:
#: gdkevents.h:731:2
#, fuzzy
msgid ""
"@in: %TRUE if the window has gained the keyboard focus, %FALSE if it has "
"lost the focus."
msgstr "Return value: 如果指定的axis 可以找到，返回%TRUE，否则返回%NULL。"

#. used by: GdkEventFocus:
#: gdkevents.h:734:1
msgid "Describes a change of keyboard focus."
msgstr ""

#. used by: GdkEventConfigure:
#: gdkevents.h:746:1
msgid "@type: the type of the event (%GDK_CONFIGURE)."
msgstr ""

# used by: gdk_window_redirect_to_drawable:
#. used by: GdkEventConfigure:
#: gdkevents.h:750:1
#, fuzzy
msgid "@x: the new x coordinate of the window, relative to its parent."
msgstr "@src_x: 在@window中的x 坐标位置"

# used by: gdk_window_redirect_to_drawable:
#. used by: GdkEventConfigure:
#: gdkevents.h:751:1
#, fuzzy
msgid "@y: the new y coordinate of the window, relative to its parent."
msgstr "@src_y: 在@window中的y 坐标位置"

#. used by: GdkEventConfigure:
#: gdkevents.h:752:1
msgid "@width: the new width of the window."
msgstr ""

#. used by: GdkEventConfigure:
#: gdkevents.h:753:1
msgid "@height: the new height of the window."
msgstr ""

#. used by: GdkEventConfigure:
#: gdkevents.h:755:1
msgid "Generated when a window size or position has changed."
msgstr ""

#. used by: GdkEventProperty:
#: gdkevents.h:769:1
msgid "@type: the type of the event (%GDK_PROPERTY_NOTIFY)."
msgstr ""

#. used by: GdkEventProperty:
#: gdkevents.h:773:1
msgid "@atom: the property that was changed."
msgstr ""

#. used by: GdkEventProperty:
#: gdkevents.h:775:2
msgid ""
"@state: whether the property was changed (%GDK_PROPERTY_NEW_VALUE) or "
"deleted (%GDK_PROPERTY_DELETE)."
msgstr ""

#. used by: GdkEventProperty:
#: gdkevents.h:778:1
msgid "Describes a property change on a window."
msgstr ""

#. used by: GdkEventSelection:
#: gdkevents.h:792:2
msgid ""
"@type: the type of the event (%GDK_SELECTION_CLEAR, %GDK_SELECTION_NOTIFY or "
"%GDK_SELECTION_REQUEST)."
msgstr ""

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_idle_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_idle:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_seconds_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_seconds:
#. used by: GdkEventSelection:
#: gdkevents.h:797:1
#, fuzzy
msgid "@selection: the selection."
msgstr "@function: 被调用的函数"

#. used by: GdkEventSelection:
#: gdkevents.h:798:1
msgid "@target: the target to which the selection should be converted."
msgstr ""

#. used by: GdkEventSelection:
#: gdkevents.h:799:1
msgid "@property: the property in which to place the result of the conversion."
msgstr ""

#. used by: GdkEventSelection:
#: gdkevents.h:801:1
msgid "@requestor: the window on which to place @property or %NULL if none."
msgstr ""

#. used by: GdkEventSelection:
#: gdkevents.h:803:2
msgid ""
"Generated when a selection is requested or ownership of a selection is taken "
"over by another client application."
msgstr ""

#. used by: GdkEventOwnerChange:
#: gdkevents.h:820:1
msgid "@type: the type of the event (%GDK_OWNER_CHANGE)."
msgstr ""

#. used by: GdkEventOwnerChange:
#: gdkevents.h:821:1
msgid "@window: the window which received the event"
msgstr ""

#. used by: GdkEventOwnerChange:
#: gdkevents.h:822:2
msgid ""
"@send_event: %TRUE if the event was sent explicitly (e.g. using "
"<function>XSendEvent</function>)"
msgstr ""

#. used by: GdkEventOwnerChange:
#: gdkevents.h:824:1
msgid "@owner: the new owner of the selection, or %NULL if there is none"
msgstr ""

#. used by: GdkEventOwnerChange:
#: gdkevents.h:825:1
msgid "@reason: the reason for the ownership change as a #GdkOwnerChange value"
msgstr ""

#. used by: GdkEventOwnerChange:
#: gdkevents.h:826:1
msgid "@selection: the atom identifying the selection"
msgstr ""

#. used by: GdkEventOwnerChange:
#: gdkevents.h:827:1
msgid "@time: the timestamp of the event"
msgstr ""

#. used by: GdkEventOwnerChange:
#: gdkevents.h:828:2
msgid ""
"@selection_time: the time at which the selection ownership was taken over"
msgstr ""

#. used by: GdkEventOwnerChange:
#: gdkevents.h:831:3
msgid ""
"Generated when the owner of a selection changes. On X11, this information is "
"only available if the X server supports the XFIXES extension."
msgstr ""

#. used by: GdkEventProximity:
#: gdkevents.h:851:1
msgid "@type: the type of the event (%GDK_PROXIMITY_IN or %GDK_PROXIMITY_OUT)."
msgstr ""

#. used by: GdkEventProximity:
#: gdkevents.h:857:6
msgid ""
"Proximity events are generated when using GDK's wrapper for the XInput "
"extension. The XInput extension is an add-on for standard X that allows you "
"to use nonstandard devices such as graphics tablets. A proximity event "
"indicates that the stylus has moved in or out of contact with the tablet, or "
"perhaps that the user's finger has moved in or out of contact with a touch "
"screen."
msgstr ""

#. used by: GdkEventProximity:
#: gdkevents.h:864:2
msgid ""
"This event type will be used pretty rarely. It only is important for XInput "
"aware programs that are drawing their own cursor."
msgstr ""

#. used by: GdkEventSetting:
#: gdkevents.h:878:1
msgid "@type: the type of the event (%GDK_SETTING)."
msgstr ""

#. used by: GdkEventSetting:
#: gdkevents.h:882:2
msgid ""
"@action: what happened to the setting (%GDK_SETTING_ACTION_NEW, "
"%GDK_SETTING_ACTION_CHANGED or %GDK_SETTING_ACTION_DELETED)."
msgstr ""

#. used by: GdkEventSetting:
#: gdkevents.h:886:1
msgid "Generated when a setting is modified."
msgstr ""

#. used by: GdkEventWindowState:
#: gdkevents.h:899:1
msgid "@type: the type of the event (%GDK_WINDOW_STATE)."
msgstr ""

#. used by: GdkEventWindowState:
#: gdkevents.h:903:1
msgid "@changed_mask: mask specifying what flags have changed."
msgstr ""

#. used by: GdkEventWindowState:
#: gdkevents.h:904:2
msgid ""
"@new_window_state: the new window state, a combination of #GdkWindowState "
"bits."
msgstr ""

#. used by: GdkEventWindowState:
#: gdkevents.h:907:1
msgid "Generated when the state of a toplevel window changes."
msgstr ""

#. used by: GdkEventGrabBroken:
#: gdkevents.h:920:1
msgid "@type: the type of the event (%GDK_GRAB_BROKEN)"
msgstr ""

#. used by: GdkEventGrabBroken:
#: gdkevents.h:921:2
msgid ""
"@window: the window which received the event, i.e. the window that "
"previously owned the grab"
msgstr ""

#. used by: GdkEventGrabBroken:
#: gdkevents.h:925:2
msgid ""
"@keyboard: %TRUE if a keyboard grab was broken, %FALSE if a pointer grab was "
"broken"
msgstr ""

#. used by: GdkEventGrabBroken:
#: gdkevents.h:927:1
msgid "@implicit: %TRUE if the broken grab was implicit"
msgstr ""

#. used by: GdkEventGrabBroken:
#: gdkevents.h:928:3
msgid ""
"@grab_window: If this event is caused by another grab in the same "
"application, @grab_window contains the new grab window. Otherwise "
"@grab_window is %NULL."
msgstr ""

#. used by: GdkEventGrabBroken:
#: gdkevents.h:932:5
msgid ""
"Generated when a pointer or keyboard grab is broken. On X11, this happens "
"when the grab window becomes unviewable (i.e. it or one of its ancestors is "
"unmapped), or if the same application grabs the pointer or keyboard again. "
"Note that implicit grabs (which are initiated by button presses) can also "
"cause #GdkEventGrabBroken events."
msgstr ""

#. used by: GdkEventDND:
#: gdkevents.h:951:3
msgid ""
"@type: the type of the event (%GDK_DRAG_ENTER, %GDK_DRAG_LEAVE, "
"%GDK_DRAG_MOTION, %GDK_DRAG_STATUS, %GDK_DROP_START or %GDK_DROP_FINISHED)."
msgstr ""

# used by: gdk_drag_find_window:
#. used by: GdkEventDND:
#: gdkevents.h:957:1
#, fuzzy
msgid "@context: the #GdkDragContext for the current DND operation."
msgstr "@context: 一个 #GdkDragContext."

#. used by: GdkEventDND:
#: gdkevents.h:959:2
msgid ""
"@x_root: the x coordinate of the pointer relative to the root of the screen, "
"only set for %GDK_DRAG_MOTION and %GDK_DROP_START."
msgstr ""

#. used by: GdkEventDND:
#: gdkevents.h:961:2
msgid ""
"@y_root: the y coordinate of the pointer relative to the root of the screen, "
"only set for %GDK_DRAG_MOTION and %GDK_DROP_START."
msgstr ""

#. used by: GdkEventDND:
#: gdkevents.h:964:1
msgid "Generated during DND operations."
msgstr ""

#. used by: GdkEvent:
#: gdkevents.h:979:2
msgid ""
"The #GdkEvent struct contains a union of all of the event structs, and "
"allows access to the data fields in a number of ways."
msgstr ""

#. used by: GdkEvent:
#: gdkevents.h:982:4
msgid ""
"The event type is always the first field in all of the event structs, and "
"can always be accessed with the following code, no matter what type of event "
"it is: <informalexample>"
msgstr ""

#. used by: GdkEvent:
#: gdkevents.h:994:5
msgid ""
"To access other fields of the event structs, the pointer to the event can be "
"cast to the appropriate event struct pointer, or the union member name can "
"be used. For example if the event type is %GDK_BUTTON_PRESS then the x "
"coordinate of the button press can be accessed with: <informalexample>"
msgstr ""

# #-#-#-#-#  gdkkeys.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: GdkKeymap::direction-changed:
# #-#-#-#-#  gdkkeys.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: GdkKeymap::keys-changed:
# #-#-#-#-#  gdkkeys.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: GdkKeymap::state-changed:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkKeymap::direction-changed:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkKeymap::keys-changed:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkKeymap::state-changed:
#: gdkkeys.c:122:1 gdkkeys.c:140:1 gdkkeys.c:159:1
msgid "@keymap: the object on which the signal is emitted"
msgstr ""

# #used by: GdkKeymap::direction-changed:
#. used by: GdkKeymap::direction-changed:
#: gdkkeys.c:124:2
msgid ""
"The ::direction-changed signal gets emitted when the direction of the keymap "
"changes."
msgstr ""

# #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_parse_args:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_get_display_arg_name:
# #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkDisplay::closed:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_close:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_event:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_peek_event:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_put_event:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_core_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_window_at_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_set_pointer_hooks:
# #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkDisplayManager::display-opened:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_get:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_get_default_display:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_default:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_default:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_set_default_display:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_list_displays:
# #-#-#-#-#  gdkdraw.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkdraw.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_drawable_get_screen:
# #-#-#-#-#  gdkdraw.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_drawable_get_display:
# #-#-#-#-#  gdkdraw.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_draw_pixbuf:
# #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_event_new:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_event_set_screen:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_event_get_screen:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_set_double_click_time:
# #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkKeymap::keys-changed:
# #-#-#-#-#  gdkpango.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_pango_context_get_for_screen:
# #-#-#-#-#  gdkrgb.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkrgb.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_rgb_colormap:
# #-#-#-#-#  gdkrgb.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_rgb_visual:
# #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkScreen::size-changed:
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_monitor_at_point:
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_monitor_at_window:
# #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_toplevel_windows:
#. used by: GdkKeymap::direction-changed:
#: gdkkeys.c:127:1
msgid "Since: 2.0"
msgstr "Since: 2.0"

# #used by: GdkKeymap::keys-changed:
#. used by: GdkKeymap::keys-changed:
#: gdkkeys.c:142:2
msgid ""
"The ::keys-changed signal is emitted when the mapping represented by @keymap "
"changes."
msgstr ""

# #used by: GdkKeymap::state-changed:
#. used by: GdkKeymap::state-changed:
#: gdkkeys.c:161:3
msgid ""
"The ::state-changed signal is emitted when the state of the keyboard "
"changes, e.g when Caps Lock is turned on or off. See "
"gdk_keymap_get_caps_lock_state()."
msgstr ""

# used by: gdk_keyval_convert_case:
#. used by: gdk_keyval_convert_case:
#: gdkkeys.c:188:1
msgid "@symbol: a keyval"
msgstr ""

# used by: gdk_keyval_convert_case:
#. used by: gdk_keyval_convert_case:
#: gdkkeys.c:189:1
msgid "@lower: (out): return location for lowercase version of @symbol"
msgstr ""

# used by: gdk_keyval_convert_case:
#. used by: gdk_keyval_convert_case:
#: gdkkeys.c:190:1
msgid "@upper: (out): return location for uppercase version of @symbol"
msgstr ""

# #used by: gdk_keyval_convert_case:
#. used by: gdk_keyval_convert_case:
#: gdkkeys.c:192:2
msgid ""
"Obtains the upper- and lower-case versions of the keyval @symbol. Examples "
"of keyvals are #GDK_KEY_a, #GDK_KEY_Enter, #GDK_KEY_F1, etc."
msgstr ""

# #-#-#-#-#  gdkkeys.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_keyval_to_upper:
# #-#-#-#-#  gdkkeys.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_keyval_to_lower:
# #-#-#-#-#  gdkkeys.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_keyval_is_upper:
# #-#-#-#-#  gdkkeys.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_keyval_is_lower:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keyval_to_upper:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keyval_to_lower:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keyval_is_upper:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keyval_is_lower:
#: gdkkeys.c:207:1 gdkkeys.c:226:1 gdkkeys.c:245:1 gdkkeys.c:267:1
msgid "@keyval: a key value."
msgstr ""

# #used by: gdk_keyval_to_upper:
#. used by: gdk_keyval_to_upper:
#: gdkkeys.c:209:1
msgid "Converts a key value to upper case, if applicable."
msgstr ""

# #used by: gdk_keyval_to_upper:
#. used by: gdk_keyval_to_upper:
#: gdkkeys.c:211:2
msgid ""
"Returns: the upper case form of @keyval, or @keyval itself if it is already "
"in upper case or it is not subject to case conversion."
msgstr ""

# #used by: gdk_keyval_to_lower:
#. used by: gdk_keyval_to_lower:
#: gdkkeys.c:228:1
msgid "Converts a key value to lower case, if applicable."
msgstr ""

# #used by: gdk_keyval_to_lower:
#. used by: gdk_keyval_to_lower:
#: gdkkeys.c:230:2
msgid ""
"Returns: the lower case form of @keyval, or @keyval itself if it is already "
"in lower case or it is not subject to case conversion."
msgstr ""

# #used by: gdk_keyval_is_upper:
#. used by: gdk_keyval_is_upper:
#: gdkkeys.c:247:1
msgid "Returns %TRUE if the given key value is in upper case."
msgstr ""

# #used by: gdk_keyval_is_upper:
#. used by: gdk_keyval_is_upper:
#: gdkkeys.c:249:2
msgid ""
"Returns: %TRUE if @keyval is in upper case, or if @keyval is not subject to "
"case conversion."
msgstr ""

# #used by: gdk_keyval_is_lower:
#. used by: gdk_keyval_is_lower:
#: gdkkeys.c:269:1
msgid "Returns %TRUE if the given key value is in lower case."
msgstr ""

# #used by: gdk_keyval_is_lower:
#. used by: gdk_keyval_is_lower:
#: gdkkeys.c:271:2
msgid ""
"Returns: %TRUE if @keyval is in lower case, or if @keyval is not subject to "
"case conversion."
msgstr ""

# #used by: gdk_keymap_get_default:
#. used by: gdk_keymap_get_default:
#: gdkkeys.c:290:1
msgid "Returns the #GdkKeymap attached to the default display."
msgstr ""

# #used by: gdk_keymap_get_default:
#. used by: gdk_keymap_get_default:
#: gdkkeys.c:292:1
msgid ""
"Returns: (transfer none): the #GdkKeymap attached to the default display."
msgstr ""

# #-#-#-#-#  gdkkeys.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_keymap_get_direction:
# #-#-#-#-#  gdkkeys.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_keymap_have_bidi_layouts:
# #-#-#-#-#  gdkkeys.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_keymap_get_caps_lock_state:
# #-#-#-#-#  gdkkeys.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_keymap_get_num_lock_state:
# #-#-#-#-#  gdkkeys.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_keymap_get_entries_for_keyval:
# #-#-#-#-#  gdkkeys.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_keymap_get_entries_for_keycode:
# #-#-#-#-#  gdkkeys.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_keymap_lookup_key:
# #-#-#-#-#  gdkkeys.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_keymap_translate_keyboard_state:
# #-#-#-#-#  gdkkeys.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_keymap_add_virtual_modifiers:
# #-#-#-#-#  gdkkeys.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_keymap_map_virtual_modifiers:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_get_direction:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_have_bidi_layouts:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_get_caps_lock_state:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_get_num_lock_state:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_get_entries_for_keyval:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_get_entries_for_keycode:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_lookup_key:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_translate_keyboard_state:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_add_virtual_modifiers:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_map_virtual_modifiers:
#: gdkkeys.c:302:1 gdkkeys.c:318:1 gdkkeys.c:335:1 gdkkeys.c:351:1
#: gdkkeys.c:367:1 gdkkeys.c:398:1 gdkkeys.c:427:1 gdkkeys.c:447:1
#: gdkkeys.c:536:1 gdkkeys.c:562:1
msgid "@keymap: a #GdkKeymap"
msgstr ""

# #used by: gdk_keymap_get_direction:
#. used by: gdk_keymap_get_direction:
#: gdkkeys.c:304:1
msgid "Returns the direction of effective layout of the keymap."
msgstr ""

# #used by: gdk_keymap_get_direction:
#. used by: gdk_keymap_get_direction:
#: gdkkeys.c:306:3
msgid ""
"Returns: %PANGO_DIRECTION_LTR or %PANGO_DIRECTION_RTL if it can determine "
"the direction. %PANGO_DIRECTION_NEUTRAL otherwise."
msgstr ""

# #used by: gdk_keymap_have_bidi_layouts:
#. used by: gdk_keymap_have_bidi_layouts:
#: gdkkeys.c:320:2
msgid ""
"Determines if keyboard layouts for both right-to-left and left-to-right "
"languages are in use."
msgstr ""

# #used by: gdk_keymap_have_bidi_layouts:
#. used by: gdk_keymap_have_bidi_layouts:
#: gdkkeys.c:323:1
msgid ""
"Returns: %TRUE if there are layouts in both directions, %FALSE otherwise"
msgstr ""

# #used by: gdk_keymap_get_caps_lock_state:
#. used by: gdk_keymap_get_caps_lock_state:
#: gdkkeys.c:337:1
msgid "Returns whether the Caps Lock modifer is locked."
msgstr ""

# #used by: gdk_keymap_get_caps_lock_state:
#. used by: gdk_keymap_get_caps_lock_state:
#: gdkkeys.c:339:1
msgid "Returns: %TRUE if Caps Lock is on"
msgstr ""

# #used by: gdk_keymap_get_num_lock_state:
#. used by: gdk_keymap_get_num_lock_state:
#: gdkkeys.c:353:1
msgid "Returns whether the Num Lock modifer is locked."
msgstr ""

# #used by: gdk_keymap_get_num_lock_state:
#. used by: gdk_keymap_get_num_lock_state:
#: gdkkeys.c:355:1
msgid "Returns: %TRUE if Num Lock is on"
msgstr ""

# used by: SECTION:keys
#. used by: SECTION:keys
#: gdkkeys.c:36:1
msgid "@Short_description: Functions for manipulating keyboard codes"
msgstr ""

# used by: gdk_keymap_get_entries_for_keyval:
#. used by: gdk_keymap_get_entries_for_keyval:
#: gdkkeys.c:368:1
msgid "@keyval: a keyval, such as %GDK_a, %GDK_Up, %GDK_Return, etc."
msgstr ""

# used by: gdk_keymap_get_entries_for_keyval:
#. used by: gdk_keymap_get_entries_for_keyval:
#: gdkkeys.c:369:2
msgid ""
"@keys: (out) (array length=n_keys) (transfer full): return location for an "
"array of #GdkKeymapKey"
msgstr ""

# used by: SECTION:keys
#. used by: SECTION:keys
#: gdkkeys.c:37:1
msgid "@Title: Key Values"
msgstr ""

# used by: gdk_keymap_get_entries_for_keyval:
#. used by: gdk_keymap_get_entries_for_keyval:
#: gdkkeys.c:371:1
msgid "@n_keys: return location for number of elements in returned array"
msgstr ""

# #used by: gdk_keymap_get_entries_for_keyval:
#. used by: gdk_keymap_get_entries_for_keyval:
#: gdkkeys.c:373:11
msgid ""
"Obtains a list of keycode/group/level combinations that will generate "
"@keyval. Groups and levels are two kinds of keyboard mode; in general, the "
"level determines whether the top or bottom symbol on a key is used, and the "
"group determines whether the left or right symbol is used. On US keyboards, "
"the shift key changes the keyboard level, and there are no groups. A group "
"switch key might convert a keyboard between Hebrew to English modes, for "
"example. #GdkEventKey contains a %group field that indicates the active "
"keyboard group. The level is computed from the modifier mask. The returned "
"array should be freed with g_free()."
msgstr ""

# #used by: gdk_display_open_default_libgtk_only:
#. used by: gdk_keymap_get_entries_for_keyval:
#: gdkkeys.c:385:1
#, fuzzy
msgid "Return value: %TRUE if keys were found and returned"
msgstr "Return value: 如果指定的axis 可以找到，返回%TRUE，否则返回%NULL。"

# #used by: SECTION:keys
#. used by: SECTION:keys
#: gdkkeys.c:39:6
msgid ""
"Key values are the codes which are sent whenever a key is pressed or "
"released. They appear in the #GdkEventKey.keyval field of the #GdkEventKey "
"structure, which is passed to signal handlers for the #GtkWidget::key-press-"
"event and #GtkWidget::key-release-event signals. The complete list of key "
"values can be found in the <filename>&lt;gdk/gdkkeysyms.h&gt;</filename> "
"header file."
msgstr ""

# #-#-#-#-#  gdkkeys.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_keymap_get_entries_for_keycode:
# #-#-#-#-#  gdkkeys.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_keymap_translate_keyboard_state:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_get_entries_for_keycode:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_translate_keyboard_state:
#: gdkkeys.c:399:1 gdkkeys.c:448:1
msgid "@hardware_keycode: a keycode"
msgstr ""

# used by: gdk_keymap_get_entries_for_keycode:
#. used by: gdk_keymap_get_entries_for_keycode:
#: gdkkeys.c:400:2
msgid ""
"@keys: (out) (array length=n_entries) (transfer full): return location for "
"array of #GdkKeymapKey, or %NULL"
msgstr ""

# used by: gdk_keymap_get_entries_for_keycode:
#. used by: gdk_keymap_get_entries_for_keycode:
#: gdkkeys.c:402:2
msgid ""
"@keyvals: (out) (array length=n_entries) (transfer full): return location "
"for array of keyvals, or %NULL"
msgstr ""

# used by: gdk_keymap_get_entries_for_keycode:
#. used by: gdk_keymap_get_entries_for_keycode:
#: gdkkeys.c:404:1
msgid "@n_entries: length of @keys and @keyvals"
msgstr ""

# #used by: gdk_keymap_get_entries_for_keycode:
#. used by: gdk_keymap_get_entries_for_keycode:
#: gdkkeys.c:406:6
msgid ""
"Returns the keyvals bound to @hardware_keycode. The Nth #GdkKeymapKey in "
"@keys is bound to the Nth keyval in @keyvals. Free the returned arrays with "
"g_free(). When a keycode is pressed by the user, the keyval from this list "
"of entries is selected by considering the effective keyboard group and "
"level. See gdk_keymap_translate_keyboard_state()."
msgstr ""

# #used by: gdk_keymap_get_entries_for_keycode:
#. used by: gdk_keymap_get_entries_for_keycode:
#: gdkkeys.c:413:1
msgid "Returns: %TRUE if there were any entries"
msgstr ""

# used by: gdk_keymap_lookup_key:
#. used by: gdk_keymap_lookup_key:
#: gdkkeys.c:428:1
msgid "@key: a #GdkKeymapKey with keycode, group, and level initialized"
msgstr ""

# #used by: gdk_keymap_lookup_key:
#. used by: gdk_keymap_lookup_key:
#: gdkkeys.c:430:5
msgid ""
"Looks up the keyval mapped to a keycode/group/level triplet. If no keyval is "
"bound to @key, returns 0. For normal user input, you want to use "
"gdk_keymap_translate_keyboard_state() instead of this function, since the "
"effective group/level may not be the same as the current keyboard state."
msgstr ""

# #used by: gdk_keymap_lookup_key:
#. used by: gdk_keymap_lookup_key:
#: gdkkeys.c:436:1
msgid "Return value: a keyval, or 0 if none was mapped to the given @key"
msgstr ""

# used by: gdk_keymap_translate_keyboard_state:
#. used by: gdk_keymap_translate_keyboard_state:
#: gdkkeys.c:449:1
msgid "@state: a modifier state"
msgstr ""

# used by: gdk_add_option_entries_libgtk_only:
#. used by: gdk_keymap_translate_keyboard_state:
#: gdkkeys.c:450:1
#, fuzzy
msgid "@group: active keyboard group"
msgstr "@group: 一个选项组。"

# used by: gdk_keymap_translate_keyboard_state:
#. used by: gdk_keymap_translate_keyboard_state:
#: gdkkeys.c:451:1
msgid "@keyval: (out) (allow-none): return location for keyval, or %NULL"
msgstr ""

# used by: gdk_keymap_translate_keyboard_state:
#. used by: gdk_keymap_translate_keyboard_state:
#: gdkkeys.c:452:2
msgid ""
"@effective_group: (out) (allow-none): return location for effective group, "
"or %NULL"
msgstr ""

# used by: gdk_keymap_translate_keyboard_state:
#. used by: gdk_keymap_translate_keyboard_state:
#: gdkkeys.c:454:1
msgid "@level: (out) (allow-none): return location for level, or %NULL"
msgstr ""

# used by: gdk_keymap_translate_keyboard_state:
#. used by: gdk_keymap_translate_keyboard_state:
#: gdkkeys.c:455:2
msgid ""
"@consumed_modifiers: (out) (allow-none): return location for modifiers that "
"were used to determine the group or level, or %NULL"
msgstr ""

#. used by: gdk_keymap_translate_keyboard_state:
#: gdkkeys.c:458:10
msgid ""
"Translates the contents of a #GdkEventKey into a keyval, effective group, "
"and level. Modifiers that affected the translation and are thus unavailable "
"for application use are returned in @consumed_modifiers. See <xref linkend="
"\"key-group-explanation\"/> for an explanation of groups and levels. The "
"@effective_group is the group that was actually used for the translation; "
"some keys such as Enter are not affected by the active keyboard group. The "
"@level is derived from @state. For convenience, #GdkEventKey already "
"contains the translated keyval, so this function isn't as useful as you "
"might think."
msgstr ""

# #used by: SECTION:keys
#. used by: SECTION:keys
#: gdkkeys.c:46:3
msgid ""
"Key values are regularly updated from the upstream X.org X11 implementation, "
"so new values are added regularly. They will be prefixed with GDK_KEY_ "
"rather than XF86XK_ or XK_ (for older symbols)."
msgstr ""

# #used by: gdk_keymap_translate_keyboard_state:
#. used by: gdk_keymap_translate_keyboard_state:
#: gdkkeys.c:469:8
msgid ""
"<note><para> @consumed_modifiers gives modifiers that should be masked out "
"from @state when comparing this key press to a hot key. For instance, on a "
"US keyboard, the <literal>plus</literal> symbol is shifted, so when "
"comparing a key press to a <literal>&lt;Control&gt;plus</literal> "
"accelerator &lt;Shift&gt; should be masked out. </para>"
msgstr ""

# #used by: gdk_keymap_translate_keyboard_state:
#. used by: gdk_keymap_translate_keyboard_state:
#: gdkkeys.c:487:5
msgid ""
"<para> An older interpretation @consumed_modifiers was that it contained all "
"modifiers that might affect the translation of the key; this allowed "
"accelerators to be stored with irrelevant consumed modifiers, by doing:</"
"para>"
msgstr ""

# #used by: gdk_keymap_translate_keyboard_state:
#. used by: gdk_keymap_translate_keyboard_state:
#: gdkkeys.c:498:13
msgid ""
"<para> However, this did not work if multi-modifier combinations were used "
"in the keymap, since, for instance, <literal>&lt;Control&gt;</literal> would "
"be masked out even if only <literal>&lt;Control&gt;&lt;Alt&gt;</literal> was "
"used in the keymap. To support this usage as well as well as possible, all "
"<emphasis>single modifier</emphasis> combinations that could affect the key "
"for any combination of modifiers will be returned in @consumed_modifiers; "
"multi-modifier combinations are returned only when actually found in @state. "
"When you store accelerators, you should always store them with consumed "
"modifiers removed. Store <literal>&lt;Control&gt;plus</literal>, not "
"<literal>&lt;Control&gt;&lt;Shift&gt;plus</literal>, </para></note>"
msgstr ""

# #used by: SECTION:keys
#. used by: SECTION:keys
#: gdkkeys.c:50:3
msgid ""
"Key values can be converted into a string representation using "
"gdk_keyval_name(). The reverse function, converting a string to a key value, "
"is provided by gdk_keyval_from_name()."
msgstr ""

# #used by: gdk_display_open_default_libgtk_only:
#. used by: gdk_keymap_translate_keyboard_state:
#: gdkkeys.c:512:1
#, fuzzy
msgid ""
"Return value: %TRUE if there was a keyval bound to the keycode/state/group"
msgstr "Return value: 如果指定的axis 可以找到，返回%TRUE，否则返回%NULL。"

# used by: gdk_keymap_add_virtual_modifiers:
#. used by: gdk_keymap_add_virtual_modifiers:
#: gdkkeys.c:537:1
msgid "@state: (out): pointer to the modifier mask to change"
msgstr ""

# #used by: gdk_keymap_add_virtual_modifiers:
#. used by: gdk_keymap_add_virtual_modifiers:
#: gdkkeys.c:539:4
msgid ""
"Adds virtual modifiers (i.e. Super, Hyper and Meta) which correspond to the "
"real modifiers (i.e Mod2, Mod3, ...) in @modifiers. are set in @state to "
"their non-virtual counterparts (i.e. Mod2, Mod3,...) and set the "
"corresponding bits in @state."
msgstr ""

# #used by: SECTION:keys
#. used by: SECTION:keys
#: gdkkeys.c:54:3
msgid ""
"The case of key values can be determined using gdk_keyval_is_upper() and "
"gdk_keyval_is_lower(). Key values can be converted to upper or lower case "
"using gdk_keyval_to_upper() and gdk_keyval_to_lower()."
msgstr ""

# #used by: gdk_keymap_add_virtual_modifiers:
#. used by: gdk_keymap_add_virtual_modifiers:
#: gdkkeys.c:544:3
msgid ""
"GDK already does this before delivering key events, but for compatibility "
"reasons, it only sets the first virtual modifier it finds, whereas this "
"function sets all matching virtual modifiers."
msgstr ""

# #-#-#-#-#  gdkkeys.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_keymap_add_virtual_modifiers:
# #-#-#-#-#  gdkkeys.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_keymap_map_virtual_modifiers:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_add_virtual_modifiers:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_map_virtual_modifiers:
#: gdkkeys.c:548:2 gdkkeys.c:569:2
msgid "This function is useful when matching key events against accelerators."
msgstr ""

# used by: gdk_keymap_map_virtual_modifiers:
#. used by: gdk_keymap_map_virtual_modifiers:
#: gdkkeys.c:563:1
msgid "@state: (out): pointer to the modifier state to map"
msgstr ""

# #used by: gdk_keymap_map_virtual_modifiers:
#. used by: gdk_keymap_map_virtual_modifiers:
#: gdkkeys.c:565:3
msgid ""
"Maps the virtual modifiers (i.e. Super, Hyper and Meta) which are set in "
"@state to their non-virtual counterparts (i.e. Mod2, Mod3,...) and set the "
"corresponding bits in @state."
msgstr ""

# #used by: gdk_keymap_map_virtual_modifiers:
#. used by: gdk_keymap_map_virtual_modifiers:
#: gdkkeys.c:572:4
msgid ""
"Returns: %TRUE if no virtual modifiers were mapped to the same non-virtual "
"modifier. Note that %FALSE is also returned if a virtual modifier is mapped "
"to a non-virtual modifier that was already set in @state."
msgstr ""

# #used by: SECTION:keys
#. used by: SECTION:keys
#: gdkkeys.c:58:2
msgid ""
"When it makes sense, key values can be converted to and from Unicode "
"characters with gdk_keyval_to_unicode() and gdk_unicode_to_keyval()."
msgstr ""

# used by: gdk_keyval_name:
#. used by: gdk_keyval_name:
#: gdkkeys.c:588:1
msgid "@keyval: a key value"
msgstr ""

# #used by: gdk_keyval_name:
#. used by: gdk_keyval_name:
#: gdkkeys.c:590:1
msgid "Converts a key value into a symbolic name."
msgstr ""

#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keyval_name:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keyval_from_name:
#: gdkkeys.c:592:3 gdkkeys.c:614:3
msgid ""
"The names are the same as those in the <filename>&lt;gdk/gdkkeysyms.h&gt;</"
"filename> header file but without the leading \"GDK_KEY_\"."
msgstr ""

# #used by: gdk_keyval_name:
#. used by: gdk_keyval_name:
#: gdkkeys.c:596:3
msgid ""
"Return value: (transfer none): a string containing the name of the key, or "
"%NULL if @keyval is not a valid key. The string should not be modified."
msgstr ""

#. used by: SECTION:keys
#: gdkkeys.c:61:22
msgid ""
"<para id=\"key-group-explanation\"> One #GdkKeymap object exists for each "
"user display. gdk_keymap_get_default() returns the #GdkKeymap for the "
"default display; to obtain keymaps for other displays, use "
"gdk_keymap_get_for_display(). A keymap is a mapping from #GdkKeymapKey to "
"key values. You can think of a #GdkKeymapKey as a representation of a symbol "
"printed on a physical keyboard key. That is, it contains three pieces of "
"information. First, it contains the hardware keycode; this is an identifying "
"number for a physical key. Second, it contains the <firstterm>level</"
"firstterm> of the key. The level indicates which symbol on the key will be "
"used, in a vertical direction. So on a standard US keyboard, the key with "
"the number \"1\" on it also has the exclamation point (\"!\") character on "
"it. The level indicates whether to use the \"1\" or the \"!\" symbol.  The "
"letter keys are considered to have a lowercase letter at level 0, and an "
"uppercase letter at level 1, though only the uppercase letter is printed.  "
"Third, the #GdkKeymapKey contains a group; groups are not used on standard "
"US keyboards, but are used in many other countries. On a keyboard with "
"groups, there can be 3 or 4 symbols printed on a single key. The group "
"indicates movement in a horizontal direction. Usually groups are used for "
"two different languages.  In group 0, a key might have two English "
"characters, and in group 1 it might have two Hebrew characters. The Hebrew "
"characters will be printed on the key next to the English characters. </para>"
msgstr ""

# used by: gdk_keyval_from_name:
#. used by: gdk_keyval_from_name:
#: gdkkeys.c:610:1
msgid "@keyval_name: a key name"
msgstr ""

# #used by: gdk_keyval_from_name:
#. used by: gdk_keyval_from_name:
#: gdkkeys.c:612:1 gdkkeys.h:135:1
msgid "Converts a key name to a key value."
msgstr ""

# #used by: gdk_keyval_from_name:
#. used by: gdk_keyval_from_name:
#: gdkkeys.c:618:2
msgid ""
"Returns: the corresponding key value, or %GDK_KEY_VoidSymbol if the key name "
"is not a valid key"
msgstr ""

#. used by: SECTION:keys
#: gdkkeys.c:84:11
msgid ""
"In order to use a keymap to interpret a key event, it's necessary to first "
"convert the keyboard state into an effective group and level. This is done "
"via a set of rules that varies widely according to type of keyboard and user "
"configuration. The function gdk_keymap_translate_keyboard_state() accepts a "
"keyboard state -- consisting of hardware keycode pressed, active modifiers, "
"and active group -- applies the appropriate rules, and returns the group/"
"level to be used to index the keymap, along with the modifiers which did not "
"affect the group and level. i.e. it returns \"unconsumed modifiers.\" The "
"keyboard group may differ from the effective group used for keymap lookups "
"because some keys don't have multiple groups - e.g. the Enter key is always "
"in group 0 regardless of keyboard state."
msgstr ""

# #used by: SECTION:keys
#. used by: SECTION:keys
#: gdkkeys.c:96:5
msgid ""
"Note that gdk_keymap_translate_keyboard_state() also returns the keyval, i."
"e. it goes ahead and performs the keymap lookup in addition to telling you "
"which effective group/level values were used for the lookup. #GdkEventKey "
"already contains this keyval, however, so you don't normally need to call "
"gdk_keymap_translate_keyboard_state() just to get the keyval."
msgstr ""

#. used by: gdk_keymap_get_direction:
#: gdkkeys.h:111:1
msgid "@keymap: a #GdkKeymap or %NULL to use the default keymap."
msgstr ""

#. used by: gdk_keymap_get_direction:
#: gdkkeys.h:113:1
msgid "Returns the direction of the keymap."
msgstr ""

#. used by: gdk_keymap_get_direction:
#: gdkkeys.h:115:2
msgid ""
"Returns: the direction of the keymap, %PANGO_DIRECTION_LTR or "
"%PANGO_DIRECTION_RTL."
msgstr ""

#. used by: gdk_keyval_from_name:
#: gdkkeys.h:133:1
msgid "@keyval_name: a key name."
msgstr ""

#. used by: gdk_keyval_from_name:
#: gdkkeys.h:137:2
msgid ""
"Returns: the corresponding key value, or %GDK_VoidSymbol if the key name is "
"not a valid key."
msgstr ""

#. used by: GdkKeymapKey:
#: gdkkeys.h:43:2
msgid ""
"@keycode: the hardware keycode. This is an identifying number for a physical "
"key."
msgstr ""

#. used by: GdkKeymapKey:
#: gdkkeys.h:45:4
msgid ""
"@group: indicates movement in a horizontal direction. Usually groups are "
"used for two different languages. In group 0, a key might have two English "
"characters, and in group 1 it might have two Hebrew characters. The Hebrew "
"characters will be printed on the key next to the English characters."
msgstr ""

#. used by: GdkKeymapKey:
#: gdkkeys.h:49:6
msgid ""
"@level: indicates which symbol on the key will be used, in a vertical "
"direction. So on a standard US keyboard, the key with the number \"1\" on it "
"also has the exclamation point (\"!\") character on it. The level indicates "
"whether to use the \"1\" or the \"!\" symbol. The letter keys are considered "
"to have a lowercase letter at level 0, and an uppercase letter at level 1, "
"though only the uppercase letter is printed."
msgstr ""

#. used by: GdkKeymapKey:
#: gdkkeys.h:56:1
msgid "A #GdkKeymapKey is a hardware key that can be mapped to a keyval."
msgstr ""

#. used by: GdkKeymap:
#: gdkkeys.h:73:6
msgid ""
"A #GdkKeymap defines the translation from keyboard state (including a "
"hardware key, a modifier mask, and active keyboard group) to a keyval. This "
"translation has two phases. The first phase is to determine the effective "
"keyboard group and level for the keyboard state; the second phase is to look "
"up the keycode/group/level triplet in the keymap and see what keyval it "
"corresponds to."
msgstr ""

# used by: gdk_unicode_to_keyval:
#. used by: gdk_unicode_to_keyval:
#: gdkkeyuni.c:1671:1
msgid "@wc: a ISO10646 encoded character"
msgstr ""

# #used by: gdk_unicode_to_keyval:
#. used by: gdk_unicode_to_keyval:
#: gdkkeyuni.c:1673:1
msgid "Convert from a ISO10646 character to a key symbol."
msgstr ""

# #used by: gdk_unicode_to_keyval:
#. used by: gdk_unicode_to_keyval:
#: gdkkeyuni.c:1675:3
msgid ""
"Return value: the corresponding GDK key symbol, if one exists. or, if there "
"is no corresponding symbol, wc | 0x01000000"
msgstr ""

# used by: gdk_keyval_to_unicode:
#. used by: gdk_keyval_to_unicode:
#: gdkkeyuni.c:871:1
msgid "@keyval: a GDK key symbol"
msgstr ""

# #used by: gdk_keyval_to_unicode:
#. used by: gdk_keyval_to_unicode:
#: gdkkeyuni.c:873:2
msgid ""
"Convert from a GDK key symbol to the corresponding ISO10646 (Unicode) "
"character."
msgstr ""

# #used by: gdk_keyval_to_unicode:
#. used by: gdk_keyval_to_unicode:
#: gdkkeyuni.c:876:2
msgid ""
"Return value: the corresponding unicode character, or 0 if there is no "
"corresponding character."
msgstr ""

#. used by: gdk_get_display:
#: gdkmain.h:72:3
msgid ""
"Gets the name of the display, which usually comes from the <envar>DISPLAY</"
"envar> environment variable or the <option>--display</option> command line "
"option."
msgstr ""

# #used by: gdk_display_manager_get_default_display:
#. used by: gdk_get_display:
#: gdkmain.h:76:1
#, fuzzy
msgid "Returns: the name of the display."
msgstr "得到默认的#GdkDisplay。"

# #used by: gdk_offscreen_window_get_surface:
#. used by: gdk_offscreen_window_get_surface:
#: gdkoffscreenwindow.c:329:3
msgid ""
"Gets the offscreen surface that an offscreen window renders into. If you "
"need to keep this around over window resizes, you need to add a reference to "
"it."
msgstr ""

# #used by: gdk_offscreen_window_get_surface:
#. used by: gdk_offscreen_window_get_surface:
#: gdkoffscreenwindow.c:333:1
msgid ""
"Returns: (transfer none): The offscreen surface, or %NULL if not offscreen"
msgstr ""

# used by: gdk_offscreen_window_set_embedder:
#. used by: gdk_offscreen_window_set_embedder:
#: gdkoffscreenwindow.c:611:1
msgid "@embedder: the #GdkWindow that @window gets embedded in"
msgstr ""

# #used by: gdk_offscreen_window_set_embedder:
#. used by: gdk_offscreen_window_set_embedder:
#: gdkoffscreenwindow.c:613:1
msgid "Sets @window to be embedded in @embedder."
msgstr ""

# #used by: gdk_offscreen_window_set_embedder:
#. used by: gdk_offscreen_window_set_embedder:
#: gdkoffscreenwindow.c:615:4
msgid ""
"To fully embed an offscreen window, in addition to calling this function, it "
"is also necessary to handle the #GdkWindow::pick-embedded-child signal on "
"the @embedder and the #GdkWindow::to-embedder and #GdkWindow::from-embedder "
"signals on @window."
msgstr ""

# #-#-#-#-#  gdk.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_parse_args:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_get_display_arg_name:
# #-#-#-#-#  gdkdisplay.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkDisplay::closed:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_close:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_event:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_peek_event:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_put_event:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_core_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_window_at_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_set_pointer_hooks:
# #-#-#-#-#  gdkdisplaymanager.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkDisplayManager::display-opened:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_get:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_get_default_display:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_get_default:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_default:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_set_default_display:
# #-#-#-#-#  gdkdisplaymanager.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_manager_list_displays:
# #-#-#-#-#  gdkdraw.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkdraw.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_drawable_get_screen:
# #-#-#-#-#  gdkdraw.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_drawable_get_display:
# #-#-#-#-#  gdkdraw.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_draw_pixbuf:
# #-#-#-#-#  gdkevents.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_event_new:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_event_set_screen:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_event_get_screen:
# #-#-#-#-#  gdkevents.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_display_set_double_click_time:
# #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkKeymap::keys-changed:
# #-#-#-#-#  gdkpango.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_pango_context_get_for_screen:
# #-#-#-#-#  gdkrgb.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkrgb.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_rgb_colormap:
# #-#-#-#-#  gdkrgb.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_rgb_visual:
# #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: GdkScreen::size-changed:
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_monitor_at_point:
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_monitor_at_window:
# #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_toplevel_windows:
#. #-#-#-#-#  gdkoffscreenwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkoffscreenwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_offscreen_window_set_embedder:
#. #-#-#-#-#  gdkoffscreenwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_offscreen_window_get_embedder:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkWindow:cursor:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkWindow::pick-embedded-child:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkWindow::to-embedder:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkWindow::from-embedder:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_ensure_native:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_is_destroyed:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_flush:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_restack:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_cursor:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_root_coords:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_geometry_changed:
#: gdkoffscreenwindow.c:620:1 gdkoffscreenwindow.c:659:1 gdkwindow.c:1676:1
#: gdkwindow.c:2161:1 gdkwindow.c:3290:1 gdkwindow.c:368:1 gdkwindow.c:390:1
#: gdkwindow.c:419:1 gdkwindow.c:450:1 gdkwindow.c:5456:1 gdkwindow.c:6596:1
#: gdkwindow.c:6900:1 gdkwindow.c:8808:1
#, fuzzy
msgid "Since: 2.18"
msgstr "Since: 2.8"

# #used by: gdk_offscreen_window_get_embedder:
#. used by: gdk_offscreen_window_get_embedder:
#: gdkoffscreenwindow.c:654:1
msgid "Gets the window that @window is embedded in."
msgstr ""

# #used by: gdk_offscreen_window_get_embedder:
#. used by: gdk_offscreen_window_get_embedder:
#: gdkoffscreenwindow.c:656:2
msgid ""
"Returns: (transfer none): the embedding #GdkWindow, or %NULL if @window is "
"not an mbedded offscreen window"
msgstr ""

#. used by: SECTION:pango_interaction
#: gdkpango.c:122:5
msgid ""
"</example> <figure> <title>Output of <xref linkend=\"rotated-example\"/></"
"title> <graphic fileref=\"rotated-text.png\" format=\"PNG\"/> </figure>"
msgstr ""

# used by: gdk_pango_layout_line_get_clip_region:
#. used by: gdk_pango_layout_line_get_clip_region: (skip)
#: gdkpango.c:194:1
msgid "@line: a #PangoLayoutLine"
msgstr ""

# used by: gdk_pango_layout_line_get_clip_region:
#. used by: gdk_pango_layout_line_get_clip_region: (skip)
#: gdkpango.c:195:1
msgid ""
"@x_origin: X pixel where you intend to draw the layout line with this clip"
msgstr ""

# used by: gdk_pango_layout_line_get_clip_region:
#. used by: gdk_pango_layout_line_get_clip_region: (skip)
#: gdkpango.c:196:1
msgid ""
"@y_origin: baseline pixel where you intend to draw the layout line with this "
"clip"
msgstr ""

# used by: gdk_pango_layout_line_get_clip_region: (skip)
#. used by: gdk_pango_layout_line_get_clip_region: (skip)
#: gdkpango.c:197:3
msgid ""
"@index_ranges: (array): array of byte indexes into the layout, where even "
"members of array are start indexes and odd elements are end indexes"
msgstr ""

# #-#-#-#-#  gdkpango.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_pango_layout_line_get_clip_region:
# #-#-#-#-#  gdkpango.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_pango_layout_get_clip_region:
#. #-#-#-#-#  gdkpango.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_pango_layout_line_get_clip_region: (skip)
#. #-#-#-#-#  gdkpango.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_pango_layout_get_clip_region: (skip)
#: gdkpango.c:200:1 gdkpango.c:249:1
msgid ""
"@n_ranges: number of ranges in @index_ranges, i.e. half the size of "
"@index_ranges"
msgstr ""

# #used by: gdk_pango_layout_line_get_clip_region: (skip)
#. used by: gdk_pango_layout_line_get_clip_region: (skip)
#: gdkpango.c:202:9
msgid ""
"Obtains a clip region which contains the areas where the given ranges of "
"text would be drawn. @x_origin and @y_origin are the top left position of "
"the layout. @index_ranges should contain ranges of bytes in the layout's "
"text. The clip region will include space to the left or right of the line "
"(to the layout bounding box) if you have indexes above or below the indexes "
"contained inside the line. This is to draw the selection all the way to the "
"side of the layout. However, the clip region is in line coordinates, not "
"layout coordinates."
msgstr ""

# #used by: gdk_pango_layout_line_get_clip_region:
#. used by: gdk_pango_layout_line_get_clip_region: (skip)
#: gdkpango.c:212:4
msgid ""
"Note that the regions returned correspond to logical extents of the text "
"ranges, not ink extents. So the drawn line may in fact touch areas out of "
"the clip region.  The clip region is mainly useful for highlightling parts "
"of text, such as when text is selected."
msgstr ""

# #-#-#-#-#  gdkpango.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_pango_layout_line_get_clip_region:
# #-#-#-#-#  gdkpango.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_pango_layout_get_clip_region:
#. #-#-#-#-#  gdkpango.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_pango_layout_line_get_clip_region: (skip)
#. #-#-#-#-#  gdkpango.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_pango_layout_get_clip_region: (skip)
#: gdkpango.c:217:1 gdkpango.c:261:1
msgid "Return value: a clip region containing the given ranges"
msgstr ""

# used by: gdk_pango_layout_get_clip_region:
#. used by: gdk_pango_layout_get_clip_region: (skip)
#: gdkpango.c:245:1
msgid "@layout: a #PangoLayout"
msgstr ""

# used by: gdk_pango_layout_get_clip_region:
#. used by: gdk_pango_layout_get_clip_region: (skip)
#: gdkpango.c:246:1
msgid "@x_origin: X pixel where you intend to draw the layout with this clip"
msgstr ""

# used by: gdk_pango_layout_get_clip_region:
#. used by: gdk_pango_layout_get_clip_region: (skip)
#: gdkpango.c:247:1
msgid "@y_origin: Y pixel where you intend to draw the layout with this clip"
msgstr ""

# #-#-#-#-#  gdkpango.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_pango_layout_line_get_clip_region:
# #-#-#-#-#  gdkpango.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_pango_layout_get_clip_region:
#. used by: gdk_pango_layout_get_clip_region: (skip)
#: gdkpango.c:248:1
msgid ""
"@index_ranges: array of byte indexes into the layout, where even members of "
"array are start indexes and odd elements are end indexes"
msgstr ""

# #used by: gdk_pango_layout_get_clip_region: (skip)
#. used by: gdk_pango_layout_get_clip_region: (skip)
#: gdkpango.c:251:4
msgid ""
"Obtains a clip region which contains the areas where the given ranges of "
"text would be drawn. @x_origin and @y_origin are the top left point to "
"center the layout. @index_ranges should contain ranges of bytes in the "
"layout's text."
msgstr ""

# #used by: gdk_pango_layout_get_clip_region:
#. used by: gdk_pango_layout_get_clip_region: (skip)
#: gdkpango.c:256:4
msgid ""
"Note that the regions returned correspond to logical extents of the text "
"ranges, not ink extents. So the drawn layout may in fact touch areas out of "
"the clip region.  The clip region is mainly useful for highlightling parts "
"of text, such as when text is selected."
msgstr ""

# #used by: gdk_pango_context_get:
#. used by: gdk_pango_context_get:
#: gdkpango.c:308:1
msgid "Creates a #PangoContext for the default GDK screen."
msgstr ""

# #-#-#-#-#  gdkpango.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_pango_context_get:
# #-#-#-#-#  gdkpango.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_pango_context_get_for_screen:
#. #-#-#-#-#  gdkpango.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_pango_context_get:
#. #-#-#-#-#  gdkpango.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_pango_context_get_for_screen:
#: gdkpango.c:310:1 gdkpango.c:336:1
msgid "The context must be freed when you're finished with it."
msgstr ""

# #-#-#-#-#  gdkpango.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_pango_context_get:
# #-#-#-#-#  gdkpango.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_pango_context_get_for_screen:
#. #-#-#-#-#  gdkpango.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_pango_context_get:
#. #-#-#-#-#  gdkpango.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_pango_context_get_for_screen:
#: gdkpango.c:312:3 gdkpango.c:338:3
msgid ""
"When using GTK+, normally you should use gtk_widget_get_pango_context() "
"instead of this function, to get the appropriate context for the widget you "
"intend to render text onto."
msgstr ""

# #used by: gdk_pango_context_get:
#. used by: gdk_pango_context_get:
#: gdkpango.c:316:5
msgid ""
"The newly created context will have the default font options (see "
"#cairo_font_options_t) for the default screen; if these options change it "
"will not be updated. Using gtk_widget_get_pango_context() is more convenient "
"if you want to keep a context around and track changes to the screen's font "
"rendering settings."
msgstr ""

# #used by: gdk_pango_context_get:
#. used by: gdk_pango_context_get:
#: gdkpango.c:322:1
msgid ""
"Return value: (transfer full): a new #PangoContext for the default display"
msgstr ""

# used by: SECTION:pango_interaction
#. used by: SECTION:pango_interaction
#: gdkpango.c:33:1
msgid "@Short_description: Using Pango in GDK"
msgstr ""

# used by: gdk_pango_context_get_for_screen:
#. used by: gdk_pango_context_get_for_screen:
#: gdkpango.c:332:1
msgid "@screen: the #GdkScreen for which the context is to be created."
msgstr ""

# #used by: gdk_pango_context_get_for_screen:
#. used by: gdk_pango_context_get_for_screen:
#: gdkpango.c:334:1
msgid "Creates a #PangoContext for @screen."
msgstr ""

# used by: SECTION:pango_interaction
#. used by: SECTION:pango_interaction
#: gdkpango.c:34:1
msgid "@Title: Pango Interaction"
msgstr ""

# #used by: gdk_pango_context_get_for_screen:
#. used by: gdk_pango_context_get_for_screen:
#: gdkpango.c:342:5
msgid ""
"The newly created context will have the default font options (see "
"#cairo_font_options_t) for the screen; if these options change it will not "
"be updated. Using gtk_widget_get_pango_context() is more convenient if you "
"want to keep a context around and track changes to the screen's font "
"rendering settings."
msgstr ""

# #used by: gdk_pango_context_get_for_screen:
#. used by: gdk_pango_context_get_for_screen:
#: gdkpango.c:348:1
msgid "Return value: (transfer full): a new #PangoContext for @screen"
msgstr ""

# #used by: SECTION:pango_interaction
#. used by: SECTION:pango_interaction
#: gdkpango.c:36:4
msgid ""
"Pango is the text layout system used by GDK and GTK+. The functions and "
"types in this section are used to obtain clip regions for #PangoLayouts, and "
"to get #PangoContexts that can be used with GDK."
msgstr ""

#. used by: SECTION:pango_interaction
#: gdkpango.c:41:10
msgid ""
"Creating a #PangoLayout object is the first step in rendering text, and "
"requires getting a handle to a #PangoContext. For GTK+ programs, you'll "
"usually want to use gtk_widget_get_pango_context(), or "
"gtk_widget_create_pango_layout(), rather than using the lowlevel "
"gdk_pango_context_get_for_screen(). Once you have a #PangoLayout, you can "
"set the text and attributes of it with Pango functions like "
"pango_layout_set_text() and get its size with pango_layout_get_size(). (Note "
"that Pango uses a fixed point system internally, so converting between Pango "
"units and pixels using <link linkend=\"PANGO-SCALE-CAPS\">PANGO_SCALE</link> "
"or the PANGO_PIXELS() macro.)"
msgstr ""

#. used by: SECTION:pango_interaction
#: gdkpango.c:52:6
msgid ""
"Rendering a Pango layout is done most simply with pango_cairo_show_layout(); "
"you can also draw pieces of the layout with pango_cairo_show_layout_line(). "
"<example id=\"rotated-example\"> <title>Draw transformed text with Pango and "
"cairo</title> <!-- Note that this example is basically the same as demos/gtk-"
"demo/rotated_text.c -->"
msgstr ""

# used by: gdk_pixbuf_get_from_surface:
#. used by: gdk_pixbuf_get_from_surface:
#: gdkpixbuf-drawable.c:216:1
msgid "@surface: surface to copy from"
msgstr ""

# used by: gdk_pixbuf_get_from_surface:
#. used by: gdk_pixbuf_get_from_surface:
#: gdkpixbuf-drawable.c:217:1
msgid "@src_x: Source X coordinate within @surface"
msgstr ""

# used by: gdk_pixbuf_get_from_surface:
#. used by: gdk_pixbuf_get_from_surface:
#: gdkpixbuf-drawable.c:218:1
msgid "@src_y: Source Y coordinate within @surface"
msgstr ""

# #-#-#-#-#  gdkpixbuf-drawable.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_pixbuf_get_from_window:
# #-#-#-#-#  gdkpixbuf-drawable.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_pixbuf_get_from_surface:
#. #-#-#-#-#  gdkpixbuf-drawable.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_pixbuf_get_from_window:
#. #-#-#-#-#  gdkpixbuf-drawable.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_pixbuf_get_from_surface:
#: gdkpixbuf-drawable.c:219:1 gdkpixbuf-drawable.c:53:1
msgid "@width: Width in pixels of region to get"
msgstr ""

# #-#-#-#-#  gdkpixbuf-drawable.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_pixbuf_get_from_window:
# #-#-#-#-#  gdkpixbuf-drawable.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_pixbuf_get_from_surface:
#. #-#-#-#-#  gdkpixbuf-drawable.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_pixbuf_get_from_window:
#. #-#-#-#-#  gdkpixbuf-drawable.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_pixbuf_get_from_surface:
#: gdkpixbuf-drawable.c:220:1 gdkpixbuf-drawable.c:54:1
msgid "@height: Height in pixels of region to get"
msgstr ""

# #used by: gdk_pixbuf_get_from_surface:
#. used by: gdk_pixbuf_get_from_surface:
#: gdkpixbuf-drawable.c:222:4
msgid ""
"Transfers image data from a #cairo_surface_t and converts it to an RGB(A) "
"representation inside a #GdkPixbuf. This allows you to efficiently read "
"individual pixels from cairo surfaces. For #GdkWindows, use "
"gdk_pixbuf_get_from_window() instead."
msgstr ""

# #used by: gdk_pixbuf_get_from_surface:
#. used by: gdk_pixbuf_get_from_surface:
#: gdkpixbuf-drawable.c:227:2
msgid ""
"This function will create an RGB pixbuf with 8 bits per channel. The pixbuf "
"will contain an alpha channel if the @surface contains one."
msgstr ""

# #-#-#-#-#  gdkpixbuf-drawable.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_pixbuf_get_from_window:
# #-#-#-#-#  gdkpixbuf-drawable.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_pixbuf_get_from_surface:
#. #-#-#-#-#  gdkpixbuf-drawable.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_pixbuf_get_from_window:
#. #-#-#-#-#  gdkpixbuf-drawable.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_pixbuf_get_from_surface:
#: gdkpixbuf-drawable.c:230:2 gdkpixbuf-drawable.c:82:2
msgid ""
"Return value: (transfer full): A newly-created pixbuf with a reference count "
"of 1, or %NULL on error"
msgstr ""

# used by: SECTION:pixbufs
#. used by: SECTION:pixbufs
#: gdkpixbuf-drawable.c:37:1
msgid "@Short_description: Functions for obtaining pixbufs"
msgstr ""

# used by: SECTION:pixbufs
#. used by: SECTION:pixbufs
#: gdkpixbuf-drawable.c:38:1
msgid "@Title: Pixbufs"
msgstr ""

# #used by: SECTION:pixbufs
#. used by: SECTION:pixbufs
#: gdkpixbuf-drawable.c:40:2
msgid ""
"Pixbufs are client-side images. For details on how to create and manipulate "
"pixbufs, see the #GdkPixbuf API documentation."
msgstr ""

# #used by: SECTION:pixbufs
#. used by: SECTION:pixbufs
#: gdkpixbuf-drawable.c:43:2
msgid ""
"The functions described here allow to obtain pixbufs from #GdkWindows and "
"cairo surfaces."
msgstr ""

# used by: gdk_pixbuf_get_from_window:
#. used by: gdk_pixbuf_get_from_window:
#: gdkpixbuf-drawable.c:50:1
msgid "@window: Source window"
msgstr ""

# used by: gdk_window_redirect_to_drawable:
#. used by: gdk_pixbuf_get_from_window:
#: gdkpixbuf-drawable.c:51:1
#, fuzzy
msgid "@src_x: Source X coordinate within @window"
msgstr "@src_x: 在@window中的x 坐标位置"

# used by: gdk_window_redirect_to_drawable:
#. used by: gdk_pixbuf_get_from_window:
#: gdkpixbuf-drawable.c:52:1
#, fuzzy
msgid "@src_y: Source Y coordinate within @window"
msgstr "@src_y: 在@window中的y 坐标位置"

# #used by: gdk_pixbuf_get_from_window:
#. used by: gdk_pixbuf_get_from_window:
#: gdkpixbuf-drawable.c:56:4
msgid ""
"Transfers image data from a #GdkWindow and converts it to an RGB(A) "
"representation inside a #GdkPixbuf. In other words, copies image data from a "
"server-side drawable to a client-side RGB(A) buffer. This allows you to "
"efficiently read individual pixels on the client side."
msgstr ""

# #used by: gdk_pixbuf_get_from_window:
#. used by: gdk_pixbuf_get_from_window:
#: gdkpixbuf-drawable.c:61:3
msgid ""
"This function will create an RGB pixbuf with 8 bits per channel with the "
"same size specified by the @width and @height arguments. The pixbuf will "
"contain an alpha channel if the @window contains one."
msgstr ""

# #used by: gdk_pixbuf_get_from_window:
#. used by: gdk_pixbuf_get_from_window:
#: gdkpixbuf-drawable.c:65:3
msgid ""
"If the window is off the screen, then there is no image data in the obscured/"
"offscreen regions to be placed in the pixbuf. The contents of portions of "
"the pixbuf corresponding to the offscreen region are undefined."
msgstr ""

# #used by: gdk_pixbuf_get_from_drawable:
#. used by: gdk_pixbuf_get_from_window:
#: gdkpixbuf-drawable.c:69:3
msgid ""
"If the window you're obtaining data from is partially obscured by other "
"windows, then the contents of the pixbuf areas corresponding to the obscured "
"regions are undefined."
msgstr ""

# #used by: gdk_pixbuf_get_from_window:
#. used by: gdk_pixbuf_get_from_window:
#: gdkpixbuf-drawable.c:73:2
msgid ""
"If the window is not mapped (typically because it's iconified/minimized or "
"not on the current workspace), then %NULL will be returned."
msgstr ""

# #used by: gdk_pixbuf_get_from_drawable:
#. used by: gdk_pixbuf_get_from_window:
#: gdkpixbuf-drawable.c:76:2
msgid ""
"If memory can't be allocated for the return value, %NULL will be returned "
"instead."
msgstr ""

# #used by: gdk_pixbuf_get_from_drawable:
#. used by: gdk_pixbuf_get_from_window:
#: gdkpixbuf-drawable.c:79:2
msgid ""
"(In short, there are several ways this function can fail, and if it fails it "
"returns %NULL; so check the return value.)"
msgstr ""

#. used by: GdkPropMode:
#: gdkproperty.h:41:1
msgid "@GDK_PROP_MODE_REPLACE: the new data replaces the existing data."
msgstr ""

#. used by: GdkPropMode:
#: gdkproperty.h:42:1
msgid "@GDK_PROP_MODE_PREPEND: the new data is prepended to the existing data."
msgstr ""

#. used by: GdkPropMode:
#: gdkproperty.h:43:1
msgid "@GDK_PROP_MODE_APPEND: the new data is appended to the existing data."
msgstr ""

#. used by: GdkPropMode:
#: gdkproperty.h:45:2
msgid ""
"Describes how existing data is combined with new data when using "
"gdk_property_change()."
msgstr ""

# used by: SECTION:regions
#. used by: SECTION:regions
#: gdkrectangle.c:34:1
msgid "@Short_description: Simple graphical data types"
msgstr ""

# used by: SECTION:regions
#. used by: SECTION:regions
#: gdkrectangle.c:35:1
msgid "@Title: Points and Rectangles"
msgstr ""

# #used by: SECTION:regions
#. used by: SECTION:regions
#: gdkrectangle.c:37:3
msgid ""
"GDK provides the #GdkPoint and #GdkRectangle data types for representing "
"pixels and sets of pixels on the screen. Together with Cairo's "
"#cairo_region_t data type, they make up the central types for representing "
"graphical data."
msgstr ""

# #used by: SECTION:regions
#. used by: SECTION:regions
#: gdkrectangle.c:41:1
msgid ""
"#GdkPoint is a simple structure containing an x and y coordinate of a point."
msgstr ""

# #used by: SECTION:regions
#. used by: SECTION:regions
#: gdkrectangle.c:43:4
msgid ""
"#GdkRectangle is a structure holding the position and size of a rectangle. "
"The intersection of two rectangles can be computed with "
"gdk_rectangle_intersect(). To find the union of two rectangles use "
"gdk_rectangle_union()."
msgstr ""

# #used by: SECTION:regions
#. used by: SECTION:regions
#: gdkrectangle.c:48:1
msgid ""
"#cairo_region_t is usually used for managing clipping of graphical "
"operations."
msgstr ""

# #used by: gdk_rectangle_union:
#. used by: gdk_rectangle_union:
#: gdkrectangle.c:54:3
msgid ""
"@src1: a #GdkRectangle @src2: a #GdkRectangle @dest: (out): return location "
"for the union of @src1 and @src2"
msgstr ""

# #used by: gdk_rectangle_union:
#. used by: gdk_rectangle_union:
#: gdkrectangle.c:58:4
msgid ""
"Calculates the union of two rectangles. The union of rectangles @src1 and "
"@src2 is the smallest rectangle which includes both @src1 and @src2 within "
"it. It is allowed for @dest to be the same as either @src1 or @src2."
msgstr ""

# #used by: gdk_rectangle_intersect:
#. used by: gdk_rectangle_intersect:
#: gdkrectangle.c:84:4
msgid ""
"@src1: a #GdkRectangle @src2: a #GdkRectangle @dest: (out caller-allocates) "
"(allow-none): return location for the intersection of @src1 and @src2, or "
"%NULL"
msgstr ""

# #used by: gdk_rectangle_intersect:
#. used by: gdk_rectangle_intersect:
#: gdkrectangle.c:89:6
msgid ""
"Calculates the intersection of two rectangles. It is allowed for @dest to be "
"the same as either @src1 or @src2. If the rectangles do not intersect, "
"@dest's width and height is set to 0 and its x and y values are undefined. "
"If you are only interested in whether the rectangles intersect, but not in "
"the intersecting area itself, pass %NULL for @dest."
msgstr ""

# #used by: gdk_rectangle_intersect:
#. used by: gdk_rectangle_intersect:
#: gdkrectangle.c:96:1
msgid "Returns: %TRUE if the rectangles intersect."
msgstr ""

# used by: gdk_rgba_parse:
#. used by: gdk_rgba_parse:
#: gdkrgba.c:138:1
msgid "@rgba: the #GdkRGBA struct to fill in"
msgstr ""

# #used by: gdk_rgba_parse:
#. used by: gdk_rgba_parse:
#: gdkrgba.c:141:4
msgid ""
"Parses a textual representation of a color, filling in the <structfield>red</"
"structfield>, <structfield>green</structfield>, <structfield>blue</"
"structfield> and <structfield>alpha</structfield> fields of the @rgba struct."
msgstr ""

# #used by: gdk_rgba_parse:
#. used by: gdk_rgba_parse:
#: gdkrgba.c:146:16
msgid ""
"The string can be either one of: <itemizedlist> <listitem> A standard name "
"(Taken from the X11 rgb.txt file). </listitem> <listitem> A hex value in the "
"form '#rgb' '#rrggbb' '#rrrgggbbb' or '#rrrrggggbbbb' </listitem> <listitem> "
"A RGB color in the form 'rgb(r,g,b)' (In this case the color will have full "
"opacity) </listitem> <listitem> A RGBA color in the form 'rgba(r,g,b,a)' </"
"listitem> </itemizedlist>"
msgstr ""

# #used by: gdk_rgba_parse:
#. used by: gdk_rgba_parse:
#: gdkrgba.c:163:4
msgid ""
"Where 'r', 'g', 'b' and 'a' are respectively the red, green, blue and alpha "
"color values. In the last two cases, r g and b are either integers in the "
"range 0 to 255 or precentage values in the range 0% to 100%, and a is a "
"floating point value in the range 0 to 1."
msgstr ""

# #used by: gdk_rgba_parse:
#. used by: gdk_rgba_parse:
#: gdkrgba.c:168:1
msgid "Returns: %TRUE if the parsing succeeded"
msgstr ""

# used by: gdk_rgba_hash:
#. used by: gdk_rgba_hash:
#: gdkrgba.c:276:1
msgid "@p: (type GdkRGBA): a #GdkRGBA pointer"
msgstr ""

# #used by: gdk_rgba_hash:
#. used by: gdk_rgba_hash:
#: gdkrgba.c:278:2
msgid ""
"A hash function suitable for using for a hash table that stores #GdkRGBAs."
msgstr ""

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_seconds_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_seconds:
#. used by: gdk_rgba_hash:
#: gdkrgba.c:281:1
#, fuzzy
msgid "Return value: The hash value for @p"
msgstr "Return value: 事件的屏幕。"

# #used by: gdk_rgba_equal:
#. used by: gdk_rgba_equal:
#: gdkrgba.c:298:2
msgid ""
"@p1: (type GdkRGBA): a #GdkRGBA pointer @p2: (type GdkRGBA): another "
"#GdkRGBA pointer"
msgstr ""

# #used by: gdk_rgba_equal:
#. used by: gdk_rgba_equal:
#: gdkrgba.c:301:1
msgid "Compares two RGBA colors."
msgstr ""

# #used by: gdk_rgba_to_string:
#. used by: gdk_rgba_to_string:
#: gdkrgba.c:329:7
msgid ""
"Returns a textual specification of @rgba in the form <literal>rgb (r, g, b)</"
"literal> or <literal>rgba (r, g, b, a)</literal>, where 'r', 'g', 'b' and "
"'a' represent the red, green, blue and alpha values respectively. r, g, and "
"b are represented as integers in the range 0 to 255, and a is represented as "
"floating point value in the range 0 to 1."
msgstr ""

# used by: SECTION:rgba_colors
#. used by: SECTION:rgba_colors
#: gdkrgba.c:33:1
msgid "@Short_description: RGBA colors"
msgstr ""

# #used by: gdk_rgba_to_string:
#. used by: gdk_rgba_to_string:
#: gdkrgba.c:337:2
msgid ""
"These string forms are string forms those supported by the CSS3 colors "
"module, and can be parsed by gdk_rgba_parse()."
msgstr ""

# used by: SECTION:rgba_colors
#. used by: SECTION:rgba_colors
#: gdkrgba.c:34:1
msgid "@Title: RGBA Colors"
msgstr ""

# #used by: gdk_rgba_to_string:
#. used by: gdk_rgba_to_string:
#: gdkrgba.c:340:4
msgid ""
"Note that this string representation may loose some precision, since r, g "
"and b are represented as 8-bit integers. If this is a concern, you should "
"use a different representation."
msgstr ""

# #used by: gdk_rgba_to_string:
#. used by: gdk_rgba_to_string:
#: gdkrgba.c:345:1
msgid "Returns: A newly allocated text string"
msgstr ""

# #used by: SECTION:rgba_colors
#. used by: SECTION:rgba_colors
#: gdkrgba.c:36:6
msgid ""
"The #GdkRGBA struct is a convenient way to pass rgba colors around. It's "
"based on cairo's way to deal with colors and mirrors its behavior. All "
"values are in the range from 0.0 to 1.0 inclusive. So the color (0.0, 0.0, "
"0.0, 0.0) represents transparent black and (1.0, 1.0, 1.0, 1.0) is opaque "
"white. Other values will be clamped to this range when drawing."
msgstr ""

# used by: GdkRGBA:
#. used by: GdkRGBA:
#: gdkrgba.c:49:1
msgid "@red: The intensity of the red channel from 0.0 to 1.0 inclusive"
msgstr ""

# used by: GdkRGBA:
#. used by: GdkRGBA:
#: gdkrgba.c:50:1
msgid "@green: The intensity of the green channel from 0.0 to 1.0 inclusive"
msgstr ""

# used by: GdkRGBA:
#. used by: GdkRGBA:
#: gdkrgba.c:51:1
msgid "@blue: The intensity of the blue channel from 0.0 to 1.0 inclusive"
msgstr ""

# used by: GdkRGBA:
#. used by: GdkRGBA:
#: gdkrgba.c:52:2
msgid ""
"@alpha: The opacity of the color from 0.0 for completely translucent to 1.0 "
"for opaque"
msgstr ""

# #used by: GdkRGBA:
#. used by: GdkRGBA:
#: gdkrgba.c:55:2
msgid ""
"The GdkRGBA structure is used to represent a (possibly translucent) color, "
"in a way that is compatible with cairos notion of color."
msgstr ""

# #used by: gdk_rgba_copy:
#. used by: gdk_rgba_copy:
#: gdkrgba.c:63:1
msgid "Makes a copy of a #GdkRGBA structure."
msgstr ""

# #used by: gdk_rgba_copy:
#. used by: gdk_rgba_copy:
#: gdkrgba.c:65:1
msgid "The result must be freed through gdk_rgba_free()."
msgstr ""

# #used by: gdk_rgba_copy:
#. used by: gdk_rgba_copy:
#: gdkrgba.c:67:1
msgid "Returns: A newly allocated #GdkRGBA, with the same contents as @rgba"
msgstr ""

# #used by: gdk_rgba_free:
#. used by: gdk_rgba_free:
#: gdkrgba.c:89:1
msgid "Frees a #GdkRGBA struct created with gdk_rgba_copy()"
msgstr ""

# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: GdkScreen::size-changed:
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: GdkScreen::composited-changed:
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: GdkScreen::monitors-changed:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkScreen::size-changed:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkScreen::composited-changed:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkScreen::monitors-changed:
#: gdkscreen.c:110:1 gdkscreen.c:129:1 gdkscreen.c:148:1
msgid "@screen: the object on which the signal is emitted"
msgstr ""

# #used by: GdkScreen::size-changed:
#. used by: GdkScreen::size-changed:
#: gdkscreen.c:112:2
msgid ""
"The ::size-changed signal is emitted when the pixel width or height of a "
"screen changes."
msgstr ""

# #used by: GdkScreen::composited-changed:
#. used by: GdkScreen::composited-changed:
#: gdkscreen.c:131:2
msgid ""
"The ::composited-changed signal is emitted when the composited status of the "
"screen changes"
msgstr ""

# #used by: GdkScreen::monitors-changed:
#. used by: GdkScreen::monitors-changed:
#: gdkscreen.c:150:2
msgid ""
"The ::monitors-changed signal is emitted when the number, size or position "
"of the monitors attached to the screen change."
msgstr ""

# #used by: GdkScreen::monitors-changed:
#. used by: GdkScreen::monitors-changed:
#: gdkscreen.c:153:2
msgid ""
"Only for X11 and OS X for now. A future implementation for Win32 may be a "
"possibility."
msgstr ""

# #-#-#-#-#  gdkrgb.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_screen_get_rgb_colormap:
# #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_screen_get_monitor_at_point:
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_screen_get_monitor_at_window:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_monitor_at_point:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_monitor_at_window:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_primary_monitor:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_system_visual:
#: gdkscreen.c:248:1 gdkscreen.c:288:1 gdkscreen.c:671:1 gdkscreen.c:795:1
msgid "@screen: a #GdkScreen."
msgstr ""

# used by: gdk_screen_get_monitor_at_point:
#. used by: gdk_screen_get_monitor_at_point:
#: gdkscreen.c:249:1
msgid "@x: the x coordinate in the virtual screen."
msgstr ""

# used by: gdk_screen_get_monitor_at_point:
#. used by: gdk_screen_get_monitor_at_point:
#: gdkscreen.c:250:1
msgid "@y: the y coordinate in the virtual screen."
msgstr ""

# #used by: gdk_screen_get_monitor_at_point:
#. used by: gdk_screen_get_monitor_at_point:
#: gdkscreen.c:252:1
msgid "Returns the monitor number in which the point (@x,@y) is located."
msgstr ""

# #used by: gdk_screen_get_monitor_at_point:
#. used by: gdk_screen_get_monitor_at_point:
#: gdkscreen.c:254:2
msgid ""
"Returns: the monitor number in which the point (@x,@y) lies, or a monitor "
"close to (@x,@y) if the point is not in any monitor."
msgstr ""

# used by: gdk_screen_get_monitor_at_window:
#. used by: gdk_screen_get_monitor_at_window:
#: gdkscreen.c:290:3
msgid ""
"@returns: the monitor number in which most of @window is located, or if "
"@window does not intersect any monitors, a monitor, close to @window."
msgstr ""

# #used by: gdk_screen_get_monitor_at_window:
#. used by: gdk_screen_get_monitor_at_window:
#: gdkscreen.c:294:2
msgid ""
"Returns the number of the monitor in which the largest area of the bounding "
"rectangle of @window resides."
msgstr ""

# #used by: gdk_screen_width:
#. used by: gdk_screen_width:
#: gdkscreen.c:337:1
msgid "Returns the width of the default screen in pixels."
msgstr ""

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_seconds_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_seconds:
#. used by: gdk_screen_width:
#: gdkscreen.c:339:1
msgid "Return value: the width of the default screen in pixels."
msgstr ""

# used by: SECTION:gdkscreen
#. used by: SECTION:gdkscreen
#: gdkscreen.c:34:1
msgid "@Short_description: Object representing a physical screen"
msgstr ""

# used by: SECTION:gdkscreen
#. used by: SECTION:gdkscreen
#: gdkscreen.c:35:1
msgid "@Title: GdkScreen"
msgstr ""

# #used by: gdk_screen_height:
#. used by: gdk_screen_height:
#: gdkscreen.c:350:1
msgid "Returns the height of the default screen in pixels."
msgstr ""

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_seconds_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_seconds:
#. used by: gdk_screen_height:
#: gdkscreen.c:352:1
msgid "Return value: the height of the default screen in pixels."
msgstr ""

# #used by: gdk_screen_width_mm:
#. used by: gdk_screen_width_mm:
#: gdkscreen.c:363:2
msgid ""
"Returns the width of the default screen in millimeters. Note that on many X "
"servers this value will not be correct."
msgstr ""

# #used by: gdk_screen_width_mm:
#. used by: gdk_screen_width_mm:
#: gdkscreen.c:366:2
msgid ""
"Return value: the width of the default screen in millimeters, though it is "
"not always correct."
msgstr ""

# #used by: SECTION:gdkscreen
#. used by: SECTION:gdkscreen
#: gdkscreen.c:37:5
msgid ""
"#GdkScreen objects are the GDK representation of the screen on which windows "
"can be displayed and on which the pointer moves. X originally identified "
"screens with physical screens, but nowadays it is more common to have a "
"single #GdkScreen which combines several physical monitors (see "
"gdk_screen_get_n_monitors())."
msgstr ""

# #used by: gdk_screen_height_mm:
#. used by: gdk_screen_height_mm:
#: gdkscreen.c:378:2
msgid ""
"Returns the height of the default screen in millimeters. Note that on many X "
"servers this value will not be correct."
msgstr ""

# #used by: gdk_screen_height_mm:
#. used by: gdk_screen_height_mm:
#: gdkscreen.c:381:2
msgid ""
"Return value: the height of the default screen in millimeters, though it is "
"not always correct."
msgstr ""

# used by: gdk_screen_set_font_options:
#. used by: gdk_screen_set_font_options:
#: gdkscreen.c:393:2
msgid ""
"@options: (allow-none): a #cairo_font_options_t, or %NULL to unset any "
"previously set default font options."
msgstr ""

# #used by: gdk_screen_set_font_options:
#. used by: gdk_screen_set_font_options:
#: gdkscreen.c:396:5
msgid ""
"Sets the default font options for the screen. These options will be set on "
"any #PangoContext's newly created with gdk_pango_context_get_for_screen(). "
"Changing the default set of font options does not affect contexts that have "
"already been created."
msgstr ""

# #used by: gdk_screen_get_font_options:
#. used by: gdk_screen_get_font_options:
#: gdkscreen.c:428:1
msgid "Gets any options previously set with gdk_screen_set_font_options()."
msgstr ""

# #used by: SECTION:gdkscreen
#. used by: SECTION:gdkscreen
#: gdkscreen.c:43:5
msgid ""
"GdkScreen is used throughout GDK and GTK+ to specify which screen the top "
"level windows are to be displayed on. it is also used to query the screen "
"specification and default settings such as the default visual "
"(gdk_screen_get_system_visual()), the dimensions of the physical monitors "
"(gdk_screen_get_monitor_geometry()), etc."
msgstr ""

# #used by: gdk_screen_get_font_options:
#. used by: gdk_screen_get_font_options:
#: gdkscreen.c:430:2
msgid ""
"Return value: the current font options, or %NULL if no default font options "
"have been set."
msgstr ""

#. used by: gdk_screen_set_resolution:
#: gdkscreen.c:446:2
msgid ""
"@dpi: the resolution in \"dots per inch\". (Physical inches aren't actually "
"involved; the terminology is conventional.)"
msgstr ""

# #used by: gdk_screen_set_resolution:
#. used by: gdk_screen_set_resolution:
#: gdkscreen.c:449:4
msgid ""
"Sets the resolution for font handling on the screen. This is a scale factor "
"between points specified in a #PangoFontDescription and cairo units. The "
"default value is 96, meaning that a 10 point font will be 13 units high. (10 "
"* 96. / 72. = 13.3)."
msgstr ""

# #used by: gdk_screen_get_resolution:
#. used by: gdk_screen_get_resolution:
#: gdkscreen.c:477:2
msgid ""
"Gets the resolution for font handling on the screen; see "
"gdk_screen_set_resolution() for full details."
msgstr ""

# #used by: gdk_screen_get_resolution:
#. used by: gdk_screen_get_resolution:
#: gdkscreen.c:480:2
msgid ""
"Return value: the current resolution, or -1 if no resolution has been set."
msgstr ""

# #used by: gdk_screen_get_display:
#. used by: gdk_screen_get_display:
#: gdkscreen.c:541:1
msgid "Gets the display to which the @screen belongs."
msgstr ""

# #used by: gdk_screen_get_display:
#. used by: gdk_screen_get_display:
#: gdkscreen.c:543:1
msgid "Returns: (transfer none): the display to which @screen belongs"
msgstr ""

# #used by: gdk_screen_get_width:
#. used by: gdk_screen_get_width:
#: gdkscreen.c:558:1
msgid "Gets the width of @screen in pixels"
msgstr ""

# #used by: gdk_screen_get_width:
#. used by: gdk_screen_get_width:
#: gdkscreen.c:560:1
msgid "Returns: the width of @screen in pixels."
msgstr ""

# #used by: gdk_screen_get_height:
#. used by: gdk_screen_get_height:
#: gdkscreen.c:574:1
msgid "Gets the height of @screen in pixels"
msgstr ""

# #used by: gdk_screen_get_height:
#. used by: gdk_screen_get_height:
#: gdkscreen.c:576:1
msgid "Returns: the height of @screen in pixels."
msgstr ""

# #used by: gdk_screen_get_width_mm:
#. used by: gdk_screen_get_width_mm:
#: gdkscreen.c:590:2
msgid ""
"Gets the width of @screen in millimeters. Note that on some X servers this "
"value will not be correct."
msgstr ""

# #used by: gdk_screen_get_width_mm:
#. used by: gdk_screen_get_width_mm:
#: gdkscreen.c:593:1
msgid "Returns: the width of @screen in millimeters."
msgstr ""

# #used by: gdk_screen_get_height_mm:
#. used by: gdk_screen_get_height_mm:
#: gdkscreen.c:607:2
msgid ""
"Returns the height of @screen in millimeters. Note that on some X servers "
"this value will not be correct."
msgstr ""

# #used by: gdk_screen_get_height_mm:
#. used by: gdk_screen_get_height_mm:
#: gdkscreen.c:610:1
msgid "Returns: the heigth of @screen in millimeters."
msgstr ""

# #used by: gdk_screen_get_number:
#. used by: gdk_screen_get_number:
#: gdkscreen.c:624:2
msgid ""
"Gets the index of @screen among the screens in the display to which it "
"belongs. (See gdk_screen_get_display())"
msgstr ""

# #used by: gdk_screen_get_number:
#. used by: gdk_screen_get_number:
#: gdkscreen.c:627:1
msgid "Returns: the index"
msgstr ""

# #used by: gdk_screen_get_root_window:
#. used by: gdk_screen_get_root_window:
#: gdkscreen.c:641:1
msgid "Gets the root window of @screen."
msgstr ""

# #used by: gdk_screen_get_root_window:
#. used by: gdk_screen_get_root_window:
#: gdkscreen.c:643:1
msgid "Returns: (transfer none): the root window"
msgstr ""

# #used by: gdk_screen_get_n_monitors:
#. used by: gdk_screen_get_n_monitors:
#: gdkscreen.c:657:1
msgid "Returns the number of monitors which @screen consists of."
msgstr ""

# #used by: gdk_screen_get_n_monitors:
#. used by: gdk_screen_get_n_monitors:
#: gdkscreen.c:659:1
msgid "Returns: number of monitors which @screen consists of"
msgstr ""

# #used by: gdk_screen_get_primary_monitor:
#. used by: gdk_screen_get_primary_monitor:
#: gdkscreen.c:673:5
msgid ""
"Gets the primary monitor for @screen.  The primary monitor is considered the "
"monitor where the 'main desktop' lives. While normal application windows "
"typically allow the window manager to place the windows, specialized desktop "
"applications such as panels should place themselves on the primary monitor."
msgstr ""

# #used by: gdk_screen_get_primary_monitor:
#. used by: gdk_screen_get_primary_monitor:
#: gdkscreen.c:679:2
msgid ""
"If no primary monitor is configured by the user, the return value will be 0, "
"defaulting to the first monitor."
msgstr ""

# #used by: gdk_screen_get_primary_monitor:
#. used by: gdk_screen_get_primary_monitor:
#: gdkscreen.c:682:1
msgid ""
"Returns: An integer index for the primary monitor, or 0 if none is "
"configured."
msgstr ""

# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_screen_get_monitor_width_mm:
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_screen_get_monitor_height_mm:
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_screen_get_monitor_plug_name:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_monitor_width_mm:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_monitor_height_mm:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_monitor_plug_name:
#: gdkscreen.c:695:1 gdkscreen.c:713:1 gdkscreen.c:731:1
msgid ""
"@monitor_num: number of the monitor, between 0 and gdk_screen_get_n_monitors "
"(screen)"
msgstr ""

# #used by: gdk_screen_get_monitor_width_mm:
#. used by: gdk_screen_get_monitor_width_mm:
#: gdkscreen.c:697:1
msgid "Gets the width in millimeters of the specified monitor, if available."
msgstr ""

# #used by: gdk_screen_get_monitor_width_mm:
#. used by: gdk_screen_get_monitor_width_mm:
#: gdkscreen.c:699:1
msgid "Returns: the width of the monitor, or -1 if not available"
msgstr ""

# #used by: gdk_screen_get_monitor_height_mm:
#. used by: gdk_screen_get_monitor_height_mm:
#: gdkscreen.c:715:1
msgid "Gets the height in millimeters of the specified monitor."
msgstr ""

# #used by: gdk_screen_get_monitor_height_mm:
#. used by: gdk_screen_get_monitor_height_mm:
#: gdkscreen.c:717:1
msgid "Returns: the height of the monitor, or -1 if not available"
msgstr ""

# #used by: gdk_screen_get_monitor_plug_name:
#. used by: gdk_screen_get_monitor_plug_name:
#: gdkscreen.c:733:3
msgid ""
"Returns the output name of the specified monitor. Usually something like "
"VGA, DVI, or TV, not the actual product name of the display device."
msgstr ""

# #used by: gdk_screen_get_monitor_plug_name:
#. used by: gdk_screen_get_monitor_plug_name:
#: gdkscreen.c:737:2
msgid ""
"Returns: a newly-allocated string containing the name of the monitor, or "
"%NULL if the name cannot be determined"
msgstr ""

# used by: gdk_screen_get_monitor_geometry:
#. used by: gdk_screen_get_monitor_geometry:
#: gdkscreen.c:752:1
msgid ""
"@monitor_num: the monitor number, between 0 and gdk_screen_get_n_monitors "
"(screen)"
msgstr ""

# used by: gdk_screen_get_monitor_geometry:
#. used by: gdk_screen_get_monitor_geometry:
#: gdkscreen.c:753:1
msgid ""
"@dest: (out) (allow-none): a #GdkRectangle to be filled with the monitor "
"geometry"
msgstr ""

# #used by: gdk_screen_get_monitor_geometry:
#. used by: gdk_screen_get_monitor_geometry:
#: gdkscreen.c:755:2
msgid ""
"Retrieves the #GdkRectangle representing the size and position of the "
"individual monitor within the entire screen area."
msgstr ""

# #used by: gdk_screen_get_monitor_geometry:
#. used by: gdk_screen_get_monitor_geometry:
#: gdkscreen.c:758:2
msgid ""
"Note that the size of the entire screen area can be retrieved via "
"gdk_screen_get_width() and gdk_screen_get_height()."
msgstr ""

# used by: gdk_screen_list_visuals:
#. used by: gdk_screen_list_visuals:
#: gdkscreen.c:773:1
msgid "@screen: the relevant #GdkScreen."
msgstr ""

# #used by: gdk_screen_list_visuals:
#. used by: gdk_screen_list_visuals:
#: gdkscreen.c:775:4
msgid ""
"Lists the available visuals for the specified @screen. A visual describes a "
"hardware image data format. For example, a visual might support 24-bit "
"color, or 8-bit color, and might expect pixels to be in a certain format."
msgstr ""

# #used by: gdk_list_visuals:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_list_visuals:
#. #-#-#-#-#  gdkvisual.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_list_visuals:
#: gdkscreen.c:780:1 gdkvisual.c:87:1
msgid "Call g_list_free() on the return value when you're finished with it."
msgstr ""

# #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_list_visuals:
# #-#-#-#-#  gdkvisual.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_list_visuals:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_list_visuals:
#. #-#-#-#-#  gdkvisual.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_list_visuals:
#: gdkscreen.c:782:2 gdkvisual.c:89:2
msgid ""
"Return value: (transfer container) (element-type GdkVisual): a list of "
"visuals; the list must be freed, but not its contents"
msgstr ""

# #used by: gdk_screen_get_system_visual:
#. used by: gdk_screen_get_system_visual:
#: gdkscreen.c:797:3
msgid ""
"Get the system's default visual for @screen. This is the visual for the root "
"window of the display. The return value should not be freed."
msgstr ""

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_seconds_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_seconds:
#. used by: gdk_screen_get_system_visual:
#: gdkscreen.c:801:1
#, fuzzy
msgid "Return value: (transfer none): the system visual"
msgstr "Return value: 事件的屏幕。"

# #used by: gdk_screen_get_rgba_visual:
#. used by: gdk_screen_get_rgba_visual:
#: gdkscreen.c:815:8
msgid ""
"Gets a visual to use for creating windows with an alpha channel. The "
"windowing system on which GTK+ is running may not support this capability, "
"in which case %NULL will be returned. Even if a non-%NULL value is returned, "
"its possible that the window's alpha channel won't be honored when "
"displaying the window on the screen: in particular, for X an appropriate "
"windowing manager and compositing manager must be running to provide "
"appropriate display."
msgstr ""

# #used by: gdk_screen_get_rgba_visual:
#. used by: gdk_screen_get_rgba_visual:
#: gdkscreen.c:824:1
msgid "This functionality is not implemented in the Windows backend."
msgstr ""

# #used by: gdk_screen_get_rgba_visual:
#. used by: gdk_screen_get_rgba_visual:
#: gdkscreen.c:826:2
msgid ""
"For setting an overall opacity for a top-level window, see "
"gdk_window_set_opacity()."
msgstr ""

# #used by: gdk_screen_get_rgba_visual:
#. used by: gdk_screen_get_rgba_visual:
#: gdkscreen.c:829:2
msgid ""
"Return value: (transfer none): a visual to use for windows with an alpha "
"channel or %NULL if the capability is not available."
msgstr ""

# #used by: gdk_screen_is_composited:
#. used by: gdk_screen_is_composited:
#: gdkscreen.c:844:3
msgid ""
"Returns whether windows with an RGBA visual can reasonably be expected to "
"have their alpha channel drawn correctly on the screen."
msgstr ""

# #used by: gdk_screen_is_composited:
#. used by: gdk_screen_is_composited:
#: gdkscreen.c:848:2
msgid ""
"On X11 this function returns whether a compositing manager is compositing "
"@screen."
msgstr ""

# #used by: gdk_screen_is_composited:
#. used by: gdk_screen_is_composited:
#: gdkscreen.c:851:2
msgid ""
"Return value: Whether windows with RGBA visuals can reasonably be expected "
"to have their alpha channels drawn correctly on the screen."
msgstr ""

# #used by: gdk_screen_make_display_name:
#. used by: gdk_screen_make_display_name:
#: gdkscreen.c:866:2
msgid ""
"Determines the name to pass to gdk_display_open() to get a #GdkDisplay with "
"this screen as the default screen."
msgstr ""

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_seconds_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_seconds:
#. used by: gdk_screen_make_display_name:
#: gdkscreen.c:869:1
#, fuzzy
msgid "Return value: a newly allocated string, free with g_free()"
msgstr "Return value: 事件的屏幕。"

# #used by: gdk_screen_get_active_window:
#. used by: gdk_screen_get_active_window:
#: gdkscreen.c:883:1
msgid "Returns the screen's currently active window."
msgstr ""

#. used by: gdk_screen_get_active_window:
#: gdkscreen.c:885:6
msgid ""
"On X11, this is done by inspecting the _NET_ACTIVE_WINDOW property on the "
"root window, as described in the <ulink url=\"http://www.freedesktop.org/"
"Standards/wm-spec\">Extended Window Manager Hints</ulink>. If there is no "
"currently currently active window, or the window manager does not support "
"the _NET_ACTIVE_WINDOW hint, this function returns %NULL."
msgstr ""

# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_active_window:
# #-#-#-#-#  gdkscreen.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_window_stack:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_active_window:
#. #-#-#-#-#  gdkscreen.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_screen_get_window_stack:
#: gdkscreen.c:892:2 gdkscreen.c:921:2
msgid ""
"On other platforms, this function may return %NULL, depending on whether it "
"is implementable on that platform."
msgstr ""

# #used by: gdk_screen_get_active_window:
#. used by: gdk_screen_get_active_window:
#: gdkscreen.c:895:2
msgid ""
"The returned window should be unrefed using g_object_unref() when no longer "
"needed."
msgstr ""

# #used by: gdk_display_open_default_libgtk_only:
#. used by: gdk_screen_get_active_window:
#: gdkscreen.c:898:1
#, fuzzy
msgid "Return value: (transfer full): the currently active window, or %NULL."
msgstr "Return value: 如果可以打开，返回默认显示，否则返回%NULL。"

# #used by: gdk_screen_get_window_stack:
#. used by: gdk_screen_get_window_stack:
#: gdkscreen.c:912:2
msgid ""
"Returns a #GList of #GdkWindow<!-- -->s representing the current window "
"stack."
msgstr ""

#. used by: gdk_screen_get_window_stack:
#: gdkscreen.c:915:5
msgid ""
"On X11, this is done by inspecting the _NET_CLIENT_LIST_STACKING property on "
"the root window, as described in the <ulink url=\"http://www.freedesktop.org/"
"Standards/wm-spec\">Extended Window Manager Hints</ulink>. If the window "
"manager does not support the _NET_CLIENT_LIST_STACKING hint, this function "
"returns %NULL."
msgstr ""

# #used by: gdk_screen_get_window_stack:
#. used by: gdk_screen_get_window_stack:
#: gdkscreen.c:924:3
msgid ""
"The returned list is newly allocated and owns references to the windows it "
"contains, so it should be freed using g_list_free() and its windows unrefed "
"using g_object_unref() when no longer needed."
msgstr ""

# #used by: gdk_screen_get_window_stack:
#. used by: gdk_screen_get_window_stack:
#: gdkscreen.c:928:3
msgid ""
"Return value: (transfer full) (element-type GdkWindow): a list of "
"#GdkWindow<!-- -->s for the current window stack, or %NULL."
msgstr ""

# used by: gdk_screen_get_setting:
#. used by: gdk_screen_get_setting:
#: gdkscreen.c:942:1
msgid "@screen: the #GdkScreen where the setting is located"
msgstr ""

# used by: gdk_screen_get_setting:
#. used by: gdk_screen_get_setting:
#: gdkscreen.c:943:1
msgid "@name: the name of the setting"
msgstr ""

# used by: gdk_screen_get_setting:
#. used by: gdk_screen_get_setting:
#: gdkscreen.c:944:1
msgid "@value: location to store the value of the setting"
msgstr ""

# #used by: gdk_screen_get_setting:
#. used by: gdk_screen_get_setting:
#: gdkscreen.c:946:2
msgid ""
"Retrieves a desktop-wide setting such as double-click time for the "
"#GdkScreen @screen."
msgstr ""

# #used by: gdk_screen_get_setting:
#. used by: gdk_screen_get_setting:
#: gdkscreen.c:949:2
msgid ""
"FIXME needs a list of valid settings here, or a link to more information."
msgstr ""

# #used by: gdk_selection_owner_get:
#. used by: gdk_selection_owner_get:
#: gdkselection.c:100:8
msgid ""
"Returns: (transfer none): if there is a selection owner for this window, and "
"it is a window known to the current process, the #GdkWindow that owns the "
"selection, otherwise %NULL. Note that the return value may be owned by a "
"different process if a foreign window was previously created for that "
"window, but a new foreign window will never be created by this call."
msgstr ""

# used by: gdk_selection_send_notify:
#. used by: gdk_selection_send_notify:
#: gdkselection.c:118:1
msgid "@requestor: window to which to deliver response."
msgstr ""

# used by: gdk_selection_send_notify:
#. used by: gdk_selection_send_notify:
#: gdkselection.c:119:1
msgid "@selection: selection that was requested."
msgstr ""

# used by: gdk_selection_send_notify:
#. used by: gdk_selection_send_notify:
#: gdkselection.c:120:1
msgid "@target: target that was selected."
msgstr ""

# used by: gdk_selection_send_notify:
#. used by: gdk_selection_send_notify:
#: gdkselection.c:121:3
msgid ""
"@property: property in which the selection owner stored the data, or "
"%GDK_NONE to indicate that the request was rejected."
msgstr ""

# used by: gdk_selection_send_notify:
#. used by: gdk_selection_send_notify:
#: gdkselection.c:124:1
msgid "@time_: timestamp."
msgstr ""

# #used by: gdk_selection_send_notify:
#. used by: gdk_selection_send_notify:
#: gdkselection.c:126:1
msgid "Sends a response to SelectionRequest event."
msgstr ""

# #used by: gdk_display_manager_set_default_display:
#. used by: gdk_selection_owner_set_for_display:
#: gdkselection.c:142:1
#, fuzzy
msgid "@display: the #GdkDisplay"
msgstr "设置@display作为默认的显示(display)。"

# used by: gdk_selection_owner_set_for_display:
#. used by: gdk_selection_owner_set_for_display:
#: gdkselection.c:143:2
msgid ""
"@owner: a #GdkWindow or %NULL to indicate that the owner for the given "
"should be unset"
msgstr ""

# used by: gdk_selection_owner_set_for_display:
#. used by: gdk_selection_owner_set_for_display:
#: gdkselection.c:145:1
msgid "@selection: an atom identifying a selection"
msgstr ""

# used by: gdk_selection_owner_set_for_display:
#. used by: gdk_selection_owner_set_for_display:
#: gdkselection.c:146:3
msgid ""
"@time_: timestamp to use when setting the selection If this is older than "
"the timestamp given last time the owner was set for the given selection, the "
"request will be ignored"
msgstr ""

# used by: gdk_selection_owner_set_for_display:
#. used by: gdk_selection_owner_set_for_display:
#: gdkselection.c:149:2
msgid ""
"@send_event: if %TRUE, and the new owner is different from the current "
"owner, the current owner will be sent a SelectionClear event"
msgstr ""

# #used by: gdk_selection_owner_set_for_display:
#. used by: gdk_selection_owner_set_for_display:
#: gdkselection.c:152:1
msgid ""
"Sets the #GdkWindow @owner as the current owner of the selection @selection."
msgstr ""

# #used by: gdk_display_open_default_libgtk_only:
#. used by: gdk_selection_owner_set_for_display:
#: gdkselection.c:154:2
#, fuzzy
msgid ""
"Returns: %TRUE if the selection owner was successfully changed to owner, "
"otherwise %FALSE."
msgstr "Return value: 如果指定的axis 可以找到，返回%TRUE，否则返回%NULL。"

# used by: gdk_selection_owner_get_for_display:
#. used by: gdk_selection_owner_get_for_display:
#: gdkselection.c:176:1
msgid "@selection: an atom indentifying a selection"
msgstr ""

# #used by: gdk_selection_owner_get_for_display:
#. used by: gdk_selection_owner_get_for_display:
#: gdkselection.c:178:1
msgid "Determine the owner of the given selection."
msgstr ""

# #used by: gdk_selection_owner_get_for_display:
#. used by: gdk_selection_owner_get_for_display:
#: gdkselection.c:180:3
msgid ""
"Note that the return value may be owned by a different process if a foreign "
"window was previously created for that window, but a new foreign window will "
"never be created by this call."
msgstr ""

# #used by: gdk_selection_owner_get_for_display:
#. used by: gdk_selection_owner_get_for_display:
#: gdkselection.c:184:3
msgid ""
"Returns: (transfer none): if there is a selection owner for this window, and "
"it is a window known to the current process, the #GdkWindow that owns the "
"selection, otherwise %NULL."
msgstr ""

# used by: gdk_selection_send_notify_for_display:
#. used by: gdk_selection_send_notify_for_display:
#: gdkselection.c:202:1
msgid "@display: the #GdkDisplay where @requestor is realized"
msgstr ""

# used by: gdk_selection_send_notify_for_display:
#. used by: gdk_selection_send_notify_for_display:
#: gdkselection.c:203:1
msgid "@requestor: window to which to deliver response"
msgstr ""

# used by: gdk_selection_send_notify_for_display:
#. used by: gdk_selection_send_notify_for_display:
#: gdkselection.c:204:1
msgid "@selection: selection that was requested"
msgstr ""

# used by: gdk_selection_send_notify_for_display:
#. used by: gdk_selection_send_notify_for_display:
#: gdkselection.c:205:1
msgid "@target: target that was selected"
msgstr ""

# used by: gdk_selection_send_notify_for_display:
#. used by: gdk_selection_send_notify_for_display:
#: gdkselection.c:206:2
msgid ""
"@property: property in which the selection owner stored the data, or "
"%GDK_NONE to indicate that the request was rejected"
msgstr ""

# used by: gdk_selection_send_notify_for_display:
#. used by: gdk_selection_send_notify_for_display:
#: gdkselection.c:208:1
msgid "@time_: timestamp"
msgstr ""

# #used by: gdk_selection_send_notify_for_display:
#. used by: gdk_selection_send_notify_for_display:
#: gdkselection.c:210:1
msgid "Send a response to SelectionRequest event."
msgstr ""

# used by: gdk_selection_property_get: (skip)
#. used by: gdk_selection_property_get: (skip)
#: gdkselection.c:230:1
msgid "@requestor: the window on which the data is stored"
msgstr ""

# used by: gdk_selection_property_get: (skip)
#. used by: gdk_selection_property_get: (skip)
#: gdkselection.c:231:7
msgid ""
"@data: location to store a pointer to the retrieved data. If the retrieval "
"failed, %NULL we be stored here, otherwise, it will be non-%NULL and the "
"returned data should be freed with g_free() when you are finished using it. "
"The length of the allocated memory is one more than the length of the "
"returned data, and the final byte will always be zero, to ensure nul-"
"termination of strings"
msgstr ""

# used by: gdk_selection_property_get: (skip)
#. used by: gdk_selection_property_get: (skip)
#: gdkselection.c:238:1
msgid "@prop_type: location to store the type of the property"
msgstr ""

# used by: gdk_selection_property_get: (skip)
#. used by: gdk_selection_property_get: (skip)
#: gdkselection.c:239:1
msgid "@prop_format: location to store the format of the property"
msgstr ""

# #used by: gdk_selection_property_get: (skip)
#. used by: gdk_selection_property_get: (skip)
#: gdkselection.c:241:4
msgid ""
"Retrieves selection data that was stored by the selection data in response "
"to a call to gdk_selection_convert(). This function will not be used by "
"applications, who should use the #GtkClipboard API instead."
msgstr ""

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_seconds_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_seconds:
#. used by: gdk_selection_property_get: (skip)
#: gdkselection.c:246:1
#, fuzzy
msgid "Return value: the length of the retrieved data."
msgstr "Return value: 事件的屏幕。"

# #used by: gdk_display_manager_set_default_display:
#. used by: gdk_text_property_to_utf8_list_for_display:
#: gdkselection.c:282:1
#, fuzzy
msgid "@display:  a #GdkDisplay"
msgstr "设置@display作为默认的显示(display)。"

# used by: gdk_text_property_to_utf8_list:
#. used by: gdk_text_property_to_utf8_list_for_display:
#: gdkselection.c:283:1
msgid "@encoding: an atom representing the encoding of the text"
msgstr ""

# used by: gdk_text_property_to_utf8_list:
#. used by: gdk_text_property_to_utf8_list_for_display:
#: gdkselection.c:284:1
msgid "@format:   the format of the property"
msgstr ""

# used by: gdk_text_property_to_utf8_list_for_display:
#. used by: gdk_text_property_to_utf8_list_for_display:
#: gdkselection.c:285:1
msgid "@text:     (array length=length): the text to convert"
msgstr ""

# used by: gdk_text_property_to_utf8_list:
#. used by: gdk_text_property_to_utf8_list_for_display:
#: gdkselection.c:286:1
msgid "@length:   the length of @text, in bytes"
msgstr ""

# used by: gdk_text_property_to_utf8_list_for_display:
#. used by: gdk_text_property_to_utf8_list_for_display:
#: gdkselection.c:287:3
msgid ""
"@list:     (out) (array zero-terminated=1): location to store the list of "
"strings or %NULL. The list should be freed with g_strfreev()."
msgstr ""

# #used by: gdk_text_property_to_utf8_list_for_display:
#. used by: gdk_text_property_to_utf8_list_for_display:
#: gdkselection.c:291:2
msgid ""
"Converts a text property in the given encoding to a list of UTF-8 strings."
msgstr ""

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_seconds_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_seconds:
#. used by: gdk_text_property_to_utf8_list_for_display:
#: gdkselection.c:294:1
#, fuzzy
msgid "Return value: the number of strings in the resulting list"
msgstr "Return value: 事件的屏幕。"

# used by: gdk_utf8_to_string_target:
#. used by: gdk_utf8_to_string_target:
#: gdkselection.c:316:1
msgid "@str: a UTF-8 string"
msgstr ""

#. used by: gdk_utf8_to_string_target:
#: gdkselection.c:318:4
msgid ""
"Converts an UTF-8 string into the best possible representation as a STRING. "
"The representation of characters not in STRING is not specified; it may be "
"as pseudo-escape sequences \\x{ABCD}, or it may be in some other form of "
"approximation."
msgstr ""

# #used by: gdk_utf8_to_string_target:
#. used by: gdk_utf8_to_string_target:
#: gdkselection.c:323:4
msgid ""
"Return value: the newly-allocated string, or %NULL if the conversion failed. "
"(It should not fail for any properly formed UTF-8 string unless system "
"limits like memory or file descriptors are exceeded.)"
msgstr ""

# used by: SECTION:selections
#. used by: SECTION:selections
#: gdkselection.c:37:1
msgid ""
"@Short_description: Functions for transfering data via the X selection "
"mechanism"
msgstr ""

# used by: SECTION:selections
#. used by: SECTION:selections
#: gdkselection.c:38:1
msgid "@Title: Selections"
msgstr ""

# #used by: SECTION:selections
#. used by: SECTION:selections
#: gdkselection.c:40:6
msgid ""
"The X selection mechanism provides a way to transfer arbitrary chunks of "
"data between programs. A <firstterm>selection</firstterm> is a essentially a "
"named clipboard, identified by a string interned as a #GdkAtom. By claiming "
"ownership of a selection, an application indicates that it will be "
"responsible for supplying its contents. The most common selections are "
"<literal>PRIMARY</literal> and <literal>CLIPBOARD</literal>."
msgstr ""

#. used by: SECTION:selections
#: gdkselection.c:47:8
msgid ""
"The contents of a selection can be represented in a number of formats, "
"called <firstterm>targets</firstterm>. Each target is identified by an atom. "
"A list of all possible targets supported by the selection owner can be "
"retrieved by requesting the special target <literal>TARGETS</literal>. When "
"a selection is retrieved, the data is accompanied by a type (an atom), and a "
"format (an integer, representing the number of bits per item). See <link "
"linkend=\"gdk-Properties-and-Atoms\">Properties and Atoms</link> for more "
"information."
msgstr ""

# #used by: SECTION:selections
#. used by: SECTION:selections
#: gdkselection.c:56:7
msgid ""
"The functions in this section only contain the lowlevel parts of the "
"selection protocol. A considerably more complicated implementation is needed "
"on top of this. GTK+ contains such an implementation in the functions in "
"<literal>gtkselection.h</literal> and programmers should use those functions "
"instead of the ones presented here. If you plan to implement selection "
"handling directly on top of the functions here, you should refer to the X "
"Inter-client Communication Conventions Manual (ICCCM)."
msgstr ""

# used by: gdk_selection_owner_set:
#. used by: gdk_selection_owner_set:
#: gdkselection.c:67:2
msgid ""
"@owner: a #GdkWindow or %NULL to indicate that the the owner for the given "
"should be unset."
msgstr ""

# used by: gdk_selection_owner_set:
#. used by: gdk_selection_owner_set:
#: gdkselection.c:69:1
msgid "@selection: an atom identifying a selection."
msgstr ""

# used by: gdk_selection_owner_set:
#. used by: gdk_selection_owner_set:
#: gdkselection.c:70:4
msgid ""
"@time_: timestamp to use when setting the selection. If this is older than "
"the timestamp given last time the owner was set for the given selection, the "
"request will be ignored."
msgstr ""

# used by: gdk_selection_owner_set:
#. used by: gdk_selection_owner_set:
#: gdkselection.c:74:3
msgid ""
"@send_event: if %TRUE, and the new owner is different from the current "
"owner, the current owner will be sent a SelectionClear event."
msgstr ""

# #used by: gdk_selection_owner_set:
#. used by: gdk_selection_owner_set:
#: gdkselection.c:78:1
msgid "Sets the owner of the given selection."
msgstr ""

# #used by: gdk_display_open_default_libgtk_only:
#. used by: gdk_selection_owner_set:
#: gdkselection.c:80:2
#, fuzzy
msgid ""
"Returns: %TRUE if the selection owner was successfully changed to @owner, "
"otherwise %FALSE."
msgstr "Return value: 如果指定的axis 可以找到，返回%TRUE，否则返回%NULL。"

# used by: gdk_selection_owner_get:
#. used by: gdk_selection_owner_get:
#: gdkselection.c:96:1
msgid "@selection: an atom indentifying a selection."
msgstr ""

# #used by: gdk_selection_owner_get:
#. used by: gdk_selection_owner_get:
#: gdkselection.c:98:1
msgid "Determines the owner of the given selection."
msgstr ""

#. used by: GDK_SELECTION_TYPE_ATOM:
#: gdkselection.h:100:1
msgid "A #GdkAtom representing the <literal>ATOM</literal> selection type."
msgstr ""

#. used by: GDK_SELECTION_TYPE_BITMAP:
#: gdkselection.h:107:1
msgid "A #GdkAtom representing the <literal>BITMAP</literal> selection type."
msgstr ""

#. used by: GDK_SELECTION_TYPE_COLORMAP:
#: gdkselection.h:114:1
msgid "A #GdkAtom representing the <literal>COLORMAP</literal> selection type."
msgstr ""

#. used by: GDK_SELECTION_TYPE_DRAWABLE:
#: gdkselection.h:121:1
msgid "A #GdkAtom representing the <literal>DRAWABLE</literal> selection type."
msgstr ""

#. used by: GDK_SELECTION_TYPE_INTEGER:
#: gdkselection.h:128:1
msgid "A #GdkAtom representing the <literal>INTEGER</literal> selection type."
msgstr ""

#. used by: GDK_SELECTION_TYPE_PIXMAP:
#: gdkselection.h:135:1
msgid "A #GdkAtom representing the <literal>PIXMAP</literal> selection type."
msgstr ""

#. used by: GDK_SELECTION_TYPE_WINDOW:
#: gdkselection.h:142:1
msgid "A #GdkAtom representing the <literal>WINDOW</literal> selection type."
msgstr ""

#. used by: GDK_SELECTION_TYPE_STRING:
#: gdkselection.h:149:1
msgid "A #GdkAtom representing the <literal>STRING</literal> selection type."
msgstr ""

#. used by: gdk_selection_convert:
#: gdkselection.h:174:1
msgid "@requestor: a #GdkWindow."
msgstr ""

#. used by: gdk_selection_convert:
#: gdkselection.h:175:2
msgid "@selection: an atom identifying the selection to get the contents of."
msgstr ""

#. used by: gdk_selection_convert:
#: gdkselection.h:177:1
msgid "@target: the form in which to retrieve the selection."
msgstr ""

#. used by: gdk_selection_convert:
#: gdkselection.h:178:4
msgid ""
"@time_: the timestamp to use when retrieving the selection. The selection "
"owner may refuse the request if it did not own the selection at the time "
"indicated by the timestamp."
msgstr ""

#. used by: gdk_selection_convert:
#: gdkselection.h:183:2
msgid "Retrieves the contents of a selection in a given form."
msgstr ""

#. used by: GDK_SELECTION_PRIMARY:
#: gdkselection.h:44:1
msgid "A #GdkAtom representing the <literal>PRIMARY</literal> selection."
msgstr ""

#. used by: GDK_SELECTION_SECONDARY:
#: gdkselection.h:51:1
msgid "A #GdkAtom representing the <literal>SECONDARY</literal> selection."
msgstr ""

#. used by: GDK_SELECTION_CLIPBOARD:
#: gdkselection.h:58:1
msgid "A #GdkAtom representing the <literal>CLIPBOARD</literal> selection."
msgstr ""

#. used by: GDK_TARGET_BITMAP:
#: gdkselection.h:65:1
msgid "A #GdkAtom representing the <literal>BITMAP</literal> selection target."
msgstr ""

#. used by: GDK_TARGET_COLORMAP:
#: gdkselection.h:72:1
msgid ""
"A #GdkAtom representing the <literal>COLORMAP</literal> selection target."
msgstr ""

#. used by: GDK_TARGET_DRAWABLE:
#: gdkselection.h:79:1
msgid ""
"A #GdkAtom representing the <literal>DRAWABLE</literal> selection target."
msgstr ""

#. used by: GDK_TARGET_PIXMAP:
#: gdkselection.h:86:1
msgid "A #GdkAtom representing the <literal>PIXMAP</literal> selection target."
msgstr ""

#. used by: GDK_TARGET_STRING:
#: gdkselection.h:93:1
msgid "A #GdkAtom representing the <literal>STRING</literal> selection target."
msgstr ""

# used by: SECTION:cairo_interaction
#. used by: SECTION:gdktesting
#: gdktestutils.h:35:1
#, fuzzy
msgid "@Short_description: Test utilities"
msgstr "@Short_description: 使用开罗(Cairo)库的支持函数"

#. used by: SECTION:gdktesting
#: gdktestutils.h:36:1
msgid "@Title: Testing"
msgstr ""

#. used by: SECTION:gdktesting
#: gdktestutils.h:38:2
msgid ""
"The functions in this section are intended to be used in test programs. They "
"allow to simulate some user input."
msgstr ""

#. used by: GDK_THREADS_ENTER:
#: gdkthreads.h:70:6
msgid ""
"This macro marks the beginning of a critical section in which GDK and GTK+ "
"functions can be called safely and without causing race conditions.  Only "
"one thread at a time can be in such a critial section. The macro expands to "
"a no-op if #G_THREADS_ENABLED has not been defined. Typically "
"gdk_threads_enter() should be used instead of this macro."
msgstr ""

#. used by: GDK_THREADS_LEAVE:
#: gdkthreads.h:82:2
msgid ""
"This macro marks the end of a critical section begun with #GDK_THREADS_ENTER."
msgstr ""

#. used by: GDK_POINTER_TO_ATOM:
#: gdktypes.h:100:1
msgid "@ptr: a pointer containing a #GdkAtom."
msgstr ""

#. used by: GDK_POINTER_TO_ATOM:
#: gdktypes.h:102:2
msgid ""
"Extracts a #GdkAtom from a pointer. The #GdkAtom must have been stored in "
"the pointer with GDK_ATOM_TO_POINTER()."
msgstr ""

#. used by: GDK_NONE:
#: gdktypes.h:112:2
msgid ""
"A null value for #GdkAtom, used in a similar way as <literal>None</literal> "
"in the Xlib API."
msgstr ""

#. used by: GdkByteOrder:
#: gdktypes.h:135:3
msgid ""
"@GDK_LSB_FIRST: The values are stored with the least-significant byte first. "
"For instance, the 32-bit value 0xffeecc would be stored in memory as 0xcc, "
"0xee, 0xff, 0x00."
msgstr ""

#. used by: GdkByteOrder:
#: gdktypes.h:138:3
msgid ""
"@GDK_MSB_FIRST: The values are stored with the most-significant byte first. "
"For instance, the 32-bit value 0xffeecc would be stored in memory as 0x00, "
"0xcc, 0xee, 0xff."
msgstr ""

#. used by: GdkByteOrder:
#: gdktypes.h:142:2
msgid ""
"A set of values describing the possible byte-orders for storing pixel values "
"in memory."
msgstr ""

#. used by: GdkModifierType:
#: gdktypes.h:155:1
msgid "@GDK_SHIFT_MASK: the Shift key."
msgstr ""

#. used by: GdkModifierType:
#: gdktypes.h:156:2
msgid ""
"@GDK_LOCK_MASK: a Lock key (depending on the modifier mapping of the X "
"server this may either be CapsLock or ShiftLock)."
msgstr ""

#. used by: GdkModifierType:
#: gdktypes.h:158:17
msgid ""
"@GDK_CONTROL_MASK: the Control key. @GDK_MOD1_MASK: the fourth modifier key "
"(it depends on the modifier mapping of the X server which key is interpreted "
"as this modifier, but normally it is the Alt key). @GDK_MOD2_MASK: the fifth "
"modifier key (it depends on the modifier mapping of the X server which key "
"is interpreted as this modifier). @GDK_MOD3_MASK: the sixth modifier key (it "
"depends on the modifier mapping of the X server which key is interpreted as "
"this modifier). @GDK_MOD4_MASK: the seventh modifier key (it depends on the "
"modifier mapping of the X server which key is interpreted as this modifier). "
"@GDK_MOD5_MASK: the eighth modifier key (it depends on the modifier mapping "
"of the X server which key is interpreted as this modifier). "
"@GDK_BUTTON1_MASK: the first mouse button. @GDK_BUTTON2_MASK: the second "
"mouse button. @GDK_BUTTON3_MASK: the third mouse button. @GDK_BUTTON4_MASK: "
"the fourth mouse button. @GDK_BUTTON5_MASK: the fifth mouse button."
msgstr ""

#. used by: GdkModifierType:
#: gdktypes.h:175:1
msgid "@GDK_SUPER_MASK: the Super modifier. Since 2.10"
msgstr ""

#. used by: GdkModifierType:
#: gdktypes.h:176:1
msgid "@GDK_HYPER_MASK: the Hyper modifier. Since 2.10"
msgstr ""

#. used by: GdkModifierType:
#: gdktypes.h:177:1
msgid "@GDK_META_MASK: the Meta modifier. Since 2.10"
msgstr ""

#. used by: GdkModifierType:
#: gdktypes.h:178:2
msgid ""
"@GDK_RELEASE_MASK: not used in GDK itself. GTK+ uses it to differentiate "
"between (keyval, modifiers) pairs from key press and release events."
msgstr ""

#. used by: GdkModifierType:
#: gdktypes.h:180:1
msgid "@GDK_MODIFIER_MASK: a mask covering all modifier types."
msgstr ""

#. used by: GdkModifierType:
#: gdktypes.h:182:3
msgid ""
"A set of bit-flags to indicate the state of modifier keys and mouse buttons "
"in various event types. Typical modifier keys are Shift, Control, Meta, "
"Super, Hyper, Alt, Compose, Apple, CapsLock or ShiftLock."
msgstr ""

#. used by: GdkModifierType:
#: gdktypes.h:186:1
msgid ""
"Like the X Window System, GDK supports 8 modifier keys and 5 mouse buttons."
msgstr ""

#. used by: GdkModifierType:
#: gdktypes.h:188:3
msgid ""
"Since 2.10, GDK recognizes which of the Meta, Super or Hyper keys are mapped "
"to Mod2 - Mod5, and indicates this by setting %GDK_SUPER_MASK, "
"%GDK_HYPER_MASK or %GDK_META_MASK in the state field of key events."
msgstr ""

#. used by: GdkGrabStatus:
#: gdktypes.h:232:1
msgid "@GDK_GRAB_SUCCESS: the resource was successfully grabbed."
msgstr ""

#. used by: GdkGrabStatus:
#: gdktypes.h:233:1
msgid ""
"@GDK_GRAB_ALREADY_GRABBED: the resource is actively grabbed by another "
"client."
msgstr ""

#. used by: GdkGrabStatus:
#: gdktypes.h:234:2
msgid ""
"@GDK_GRAB_INVALID_TIME: the resource was grabbed more recently than the "
"specified time."
msgstr ""

#. used by: GdkGrabStatus:
#: gdktypes.h:236:2
msgid ""
"@GDK_GRAB_NOT_VIEWABLE: the grab window or the @confine_to window are not "
"viewable."
msgstr ""

#. used by: GdkGrabStatus:
#: gdktypes.h:238:1
msgid ""
"@GDK_GRAB_FROZEN: the resource is frozen by an active grab of another client."
msgstr ""

#. used by: GdkGrabStatus:
#: gdktypes.h:240:2
msgid ""
"Returned by gdk_pointer_grab() and gdk_keyboard_grab() to indicate success "
"or the reason for the failure of the grab attempt."
msgstr ""

#. used by: GdkGrabOwnership:
#: gdktypes.h:254:1
msgid "@GDK_OWNERSHIP_NONE: All other devices' events are allowed."
msgstr ""

#. used by: GdkGrabOwnership:
#: gdktypes.h:255:1
msgid ""
"@GDK_OWNERSHIP_WINDOW: Other devices' events are blocked for the grab window."
msgstr ""

#. used by: GdkGrabOwnership:
#: gdktypes.h:256:1
msgid ""
"@GDK_OWNERSHIP_APPLICATION: Other devices' events are blocked for the whole "
"application."
msgstr ""

#. used by: GdkGrabOwnership:
#: gdktypes.h:258:1
msgid "Defines how device grabs interact with other devices."
msgstr ""

#. used by: GdkEventMask:
#: gdktypes.h:269:1
msgid "@GDK_EXPOSURE_MASK: receive expose events"
msgstr ""

#. used by: GdkEventMask:
#: gdktypes.h:270:1
msgid "@GDK_POINTER_MOTION_MASK: receive all pointer motion events"
msgstr ""

#. used by: GdkEventMask:
#: gdktypes.h:271:1
msgid "@GDK_POINTER_MOTION_HINT_MASK: see the explanation above"
msgstr ""

#. used by: GdkEventMask:
#: gdktypes.h:272:4
msgid ""
"@GDK_BUTTON_MOTION_MASK: receive pointer motion events while any button is "
"pressed @GDK_BUTTON1_MOTION_MASK: receive pointer motion events while 1 "
"button is pressed @GDK_BUTTON2_MOTION_MASK: receive pointer motion events "
"while 2 button is pressed @GDK_BUTTON3_MOTION_MASK: receive pointer motion "
"events while 3 button is pressed"
msgstr ""

#. used by: GdkEventMask:
#: gdktypes.h:276:1
msgid "@GDK_BUTTON_PRESS_MASK: receive button press events"
msgstr ""

#. used by: GdkEventMask:
#: gdktypes.h:277:1
msgid "@GDK_BUTTON_RELEASE_MASK: receive button release events"
msgstr ""

#. used by: GdkEventMask:
#: gdktypes.h:278:1
msgid "@GDK_KEY_PRESS_MASK: receive key press events"
msgstr ""

#. used by: GdkEventMask:
#: gdktypes.h:279:1
msgid "@GDK_KEY_RELEASE_MASK: receive key release events"
msgstr ""

#. used by: GdkEventMask:
#: gdktypes.h:280:1
msgid "@GDK_ENTER_NOTIFY_MASK: receive window enter events"
msgstr ""

#. used by: GdkEventMask:
#: gdktypes.h:281:1
msgid "@GDK_LEAVE_NOTIFY_MASK: receive window leave events"
msgstr ""

#. used by: GdkEventMask:
#: gdktypes.h:282:1
msgid "@GDK_FOCUS_CHANGE_MASK: receive focus change events"
msgstr ""

#. used by: GdkEventMask:
#: gdktypes.h:283:1
msgid "@GDK_STRUCTURE_MASK: receive events about window configuration change"
msgstr ""

#. used by: GdkEventMask:
#: gdktypes.h:284:1
msgid "@GDK_PROPERTY_CHANGE_MASK: receive property change events"
msgstr ""

#. used by: GdkEventMask:
#: gdktypes.h:285:1
msgid "@GDK_VISIBILITY_NOTIFY_MASK: receive visibility change events"
msgstr ""

#. used by: GdkEventMask:
#: gdktypes.h:286:1
msgid "@GDK_PROXIMITY_IN_MASK: receive proximity in events"
msgstr ""

#. used by: GdkEventMask:
#: gdktypes.h:287:1
msgid "@GDK_PROXIMITY_OUT_MASK: receive proximity out events"
msgstr ""

#. used by: GdkEventMask:
#: gdktypes.h:288:2
msgid ""
"@GDK_SUBSTRUCTURE_MASK: receive events about window configuration changes of "
"child windows"
msgstr ""

#. used by: GdkEventMask:
#: gdktypes.h:290:1
msgid "@GDK_SCROLL_MASK: receive scroll events"
msgstr ""

#. used by: GdkEventMask:
#: gdktypes.h:291:1
msgid "@GDK_ALL_EVENTS_MASK: the combination of all the above event masks."
msgstr ""

#. used by: GdkEventMask:
#: gdktypes.h:293:3
msgid ""
"A set of bit-flags to indicate which events a window is to receive. Most of "
"these masks map onto one or more of the #GdkEventType event types above."
msgstr ""

#. used by: GdkEventMask:
#: gdktypes.h:297:9
msgid ""
"%GDK_POINTER_MOTION_HINT_MASK is a special mask which is used to reduce the "
"number of %GDK_MOTION_NOTIFY events received. Normally a %GDK_MOTION_NOTIFY "
"event is received each time the mouse moves. However, if the application "
"spends a lot of time processing the event (updating the display, for "
"example), it can lag behind the position of the mouse. When using "
"%GDK_POINTER_MOTION_HINT_MASK, fewer %GDK_MOTION_NOTIFY events will be sent, "
"some of which are marked as a hint (the is_hint member is %TRUE). To receive "
"more motion events after a motion hint event, the application needs to asks "
"for more, by calling gdk_event_request_motions()."
msgstr ""

# used by: gdk_window_redirect_to_drawable:
#. used by: GdkPoint:
#: gdktypes.h:335:1
#, fuzzy
msgid "@x: the x coordinate of the point."
msgstr "@src_x: 在@window中的x 坐标位置"

# used by: gdk_window_redirect_to_drawable:
#. used by: GdkPoint:
#: gdktypes.h:336:1
#, fuzzy
msgid "@y: the y coordinate of the point."
msgstr "@src_y: 在@window中的y 坐标位置"

#. used by: GdkPoint:
#: gdktypes.h:338:1
msgid "Defines the x and y coordinates of a point."
msgstr ""

#. used by: GDK_CURRENT_TIME:
#: gdktypes.h:53:1
msgid ""
"Represents the current time, and can be used anywhere a time is expected."
msgstr ""

#. used by: GDK_PARENT_RELATIVE:
#: gdktypes.h:60:2
msgid ""
"A special value, indicating that the background for a window should be "
"inherited from the parent window."
msgstr ""

#. used by: GdkRectangle:
#: gdktypes.h:77:2
msgid ""
"Defines the position and size of a rectangle. It is identical to "
"#cairo_rectangle_int_t."
msgstr ""

#. used by: GdkAtom:
#: gdktypes.h:85:2
msgid ""
"An opaque type representing a string as an index into a table of strings on "
"the X server."
msgstr ""

#. used by: GDK_ATOM_TO_POINTER:
#: gdktypes.h:94:1
msgid "Converts a #GdkAtom into a pointer type."
msgstr ""

# #used by: gdk_visual_get_system:
#. used by: gdk_visual_get_system:
#: gdkvisual.c:101:3
msgid ""
"Get the system's default visual for the default GDK screen. This is the "
"visual for the root window of the display. The return value should not be "
"freed."
msgstr ""

# #used by: gdk_visual_get_system:
#. used by: gdk_visual_get_system:
#: gdkvisual.c:105:1
msgid "Return value: (transfer none): system visual"
msgstr ""

#. used by: gdk_visual_get_best_depth:
#: gdkvisual.c:116:3
msgid ""
"Get the best available depth for the default GDK screen.  \"Best\" means "
"\"largest,\" i.e. 32 preferred over 24 preferred over 8 bits per pixel."
msgstr ""

# #used by: gdk_visual_get_best_depth:
#. used by: gdk_visual_get_best_depth:
#: gdkvisual.c:120:1
msgid "Return value: best available depth"
msgstr ""

# #used by: gdk_visual_get_best_type:
#. used by: gdk_visual_get_best_type:
#: gdkvisual.c:133:1
msgid "Return the best available visual type for the default GDK screen."
msgstr ""

# #used by: gdk_visual_get_best_type:
#. used by: gdk_visual_get_best_type:
#: gdkvisual.c:135:1
msgid "Return value: best visual type"
msgstr ""

# #used by: gdk_visual_get_best:
#. used by: gdk_visual_get_best:
#: gdkvisual.c:148:2
msgid ""
"Get the visual with the most available colors for the default GDK screen. "
"The return value should not be freed."
msgstr ""

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_seconds_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_seconds:
#. used by: gdk_visual_get_best:
#: gdkvisual.c:151:1
#, fuzzy
msgid "Return value: (transfer none): best visual"
msgstr "Return value: 事件的屏幕。"

# #-#-#-#-#  gdkvisual.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_visual_get_best_with_depth:
# #-#-#-#-#  gdkvisual.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_visual_get_best_with_both:
#. #-#-#-#-#  gdkvisual.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_visual_get_best_with_depth:
#. #-#-#-#-#  gdkvisual.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_visual_get_best_with_both:
#: gdkvisual.c:163:1 gdkvisual.c:202:1
msgid "@depth: a bit depth"
msgstr ""

# #used by: gdk_visual_get_best_with_depth:
#. used by: gdk_visual_get_best_with_depth:
#: gdkvisual.c:165:4
msgid ""
"Get the best visual with depth @depth for the default GDK screen. Color "
"visuals and visuals with mutable colormaps are preferred over grayscale or "
"fixed-colormap visuals. The return value should not be freed. %NULL may be "
"returned if no visual supports @depth."
msgstr ""

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_seconds_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_seconds:
#. used by: gdk_visual_get_best_with_depth:
#: gdkvisual.c:170:1
#, fuzzy
msgid "Return value: (transfer none): best visual for the given depth"
msgstr "Return value: 事件的屏幕。"

# #-#-#-#-#  gdkvisual.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_visual_get_best_with_type:
# #-#-#-#-#  gdkvisual.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_visual_get_best_with_both:
#. #-#-#-#-#  gdkvisual.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_visual_get_best_with_type:
#. #-#-#-#-#  gdkvisual.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_visual_get_best_with_both:
#: gdkvisual.c:182:1 gdkvisual.c:203:1
msgid "@visual_type: a visual type"
msgstr ""

# #used by: gdk_visual_get_best_with_type:
#. used by: gdk_visual_get_best_with_type:
#: gdkvisual.c:184:4
msgid ""
"Get the best visual of the given @visual_type for the default GDK screen. "
"Visuals with higher color depths are considered better. The return value "
"should not be freed. %NULL may be returned if no visual has type "
"@visual_type."
msgstr ""

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_seconds_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_seconds:
#. used by: gdk_visual_get_best_with_type:
#: gdkvisual.c:189:1
#, fuzzy
msgid "Return value: (transfer none): best visual of the given type"
msgstr "Return value: 事件的屏幕。"

# #used by: gdk_visual_get_best_with_both:
#. used by: gdk_visual_get_best_with_both:
#: gdkvisual.c:205:2
msgid ""
"Combines gdk_visual_get_best_with_depth() and gdk_visual_get_best_with_type"
"()."
msgstr ""

# #used by: gdk_visual_get_best_with_both:
#. used by: gdk_visual_get_best_with_both:
#: gdkvisual.c:208:2
msgid ""
"Return value: (transfer none): best visual with both @depth and "
"@visual_type, or %NULL if none"
msgstr ""

# used by: gdk_query_depths:
#. used by: gdk_query_depths:
#: gdkvisual.c:222:2
msgid ""
"@depths: (out) (array length=count) (transfer none): return location for "
"available depths"
msgstr ""

# used by: gdk_query_depths:
#. used by: gdk_query_depths:
#: gdkvisual.c:224:1
msgid "@count: return location for number of available depths"
msgstr ""

# #used by: gdk_query_depths:
#. used by: gdk_query_depths:
#: gdkvisual.c:226:4
msgid ""
"This function returns the available bit depths for the default screen. It's "
"equivalent to listing the visuals (gdk_list_visuals()) and then looking at "
"the depth field in each visual, removing duplicates."
msgstr ""

# #-#-#-#-#  gdkvisual.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_query_depths:
# #-#-#-#-#  gdkvisual.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_query_visual_types:
#. #-#-#-#-#  gdkvisual.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_query_depths:
#. #-#-#-#-#  gdkvisual.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_query_visual_types:
#: gdkvisual.c:231:1 gdkvisual.c:253:1
msgid "The array returned by this function should not be freed."
msgstr ""

# used by: gdk_query_visual_types:
#. used by: gdk_query_visual_types:
#: gdkvisual.c:244:2
msgid ""
"@visual_types: (out) (array length=count) (transfer none): return location "
"for the available visual types"
msgstr ""

# used by: gdk_query_visual_types:
#. used by: gdk_query_visual_types:
#: gdkvisual.c:246:1
msgid "@count: return location for the number of available visual types"
msgstr ""

# #used by: gdk_query_visual_types:
#. used by: gdk_query_visual_types:
#: gdkvisual.c:248:4
msgid ""
"This function returns the available visual types for the default screen. "
"It's equivalent to listing the visuals (gdk_list_visuals()) and then looking "
"at the type field in each visual, removing duplicates."
msgstr ""

# #-#-#-#-#  gdkvisual.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_visual_get_visual_type:
# #-#-#-#-#  gdkvisual.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_visual_get_depth:
# #-#-#-#-#  gdkvisual.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_visual_get_byte_order:
# #-#-#-#-#  gdkvisual.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_visual_get_colormap_size:
#. #-#-#-#-#  gdkvisual.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_visual_get_visual_type:
#. #-#-#-#-#  gdkvisual.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_visual_get_depth:
#. #-#-#-#-#  gdkvisual.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_visual_get_byte_order:
#. #-#-#-#-#  gdkvisual.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_visual_get_colormap_size:
#: gdkvisual.c:266:1 gdkvisual.c:284:1 gdkvisual.c:302:1 gdkvisual.c:320:1
msgid "@visual: A #GdkVisual."
msgstr ""

# #used by: gdk_visual_get_visual_type:
#. used by: gdk_visual_get_visual_type:
#: gdkvisual.c:268:1
msgid "Returns the type of visual this is (PseudoColor, TrueColor, etc)."
msgstr ""

# #used by: gdk_visual_get_visual_type:
#. used by: gdk_visual_get_visual_type:
#: gdkvisual.c:270:1
msgid "Return value: A #GdkVisualType stating the type of @visual."
msgstr ""

# #used by: gdk_visual_get_depth:
#. used by: gdk_visual_get_depth:
#: gdkvisual.c:286:1
msgid "Returns the bit depth of this visual."
msgstr ""

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_seconds_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_seconds:
#. used by: gdk_visual_get_depth:
#: gdkvisual.c:288:1
#, fuzzy
msgid "Return value: The bit depth of this visual."
msgstr "Return value: 事件源的ID（大于0）。"

# #used by: gdk_visual_get_byte_order:
#. used by: gdk_visual_get_byte_order:
#: gdkvisual.c:304:1
msgid "Returns the byte order of this visual."
msgstr ""

# #used by: gdk_visual_get_byte_order:
#. used by: gdk_visual_get_byte_order:
#: gdkvisual.c:306:1
msgid "Return value: A #GdkByteOrder stating the byte order of @visual."
msgstr ""

# used by: SECTION:visuals
#. used by: SECTION:visuals
#: gdkvisual.c:32:1
msgid "@Short_description: Low-level display hardware information"
msgstr ""

# #used by: gdk_visual_get_colormap_size:
#. used by: gdk_visual_get_colormap_size:
#: gdkvisual.c:322:1
msgid "Returns the size of a colormap for this visual."
msgstr ""

# #used by: gdk_visual_get_colormap_size:
#. used by: gdk_visual_get_colormap_size:
#: gdkvisual.c:324:1
msgid "Return value: The size of a colormap that is suitable for @visual."
msgstr ""

# used by: SECTION:visuals
#. used by: SECTION:visuals
#: gdkvisual.c:33:1
msgid "@Title: Visuals"
msgstr ""

# #-#-#-#-#  gdkvisual.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_visual_get_bits_per_rgb:
# #-#-#-#-#  gdkvisual.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_visual_get_green_pixel_details:
# #-#-#-#-#  gdkvisual.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_visual_get_blue_pixel_details:
# #-#-#-#-#  gdkvisual.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_visual_get_screen:
#. #-#-#-#-#  gdkvisual.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_visual_get_bits_per_rgb:
#. #-#-#-#-#  gdkvisual.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_visual_get_green_pixel_details:
#. #-#-#-#-#  gdkvisual.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_visual_get_blue_pixel_details:
#. #-#-#-#-#  gdkvisual.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_visual_get_screen:
#: gdkvisual.c:338:1 gdkvisual.c:389:1 gdkvisual.c:422:1 gdkvisual.c:455:1
msgid "@visual: a #GdkVisual"
msgstr ""

# #used by: gdk_visual_get_bits_per_rgb:
#. used by: gdk_visual_get_bits_per_rgb:
#: gdkvisual.c:340:1
msgid "Returns the number of significant bits per red, green and blue value."
msgstr ""

# #used by: gdk_visual_get_bits_per_rgb:
#. used by: gdk_visual_get_bits_per_rgb:
#: gdkvisual.c:342:1
msgid ""
"Return value: The number of significant bits per color value for @visual."
msgstr ""

#. used by: SECTION:visuals
#: gdkvisual.c:35:8
msgid ""
"A #GdkVisual describes a particular video hardware display format. It "
"includes information about the number of bits used for each color, the way "
"the bits are translated into an RGB value for display, and the way the bits "
"are stored in memory. For example, a piece of display hardware might support "
"24-bit color, 16-bit color, or 8-bit color; meaning 24/16/8-bit pixel sizes. "
"For a given pixel size, pixels can be in different formats; for example the "
"\"red\" element of an RGB pixel may be in the top 8 bits of the pixel, or "
"may be in the lower 4 bits."
msgstr ""

# used by: gdk_visual_get_red_pixel_details:
#. used by: gdk_visual_get_red_pixel_details:
#: gdkvisual.c:356:1
msgid "@visual: A #GdkVisual"
msgstr ""

# #-#-#-#-#  gdkvisual.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_visual_get_red_pixel_details:
# #-#-#-#-#  gdkvisual.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_visual_get_green_pixel_details:
# #-#-#-#-#  gdkvisual.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_visual_get_blue_pixel_details:
#. #-#-#-#-#  gdkvisual.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_visual_get_red_pixel_details:
#. #-#-#-#-#  gdkvisual.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_visual_get_green_pixel_details:
#. #-#-#-#-#  gdkvisual.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_visual_get_blue_pixel_details:
#: gdkvisual.c:357:1 gdkvisual.c:390:1 gdkvisual.c:423:1
msgid ""
"@mask: (out) (allow-none): A pointer to a #guint32 to be filled in, or %NULL"
msgstr ""

# #-#-#-#-#  gdkvisual.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_visual_get_red_pixel_details:
# #-#-#-#-#  gdkvisual.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_visual_get_green_pixel_details:
# #-#-#-#-#  gdkvisual.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_visual_get_blue_pixel_details:
#. #-#-#-#-#  gdkvisual.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_visual_get_red_pixel_details:
#. #-#-#-#-#  gdkvisual.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_visual_get_green_pixel_details:
#. #-#-#-#-#  gdkvisual.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_visual_get_blue_pixel_details:
#: gdkvisual.c:358:1 gdkvisual.c:391:1 gdkvisual.c:424:1
msgid ""
"@shift: (out) (allow-none): A pointer to a #gint to be filled in, or %NULL"
msgstr ""

# #-#-#-#-#  gdkvisual.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_visual_get_red_pixel_details:
# #-#-#-#-#  gdkvisual.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_visual_get_green_pixel_details:
# #-#-#-#-#  gdkvisual.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_visual_get_blue_pixel_details:
#. #-#-#-#-#  gdkvisual.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_visual_get_red_pixel_details:
#. #-#-#-#-#  gdkvisual.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_visual_get_green_pixel_details:
#. #-#-#-#-#  gdkvisual.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_visual_get_blue_pixel_details:
#: gdkvisual.c:359:1 gdkvisual.c:392:1 gdkvisual.c:425:1
msgid ""
"@precision: (out) (allow-none): A pointer to a #gint to be filled in, or "
"%NULL"
msgstr ""

#. used by: gdk_visual_get_red_pixel_details:
#: gdkvisual.c:361:5
msgid ""
"Obtains values that are needed to calculate red pixel values in TrueColor "
"and DirectColor. The \"mask\" is the significant bits within the pixel. The "
"\"shift\" is the number of bits left we must shift a primary for it to be in "
"position (according to the \"mask\"). Finally, \"precision\" refers to how "
"much precision the pixel value contains for a particular primary."
msgstr ""

#. used by: gdk_visual_get_green_pixel_details:
#: gdkvisual.c:394:5
msgid ""
"Obtains values that are needed to calculate green pixel values in TrueColor "
"and DirectColor. The \"mask\" is the significant bits within the pixel. The "
"\"shift\" is the number of bits left we must shift a primary for it to be in "
"position (according to the \"mask\"). Finally, \"precision\" refers to how "
"much precision the pixel value contains for a particular primary."
msgstr ""

#. used by: gdk_visual_get_blue_pixel_details:
#: gdkvisual.c:427:5
msgid ""
"Obtains values that are needed to calculate blue pixel values in TrueColor "
"and DirectColor. The \"mask\" is the significant bits within the pixel. The "
"\"shift\" is the number of bits left we must shift a primary for it to be in "
"position (according to the \"mask\"). Finally, \"precision\" refers to how "
"much precision the pixel value contains for a particular primary."
msgstr ""

# #used by: SECTION:visuals
#. used by: SECTION:visuals
#: gdkvisual.c:44:2
msgid ""
"There are several standard visuals. The visual returned by "
"gdk_screen_get_system_visual() is the system's default visual."
msgstr ""

# #used by: gdk_visual_get_screen:
#. used by: gdk_visual_get_screen:
#: gdkvisual.c:457:1
msgid "Gets the screen to which this visual belongs"
msgstr ""

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_seconds_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_seconds:
#. used by: gdk_visual_get_screen:
#: gdkvisual.c:459:1
#, fuzzy
msgid "Return value: (transfer none): the screen to which this visual belongs."
msgstr "Return value: 事件的屏幕。"

#. used by: SECTION:visuals
#: gdkvisual.c:47:8
msgid ""
"A number of functions are provided for determining the \"best\" available "
"visual. For the purposes of making this determination, higher bit depths are "
"considered better, and for visuals of the same bit depth, "
"%GDK_VISUAL_PSEUDO_COLOR is preferred at 8bpp, otherwise, the visual types "
"are ranked in the order of(highest to lowest) %GDK_VISUAL_DIRECT_COLOR, "
"%GDK_VISUAL_TRUE_COLOR, %GDK_VISUAL_PSEUDO_COLOR, %GDK_VISUAL_STATIC_COLOR, "
"%GDK_VISUAL_GRAYSCALE, then %GDK_VISUAL_STATIC_GRAY."
msgstr ""

# #used by: gdk_list_visuals:
#. used by: gdk_list_visuals:
#: gdkvisual.c:81:5
msgid ""
"Lists the available visuals for the default screen. (See "
"gdk_screen_list_visuals()) A visual describes a hardware image data format. "
"For example, a visual might support 24-bit color, or 8-bit color, and might "
"expect pixels to be in a certain format."
msgstr ""

#. used by: GdkVisualType:
#: gdkvisual.h:44:2
msgid ""
"@GDK_VISUAL_STATIC_GRAY: Each pixel value indexes a grayscale value directly."
msgstr ""

#. used by: GdkVisualType:
#: gdkvisual.h:46:3
msgid ""
"@GDK_VISUAL_GRAYSCALE: Each pixel is an index into a color map that maps "
"pixel values into grayscale values. The color map can be changed by an "
"application."
msgstr ""

#. used by: GdkVisualType:
#: gdkvisual.h:49:2
msgid ""
"@GDK_VISUAL_STATIC_COLOR: Each pixel value is an index into a predefined, "
"unmodifiable color map that maps pixel values into RGB values."
msgstr ""

#. used by: GdkVisualType:
#: gdkvisual.h:51:3
msgid ""
"@GDK_VISUAL_PSEUDO_COLOR: Each pixel is an index into a color map that maps "
"pixel values into rgb values. The color map can be changed by an application."
msgstr ""

#. used by: GdkVisualType:
#: gdkvisual.h:54:4
msgid ""
"@GDK_VISUAL_TRUE_COLOR: Each pixel value directly contains red, green, and "
"blue components. Use gdk_visual_get_red_pixel_details(), etc, to obtain "
"information about how the components are assembled into a pixel value."
msgstr ""

#. used by: GdkVisualType:
#: gdkvisual.h:58:4
msgid ""
"@GDK_VISUAL_DIRECT_COLOR: Each pixel value contains red, green, and blue "
"components as for %GDK_VISUAL_TRUE_COLOR, but the components are mapped via "
"a color table into the final output table instead of being converted "
"directly."
msgstr ""

#. used by: GdkVisualType:
#: gdkvisual.h:63:2
msgid ""
"A set of values that describe the manner in which the pixel values for a "
"visual are converted into RGB values for display."
msgstr ""

#. used by: GdkVisual:
#: gdkvisual.h:79:2
msgid ""
"The #GdkVisual structure contains information about a particular visual."
msgstr ""

# used by: gdk_window_withdraw:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_withdraw:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_is_input_only:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_is_shaped:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_beep:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_skip_taskbar_hint:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_skip_pager_hint:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_urgency_hint:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_geometry_hints:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_title:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_role:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_startup_id:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_transient_for:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_root_origin:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_frame_extents:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_override_redirect:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_accept_focus:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_focus_on_map:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_icon_name:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_iconify:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_deiconify:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_stick:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_unstick:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_maximize:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_unmaximize:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_fullscreen:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_unfullscreen:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_keep_above:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_keep_below:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_group:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_group:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_decorations:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_functions:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_begin_resize_drag:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_begin_move_drag:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_enable_synchronized_configure:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_configure_finished:
#: gdkwindow.c:10012:1 gdkwindow.c:10034:1 gdkwindow.c:10054:1
#: gdkwindow.c:10099:1 gdkwindow.c:10122:1 gdkwindow.c:10139:1
#: gdkwindow.c:10156:1 gdkwindow.c:10177:1 gdkwindow.c:10191:1
#: gdkwindow.c:10214:1 gdkwindow.c:10237:1 gdkwindow.c:10263:1
#: gdkwindow.c:10286:1 gdkwindow.c:10310:1 gdkwindow.c:10333:1
#: gdkwindow.c:10349:1 gdkwindow.c:10372:1 gdkwindow.c:10417:1
#: gdkwindow.c:10444:1 gdkwindow.c:10471:1 gdkwindow.c:10497:1
#: gdkwindow.c:10520:1 gdkwindow.c:5669:1 gdkwindow.c:7503:1
#: gdkwindow.c:7521:1 gdkwindow.c:7947:1 gdkwindow.c:9796:1 gdkwindow.c:9817:1
#: gdkwindow.c:9840:1 gdkwindow.c:9857:1 gdkwindow.c:9894:1 gdkwindow.c:9912:1
#: gdkwindow.c:9938:1 gdkwindow.c:9956:1 gdkwindow.c:9976:1 gdkwindow.c:9994:1
msgid "@window: a toplevel #GdkWindow"
msgstr ""

# used by: gdk_window_set_override_redirect:
#. used by: gdk_window_set_override_redirect:
#: gdkwindow.c:10013:1
msgid "@override_redirect: %TRUE if window should be override redirect"
msgstr ""

# #used by: gdk_window_set_override_redirect:
#. used by: gdk_window_set_override_redirect:
#: gdkwindow.c:10015:4
msgid ""
"An override redirect window is not under the control of the window manager. "
"This means it won't have a titlebar, won't be minimizable, etc. - it will be "
"entirely under the control of the application. The window manager can't see "
"the override redirect window at all."
msgstr ""

# #used by: gdk_window_set_override_redirect:
#. used by: gdk_window_set_override_redirect:
#: gdkwindow.c:10020:3
msgid ""
"Override redirect should only be used for short-lived temporary windows, "
"such as popup menus. #GtkMenu uses an override redirect window in its "
"implementation, for example."
msgstr ""

# used by: gdk_window_set_accept_focus:
#. used by: gdk_window_set_accept_focus:
#: gdkwindow.c:10035:1
msgid "@accept_focus: %TRUE if the window should receive input focus"
msgstr ""

# #used by: gdk_window_set_accept_focus:
#. used by: gdk_window_set_accept_focus:
#: gdkwindow.c:10037:2
msgid ""
"Setting @accept_focus to %FALSE hints the desktop environment that the "
"window doesn't want to receive input focus."
msgstr ""

# #used by: gdk_window_set_accept_focus:
#. used by: gdk_window_set_accept_focus:
#: gdkwindow.c:10040:2
msgid ""
"On X, it is the responsibility of the window manager to interpret this hint. "
"ICCCM-compliant window manager usually respect it."
msgstr ""

# used by: gdk_window_set_focus_on_map:
#. used by: gdk_window_set_focus_on_map:
#: gdkwindow.c:10055:1
msgid ""
"@focus_on_map: %TRUE if the window should receive input focus when mapped"
msgstr ""

# #used by: gdk_window_set_focus_on_map:
#. used by: gdk_window_set_focus_on_map:
#: gdkwindow.c:10057:4
msgid ""
"Setting @focus_on_map to %FALSE hints the desktop environment that the "
"window doesn't want to receive input focus when it is mapped. focus_on_map "
"should be turned off for windows that aren't triggered interactively (such "
"as popups from network activity)."
msgstr ""

# #used by: gdk_window_set_focus_on_map:
#. used by: gdk_window_set_focus_on_map:
#: gdkwindow.c:10062:3
msgid ""
"On X, it is the responsibility of the window manager to interpret this hint. "
"Window managers following the freedesktop.org window manager extension "
"specification should respect it."
msgstr ""

# used by: gdk_window_set_icon_list:
#. used by: gdk_window_set_icon_list:
#: gdkwindow.c:10077:1
msgid "@window: The #GdkWindow toplevel window to set the icon of."
msgstr ""

# used by: gdk_window_set_icon_list:
#. used by: gdk_window_set_icon_list:
#: gdkwindow.c:10078:2
msgid ""
"@pixbufs: (transfer none) (element-type GdkPixbuf): A list of pixbufs, of "
"different sizes."
msgstr ""

# #used by: gdk_window_set_icon_list:
#. used by: gdk_window_set_icon_list:
#: gdkwindow.c:10081:7
msgid ""
"Sets a list of icons for the window. One of these will be used to represent "
"the window when it has been iconified. The icon is usually shown in an icon "
"box or some sort of task bar. Which icon size is shown depends on the window "
"manager. The window manager can scale the icon  but setting several size "
"icons can give better image quality since the window manager may only need "
"to scale the icon by a small amount or not at all."
msgstr ""

# used by: gdk_window_set_icon_name:
#. used by: gdk_window_set_icon_name:
#: gdkwindow.c:10100:1
msgid "@name: name of window while iconified (minimized)"
msgstr ""

# #used by: gdk_window_set_icon_name:
#. used by: gdk_window_set_icon_name:
#: gdkwindow.c:10102:4
msgid ""
"Windows may have a name used while minimized, distinct from the name they "
"display in their titlebar. Most of the time this is a bad idea from a user "
"interface standpoint. But you can set such a name with this function, if you "
"like."
msgstr ""

# #used by: gdk_window_set_icon_name:
#. used by: gdk_window_set_icon_name:
#: gdkwindow.c:10107:2
msgid ""
"After calling this with a non-%NULL @name, calls to gdk_window_set_title() "
"will not update the icon title."
msgstr ""

# #used by: gdk_window_set_icon_name:
#. used by: gdk_window_set_icon_name:
#: gdkwindow.c:10110:2
msgid ""
"Using %NULL for @name unsets the icon title; further calls to "
"gdk_window_set_title() will again update the icon title as well."
msgstr ""

# #used by: gdk_window_iconify:
#. used by: gdk_window_iconify:
#: gdkwindow.c:10124:3
msgid ""
"Asks to iconify (minimize) @window. The window manager may choose to ignore "
"the request, but normally will honor it. Using gtk_window_iconify() is "
"preferred, if you have a #GtkWindow widget."
msgstr ""

# #used by: gdk_window_iconify:
#. used by: gdk_window_iconify:
#: gdkwindow.c:10128:1
msgid "This function only makes sense when @window is a toplevel window."
msgstr ""

# #used by: gdk_window_deiconify:
#. used by: gdk_window_deiconify:
#: gdkwindow.c:10141:5
msgid ""
"Attempt to deiconify (unminimize) @window. On X11 the window manager may "
"choose to ignore the request to deiconify. When using GTK+, use "
"gtk_window_deiconify() instead of the #GdkWindow variant. Or better yet, you "
"probably want to use gtk_window_present(), which raises the window, focuses "
"it, unminimizes it, and puts it on the current desktop."
msgstr ""

#. used by: gdk_window_stick:
#: gdkwindow.c:10158:3
msgid ""
"\"Pins\" a window such that it's on all workspaces and does not scroll with "
"viewports, for window managers that have scrollable viewports. (When using "
"#GtkWindow, gtk_window_stick() may be more useful.)"
msgstr ""

# #used by: gdk_window_stick:
#. used by: gdk_window_stick:
#: gdkwindow.c:10162:5
msgid ""
"On the X11 platform, this function depends on window manager support, so may "
"have no effect with many window managers. However, GDK will do the best it "
"can to convince the window manager to stick the window. For window managers "
"that don't support this operation, there's nothing you can do to force it to "
"happen."
msgstr ""

# #used by: gdk_window_unstick:
#. used by: gdk_window_unstick:
#: gdkwindow.c:10179:2
msgid ""
"Reverse operation for gdk_window_stick(); see gdk_window_stick(), and "
"gtk_window_unstick()."
msgstr ""

# #used by: gdk_window_maximize:
#. used by: gdk_window_maximize:
#: gdkwindow.c:10193:2
msgid ""
"Maximizes the window. If the window was already maximized, then this "
"function does nothing."
msgstr ""

#. used by: gdk_window_maximize:
#: gdkwindow.c:10196:6
msgid ""
"On X11, asks the window manager to maximize @window, if the window manager "
"supports this operation. Not all window managers support this, and some "
"deliberately ignore it or don't have a concept of \"maximized\"; so you "
"can't rely on the maximization actually happening. But it will happen with "
"most standard window managers, and GDK makes a best effort to get it to "
"happen."
msgstr ""

# #used by: gdk_window_maximize:
#. used by: gdk_window_maximize:
#: gdkwindow.c:10203:1
msgid "On Windows, reliably maximizes the window."
msgstr ""

# #used by: gdk_window_unmaximize:
#. used by: gdk_window_unmaximize:
#: gdkwindow.c:10216:2
msgid ""
"Unmaximizes the window. If the window wasn't maximized, then this function "
"does nothing."
msgstr ""

#. used by: gdk_window_unmaximize:
#: gdkwindow.c:10219:6
msgid ""
"On X11, asks the window manager to unmaximize @window, if the window manager "
"supports this operation. Not all window managers support this, and some "
"deliberately ignore it or don't have a concept of \"maximized\"; so you "
"can't rely on the unmaximization actually happening. But it will happen with "
"most standard window managers, and GDK makes a best effort to get it to "
"happen."
msgstr ""

# #used by: gdk_window_unmaximize:
#. used by: gdk_window_unmaximize:
#: gdkwindow.c:10226:1
msgid "On Windows, reliably unmaximizes the window."
msgstr ""

# #used by: gdk_window_fullscreen:
#. used by: gdk_window_fullscreen:
#: gdkwindow.c:10239:3
msgid ""
"Moves the window into fullscreen mode. This means the window covers the "
"entire screen and is above any panels or task bars."
msgstr ""

# #used by: gdk_window_fullscreen:
#. used by: gdk_window_fullscreen:
#: gdkwindow.c:10243:1
msgid "If the window was already fullscreen, then this function does nothing."
msgstr ""

#. used by: gdk_window_fullscreen:
#: gdkwindow.c:10245:7
msgid ""
"On X11, asks the window manager to put @window in a fullscreen state, if the "
"window manager supports this operation. Not all window managers support "
"this, and some deliberately ignore it or don't have a concept of \"fullscreen"
"\"; so you can't rely on the fullscreenification actually happening. But it "
"will happen with most standard window managers, and GDK makes a best effort "
"to get it to happen."
msgstr ""

# #used by: gdk_window_unfullscreen:
#. used by: gdk_window_unfullscreen:
#: gdkwindow.c:10265:2
msgid ""
"Moves the window out of fullscreen mode. If the window was not fullscreen, "
"does nothing."
msgstr ""

#. used by: gdk_window_unfullscreen:
#: gdkwindow.c:10268:7
msgid ""
"On X11, asks the window manager to move @window out of the fullscreen state, "
"if the window manager supports this operation. Not all window managers "
"support this, and some deliberately ignore it or don't have a concept of "
"\"fullscreen\"; so you can't rely on the unfullscreenification actually "
"happening. But it will happen with most standard window managers, and GDK "
"makes a best effort to get it to happen."
msgstr ""

# used by: gdk_window_set_keep_above:
#. used by: gdk_window_set_keep_above:
#: gdkwindow.c:10287:1
msgid "@setting: whether to keep @window above other windows"
msgstr ""

# #used by: gdk_window_set_keep_above:
#. used by: gdk_window_set_keep_above:
#: gdkwindow.c:10289:2
msgid ""
"Set if @window must be kept above other windows. If the window was already "
"above, then this function does nothing."
msgstr ""

#. used by: gdk_window_set_keep_above:
#: gdkwindow.c:10292:6
msgid ""
"On X11, asks the window manager to keep @window above, if the window manager "
"supports this operation. Not all window managers support this, and some "
"deliberately ignore it or don't have a concept of \"keep above\"; so you "
"can't rely on the window being kept above. But it will happen with most "
"standard window managers, and GDK makes a best effort to get it to happen."
msgstr ""

# used by: gdk_window_set_keep_below:
#. used by: gdk_window_set_keep_below:
#: gdkwindow.c:10311:1
msgid "@setting: whether to keep @window below other windows"
msgstr ""

# #used by: gdk_window_set_keep_below:
#. used by: gdk_window_set_keep_below:
#: gdkwindow.c:10313:2
msgid ""
"Set if @window must be kept below other windows. If the window was already "
"below, then this function does nothing."
msgstr ""

#. used by: gdk_window_set_keep_below:
#: gdkwindow.c:10316:6
msgid ""
"On X11, asks the window manager to keep @window below, if the window manager "
"supports this operation. Not all window managers support this, and some "
"deliberately ignore it or don't have a concept of \"keep below\"; so you "
"can't rely on the window being kept below. But it will happen with most "
"standard window managers, and GDK makes a best effort to get it to happen."
msgstr ""

# #used by: gdk_window_get_group:
#. used by: gdk_window_get_group:
#: gdkwindow.c:10335:1
msgid ""
"Returns the group leader window for @window. See gdk_window_set_group()."
msgstr ""

# #used by: gdk_window_get_group:
#. used by: gdk_window_get_group:
#: gdkwindow.c:10337:1
msgid "Return value: (transfer none): the group leader window for @window"
msgstr ""

# used by: gdk_window_set_group:
#. used by: gdk_window_set_group:
#: gdkwindow.c:10350:1
msgid ""
"@leader: group leader window, or %NULL to restore the default group leader "
"window"
msgstr ""

# #used by: gdk_window_set_group:
#. used by: gdk_window_set_group:
#: gdkwindow.c:10352:4
msgid ""
"Sets the group leader window for @window. By default, GDK sets the group "
"leader for all toplevel windows to a global window implicitly created by "
"GDK. With this function you can override this default."
msgstr ""

# #used by: gdk_window_set_group:
#. used by: gdk_window_set_group:
#: gdkwindow.c:10357:5
msgid ""
"The group leader window allows the window manager to distinguish all windows "
"that belong to a single application. It may for example allow users to "
"minimize/unminimize all windows belonging to an application at once. You "
"should only set a non-default group window if your application pretends to "
"be multiple applications."
msgstr ""

# used by: gdk_window_set_decorations:
#. used by: gdk_window_set_decorations:
#: gdkwindow.c:10373:1
msgid "@decorations: decoration hint mask"
msgstr ""

#. used by: gdk_window_set_decorations:
#: gdkwindow.c:10375:5
msgid ""
"\"Decorations\" are the features the window manager adds to a toplevel "
"#GdkWindow. This function sets the traditional Motif window manager hints "
"that tell the window manager which decorations you would like your window to "
"have. Usually you should use gtk_window_set_decorated() on a #GtkWindow "
"instead of using the GDK function directly."
msgstr ""

# #used by: gdk_window_set_decorations:
#. used by: gdk_window_set_decorations:
#: gdkwindow.c:10381:5
msgid ""
"The @decorations argument is the logical OR of the fields in the "
"#GdkWMDecoration enumeration. If #GDK_DECOR_ALL is included in the mask, the "
"other bits indicate which decorations should be turned off. If "
"#GDK_DECOR_ALL is not included, then the other bits indicate which "
"decorations should be turned on."
msgstr ""

# #used by: gdk_window_set_decorations:
#. used by: gdk_window_set_decorations:
#: gdkwindow.c:10387:2
msgid ""
"Most window managers honor a decorations hint of 0 to disable all "
"decorations, but very few honor all possible combinations of bits."
msgstr ""

# used by: gdk_window_get_decorations:
#. used by: gdk_window_get_decorations:
#: gdkwindow.c:10400:1
msgid "@window: The toplevel #GdkWindow to get the decorations from"
msgstr ""

# used by: gdk_window_get_decorations:
#. used by: gdk_window_get_decorations:
#: gdkwindow.c:10401:1
msgid "@decorations: (out): The window decorations will be written here"
msgstr ""

# #used by: gdk_window_get_decorations:
#. used by: gdk_window_get_decorations:
#: gdkwindow.c:10403:2
msgid ""
"Returns the decorations set on the GdkWindow with gdk_window_set_decorations"
"()."
msgstr ""

# #used by: gdk_display_open_default_libgtk_only:
#. used by: gdk_window_get_decorations:
#: gdkwindow.c:10406:1
#, fuzzy
msgid "Returns: %TRUE if the window has decorations set, %FALSE otherwise."
msgstr "Return value: 如果指定的axis 可以找到，返回%TRUE，否则返回%NULL。"

# used by: gdk_window_set_functions:
#. used by: gdk_window_set_functions:
#: gdkwindow.c:10418:1
msgid "@functions: bitmask of operations to allow on @window"
msgstr ""

# #used by: gdk_window_set_functions:
#. used by: gdk_window_set_functions:
#: gdkwindow.c:10420:2
msgid ""
"Sets hints about the window management functions to make available via "
"buttons on the window frame."
msgstr ""

# #used by: gdk_window_set_functions:
#. used by: gdk_window_set_functions:
#: gdkwindow.c:10423:4
msgid ""
"On the X backend, this function sets the traditional Motif window manager "
"hint for this purpose. However, few window managers do anything reliable or "
"interesting with this hint. Many ignore it entirely."
msgstr ""

# #used by: gdk_window_set_functions:
#. used by: gdk_window_set_functions:
#: gdkwindow.c:10428:5
msgid ""
"The @functions argument is the logical OR of values from the #GdkWMFunction "
"enumeration. If the bitmask includes #GDK_FUNC_ALL, then the other bits "
"indicate which functions to disable; if it doesn't include #GDK_FUNC_ALL, it "
"indicates which functions to enable."
msgstr ""

# used by: gdk_window_begin_resize_drag:
#. used by: gdk_window_begin_resize_drag:
#: gdkwindow.c:10445:1
msgid "@edge: the edge or corner from which the drag is started"
msgstr ""

# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_begin_resize_drag:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_begin_move_drag:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_begin_resize_drag:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_begin_move_drag:
#: gdkwindow.c:10446:1 gdkwindow.c:10472:1
msgid "@button: the button being used to drag"
msgstr ""

# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_begin_resize_drag:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_begin_move_drag:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_begin_resize_drag:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_begin_move_drag:
#: gdkwindow.c:10447:1 gdkwindow.c:10473:1
msgid "@root_x: root window X coordinate of mouse click that began the drag"
msgstr ""

# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_begin_resize_drag:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_begin_move_drag:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_begin_resize_drag:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_begin_move_drag:
#: gdkwindow.c:10448:1 gdkwindow.c:10474:1
msgid "@root_y: root window Y coordinate of mouse click that began the drag"
msgstr ""

# used by: gdk_window_begin_resize_drag:
#. used by: gdk_window_begin_resize_drag:
#: gdkwindow.c:10449:1
msgid ""
"@timestamp: timestamp of mouse click that began the drag (use "
"gdk_event_get_time())"
msgstr ""

#. used by: gdk_window_begin_resize_drag:
#: gdkwindow.c:10451:5
msgid ""
"Begins a window resize operation (for a toplevel window). You might use this "
"function to implement a \"window resize grip,\" for example; in fact "
"#GtkStatusbar uses it. The function works best with window managers that "
"support the <ulink url=\"http://www.freedesktop.org/Standards/wm-spec"
"\">Extended Window Manager Hints</ulink>, but has a fallback implementation "
"for other window managers."
msgstr ""

# used by: gdk_window_begin_move_drag:
#. used by: gdk_window_begin_move_drag:
#: gdkwindow.c:10475:1
msgid "@timestamp: timestamp of mouse click that began the drag"
msgstr ""

#. used by: gdk_window_begin_move_drag:
#: gdkwindow.c:10477:6
msgid ""
"Begins a window move operation (for a toplevel window).  You might use this "
"function to implement a \"window move grip,\" for example. The function "
"works best with window managers that support the <ulink url=\"http://www."
"freedesktop.org/Standards/wm-spec\">Extended Window Manager Hints</ulink>, "
"but has a fallback implementation for other window managers."
msgstr ""

# #used by: gdk_window_enable_synchronized_configure:
#. used by: gdk_window_enable_synchronized_configure:
#: gdkwindow.c:10499:7
msgid ""
"Indicates that the application will cooperate with the window system in "
"synchronizing the window repaint with the window manager during resizing "
"operations. After an application calls this function, it must call "
"gdk_window_configure_finished() every time it has finished all processing "
"associated with a set of Configure events. Toplevel GTK+ windows "
"automatically use this protocol."
msgstr ""

# #used by: SECTION:windows
#. used by: SECTION:windows
#: gdkwindow.c:105:5
msgid ""
"For rendering an offscreen window onto its embedder, the contents of the "
"offscreen window are available as a surface, via "
"gdk_offscreen_window_get_surface(). </para> </refsect2>"
msgstr ""

# #used by: gdk_window_enable_synchronized_configure:
#. used by: gdk_window_enable_synchronized_configure:
#: gdkwindow.c:10507:2
msgid ""
"On X, calling this function makes @window participate in the "
"_NET_WM_SYNC_REQUEST window manager protocol."
msgstr ""

# #used by: gdk_window_configure_finished:
#. used by: gdk_window_configure_finished:
#: gdkwindow.c:10522:5
msgid ""
"Signal to the window system that the application has finished handling "
"Configure events it has received. Window Managers can use this to better "
"synchronize the frame repaint with the application. GTK+ applications will "
"automatically call this function when appropriate."
msgstr ""

# #used by: gdk_window_configure_finished:
#. used by: gdk_window_configure_finished:
#: gdkwindow.c:10528:2
msgid ""
"This function can only be called if gdk_window_enable_synchronized_configure"
"() was called previously."
msgstr ""

# used by: gdk_window_set_opacity:
#. used by: gdk_window_set_opacity:
#: gdkwindow.c:10541:1
msgid "@window: a top-level #GdkWindow"
msgstr ""

# used by: gdk_window_set_opacity:
#. used by: gdk_window_set_opacity:
#: gdkwindow.c:10542:1
msgid "@opacity: opacity"
msgstr ""

# #used by: gdk_window_set_opacity:
#. used by: gdk_window_set_opacity:
#: gdkwindow.c:10544:3
msgid ""
"Request the windowing system to make @window partially transparent, with "
"opacity 0 being fully transparent and 1 fully opaque. (Values of the opacity "
"parameter are clamped to the [0,1] range.)"
msgstr ""

# #used by: gdk_window_set_opacity:
#. used by: gdk_window_set_opacity:
#: gdkwindow.c:10548:2
msgid ""
"On X11, this works only on X screens with a compositing manager running."
msgstr ""

# #used by: gdk_window_set_opacity:
#. used by: gdk_window_set_opacity:
#: gdkwindow.c:10551:3
msgid ""
"For setting up per-pixel alpha, see gdk_screen_get_rgba_visual(). For making "
"non-toplevel windows translucent, see gdk_window_set_composited()."
msgstr ""

# #used by: gdk_window_register_dnd:
#. used by: gdk_window_register_dnd:
#: gdkwindow.c:10576:1
msgid "Registers a window as a potential drop destination."
msgstr ""

# used by: gdk_window_get_drag_protocol:
#. used by: gdk_window_get_drag_protocol:
#: gdkwindow.c:10586:1
msgid "@window: the destination window"
msgstr ""

# used by: gdk_window_get_drag_protocol:
#. used by: gdk_window_get_drag_protocol:
#: gdkwindow.c:10587:3
msgid ""
"@target: (out) (allow-none) (transfer full): location of the window where "
"the drop should happen. This may be @window or a proxy window, or %NULL if "
"@window does not support Drag and Drop."
msgstr ""

# #used by: gdk_drag_get_protocol:
#. used by: gdk_window_get_drag_protocol:
#: gdkwindow.c:10591:1
msgid "Finds out the DND protocol supported by a window."
msgstr ""

# #used by: gdk_window_get_drag_protocol:
#. used by: gdk_window_get_drag_protocol:
#: gdkwindow.c:10593:1
msgid "Returns: the supported DND protocol."
msgstr ""

# used by: gdk_drag_begin:
#. used by: gdk_drag_begin:
#: gdkwindow.c:10608:1
msgid "@window: the source window for this drag."
msgstr ""

# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_drag_begin:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_drag_begin_for_device:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_begin:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_begin_for_device:
#: gdkwindow.c:10609:2 gdkwindow.c:10638:2
msgid ""
"@targets: (transfer none) (element-type GdkAtom): the offered targets, as "
"list of #GdkAtoms"
msgstr ""

# #used by: gdk_drag_begin:
#. used by: gdk_drag_begin:
#: gdkwindow.c:10612:4
msgid ""
"Starts a drag and creates a new drag context for it. This function assumes "
"that the drag is controlled by the client pointer device, use "
"gdk_drag_begin_for_device() to begin a drag with a different device."
msgstr ""

# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_drag_begin:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_drag_begin_for_device:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_begin:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_drag_begin_for_device:
#: gdkwindow.c:10619:1 gdkwindow.c:10645:1
msgid "Return value: (transfer full): a newly created #GdkDragContext"
msgstr ""

# used by: gdk_drag_begin_for_device:
#. used by: gdk_drag_begin_for_device:
#: gdkwindow.c:10636:1
msgid "@window: the source window for this drag"
msgstr ""

# used by: gdk_drag_begin_for_device:
#. used by: gdk_drag_begin_for_device:
#: gdkwindow.c:10637:1
msgid "@device: the device that controls this drag"
msgstr ""

# #used by: gdk_drag_begin_for_device:
#. used by: gdk_drag_begin_for_device:
#: gdkwindow.c:10641:1
msgid "Starts a drag and creates a new drag context for it."
msgstr ""

# used by: gdk_test_render_sync:
#. used by: gdk_test_render_sync:
#: gdkwindow.c:10657:1
msgid "@window: a mapped #GdkWindow"
msgstr ""

# #used by: gdk_test_render_sync:
#. used by: gdk_test_render_sync:
#: gdkwindow.c:10659:2
msgid ""
"Retrieves a pixel from @window to force the windowing system to carry out "
"any pending rendering commands."
msgstr ""

# #used by: gdk_test_render_sync:
#. used by: gdk_test_render_sync:
#: gdkwindow.c:10662:2
msgid ""
"This function is intended to be used to synchronize with rendering "
"pipelines, to benchmark windowing system rendering operations."
msgstr ""

# used by: gdk_test_simulate_key:
#. used by: gdk_test_simulate_key:
#: gdkwindow.c:10675:1
msgid "@window: a #GdkWindow to simulate a key event for"
msgstr ""

# used by: gdk_test_simulate_key:
#. used by: gdk_test_simulate_key:
#: gdkwindow.c:10676:1
msgid "@x:      x coordinate within @window for the key event"
msgstr ""

# used by: gdk_test_simulate_key:
#. used by: gdk_test_simulate_key:
#: gdkwindow.c:10677:1
msgid "@y:      y coordinate within @window for the key event"
msgstr ""

# used by: gdk_test_simulate_key:
#. used by: gdk_test_simulate_key:
#: gdkwindow.c:10678:1
msgid "@keyval: A GDK keyboard value"
msgstr ""

# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_test_simulate_key:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_test_simulate_button:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_test_simulate_key:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_test_simulate_button:
#: gdkwindow.c:10679:1 gdkwindow.c:10722:1
msgid "@modifiers: Keyboard modifiers the event is setup with"
msgstr ""

# used by: gdk_test_simulate_key:
#. used by: gdk_test_simulate_key:
#: gdkwindow.c:10680:1
msgid "@key_pressrelease: either %GDK_KEY_PRESS or %GDK_KEY_RELEASE"
msgstr ""

# #used by: gdk_test_simulate_key:
#. used by: gdk_test_simulate_key:
#: gdkwindow.c:10682:4
msgid ""
"This function is intended to be used in GTK+ test programs. If (@x,@y) are > "
"(-1,-1), it will warp the mouse pointer to the given (@x,@y) coordinates "
"within @window and simulate a key press or release event."
msgstr ""

# #used by: gdk_test_simulate_key:
#. used by: gdk_test_simulate_key:
#: gdkwindow.c:10687:6
msgid ""
"When the mouse pointer is warped to the target location, use of this "
"function outside of test programs that run in their own virtual windowing "
"system (e.g. Xvfb) is not recommended. If (@x,@y) are passed as (-1,-1), the "
"mouse pointer will not be warped and @window origin will be used as mouse "
"pointer location for the event."
msgstr ""

# #used by: gdk_test_simulate_key:
#. used by: gdk_test_simulate_key:
#: gdkwindow.c:10694:4
msgid ""
"Also, gdk_test_simulate_key() is a fairly low level function, for most "
"testing purposes, gtk_test_widget_send_key() is the right function to call "
"which will generate a key press event followed by its accompanying key "
"release event."
msgstr ""

# #used by: gdk_test_simulate_key:
#. used by: gdk_test_simulate_key:
#: gdkwindow.c:10699:2
msgid ""
"Returns: whether all actions necessary for a key event simulation were "
"carried out successfully"
msgstr ""

# used by: gdk_test_simulate_button:
#. used by: gdk_test_simulate_button:
#: gdkwindow.c:10718:1
msgid "@window: a #GdkWindow to simulate a button event for"
msgstr ""

# used by: gdk_test_simulate_button:
#. used by: gdk_test_simulate_button:
#: gdkwindow.c:10719:1
msgid "@x:      x coordinate within @window for the button event"
msgstr ""

# used by: gdk_test_simulate_button:
#. used by: gdk_test_simulate_button:
#: gdkwindow.c:10720:1
msgid "@y:      y coordinate within @window for the button event"
msgstr ""

# used by: gdk_test_simulate_button:
#. used by: gdk_test_simulate_button:
#: gdkwindow.c:10721:1
msgid "@button: Number of the pointer button for the event, usually 1, 2 or 3"
msgstr ""

# used by: gdk_test_simulate_button:
#. used by: gdk_test_simulate_button:
#: gdkwindow.c:10723:1
msgid "@button_pressrelease: either %GDK_BUTTON_PRESS or %GDK_BUTTON_RELEASE"
msgstr ""

# #used by: gdk_test_simulate_button:
#. used by: gdk_test_simulate_button:
#: gdkwindow.c:10725:7
msgid ""
"This function is intended to be used in GTK+ test programs. It will warp the "
"mouse pointer to the given (@x,@y) coordinates within @window and simulate a "
"button press or release event. Because the mouse pointer needs to be warped "
"to the target location, use of this function outside of test programs that "
"run in their own virtual windowing system (e.g. Xvfb) is not recommended."
msgstr ""

# #used by: gdk_test_simulate_button:
#. used by: gdk_test_simulate_button:
#: gdkwindow.c:10733:4
msgid ""
"Also, gdk_test_simulate_button() is a fairly low level function, for most "
"testing purposes, gtk_test_widget_click() is the right function to call "
"which will generate a button press event followed by its accompanying button "
"release event."
msgstr ""

# #used by: gdk_test_simulate_button:
#. used by: gdk_test_simulate_button:
#: gdkwindow.c:10738:2
msgid ""
"Returns: whether all actions necessary for a button event simulation were "
"carried out successfully"
msgstr ""

# used by: gdk_property_get:
#. used by: gdk_property_get:
#: gdkwindow.c:10758:1
msgid "@property: the property to retrieve"
msgstr ""

# used by: gdk_property_get:
#. used by: gdk_property_get:
#: gdkwindow.c:10759:5
msgid ""
"@type: the desired property type, or %GDK_NONE, if any type of data is "
"acceptable. If this does not match the actual type, then @actual_format and "
"@actual_length will be filled in, a warning will be printed to stderr and no "
"data will be returned."
msgstr ""

# used by: gdk_property_get:
#. used by: gdk_property_get:
#: gdkwindow.c:10764:2
msgid ""
"@offset: the offset into the property at which to begin retrieving data, in "
"4 byte units."
msgstr ""

# used by: gdk_property_get:
#. used by: gdk_property_get:
#: gdkwindow.c:10766:5
msgid ""
"@length: the length of the data to retrieve in bytes.  Data is considered to "
"be retrieved in 4 byte chunks, so @length will be rounded up to the next "
"highest 4 byte boundary (so be careful not to pass a value that might "
"overflow when rounded up)."
msgstr ""

# used by: gdk_property_get:
#. used by: gdk_property_get:
#: gdkwindow.c:10771:2
msgid "@pdelete: if %TRUE, delete the property after retrieving the data."
msgstr ""

# used by: gdk_property_get:
#. used by: gdk_property_get:
#: gdkwindow.c:10773:2
msgid ""
"@actual_property_type: (out) (transfer none): location to store the actual "
"type of the property."
msgstr ""

# used by: gdk_property_get:
#. used by: gdk_property_get:
#: gdkwindow.c:10775:2
msgid ""
"@actual_format: (out): location to store the actual return format of the "
"data; either 8, 16 or 32 bits."
msgstr ""

# used by: gdk_property_get:
#. used by: gdk_property_get:
#: gdkwindow.c:10777:6
msgid ""
"@actual_length: location to store the length of the retrieved data, in "
"bytes.  Data returned in the 32 bit format is stored in a long variable, so "
"the actual number of 32 bit elements should be be calculated via "
"@actual_length / sizeof(glong) to ensure portability to 64 bit systems."
msgstr ""

# used by: gdk_property_get:
#. used by: gdk_property_get:
#: gdkwindow.c:10783:3
msgid ""
"@data: (out) (array length=actual_length) (transfer full): location to store "
"a pointer to the data. The retrieved data should be freed with g_free() when "
"you are finished using it."
msgstr ""

# #used by: gdk_property_get:
#. used by: gdk_property_get:
#: gdkwindow.c:10787:3
msgid ""
"Retrieves a portion of the contents of a property. If the property does not "
"exist, then the function returns %FALSE, and %GDK_NONE will be stored in "
"@actual_property_type."
msgstr ""

# #used by: gdk_property_get:
#. used by: gdk_property_get:
#: gdkwindow.c:10791:14
msgid ""
"<note> <para> The XGetWindowProperty() function that gdk_property_get() uses "
"has a very confusing and complicated set of semantics. uses has a very "
"confusing and complicated set of semantics. Unfortunately, gdk_property_get"
"() makes the situation worse instead of better (the semantics should be "
"considered undefined), and also prints warnings to stderr in cases where it "
"should return a useful error to the program. You are advised to use "
"XGetWindowProperty() directly until a replacement function for "
"gdk_property_get() is provided. </para> </note>"
msgstr ""

# #used by: gdk_display_open_default_libgtk_only:
#. used by: gdk_property_get:
#: gdkwindow.c:10806:2
#, fuzzy
msgid ""
"Returns: %TRUE if data was successfully received and stored in @data, "
"otherwise %FALSE."
msgstr "Return value: 如果指定的axis 可以找到，返回%TRUE，否则返回%NULL。"

# used by: gdk_property_change: (skip)
#. used by: gdk_property_change: (skip)
#: gdkwindow.c:10830:1
msgid "@property: the property to change"
msgstr ""

# used by: gdk_property_change: (skip)
#. used by: gdk_property_change: (skip)
#: gdkwindow.c:10831:3
msgid ""
"@type: the new type for the property. If @mode is %GDK_PROP_MODE_PREPEND or "
"%GDK_PROP_MODE_APPEND, then this must match the existing type or an error "
"will occur."
msgstr ""

# used by: gdk_property_change: (skip)
#. used by: gdk_property_change: (skip)
#: gdkwindow.c:10834:3
msgid ""
"@format: the new format for the property. If @mode is %GDK_PROP_MODE_PREPEND "
"or %GDK_PROP_MODE_APPEND, then this must match the existing format or an "
"error will occur."
msgstr ""

# used by: gdk_property_change: (skip)
#. used by: gdk_property_change: (skip)
#: gdkwindow.c:10837:2
msgid ""
"@mode: a value describing how the new data is to be combined with the "
"current data."
msgstr ""

# used by: gdk_property_change: (skip)
#. used by: gdk_property_change: (skip)
#: gdkwindow.c:10839:3
msgid ""
"@data: the data (a <literal>guchar *</literal> <literal>gushort *</literal>, "
"or <literal>gulong *</literal>, depending on @format), cast to a "
"<literal>guchar *</literal>."
msgstr ""

# used by: gdk_property_change: (skip)
#. used by: gdk_property_change: (skip)
#: gdkwindow.c:10842:2
msgid ""
"@nelements: the number of elements of size determined by the format, "
"contained in @data."
msgstr ""

# #used by: gdk_property_change: (skip)
#. used by: gdk_property_change: (skip)
#: gdkwindow.c:10845:1
msgid "Changes the contents of a property on a window."
msgstr ""

# used by: gdk_property_delete:
#. used by: gdk_property_delete:
#: gdkwindow.c:10863:1
msgid "@property: the property to delete"
msgstr ""

# #used by: gdk_property_delete:
#. used by: gdk_property_delete:
#: gdkwindow.c:10865:1
msgid "Deletes a property from a window."
msgstr ""

# used by: gdk_window_new: (constructor)
#. used by: gdk_window_new: (constructor)
#: gdkwindow.c:1237:2
msgid ""
"@parent: (allow-none): a #GdkWindow, or %NULL to create the window as a "
"child of the default root window for the default display."
msgstr ""

# used by: gdk_window_new:
#. used by: gdk_window_new: (constructor)
#: gdkwindow.c:1239:1
msgid "@attributes: attributes of the new window"
msgstr ""

# used by: gdk_window_new:
#. used by: gdk_window_new: (constructor)
#: gdkwindow.c:1240:1
msgid "@attributes_mask: mask indicating which fields in @attributes are valid"
msgstr ""

# #used by: gdk_window_new:
#. used by: gdk_window_new: (constructor)
#: gdkwindow.c:1242:4
msgid ""
"Creates a new #GdkWindow using the attributes from @attributes. See "
"#GdkWindowAttr and #GdkWindowAttributesType for more details.  Note: to use "
"this on displays other than the default display, @parent must be specified."
msgstr ""

# #used by: gdk_window_new: (constructor)
#. used by: gdk_window_new: (constructor)
#: gdkwindow.c:1247:1
msgid "Return value: (transfer full): the new #GdkWindow"
msgstr ""

# used by: gdk_window_reparent:
#. used by: gdk_window_reparent:
#: gdkwindow.c:1499:1
msgid "@new_parent: new parent to move @window into"
msgstr ""

# used by: gdk_window_reparent:
#. used by: gdk_window_reparent:
#: gdkwindow.c:1500:1
msgid "@x: X location inside the new parent"
msgstr ""

# used by: gdk_window_reparent:
#. used by: gdk_window_reparent:
#: gdkwindow.c:1501:1
msgid "@y: Y location inside the new parent"
msgstr ""

# #used by: gdk_window_reparent:
#. used by: gdk_window_reparent:
#: gdkwindow.c:1503:2
msgid ""
"Reparents @window into the given @new_parent. The window being reparented "
"will be unmapped as a side effect."
msgstr ""

# #used by: gdk_window_ensure_native:
#. used by: gdk_window_ensure_native:
#: gdkwindow.c:1667:2
msgid ""
"Tries to ensure that there is a window-system native window for this "
"GdkWindow. This may fail in some situations, returning %FALSE."
msgstr ""

# #used by: gdk_window_ensure_native:
#. used by: gdk_window_ensure_native:
#: gdkwindow.c:1670:1
msgid "Offscreen window and children of them can never have native windows."
msgstr ""

# #used by: gdk_window_ensure_native:
#. used by: gdk_window_ensure_native:
#: gdkwindow.c:1672:1
msgid "Some backends may not support native child windows."
msgstr ""

# #used by: gdk_display_open_default_libgtk_only:
#. used by: gdk_window_ensure_native:
#: gdkwindow.c:1674:1
#, fuzzy
msgid "Returns: %TRUE if the window has a native window, %FALSE otherwise"
msgstr "Return value: 如果指定的axis 可以找到，返回%TRUE，否则返回%NULL。"

# used by: _gdk_event_filter_unref:
#. used by: _gdk_event_filter_unref:
#: gdkwindow.c:1761:1
msgid "@window: A #GdkWindow, or %NULL to be the global window"
msgstr ""

# used by: _gdk_event_filter_unref:
#. used by: _gdk_event_filter_unref:
#: gdkwindow.c:1762:1
msgid "@filter: A window filter"
msgstr ""

# #used by: _gdk_event_filter_unref:
#. used by: _gdk_event_filter_unref:
#: gdkwindow.c:1764:3
msgid ""
"Release a reference to @filter.  Note this function may mutate the list "
"storage, so you need to handle this if iterating over a list of filters."
msgstr ""

# used by: _gdk_window_destroy_hierarchy:
#. used by: _gdk_window_destroy_hierarchy:
#: gdkwindow.c:1838:2
msgid ""
"@recursing: If TRUE, then this is being called because a parent was "
"destroyed."
msgstr ""

# used by: _gdk_window_destroy_hierarchy:
#. used by: _gdk_window_destroy_hierarchy:
#: gdkwindow.c:1840:5
msgid ""
"@recursing_native: If TRUE, then this is being called because a native "
"parent was destroyed. This generally means that the call to the windowing "
"system to destroy the window can be omitted, since it will be destroyed as a "
"result of the parent being destroyed. Unless @foreign_destroy."
msgstr ""

# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: _gdk_window_destroy_hierarchy:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: _gdk_window_destroy:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: _gdk_window_destroy_hierarchy:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: _gdk_window_destroy:
#: gdkwindow.c:1845:4 gdkwindow.c:2009:4
msgid ""
"@foreign_destroy: If TRUE, the window or a parent was destroyed by some "
"external agency. The window has already been destroyed and no windowing "
"system calls should be made. (This may never happen for some windowing "
"systems.)"
msgstr ""

# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: _gdk_window_destroy_hierarchy:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: _gdk_window_destroy:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: _gdk_window_destroy_hierarchy:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: _gdk_window_destroy:
#: gdkwindow.c:1850:2 gdkwindow.c:2014:2
msgid ""
"Internal function to destroy a window. Like gdk_window_destroy(), but does "
"not drop the reference count created by gdk_window_new()."
msgstr ""

# #used by: gdk_window_destroy:
#. used by: gdk_window_destroy:
#: gdkwindow.c:2028:3
msgid ""
"Destroys the window system resources associated with @window and decrements "
"@window's reference count. The window system resources for all children of "
"@window are also destroyed, but the children's reference counts are not "
"decremented."
msgstr ""

# #used by: gdk_window_destroy:
#. used by: gdk_window_destroy:
#: gdkwindow.c:2032:2
msgid ""
"Note that a window will not be destroyed automatically when its reference "
"count reaches zero. You must call this function yourself before that happens."
msgstr ""

# used by: gdk_window_set_user_data:
#. #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkWindowChildFunc:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_user_data:
#: gdkwindow.c:2046:1 gdkwindow.h:810:1
msgid "@user_data: user data"
msgstr ""

# #used by: gdk_window_set_user_data:
#. used by: gdk_window_set_user_data:
#: gdkwindow.c:2048:7
msgid ""
"For most purposes this function is deprecated in favor of g_object_set_data"
"(). However, for historical reasons GTK+ stores the #GtkWidget that owns a "
"#GdkWindow as user data on the #GdkWindow. So, custom widget implementations "
"should use this function for that. If GTK+ receives an event for a "
"#GdkWindow, and the user data for the window is non-%NULL, GTK+ will assume "
"the user data is a #GtkWidget, and forward the event to that widget."
msgstr ""

# used by: gdk_window_get_user_data:
#. used by: gdk_window_get_user_data:
#: gdkwindow.c:2069:1
msgid "@data: (out): return location for user data"
msgstr ""

# #used by: gdk_window_get_user_data:
#. used by: gdk_window_get_user_data:
#: gdkwindow.c:2071:2
msgid ""
"Retrieves the user data for @window, which is normally the widget that "
"@window belongs to. See gdk_window_set_user_data()."
msgstr ""

# #used by: gdk_window_get_window_type:
#. used by: gdk_window_get_window_type:
#: gdkwindow.c:2088:1
msgid "Gets the type of the window. See #GdkWindowType."
msgstr ""

# #used by: gdk_window_get_window_type:
#. used by: gdk_window_get_window_type:
#: gdkwindow.c:2090:1
msgid "Return value: type of window"
msgstr ""

# #used by: gdk_window_get_visual:
#. used by: gdk_window_get_visual:
#: gdkwindow.c:2104:1
msgid "Gets the #GdkVisual describing the pixel format of @window."
msgstr ""

# #used by: gdk_window_get_visual:
#. used by: gdk_window_get_visual:
#: gdkwindow.c:2106:1
msgid "Return value: (transfer none): a #GdkVisual"
msgstr ""

# #used by: gdk_window_get_screen:
#. used by: gdk_window_get_screen:
#: gdkwindow.c:2122:1
msgid "Gets the #GdkScreen associated with a #GdkWindow."
msgstr ""

# #used by: gdk_window_get_screen:
#. used by: gdk_window_get_screen:
#: gdkwindow.c:2124:1
msgid "Return value: (transfer none): the #GdkScreen associated with @window"
msgstr ""

# #used by: gdk_window_get_display:
#. used by: gdk_window_get_display:
#: gdkwindow.c:2140:1
msgid "Gets the #GdkDisplay associated with a #GdkWindow."
msgstr ""

# #used by: gdk_window_get_display:
#. used by: gdk_window_get_display:
#: gdkwindow.c:2142:1
msgid "Return value: (transfer none): the #GdkDisplay associated with @window"
msgstr ""

# #used by: gdk_window_is_destroyed:
#. used by: gdk_window_is_destroyed:
#: gdkwindow.c:2157:1
msgid "Check to see if a window is destroyed.."
msgstr ""

# #used by: gdk_display_open_default_libgtk_only:
#. used by: gdk_window_is_destroyed:
#: gdkwindow.c:2159:1
#, fuzzy
msgid "Return value: %TRUE if the window is destroyed"
msgstr "Return value: 如果指定的axis 可以找到，返回%TRUE，否则返回%NULL。"

# #used by: gdk_window_has_native:
#. used by: gdk_window_has_native:
#: gdkwindow.c:2197:2
msgid ""
"Checks whether the window has a native window or not. Note that you can use "
"gdk_window_ensure_native() if a native window is needed."
msgstr ""

# #used by: gdk_display_open_default_libgtk_only:
#. used by: gdk_window_has_native:
#: gdkwindow.c:2200:1
#, fuzzy
msgid "Returns: %TRUE if the %window has a native window, %FALSE otherwise."
msgstr "Return value: 如果指定的axis 可以找到，返回%TRUE，否则返回%NULL。"

# used by: gdk_window_get_position:
#. used by: gdk_window_get_position:
#: gdkwindow.c:2215:1
msgid "@x: (out) (allow-none): X coordinate of window"
msgstr ""

# used by: gdk_window_get_position:
#. used by: gdk_window_get_position:
#: gdkwindow.c:2216:1
msgid "@y: (out) (allow-none): Y coordinate of window"
msgstr ""

# #used by: gdk_window_get_position:
#. used by: gdk_window_get_position:
#: gdkwindow.c:2218:5
msgid ""
"Obtains the position of the window as reported in the most-recently-"
"processed #GdkEventConfigure. Contrast with gdk_window_get_geometry() which "
"queries the X server for the current window position, regardless of which "
"events have been received or processed."
msgstr ""

# #used by: gdk_window_get_position:
#. used by: gdk_window_get_position:
#: gdkwindow.c:2224:1
msgid "The position coordinates are relative to the window's parent window."
msgstr ""

# #used by: gdk_window_get_parent:
#. used by: gdk_window_get_parent:
#: gdkwindow.c:2244:6
msgid ""
"Obtains the parent of @window, as known to GDK. Does not query the X server; "
"thus this returns the parent as passed to gdk_window_new(), not the actual "
"parent. This should never matter unless you're using Xlib calls mixed with "
"GDK calls on the X11 platform. It may also matter for toplevel windows, "
"because the window manager may choose to reparent them."
msgstr ""

# #used by: gdk_window_get_parent:
#. used by: gdk_window_get_parent:
#: gdkwindow.c:2251:4
msgid ""
"Note that you should use gdk_window_get_effective_parent() when writing "
"generic code that walks up a window hierarchy, because gdk_window_get_parent"
"() will most likely not do what you expect if there are offscreen windows in "
"the hierarchy."
msgstr ""

# #used by: gdk_window_get_parent:
#. used by: gdk_window_get_parent:
#: gdkwindow.c:2256:1
msgid "Return value: (transfer none): parent of @window"
msgstr ""

# #used by: gdk_window_get_effective_parent:
#. used by: gdk_window_get_effective_parent:
#: gdkwindow.c:2270:3
msgid ""
"Obtains the parent of @window, as known to GDK. Works like "
"gdk_window_get_parent() for normal windows, but returns the window's "
"embedder for offscreen windows."
msgstr ""

# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_window_get_effective_parent:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_window_get_effective_toplevel:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_effective_parent:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_effective_toplevel:
#: gdkwindow.c:2274:1 gdkwindow.c:2332:1
msgid "See also: gdk_offscreen_window_get_embedder()"
msgstr ""

# #used by: gdk_window_get_effective_parent:
#. used by: gdk_window_get_effective_parent:
#: gdkwindow.c:2276:1
msgid "Return value: (transfer none): effective parent of @window"
msgstr ""

# #used by: gdk_window_get_toplevel:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_toplevel:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_effective_toplevel:
#: gdkwindow.c:2295:1 gdkwindow.c:2327:1
msgid "Gets the toplevel window that's an ancestor of @window."
msgstr ""

# #used by: gdk_window_get_toplevel:
#. used by: gdk_window_get_toplevel:
#: gdkwindow.c:2297:3
msgid ""
"Any window type but %GDK_WINDOW_CHILD is considered a toplevel window, as is "
"a %GDK_WINDOW_CHILD window that has a root window as parent."
msgstr ""

# #used by: gdk_window_get_toplevel:
#. used by: gdk_window_get_toplevel:
#: gdkwindow.c:2301:4
msgid ""
"Note that you should use gdk_window_get_effective_toplevel() when you want "
"to get to a window's toplevel as seen on screen, because "
"gdk_window_get_toplevel() will most likely not do what you expect if there "
"are offscreen windows in the hierarchy."
msgstr ""

# #used by: gdk_window_get_toplevel:
#. used by: gdk_window_get_toplevel:
#: gdkwindow.c:2306:1
msgid "Return value: (transfer none): the toplevel window containing @window"
msgstr ""

# #used by: gdk_window_get_effective_toplevel:
#. used by: gdk_window_get_effective_toplevel:
#: gdkwindow.c:2329:2
msgid ""
"Works like gdk_window_get_toplevel(), but treats an offscreen window's "
"embedder as its parent, using gdk_window_get_effective_parent()."
msgstr ""

# #used by: gdk_window_get_effective_toplevel:
#. used by: gdk_window_get_effective_toplevel:
#: gdkwindow.c:2334:1
msgid ""
"Return value: (transfer none): the effective toplevel window containing "
"@window"
msgstr ""

# #used by: gdk_window_get_children:
#. used by: gdk_window_get_children:
#: gdkwindow.c:2356:4
msgid ""
"Gets the list of children of @window known to GDK. This function only "
"returns children created via GDK, so for example it's useless when used with "
"the root window; it only returns windows an application created itself."
msgstr ""

# #used by: gdk_window_get_children:
#. used by: gdk_window_get_children:
#: gdkwindow.c:2361:2
msgid ""
"The returned list must be freed, but the elements in the list need not be."
msgstr ""

# #used by: gdk_window_get_children:
#. used by: gdk_window_get_children:
#: gdkwindow.c:2364:2
msgid ""
"Return value: (transfer container) (element-type GdkWindow): list of child "
"windows inside @window"
msgstr ""

# #used by: gdk_window_peek_children:
#. used by: gdk_window_peek_children:
#: gdkwindow.c:2382:2
msgid ""
"Like gdk_window_get_children(), but does not copy the list of children, so "
"the list does not need to be freed."
msgstr ""

# #used by: gdk_window_peek_children:
#. used by: gdk_window_peek_children:
#: gdkwindow.c:2385:2
msgid ""
"Return value: (transfer none) (element-type GdkWindow): a reference to the "
"list of child windows in @window"
msgstr ""

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_idle_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_idle:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_seconds_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_seconds:
#. used by: gdk_window_add_filter: (skip)
#: gdkwindow.c:2402:1
msgid "@function: filter callback"
msgstr ""

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_idle_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_idle:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_seconds_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_seconds:
#. used by: gdk_window_add_filter: (skip)
#: gdkwindow.c:2403:1
msgid "@data: data to pass to filter callback"
msgstr ""

# #used by: gdk_window_add_filter:
#. used by: gdk_window_add_filter: (skip)
#: gdkwindow.c:2405:5
msgid ""
"Adds an event filter to @window, allowing you to intercept events before "
"they reach GDK. This is a low-level operation and makes it easy to break GDK "
"and/or GTK+, so you have to know what you're doing. Pass %NULL for @window "
"to get all events for all windows, instead of events for a specific window."
msgstr ""

# #used by: gdk_window_add_filter:
#. used by: gdk_window_add_filter: (skip)
#: gdkwindow.c:2411:2
msgid ""
"See gdk_display_add_client_message_filter() if you are interested in X "
"ClientMessage events."
msgstr ""

# used by: gdk_window_remove_filter:
#. used by: gdk_window_remove_filter: (skip)
#: gdkwindow.c:2463:1
msgid "@function: previously-added filter function"
msgstr ""

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_idle_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_idle:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_seconds_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_seconds:
#. used by: gdk_window_remove_filter: (skip)
#: gdkwindow.c:2464:1
msgid "@data: user data for previously-added filter function"
msgstr ""

# #used by: gdk_window_remove_filter:
#. used by: gdk_window_remove_filter: (skip)
#: gdkwindow.c:2466:1
msgid "Remove a filter previously added with gdk_window_add_filter()."
msgstr ""

# used by: gdk_screen_get_toplevel_windows:
#. used by: gdk_screen_get_toplevel_windows:
#: gdkwindow.c:2501:1
msgid "@screen: The #GdkScreen where the toplevels are located."
msgstr ""

# #used by: gdk_screen_get_toplevel_windows:
#. used by: gdk_screen_get_toplevel_windows:
#: gdkwindow.c:2503:3
msgid ""
"Obtains a list of all toplevel windows known to GDK on the screen @screen. A "
"toplevel window is a child of the root window (see "
"gdk_get_default_root_window())."
msgstr ""

# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_screen_get_toplevel_windows:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_window_get_toplevels:
#. used by: gdk_screen_get_toplevel_windows:
#: gdkwindow.c:2507:2
msgid ""
"The returned list should be freed with g_list_free(), but its elements need "
"not be freed."
msgstr ""

# #used by: gdk_screen_get_toplevel_windows:
#. used by: gdk_screen_get_toplevel_windows:
#: gdkwindow.c:2510:2
msgid ""
"Return value: (transfer container) (element-type GdkWindow): list of "
"toplevel windows, free with g_list_free()"
msgstr ""

# #used by: gdk_window_is_visible:
#. used by: gdk_window_is_visible:
#: gdkwindow.c:2543:2
msgid ""
"Checks whether the window has been mapped (with gdk_window_show() or "
"gdk_window_show_unraised())."
msgstr ""

# #used by: gdk_window_is_visible:
#. used by: gdk_window_is_visible:
#: gdkwindow.c:2546:1
msgid "Return value: %TRUE if the window is mapped"
msgstr ""

#. used by: gdk_window_is_viewable:
#: gdkwindow.c:2560:4
msgid ""
"Check if the window and all ancestors of the window are mapped. (This is not "
"necessarily \"viewable\" in the X sense, since we only check as far as we "
"have GDK window parents, not to the root window.)"
msgstr ""

# #used by: gdk_window_is_viewable:
#. used by: gdk_window_is_viewable:
#: gdkwindow.c:2565:1
msgid "Return value: %TRUE if the window is viewable"
msgstr ""

# #used by: gdk_window_get_state:
#. used by: gdk_window_get_state:
#: gdkwindow.c:2582:2
msgid ""
"Gets the bitwise OR of the currently active window state flags, from the "
"#GdkWindowState enumeration."
msgstr ""

# #used by: gdk_window_get_state:
#. used by: gdk_window_get_state:
#: gdkwindow.c:2585:1
msgid "Return value: window state bitfield"
msgstr ""

# used by: gdk_window_begin_paint_rect:
#. used by: gdk_window_begin_paint_rect:
#: gdkwindow.c:2766:1
msgid "@rectangle: rectangle you intend to draw to"
msgstr ""

# #used by: gdk_window_begin_paint_rect:
#. used by: gdk_window_begin_paint_rect:
#: gdkwindow.c:2768:3
msgid ""
"A convenience wrapper around gdk_window_begin_paint_region() which creates a "
"rectangular region for you. See gdk_window_begin_paint_region() for details."
msgstr ""

# used by: gdk_window_begin_paint_region:
#. used by: gdk_window_begin_paint_region:
#: gdkwindow.c:2789:1
msgid "@region: region you intend to draw to"
msgstr ""

# #used by: gdk_window_begin_paint_region:
#. used by: gdk_window_begin_paint_region:
#: gdkwindow.c:2791:9
msgid ""
"Indicates that you are beginning the process of redrawing @region. A backing "
"store (offscreen buffer) large enough to contain @region will be created. "
"The backing store will be initialized with the background color or "
"background surface for @window. Then, all drawing operations performed on "
"@window will be diverted to the backing store.  When you call "
"gdk_window_end_paint(), the backing store will be copied to @window, making "
"it visible onscreen. Only the part of @window contained in @region will be "
"modified; that is, drawing operations are clipped to @region."
msgstr ""

# #used by: gdk_window_begin_paint_region:
#. used by: gdk_window_begin_paint_region:
#: gdkwindow.c:2801:8
msgid ""
"The net result of all this is to remove flicker, because the user sees the "
"finished product appear all at once when you call gdk_window_end_paint(). If "
"you draw to @window directly without calling gdk_window_begin_paint_region"
"(), the user may see flicker as individual drawing operations are performed "
"in sequence.  The clipping and background-initializing features of "
"gdk_window_begin_paint_region() are conveniences for the programmer, so you "
"can avoid doing that work yourself."
msgstr ""

# #used by: gdk_window_begin_paint_region:
#. used by: gdk_window_begin_paint_region:
#: gdkwindow.c:2810:10
msgid ""
"When using GTK+, the widget system automatically places calls to "
"gdk_window_begin_paint_region() and gdk_window_end_paint() around emissions "
"of the expose_event signal. That is, if you're writing an expose event "
"handler, you can assume that the exposed area in #GdkEventExpose has already "
"been cleared to the window background, is already set as the clip region, "
"and already has a backing store. Therefore in most cases, application code "
"need not call gdk_window_begin_paint_region(). (You can disable the "
"automatic calls around expose events on a widget-by-widget basis by calling "
"gtk_widget_set_double_buffered().)"
msgstr ""

# #used by: gdk_window_begin_paint_region:
#. used by: gdk_window_begin_paint_region:
#: gdkwindow.c:2821:8
msgid ""
"If you call this function multiple times before calling the matching "
"gdk_window_end_paint(), the backing stores are pushed onto a stack. "
"gdk_window_end_paint() copies the topmost backing store onscreen, subtracts "
"the topmost region from all other regions in the stack, and pops the stack. "
"All drawing operations affect only the topmost backing store in the stack. "
"One matching call to gdk_window_end_paint() is required for each call to "
"gdk_window_begin_paint_region()."
msgstr ""

# #used by: gdk_window_end_paint:
#. used by: gdk_window_end_paint:
#: gdkwindow.c:2917:7
msgid ""
"Indicates that the backing store created by the most recent call to "
"gdk_window_begin_paint_region() should be copied onscreen and deleted, "
"leaving the next-most-recent backing store or no backing store at all as the "
"active paint region. See gdk_window_begin_paint_region() for full details. "
"It is an error to call this function without a matching "
"gdk_window_begin_paint_region() first."
msgstr ""

# #used by: gdk_window_flush:
#. used by: gdk_window_flush:
#: gdkwindow.c:3274:2
msgid ""
"Flush all outstanding cached operations on a window, leaving the window in a "
"state which reflects all that has been drawn before."
msgstr ""

# #used by: gdk_window_flush:
#. used by: gdk_window_flush:
#: gdkwindow.c:3277:6
msgid ""
"Gdk uses multiple kinds of caching to get better performance and nicer "
"drawing. For instance, during exposes all paints to a window using double "
"buffered rendering are keep on a surface until the last window has been "
"exposed. It also delays window moves/scrolls until as long as possible until "
"next update to avoid tearing when moving windows."
msgstr ""

# #used by: gdk_window_flush:
#. used by: gdk_window_flush:
#: gdkwindow.c:3284:5
msgid ""
"Normally this should be completely invisible to applications, as we "
"automatically flush the windows when required, but this might be needed if "
"you for instance mix direct native drawing with gdk drawing. For Gtk widgets "
"that don't use double buffering this will be called automatically before "
"sending the expose event."
msgstr ""

# #used by: gdk_window_get_clip_region:
#. used by: gdk_window_get_clip_region:
#: gdkwindow.c:3351:5
msgid ""
"Computes the region of a window that potentially can be written to by "
"drawing primitives. This region may not take into account other factors such "
"as if the window is obscured by other windows, but no area outside of this "
"region will be affected by drawing primitives."
msgstr ""

# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_window_get_clip_region:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_window_get_visible_region:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_clip_region:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_visible_region:
#: gdkwindow.c:3357:2 gdkwindow.c:3399:2
msgid ""
"Returns: a #cairo_region_t. This must be freed with cairo_region_destroy() "
"when you are done."
msgstr ""

# #used by: gdk_window_get_visible_region:
#. used by: gdk_window_get_visible_region:
#: gdkwindow.c:3394:4
msgid ""
"Computes the region of the @window that is potentially visible. This does "
"not necessarily take into account if the window is obscured by other "
"windows, but no area outside of this region is visible."
msgstr ""

# #used by: gdk_cairo_create:
#. used by: gdk_cairo_create:
#: gdkwindow.c:3594:1
msgid "Creates a Cairo context for drawing to @window."
msgstr ""

# #used by: gdk_cairo_create:
#. used by: gdk_cairo_create:
#: gdkwindow.c:3596:4
msgid ""
"<note><warning> Note that calling cairo_reset_clip() on the resulting "
"#cairo_t will produce undefined results, so avoid it at all costs. </"
"warning></note>"
msgstr ""

# #used by: gdk_cairo_create:
#. used by: gdk_cairo_create:
#: gdkwindow.c:3601:2
msgid ""
"Return value: A newly created Cairo context. Free with cairo_destroy() when "
"you are done drawing."
msgstr ""

# #used by: GdkWindow:cursor:
#. used by: GdkWindow:cursor:
#: gdkwindow.c:365:2
msgid ""
"The mouse pointer for a #GdkWindow. See gdk_window_set_cursor() and "
"gdk_window_get_cursor() for details."
msgstr ""

# used by: GdkWindow::pick-embedded-child:
#. used by: GdkWindow::pick-embedded-child:
#: gdkwindow.c:380:1
msgid "@window: the window on which the signal is emitted"
msgstr ""

# used by: gdk_window_redirect_to_drawable:
#. used by: GdkWindow::pick-embedded-child:
#: gdkwindow.c:381:1
#, fuzzy
msgid "@x: x coordinate in the window"
msgstr "@src_x: 在@window中的x 坐标位置"

# used by: gdk_window_redirect_to_drawable:
#. used by: GdkWindow::pick-embedded-child:
#: gdkwindow.c:382:1
#, fuzzy
msgid "@y: y coordinate in the window"
msgstr "@src_y: 在@window中的y 坐标位置"

# #used by: GdkWindow::pick-embedded-child:
#. used by: GdkWindow::pick-embedded-child:
#: gdkwindow.c:384:2
msgid ""
"The ::pick-embedded-child signal is emitted to find an embedded child at the "
"given position."
msgstr ""

# #used by: GdkWindow::pick-embedded-child:
#. used by: GdkWindow::pick-embedded-child:
#: gdkwindow.c:387:2
msgid ""
"Returns: (transfer none): the #GdkWindow of the embedded child at @x, @y, or "
"%NULL"
msgstr ""

# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: GdkWindow::to-embedder:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: GdkWindow::from-embedder:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: GdkWindow::create-surface:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkWindow::to-embedder:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkWindow::from-embedder:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkWindow::create-surface:
#: gdkwindow.c:406:1 gdkwindow.c:437:1 gdkwindow.c:468:1
msgid "@window: the offscreen window on which the signal is emitted"
msgstr ""

# used by: GdkWindow::to-embedder:
#. used by: GdkWindow::to-embedder:
#: gdkwindow.c:407:1
msgid "@offscreen-x: x coordinate in the offscreen window"
msgstr ""

# used by: GdkWindow::to-embedder:
#. used by: GdkWindow::to-embedder:
#: gdkwindow.c:408:1
msgid "@offscreen-y: y coordinate in the offscreen window"
msgstr ""

# used by: GdkWindow::to-embedder:
#. used by: GdkWindow::to-embedder:
#: gdkwindow.c:409:2
msgid ""
"@embedder-x: (out) (type double): return location for the x coordinate in "
"the embedder window"
msgstr ""

# #used by: gdk_window_process_all_updates:
#. used by: gdk_window_process_all_updates:
#: gdkwindow.c:4098:2
msgid ""
"Calls gdk_window_process_updates() for all windows (see #GdkWindow) in the "
"application."
msgstr ""

# used by: GdkWindow::to-embedder:
#. used by: GdkWindow::to-embedder:
#: gdkwindow.c:411:2
msgid ""
"@embedder-y: (out) (type double): return location for the y coordinate in "
"the embedder window"
msgstr ""

# #used by: GdkWindow::to-embedder:
#. used by: GdkWindow::to-embedder:
#: gdkwindow.c:414:2
msgid ""
"The ::to-embedder signal is emitted to translate coordinates in an offscreen "
"window to its embedder."
msgstr ""

# #used by: GdkWindow::to-embedder:
#. used by: GdkWindow::to-embedder:
#: gdkwindow.c:417:1
msgid "See also #GtkWindow::from-embedder."
msgstr ""

# used by: gdk_window_process_updates:
#. used by: gdk_window_process_updates:
#: gdkwindow.c:4171:1
msgid "@update_children: whether to also process updates for child windows"
msgstr ""

# #used by: gdk_window_process_updates:
#. used by: gdk_window_process_updates:
#: gdkwindow.c:4173:8
msgid ""
"Sends one or more expose events to @window. The areas in each expose event "
"will cover the entire update area for the window (see "
"gdk_window_invalidate_region() for details). Normally GDK calls "
"gdk_window_process_all_updates() on your behalf, so there's no need to call "
"this function unless you want to force expose events to be delivered "
"immediately and synchronously (vs. the usual case, where GDK delivers them "
"in an idle handler). Occasionally this is useful to produce nicer scrolling "
"behavior, for example."
msgstr ""

# used by: gdk_window_invalidate_rect:
#. used by: gdk_window_invalidate_rect:
#: gdkwindow.c:4267:2
msgid ""
"@rect: (allow-none): rectangle to invalidate or %NULL to invalidate the "
"whole window"
msgstr ""

# used by: gdk_window_invalidate_rect:
#. used by: gdk_window_invalidate_rect:
#: gdkwindow.c:4269:1
msgid "@invalidate_children: whether to also invalidate child windows"
msgstr ""

# #used by: gdk_window_invalidate_rect:
#. used by: gdk_window_invalidate_rect:
#: gdkwindow.c:4271:3
msgid ""
"A convenience wrapper around gdk_window_invalidate_region() which "
"invalidates a rectangular region. See gdk_window_invalidate_region() for "
"details."
msgstr ""

# used by: GdkWindow::from-embedder:
#. used by: GdkWindow::from-embedder:
#: gdkwindow.c:438:1
msgid "@embedder-x: x coordinate in the embedder window"
msgstr ""

# used by: GdkWindow::from-embedder:
#. used by: GdkWindow::from-embedder:
#: gdkwindow.c:439:1
msgid "@embedder-y: y coordinate in the embedder window"
msgstr ""

# used by: GdkWindow::from-embedder:
#. used by: GdkWindow::from-embedder:
#: gdkwindow.c:440:2
msgid ""
"@offscreen-x: (out) (type double): return location for the x coordinate in "
"the offscreen window"
msgstr ""

# used by: GdkWindow::from-embedder:
#. used by: GdkWindow::from-embedder:
#: gdkwindow.c:442:2
msgid ""
"@offscreen-y: (out) (type double): return location for the y coordinate in "
"the offscreen window"
msgstr ""

# used by: gdk_window_invalidate_maybe_recurse:
#. used by: gdk_window_invalidate_maybe_recurse:
#: gdkwindow.c:4420:2
msgid ""
"@child_func: (scope call): function to use to decide if to recurse to a "
"child, %NULL means never recurse."
msgstr ""

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_idle_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_idle:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_seconds_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_seconds:
#. used by: gdk_window_invalidate_maybe_recurse:
#: gdkwindow.c:4422:1
msgid "@user_data: data passed to @child_func"
msgstr ""

#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_invalidate_maybe_recurse:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_invalidate_region:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: _gdk_window_invalidate_for_expose:
#: gdkwindow.c:4424:6 gdkwindow.c:4476:6 gdkwindow.c:4510:6
msgid ""
"Adds @region to the update area for @window. The update area is the region "
"that needs to be redrawn, or \"dirty region.\" The call "
"gdk_window_process_updates() sends one or more expose events to the window, "
"which together cover the entire update area. An application would normally "
"redraw the contents of @window in response to those expose events."
msgstr ""

# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_window_invalidate_maybe_recurse:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_window_invalidate_region:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_invalidate_maybe_recurse:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_invalidate_region:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: _gdk_window_invalidate_for_expose:
#: gdkwindow.c:4431:4 gdkwindow.c:4483:4 gdkwindow.c:4517:4
msgid ""
"GDK will call gdk_window_process_all_updates() on your behalf whenever your "
"program returns to the main loop and becomes idle, so normally there's no "
"need to do that manually, you just need to invalidate regions that you know "
"should be redrawn."
msgstr ""

# #used by: gdk_window_invalidate_maybe_recurse:
#. used by: gdk_window_invalidate_maybe_recurse:
#: gdkwindow.c:4436:4
msgid ""
"The @child_func parameter controls whether the region of each child window "
"that intersects @region will also be invalidated. Only children for which "
"@child_func returns TRUE will have the area invalidated."
msgstr ""

# #used by: GdkWindow::from-embedder:
#. used by: GdkWindow::from-embedder:
#: gdkwindow.c:445:2
msgid ""
"The ::from-embedder signal is emitted to translate coordinates in the "
"embedder of an offscreen window to the offscreen window."
msgstr ""

# used by: gdk_window_invalidate_region:
#. used by: gdk_window_invalidate_region:
#: gdkwindow.c:4474:1
msgid "@invalidate_children: %TRUE to also invalidate child windows"
msgstr ""

# #used by: GdkWindow::from-embedder:
#. used by: GdkWindow::from-embedder:
#: gdkwindow.c:448:1
msgid "See also #GtkWindow::to-embedder."
msgstr ""

# #used by: gdk_window_invalidate_region:
#. used by: gdk_window_invalidate_region:
#: gdkwindow.c:4488:5
msgid ""
"The @invalidate_children parameter controls whether the region of each child "
"window that intersects @region will also be invalidated. If %FALSE, then the "
"update area for child windows will remain unaffected. See "
"gdk_window_invalidate_maybe_recurse if you need fine grained control over "
"which children are invalidated."
msgstr ""

# #used by: _gdk_window_invalidate_for_expose:
#. used by: _gdk_window_invalidate_for_expose:
#: gdkwindow.c:4522:4
msgid ""
"This version of invalidation is used when you recieve expose events from the "
"native window system. It exposes the native window, plus any non-native "
"child windows (but not native child windows, as those would have gotten "
"their own expose events)."
msgstr ""

# #used by: gdk_window_get_update_area:
#. used by: gdk_window_get_update_area:
#: gdkwindow.c:4569:6
msgid ""
"Transfers ownership of the update area from @window to the caller of the "
"function. That is, after calling this function, @window will no longer have "
"an invalid/dirty region; the update area is removed from @window and handed "
"to you. If a window has no update area, gdk_window_get_update_area() returns "
"%NULL. You are responsible for calling cairo_region_destroy() on the "
"returned region if it's non-%NULL."
msgstr ""

# #used by: gdk_window_get_update_area:
#. used by: gdk_window_get_update_area:
#: gdkwindow.c:4576:1
msgid "Return value: the update area for @window"
msgstr ""

# #used by: _gdk_window_clear_update_area:
#. used by: _gdk_window_clear_update_area:
#: gdkwindow.c:4627:2
msgid ""
"Internal function to clear the update area for a window. This is called when "
"the window is hidden or destroyed."
msgstr ""

# #used by: gdk_window_freeze_updates:
#. used by: gdk_window_freeze_updates:
#: gdkwindow.c:4648:5
msgid ""
"Temporarily freezes a window such that it won't receive expose events.  The "
"window will begin receiving expose events again when gdk_window_thaw_updates"
"() is called. If gdk_window_freeze_updates() has been called more than once, "
"gdk_window_thaw_updates() must be called an equal number of times to begin "
"processing exposes."
msgstr ""

# #used by: gdk_window_thaw_updates:
#. used by: gdk_window_thaw_updates:
#: gdkwindow.c:4669:1
msgid "Thaws a window frozen with gdk_window_freeze_updates()."
msgstr ""

# used by: GdkWindow::create-surface:
#. used by: GdkWindow::create-surface:
#: gdkwindow.c:469:1
msgid "@width: the width of the offscreen surface to create"
msgstr ""

# #used by: gdk_window_freeze_toplevel_updates_libgtk_only:
#. used by: gdk_window_freeze_toplevel_updates_libgtk_only:
#: gdkwindow.c:4690:7
msgid ""
"Temporarily freezes a window and all its descendants such that it won't "
"receive expose events.  The window will begin receiving expose events again "
"when gdk_window_thaw_toplevel_updates_libgtk_only() is called. If "
"gdk_window_freeze_toplevel_updates_libgtk_only() has been called more than "
"once, gdk_window_thaw_toplevel_updates_libgtk_only() must be called an equal "
"number of times to begin processing exposes."
msgstr ""

# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_window_freeze_toplevel_updates_libgtk_only:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_window_thaw_toplevel_updates_libgtk_only:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_freeze_toplevel_updates_libgtk_only:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_thaw_toplevel_updates_libgtk_only:
#: gdkwindow.c:4698:2 gdkwindow.c:4717:2
msgid ""
"This function is not part of the GDK public API and is only for use by GTK+."
msgstr ""

# used by: GdkWindow::create-surface:
#. used by: GdkWindow::create-surface:
#: gdkwindow.c:470:1
msgid "@height: the height of the offscreen surface to create"
msgstr ""

# #used by: gdk_window_thaw_toplevel_updates_libgtk_only:
#. used by: gdk_window_thaw_toplevel_updates_libgtk_only:
#: gdkwindow.c:4714:2
msgid ""
"Thaws a window frozen with gdk_window_freeze_toplevel_updates_libgtk_only()."
msgstr ""

# #used by: GdkWindow::create-surface:
#. used by: GdkWindow::create-surface:
#: gdkwindow.c:472:6
msgid ""
"The ::create-surface signal is emitted when an offscreen window needs its "
"surface (re)created, which happens either when the the window is first drawn "
"to, or when the window is being resized. The first signal handler that "
"returns a non-%NULL surface will stop any further signal emission, and its "
"surface will be used."
msgstr ""

# used by: gdk_window_set_debug_updates:
#. used by: gdk_window_set_debug_updates:
#: gdkwindow.c:4734:1
msgid "@setting: %TRUE to turn on update debugging"
msgstr ""

# #used by: gdk_window_set_debug_updates:
#. used by: gdk_window_set_debug_updates:
#: gdkwindow.c:4736:7
msgid ""
"With update debugging enabled, calls to gdk_window_invalidate_region() clear "
"the invalidated region of the screen to a noticeable color, and GDK pauses "
"for a short time before sending exposes to windows during "
"gdk_window_process_updates().  The net effect is that you can see the "
"invalid region for each window and watch redraws as they occur. This allows "
"you to diagnose inefficiencies in your application."
msgstr ""

# #used by: gdk_window_set_debug_updates:
#. used by: gdk_window_set_debug_updates:
#: gdkwindow.c:4744:5
msgid ""
"In essence, because the GDK rendering model prevents all flicker, if you are "
"redrawing the same region 400 times you may never notice, aside from "
"noticing a speed problem. Enabling update debugging causes GTK to flicker "
"slowly and noticeably, so you can see exactly what's being redrawn when, in "
"what order."
msgstr ""

# #used by: gdk_window_set_debug_updates:
#. used by: gdk_window_set_debug_updates:
#: gdkwindow.c:4750:5
msgid ""
"The --gtk-debug=updates command line option passed to GTK+ programs enables "
"this debug option at application startup time. That's usually more useful "
"than calling gdk_window_set_debug_updates() yourself, though you might want "
"to use this function to enable updates sometime after application startup "
"time."
msgstr ""

# used by: gdk_window_constrain_size:
#. used by: gdk_window_constrain_size:
#: gdkwindow.c:4765:1
msgid "@geometry: a #GdkGeometry structure"
msgstr ""

# used by: gdk_window_constrain_size:
#. used by: gdk_window_constrain_size:
#: gdkwindow.c:4766:1
msgid "@flags: a mask indicating what portions of @geometry are set"
msgstr ""

# used by: gdk_window_constrain_size:
#. used by: gdk_window_constrain_size:
#: gdkwindow.c:4767:1
msgid "@width: desired width of window"
msgstr ""

# used by: gdk_window_constrain_size:
#. used by: gdk_window_constrain_size:
#: gdkwindow.c:4768:1
msgid "@height: desired height of the window"
msgstr ""

# used by: gdk_window_constrain_size:
#. used by: gdk_window_constrain_size:
#: gdkwindow.c:4769:1
msgid "@new_width: (out): location to store resulting width"
msgstr ""

# used by: gdk_window_constrain_size:
#. used by: gdk_window_constrain_size:
#: gdkwindow.c:4770:1
msgid "@new_height: (out): location to store resulting height"
msgstr ""

# #used by: gdk_window_constrain_size:
#. used by: gdk_window_constrain_size:
#: gdkwindow.c:4772:2
msgid ""
"Constrains a desired width and height according to a set of geometry hints "
"(such as minimum and maximum size)."
msgstr ""

# #used by: GdkWindow::create-surface:
#. used by: GdkWindow::create-surface:
#: gdkwindow.c:479:3
msgid ""
"Note that it is not possible to access the window's previous surface from "
"within any callback of this signal. Calling gdk_offscreen_window_get_surface"
"() will lead to a crash."
msgstr ""

# #used by: GdkWindow::create-surface:
#. used by: GdkWindow::create-surface:
#: gdkwindow.c:483:1
msgid "Returns: the newly created #cairo_surface_t for the offscreen window"
msgstr ""

# used by: gdk_window_get_pointer:
#. used by: gdk_window_get_pointer:
#: gdkwindow.c:4895:2
msgid ""
"@x: (out) (allow-none): return location for X coordinate of pointer or %NULL "
"to not return the X coordinate"
msgstr ""

# used by: gdk_window_get_pointer:
#. used by: gdk_window_get_pointer:
#: gdkwindow.c:4897:2
msgid ""
"@y: (out) (allow-none):  return location for Y coordinate of pointer or "
"%NULL to not return the Y coordinate"
msgstr ""

# used by: gdk_window_get_pointer:
#. used by: gdk_window_get_pointer:
#: gdkwindow.c:4899:2
msgid ""
"@mask: (out) (allow-none): return location for modifier mask or %NULL to not "
"return the modifier mask"
msgstr ""

# #used by: gdk_window_get_pointer:
#. used by: gdk_window_get_pointer:
#: gdkwindow.c:4902:3
msgid ""
"Obtains the current pointer position and modifier state. The position is "
"given in coordinates relative to the upper left corner of @window."
msgstr ""

# #used by: gdk_window_get_pointer:
#. used by: gdk_window_get_pointer:
#: gdkwindow.c:4906:3
msgid ""
"Return value: (transfer none): the window containing the pointer (as with "
"gdk_window_at_pointer()), or %NULL if the window containing the pointer "
"isn't known to GDK"
msgstr ""

# #used by: gdk_window_get_pointer:
#. used by: gdk_window_get_pointer:
#: gdkwindow.c:4910:1
msgid "Deprecated: 3.0: Use gdk_window_get_device_position() instead."
msgstr ""

# used by: gdk_window_get_device_position:
#. used by: gdk_window_get_device_position:
#: gdkwindow.c:4930:1
msgid "@device: pointer #GdkDevice to query to."
msgstr ""

# used by: gdk_window_get_device_position:
#. used by: gdk_window_get_device_position:
#: gdkwindow.c:4931:1
msgid ""
"@x: (out) (allow-none): return location for the X coordinate of @device, or "
"%NULL."
msgstr ""

# used by: gdk_window_get_device_position:
#. used by: gdk_window_get_device_position:
#: gdkwindow.c:4932:1
msgid ""
"@y: (out) (allow-none): return location for the Y coordinate of @device, or "
"%NULL."
msgstr ""

# used by: gdk_window_get_device_position:
#. used by: gdk_window_get_device_position:
#: gdkwindow.c:4933:1
msgid ""
"@mask: (out) (allow-none): return location for the modifier mask, or %NULL."
msgstr ""

# #used by: gdk_window_get_device_position:
#. used by: gdk_window_get_device_position:
#: gdkwindow.c:4935:3
msgid ""
"Obtains the current device position and modifier state. The position is "
"given in coordinates relative to the upper left corner of @window."
msgstr ""

# #used by: gdk_window_get_device_position:
#. used by: gdk_window_get_device_position:
#: gdkwindow.c:4939:2
msgid ""
"Return value: (transfer none): The window underneath @device (as with "
"gdk_device_get_window_at_position()), or %NULL if the window is not known to "
"GDK."
msgstr ""

# used by: gdk_window_at_pointer:
#. used by: gdk_window_at_pointer:
#: gdkwindow.c:4983:1
msgid ""
"@win_x: (out) (allow-none): return location for origin of the window under "
"the pointer"
msgstr ""

# used by: gdk_window_at_pointer:
#. used by: gdk_window_at_pointer:
#: gdkwindow.c:4984:1
msgid ""
"@win_y: (out) (allow-none): return location for origin of the window under "
"the pointer"
msgstr ""

# #used by: gdk_window_at_pointer:
#. used by: gdk_window_at_pointer:
#: gdkwindow.c:4986:5
msgid ""
"Obtains the window underneath the mouse pointer, returning the location of "
"that window in @win_x, @win_y. Returns %NULL if the window under the mouse "
"pointer is not known to GDK (if the window belongs to another application "
"and a #GdkWindow hasn't been created for it with gdk_window_foreign_new())"
msgstr ""

# #used by: gdk_window_at_pointer:
#. used by: gdk_window_at_pointer:
#: gdkwindow.c:4992:2
msgid ""
"NOTE: For multihead-aware widgets or applications use "
"gdk_display_get_window_at_pointer() instead."
msgstr ""

# #used by: gdk_window_at_pointer:
#. used by: gdk_window_at_pointer:
#: gdkwindow.c:4995:1
msgid "Return value: (transfer none): window under the mouse pointer"
msgstr ""

# #used by: gdk_get_default_root_window:
#. used by: gdk_get_default_root_window:
#: gdkwindow.c:5009:2
msgid ""
"Obtains the root window (parent all other windows are inside) for the "
"default display and screen."
msgstr ""

# #used by: gdk_get_default_root_window:
#. used by: gdk_get_default_root_window:
#: gdkwindow.c:5012:1
msgid "Return value: (transfer none): the default root window"
msgstr ""

# used by: SECTION:windows
#. used by: SECTION:windows
#: gdkwindow.c:51:1
msgid "@Short_description: Onscreen display areas in the target window system"
msgstr ""

# used by: SECTION:windows
#. used by: SECTION:windows
#: gdkwindow.c:52:1
msgid "@Title: Windows"
msgstr ""

# #used by: gdk_window_show_unraised:
#. used by: gdk_window_show_unraised:
#: gdkwindow.c:5258:3
msgid ""
"Shows a #GdkWindow onscreen, but does not modify its stacking order. In "
"contrast, gdk_window_show() will raise the window to the top of the window "
"stack."
msgstr ""

# #used by: gdk_window_show_unraised:
#. used by: gdk_window_show_unraised:
#: gdkwindow.c:5262:3
msgid ""
"On the X11 platform, in Xlib terms, this function calls XMapWindow() (it "
"also updates some internal GDK state, which means that you can't really use "
"XMapWindow() directly on a GDK window)."
msgstr ""

# #used by: gdk_window_raise:
#. used by: gdk_window_raise:
#: gdkwindow.c:5276:3
msgid ""
"Raises @window to the top of the Z-order (stacking order), so that other "
"windows with the same parent window appear below @window. This is true "
"whether or not the windows are visible."
msgstr ""

# #used by: gdk_window_raise:
#. used by: gdk_window_raise:
#: gdkwindow.c:5280:3
msgid ""
"If @window is a toplevel, the window manager may choose to deny the request "
"to move the window in the Z-order, gdk_window_raise() only requests the "
"restack, does not guarantee it."
msgstr ""

#. used by: SECTION:windows
#: gdkwindow.c:54:6
msgid ""
"A #GdkWindow is a (usually) rectangular region on the screen. It's a low-"
"level object, used to implement high-level objects such as #GtkWidget and "
"#GtkWindow on the GTK+ level. A #GtkWindow is a toplevel window, the thing a "
"user might think of as a \"window\" with a titlebar and so on; a #GtkWindow "
"may contain many #GdkWindows. For example, each #GtkButton has a #GdkWindow "
"associated with it."
msgstr ""

# #used by: gdk_window_lower:
#. used by: gdk_window_lower:
#: gdkwindow.c:5409:3
msgid ""
"Lowers @window to the bottom of the Z-order (stacking order), so that other "
"windows with the same parent window appear above @window. This is true "
"whether or not the other windows are visible."
msgstr ""

# #used by: gdk_window_lower:
#. used by: gdk_window_lower:
#: gdkwindow.c:5413:3
msgid ""
"If @window is a toplevel, the window manager may choose to deny the request "
"to move the window in the Z-order, gdk_window_lower() only requests the "
"restack, does not guarantee it."
msgstr ""

# #used by: gdk_window_lower:
#. used by: gdk_window_lower:
#: gdkwindow.c:5417:2
msgid ""
"Note that gdk_window_show() raises the window again, so don't call this "
"function before gdk_window_show(). (Try gdk_window_show_unraised().)"
msgstr ""

# used by: gdk_window_restack:
#. used by: gdk_window_restack:
#: gdkwindow.c:5442:1
msgid ""
"@sibling: (allow-none): a #GdkWindow that is a sibling of @window, or %NULL"
msgstr ""

# used by: gdk_window_restack:
#. used by: gdk_window_restack:
#: gdkwindow.c:5443:1
msgid "@above: a boolean"
msgstr ""

# #used by: gdk_window_restack:
#. used by: gdk_window_restack:
#: gdkwindow.c:5445:3
msgid ""
"Changes the position of  @window in the Z-order (stacking order), so that it "
"is above @sibling (if @above is %TRUE) or below @sibling (if @above is "
"%FALSE)."
msgstr ""

# #used by: gdk_window_restack:
#. used by: gdk_window_restack:
#: gdkwindow.c:5449:2
msgid ""
"If @sibling is %NULL, then this either raises (if @above is %TRUE) or lowers "
"the window."
msgstr ""

# #used by: gdk_window_restack:
#. used by: gdk_window_restack:
#: gdkwindow.c:5452:3
msgid ""
"If @window is a toplevel, the window manager may choose to deny the request "
"to move the window in the Z-order, gdk_window_restack() only requests the "
"restack, does not guarantee it."
msgstr ""

# #used by: gdk_window_show:
#. used by: gdk_window_show:
#: gdkwindow.c:5560:3
msgid ""
"Like gdk_window_show_unraised(), but also raises the window to the top of "
"the window stack (moves the window to the front of the Z-order)."
msgstr ""

# #used by: gdk_window_show:
#. used by: gdk_window_show:
#: gdkwindow.c:5564:2
msgid ""
"This function maps a window so it's visible onscreen. Its opposite is "
"gdk_window_hide()."
msgstr ""

#. used by: gdk_window_show:
#: gdkwindow.c:5567:2
msgid ""
"When implementing a #GtkWidget, you should call this function on the "
"widget's #GdkWindow as part of the \"map\" method."
msgstr ""

# #used by: gdk_window_hide:
#. used by: gdk_window_hide:
#: gdkwindow.c:5580:4
msgid ""
"For toplevel windows, withdraws them, so they will no longer be known to the "
"window manager; for all windows, unmaps them, so they won't be displayed. "
"Normally done automatically as part of gtk_widget_hide()."
msgstr ""

# #used by: gdk_window_withdraw:
#. used by: gdk_window_withdraw:
#: gdkwindow.c:5671:3
msgid ""
"Withdraws a window (unmaps it and asks the window manager to forget about "
"it). This function is not really useful as gdk_window_hide() automatically "
"withdraws toplevel windows before hiding them."
msgstr ""

# used by: gdk_window_set_events:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_events:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_device_events:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_source_events:
#: gdkwindow.c:5711:1 gdkwindow.c:5780:1 gdkwindow.c:8870:1
msgid "@event_mask: event mask for @window"
msgstr ""

# #used by: gdk_window_set_events:
#. used by: gdk_window_set_events:
#: gdkwindow.c:5713:5
msgid ""
"The event mask for a window determines which events will be reported for "
"that window from all master input devices. For example, an event mask "
"including #GDK_BUTTON_PRESS_MASK means the window should report button press "
"events. The event mask is the bitwise OR of values from the #GdkEventMask "
"enumeration."
msgstr ""

# #used by: gdk_window_get_events:
#. used by: gdk_window_get_events:
#: gdkwindow.c:5760:2
msgid ""
"Gets the event mask for @window for all master input devices. See "
"gdk_window_set_events()."
msgstr ""

# #used by: gdk_window_get_events:
#. used by: gdk_window_get_events:
#: gdkwindow.c:5763:1
msgid "Return value: event mask for @window"
msgstr ""

# used by: gdk_window_set_device_events:
#. used by: gdk_window_set_device_events:
#: gdkwindow.c:5779:1
msgid "@device: #GdkDevice to enable events for."
msgstr ""

# #used by: gdk_window_set_device_events:
#. used by: gdk_window_set_device_events:
#: gdkwindow.c:5782:5
msgid ""
"Sets the event mask for a given device (Normally a floating device, not "
"attached to any visible pointer) to @window. For example, an event mask "
"including #GDK_BUTTON_PRESS_MASK means the window should report button press "
"events. The event mask is the bitwise OR of values from the #GdkEventMask "
"enumeration."
msgstr ""

# #used by: gdk_window_get_device_events:
#. used by: gdk_window_get_device_events:
#: gdkwindow.c:5848:1
msgid "Returns the event mask for @window corresponding to an specific device."
msgstr ""

# #used by: gdk_window_get_device_events:
#. used by: gdk_window_get_device_events:
#: gdkwindow.c:5850:1
msgid "Returns: device event mask for @window"
msgstr ""

#. used by: SECTION:windows
#: gdkwindow.c:61:11
msgid ""
"<refsect2 id=\"COMPOSITED-WINDOWS\"> <title>Composited Windows</title> "
"<para> Normally, the windowing system takes care of rendering the contents "
"of a child window onto its parent window. This mechanism can be intercepted "
"by calling gdk_window_set_composited() on the child window. For a "
"<firstterm>composited</firstterm> window it is the responsibility of the "
"application to render the window contents at the right spot. </para> "
"<example id=\"composited-window-example\"> <title>Composited windows</title>"
msgstr ""

# used by: gdk_window_move:
#. used by: gdk_window_move:
#: gdkwindow.c:6208:1
msgid "@x: X coordinate relative to window's parent"
msgstr ""

# used by: gdk_window_move:
#. used by: gdk_window_move:
#: gdkwindow.c:6209:1
msgid "@y: Y coordinate relative to window's parent"
msgstr ""

# #used by: gdk_window_move:
#. used by: gdk_window_move:
#: gdkwindow.c:6211:5
msgid ""
"Repositions a window relative to its parent window. For toplevel windows, "
"window managers may ignore or modify the move; you should probably use "
"gtk_window_move() on a #GtkWindow widget anyway, instead of using GDK "
"functions. For child windows, the move will reliably succeed."
msgstr ""

# #used by: gdk_window_move:
#. used by: gdk_window_move:
#: gdkwindow.c:6217:2
msgid ""
"If you're also planning to resize the window, use gdk_window_move_resize() "
"to both move and resize simultaneously, for a nicer visual effect."
msgstr ""

# used by: gdk_window_resize:
#. used by: gdk_window_resize:
#: gdkwindow.c:6231:1
msgid "@width: new width of the window"
msgstr ""

# used by: gdk_window_resize:
#. used by: gdk_window_resize:
#: gdkwindow.c:6232:1
msgid "@height: new height of the window"
msgstr ""

# #used by: gdk_window_resize:
#. used by: gdk_window_resize:
#: gdkwindow.c:6234:3
msgid ""
"Resizes @window; for toplevel windows, asks the window manager to resize the "
"window. The window manager may not allow the resize. When using GTK+, use "
"gtk_window_resize() instead of this low-level GDK function."
msgstr ""

# #used by: gdk_window_resize:
#. used by: gdk_window_resize:
#: gdkwindow.c:6238:1
msgid "Windows may not be resized below 1x1."
msgstr ""

# #used by: gdk_window_resize:
#. used by: gdk_window_resize:
#: gdkwindow.c:6240:2
msgid ""
"If you're also planning to move the window, use gdk_window_move_resize() to "
"both move and resize simultaneously, for a nicer visual effect."
msgstr ""

# used by: gdk_window_move_resize:
#. used by: gdk_window_move_resize:
#: gdkwindow.c:6255:1
msgid "@x: new X position relative to window's parent"
msgstr ""

# used by: gdk_window_move_resize:
#. used by: gdk_window_move_resize:
#: gdkwindow.c:6256:1
msgid "@y: new Y position relative to window's parent"
msgstr ""

# used by: gdk_window_move_resize:
#. used by: gdk_window_move_resize:
#: gdkwindow.c:6257:1
msgid "@width: new width"
msgstr ""

# used by: gdk_window_move_resize:
#. used by: gdk_window_move_resize:
#: gdkwindow.c:6258:1
msgid "@height: new height"
msgstr ""

# #used by: gdk_window_move_resize:
#. used by: gdk_window_move_resize:
#: gdkwindow.c:6260:4
msgid ""
"Equivalent to calling gdk_window_move() and gdk_window_resize(), except that "
"both operations are performed at once, avoiding strange visual effects. (i."
"e. the user may be able to see the window first move, then resize, if you "
"don't use gdk_window_move_resize().)"
msgstr ""

# used by: gdk_window_scroll:
#. used by: gdk_window_scroll:
#: gdkwindow.c:6279:1
msgid "@dx: Amount to scroll in the X direction"
msgstr ""

# used by: gdk_window_scroll:
#. used by: gdk_window_scroll:
#: gdkwindow.c:6280:1
msgid "@dy: Amount to scroll in the Y direction"
msgstr ""

# #used by: gdk_window_scroll:
#. used by: gdk_window_scroll:
#: gdkwindow.c:6282:5
msgid ""
"Scroll the contents of @window, both pixels and children, by the given "
"amount. @window itself does not move. Portions of the window that the scroll "
"operation brings in from offscreen areas are invalidated. The invalidated "
"region may be bigger than what would strictly be necessary."
msgstr ""

# #used by: gdk_window_scroll:
#. used by: gdk_window_scroll:
#: gdkwindow.c:6288:5
msgid ""
"For X11, a minimum area will be invalidated if the window has no subwindows, "
"or if the edges of the window's parent do not extend beyond the edges of the "
"window. In other cases, a multi-step process is used to scroll the window "
"which may produce temporary visual artifacts and unnecessary invalidations."
msgstr ""

# used by: gdk_window_move_region:
#. used by: gdk_window_move_region:
#: gdkwindow.c:6402:1
msgid "@region: The #cairo_region_t to move"
msgstr ""

# used by: gdk_window_move_region:
#. used by: gdk_window_move_region:
#: gdkwindow.c:6403:1
msgid "@dx: Amount to move in the X direction"
msgstr ""

# used by: gdk_window_move_region:
#. used by: gdk_window_move_region:
#: gdkwindow.c:6404:1
msgid "@dy: Amount to move in the Y direction"
msgstr ""

# #used by: gdk_window_move_region:
#. used by: gdk_window_move_region:
#: gdkwindow.c:6406:3
msgid ""
"Move the part of @window indicated by @region by @dy pixels in the Y "
"direction and @dx pixels in the X direction. The portions of @region that "
"not covered by the new position of @region are invalidated."
msgstr ""

# #used by: gdk_window_move_region:
#. used by: gdk_window_move_region:
#: gdkwindow.c:6410:1
msgid "Child windows are not moved."
msgstr ""

# #used by: gdk_window_set_background:
#. used by: gdk_window_set_background:
#: gdkwindow.c:6463:4
msgid ""
"Sets the background color of @window. (However, when using GTK+, set the "
"background of a widget with gtk_widget_modify_bg() - if you're an "
"application - or gtk_style_set_background() - if you're implementing a "
"custom widget.)"
msgstr ""

# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_window_set_background:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_window_set_background_rgba:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_background:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_background_rgba:
#: gdkwindow.c:6468:1 gdkwindow.c:6494:1
msgid "See also gdk_window_set_background_pattern()."
msgstr ""

# used by: gdk_window_set_background_rgba:
#. used by: gdk_window_set_background_rgba:
#: gdkwindow.c:6490:1
msgid "@rgba: a #GdkRGBA color"
msgstr ""

# #used by: gdk_window_set_background_rgba:
#. used by: gdk_window_set_background_rgba:
#: gdkwindow.c:6492:1
msgid "Sets the background color of @window."
msgstr ""

# used by: gdk_window_set_background_pattern:
#. used by: gdk_window_set_background_pattern:
#: gdkwindow.c:6516:1
msgid "@pattern: (allow-none): a pattern to use, or %NULL"
msgstr ""

# #used by: gdk_window_set_background_pattern:
#. used by: gdk_window_set_background_pattern:
#: gdkwindow.c:6518:1
msgid "Sets the background of @window."
msgstr ""

# #used by: gdk_window_set_background_pattern:
#. used by: gdk_window_set_background_pattern:
#: gdkwindow.c:6520:2
msgid ""
"A background of %NULL means that the window will inherit its background form "
"its parent window."
msgstr ""

# #used by: gdk_window_set_background_pattern:
#. used by: gdk_window_set_background_pattern:
#: gdkwindow.c:6523:2
msgid ""
"The windowing system will normally fill a window with its background when "
"the window is obscured then exposed."
msgstr ""

# used by: gdk_window_get_background_pattern:
#. used by: gdk_window_get_background_pattern:
#: gdkwindow.c:6548:1
msgid "@window: a window"
msgstr ""

# #used by: gdk_window_get_background_pattern:
#. used by: gdk_window_get_background_pattern:
#: gdkwindow.c:6550:3
msgid ""
"Gets the pattern used to clear the background on @window. If @window does "
"not have its own background and reuses the parent's, %NULL is returned and "
"you'll have to query it yourself."
msgstr ""

# #used by: gdk_window_get_background_pattern:
#. used by: gdk_window_get_background_pattern:
#: gdkwindow.c:6554:2
msgid ""
"Returns: (transfer none): The pattern to use for the background or %NULL to "
"use the parent's background."
msgstr ""

# #used by: gdk_window_get_cursor:
#. used by: gdk_window_get_cursor:
#: gdkwindow.c:6586:4
msgid ""
"Retrieves a #GdkCursor pointer for the cursor currently set on the specified "
"#GdkWindow, or %NULL.  If the return value is %NULL then there is no custom "
"cursor set on the specified window, and it is using the cursor for its "
"parent window."
msgstr ""

# #used by: gdk_window_get_cursor:
#. used by: gdk_window_get_cursor:
#: gdkwindow.c:6591:4
msgid ""
"Return value: (transfer none): a #GdkCursor, or %NULL. The returned object "
"is owned by the #GdkWindow and should not be unreferenced directly. Use "
"gdk_window_set_cursor() to unset the cursor of the window"
msgstr ""

# used by: gdk_window_set_cursor:
#. used by: gdk_window_set_cursor:
#: gdkwindow.c:6609:1
msgid "@cursor: (allow-none): a cursor"
msgstr ""

# #used by: gdk_window_set_cursor:
#. used by: gdk_window_set_cursor:
#: gdkwindow.c:6611:5
msgid ""
"Sets the default mouse pointer for a #GdkWindow. Use "
"gdk_cursor_new_for_display() or gdk_cursor_new_from_pixbuf() to create the "
"cursor. To make the cursor invisible, use %GDK_BLANK_CURSOR. Passing %NULL "
"for the @cursor argument to gdk_window_set_cursor() means that @window will "
"use the cursor of its parent window. Most windows should use this default."
msgstr ""

# used by: gdk_window_get_device_cursor:
#. used by: gdk_window_get_device_cursor:
#: gdkwindow.c:6649:1
msgid "@device: a master, pointer #GdkDevice."
msgstr ""

# #used by: gdk_window_get_device_cursor:
#. used by: gdk_window_get_device_cursor:
#: gdkwindow.c:6651:4
msgid ""
"Retrieves a #GdkCursor pointer for the @device currently set on the "
"specified #GdkWindow, or %NULL.  If the return value is %NULL then there is "
"no custom cursor set on the specified window, and it is using the cursor for "
"its parent window."
msgstr ""

# #used by: gdk_window_get_device_cursor:
#. used by: gdk_window_get_device_cursor:
#: gdkwindow.c:6656:4
msgid ""
"Returns: (transfer none): a #GdkCursor, or %NULL. The returned object is "
"owned by the #GdkWindow and should not be unreferenced directly. Use "
"gdk_window_set_cursor() to unset the cursor of the window"
msgstr ""

# used by: gdk_window_set_device_cursor:
#. used by: gdk_window_set_device_cursor:
#: gdkwindow.c:6677:1
msgid "@window: a #Gdkwindow"
msgstr ""

# used by: gdk_window_set_device_cursor:
#. used by: gdk_window_set_device_cursor:
#: gdkwindow.c:6678:1
msgid "@device: a master, pointer #GdkDevice"
msgstr ""

# #used by: gdk_window_set_device_cursor:
#. used by: gdk_window_set_device_cursor:
#: gdkwindow.c:6681:6
msgid ""
"Sets a specific #GdkCursor for a given device when it gets inside @window. "
"Use gdk_cursor_new_for_display() or gdk_cursor_new_from_pixbuf() to create "
"the cursor. To make the cursor invisible, use %GDK_BLANK_CURSOR. Passing "
"%NULL for the @cursor argument to gdk_window_set_cursor() means that @window "
"will use the cursor of its parent window. Most windows should use this "
"default."
msgstr ""

# used by: gdk_window_get_geometry:
#. used by: gdk_window_get_geometry:
#: gdkwindow.c:6723:1
msgid ""
"@x: (out) (allow-none): return location for X coordinate of window (relative "
"to its parent)"
msgstr ""

# used by: gdk_window_get_geometry:
#. used by: gdk_window_get_geometry:
#: gdkwindow.c:6724:1
msgid ""
"@y: (out) (allow-none): return location for Y coordinate of window (relative "
"to its parent)"
msgstr ""

# used by: gdk_window_get_geometry:
#. used by: gdk_window_get_geometry:
#: gdkwindow.c:6725:1
msgid "@width: (out) (allow-none): return location for width of window"
msgstr ""

# used by: gdk_window_get_geometry:
#. used by: gdk_window_get_geometry:
#: gdkwindow.c:6726:1
msgid "@height: (out) (allow-none): return location for height of window"
msgstr ""

# #used by: gdk_window_get_geometry:
#. used by: gdk_window_get_geometry:
#: gdkwindow.c:6728:2
msgid ""
"Any of the return location arguments to this function may be %NULL, if you "
"aren't interested in getting the value of that field."
msgstr ""

# #used by: gdk_window_get_geometry:
#. used by: gdk_window_get_geometry:
#: gdkwindow.c:6731:4
msgid ""
"The X and Y coordinates returned are relative to the parent window of "
"@window, which for toplevels usually means relative to the window "
"decorations (titlebar, etc.) rather than relative to the root window (screen-"
"size background window)."
msgstr ""

# #used by: gdk_window_get_geometry:
#. used by: gdk_window_get_geometry:
#: gdkwindow.c:6736:5
msgid ""
"On the X11 platform, the geometry is obtained from the X server, so reflects "
"the latest position of @window; this may be out-of-sync with the position of "
"@window delivered in the most-recently-processed #GdkEventConfigure. "
"gdk_window_get_position() in contrast gets the position from the most recent "
"configure event."
msgstr ""

# #used by: gdk_window_get_geometry:
#. used by: gdk_window_get_geometry:
#: gdkwindow.c:6742:8
msgid ""
"<note> If @window is not a toplevel, it is <emphasis>much</emphasis> better "
"to call gdk_window_get_position(), gdk_window_get_width() and "
"gdk_window_get_height() instead, because it avoids the roundtrip to the X "
"server and because these functions support the full 32-bit coordinate space, "
"whereas gdk_window_get_geometry() is restricted to the 16-bit coordinates of "
"X11. </note>"
msgstr ""

# #used by: gdk_window_get_width:
#. used by: gdk_window_get_width:
#: gdkwindow.c:6807:1
msgid "Returns the width of the given @window."
msgstr ""

# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_window_get_width:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_window_get_height:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_width:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_height:
#: gdkwindow.c:6809:3 gdkwindow.c:6831:3
msgid ""
"On the X11 platform the returned size is the size reported in the most-"
"recently-processed configure event, rather than the current size on the X "
"server."
msgstr ""

# #used by: gdk_window_get_width:
#. used by: gdk_window_get_width:
#: gdkwindow.c:6813:1
msgid "Returns: The width of @window"
msgstr ""

# #used by: gdk_window_get_height:
#. used by: gdk_window_get_height:
#: gdkwindow.c:6829:1
msgid "Returns the height of the given @window."
msgstr ""

# #used by: gdk_window_get_height:
#. used by: gdk_window_get_height:
#: gdkwindow.c:6835:1
msgid "Returns: The height of @window"
msgstr ""

# used by: gdk_window_get_origin:
#. used by: gdk_window_get_origin:
#: gdkwindow.c:6850:1
msgid "@x: (out) (allow-none): return location for X coordinate"
msgstr ""

# used by: gdk_window_get_origin:
#. used by: gdk_window_get_origin:
#: gdkwindow.c:6851:1
msgid "@y: (out) (allow-none): return location for Y coordinate"
msgstr ""

# #used by: gdk_window_get_origin:
#. used by: gdk_window_get_origin:
#: gdkwindow.c:6853:4
msgid ""
"Obtains the position of a window in root window coordinates. (Compare with "
"gdk_window_get_position() and gdk_window_get_geometry() which return the "
"position of a window relative to its parent window.)"
msgstr ""

# #used by: gdk_window_get_origin:
#. used by: gdk_window_get_origin:
#: gdkwindow.c:6858:1
msgid "Return value: not meaningful, ignore"
msgstr ""

# used by: gdk_window_redirect_to_drawable:
#. used by: gdk_window_get_root_coords:
#: gdkwindow.c:6890:1
#, fuzzy
msgid "@x: X coordinate in window"
msgstr "@src_x: 在@window中的x 坐标位置"

# used by: gdk_window_redirect_to_drawable:
#. used by: gdk_window_get_root_coords:
#: gdkwindow.c:6891:1
#, fuzzy
msgid "@y: Y coordinate in window"
msgstr "@src_y: 在@window中的y 坐标位置"

# used by: gdk_window_get_root_coords:
#. used by: gdk_window_get_root_coords:
#: gdkwindow.c:6892:1
msgid "@root_x: (out): return location for X coordinate"
msgstr ""

# used by: gdk_window_get_root_coords:
#. used by: gdk_window_get_root_coords:
#: gdkwindow.c:6893:1
msgid "@root_y: (out): return location for Y coordinate"
msgstr ""

# #used by: gdk_window_get_root_coords:
#. used by: gdk_window_get_root_coords:
#: gdkwindow.c:6895:4
msgid ""
"Obtains the position of a window position in root window coordinates. This "
"is similar to gdk_window_get_origin() but allows you go pass in any position "
"in the window, not just the origin."
msgstr ""

# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_coords_to_parent:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_coords_from_parent:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_coords_to_parent:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_coords_from_parent:
#: gdkwindow.c:6931:1 gdkwindow.c:6991:1
msgid "@window: a child window"
msgstr ""

# used by: gdk_window_coords_to_parent:
#. used by: gdk_window_coords_to_parent:
#: gdkwindow.c:6932:1
msgid "@x: X coordinate in child's coordinate system"
msgstr ""

# used by: gdk_window_coords_to_parent:
#. used by: gdk_window_coords_to_parent:
#: gdkwindow.c:6933:1
msgid "@y: Y coordinate in child's coordinate system"
msgstr ""

# used by: gdk_window_coords_to_parent:
#. used by: gdk_window_coords_to_parent:
#: gdkwindow.c:6934:2
msgid ""
"@parent_x: (out) (allow-none): return location for X coordinate in parent's "
"coordinate system, or %NULL"
msgstr ""

# used by: gdk_window_coords_to_parent:
#. used by: gdk_window_coords_to_parent:
#: gdkwindow.c:6936:2
msgid ""
"@parent_y: (out) (allow-none): return location for Y coordinate in parent's "
"coordinate system, or %NULL"
msgstr ""

# #used by: gdk_window_coords_to_parent:
#. used by: gdk_window_coords_to_parent:
#: gdkwindow.c:6939:5
msgid ""
"Transforms window coordinates from a child window to its parent window, "
"where the parent window is the normal parent as returned by "
"gdk_window_get_parent() for normal windows, and the window's embedder as "
"returned by gdk_offscreen_window_get_embedder() for offscreen windows."
msgstr ""

# #used by: gdk_window_coords_to_parent:
#. used by: gdk_window_coords_to_parent:
#: gdkwindow.c:6945:5
msgid ""
"For normal windows, calling this function is equivalent to adding the return "
"values of gdk_window_get_position() to the child coordinates. For offscreen "
"windows however (which can be arbitrarily transformed), this function calls "
"the GdkWindow::to-embedder: signal to translate the coordinates."
msgstr ""

# #used by: gdk_window_coords_to_parent:
#. used by: gdk_window_coords_to_parent:
#: gdkwindow.c:6951:2
msgid ""
"You should always use this function when writing generic code that walks up "
"a window hierarchy."
msgstr ""

# #used by: gdk_window_coords_to_parent:
#. used by: gdk_window_coords_to_parent:
#: gdkwindow.c:6954:1
msgid "See also: gdk_window_coords_from_parent()"
msgstr ""

# used by: gdk_window_coords_from_parent:
#. used by: gdk_window_coords_from_parent:
#: gdkwindow.c:6992:1
msgid "@parent_x: X coordinate in parent's coordinate system"
msgstr ""

# used by: gdk_window_coords_from_parent:
#. used by: gdk_window_coords_from_parent:
#: gdkwindow.c:6993:1
msgid "@parent_y: Y coordinate in parent's coordinate system"
msgstr ""

# used by: gdk_window_coords_from_parent:
#. used by: gdk_window_coords_from_parent:
#: gdkwindow.c:6994:1
msgid ""
"@x: (out) (allow-none): return location for X coordinate in child's "
"coordinate system"
msgstr ""

# used by: gdk_window_coords_from_parent:
#. used by: gdk_window_coords_from_parent:
#: gdkwindow.c:6995:1
msgid ""
"@y: (out) (allow-none): return location for Y coordinate in child's "
"coordinate system"
msgstr ""

# #used by: gdk_window_coords_from_parent:
#. used by: gdk_window_coords_from_parent:
#: gdkwindow.c:6997:5
msgid ""
"Transforms window coordinates from a parent window to a child window, where "
"the parent window is the normal parent as returned by gdk_window_get_parent"
"() for normal windows, and the window's embedder as returned by "
"gdk_offscreen_window_get_embedder() for offscreen windows."
msgstr ""

# #used by: gdk_window_coords_from_parent:
#. used by: gdk_window_coords_from_parent:
#: gdkwindow.c:7003:5
msgid ""
"For normal windows, calling this function is equivalent to subtracting the "
"return values of gdk_window_get_position() from the parent coordinates. For "
"offscreen windows however (which can be arbitrarily transformed), this "
"function calls the GdkWindow::from-embedder: signal to translate the "
"coordinates."
msgstr ""

# #used by: gdk_window_coords_from_parent:
#. used by: gdk_window_coords_from_parent:
#: gdkwindow.c:7009:2
msgid ""
"You should always use this function when writing generic code that walks "
"down a window hierarchy."
msgstr ""

# #used by: gdk_window_coords_from_parent:
#. used by: gdk_window_coords_from_parent:
#: gdkwindow.c:7012:1
msgid "See also: gdk_window_coords_to_parent()"
msgstr ""

# used by: gdk_window_shape_combine_region:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_shape_combine_region:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_input_shape_combine_region:
#: gdkwindow.c:7050:1 gdkwindow.c:7201:1
msgid "@shape_region: region of window to be non-transparent"
msgstr ""

# used by: gdk_window_shape_combine_region:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_shape_combine_region:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_input_shape_combine_region:
#: gdkwindow.c:7051:1 gdkwindow.c:7202:1
msgid "@offset_x: X position of @shape_region in @window coordinates"
msgstr ""

# used by: gdk_window_shape_combine_region:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_shape_combine_region:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_input_shape_combine_region:
#: gdkwindow.c:7052:1 gdkwindow.c:7203:1
msgid "@offset_y: Y position of @shape_region in @window coordinates"
msgstr ""

# #used by: gdk_window_shape_combine_region:
#. used by: gdk_window_shape_combine_region:
#: gdkwindow.c:7054:2
msgid ""
"Makes pixels in @window outside @shape_region be transparent, so that the "
"window may be nonrectangular."
msgstr ""

# #used by: gdk_window_shape_combine_region:
#. used by: gdk_window_shape_combine_region:
#: gdkwindow.c:7057:3
msgid ""
"If @shape_region is %NULL, the shape will be unset, so the whole window will "
"be opaque again. @offset_x and @offset_y are ignored if @shape_region is "
"%NULL."
msgstr ""

# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_window_shape_combine_mask:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_window_shape_combine_region:
#. used by: gdk_window_shape_combine_region:
#: gdkwindow.c:7061:5
msgid ""
"On the X11 platform, this uses an X server extension which is widely "
"available on most common platforms, but not available on very old X servers, "
"and occasionally the implementation will be buggy. On servers without the "
"shape extension, this function will do nothing."
msgstr ""

# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_window_shape_combine_mask:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_window_shape_combine_region:
#. used by: gdk_window_shape_combine_region:
#: gdkwindow.c:7067:1
msgid "This function works on both toplevel and child windows."
msgstr ""

# #used by: gdk_window_set_child_shapes:
#. used by: gdk_window_set_child_shapes:
#: gdkwindow.c:7164:4
msgid ""
"Sets the shape mask of @window to the union of shape masks for all children "
"of @window, ignoring the shape mask of @window itself. Contrast with "
"gdk_window_merge_child_shapes() which includes the shape mask of @window in "
"the masks to be merged."
msgstr ""

# #used by: gdk_window_merge_child_shapes:
#. used by: gdk_window_merge_child_shapes:
#: gdkwindow.c:7181:4
msgid ""
"Merges the shape masks for any child windows into the shape mask for "
"@window. i.e. the union of all masks for @window and its children will "
"become the new mask for @window. See gdk_window_shape_combine_region()."
msgstr ""

# #used by: gdk_window_merge_child_shapes:
#. used by: gdk_window_merge_child_shapes:
#: gdkwindow.c:7186:3
msgid ""
"This function is distinct from gdk_window_set_child_shapes() because it "
"includes @window's shape mask in the set of shapes to be merged."
msgstr ""

# #used by: gdk_window_input_shape_combine_region:
#. used by: gdk_window_input_shape_combine_region:
#: gdkwindow.c:7205:4
msgid ""
"Like gdk_window_shape_combine_region(), but the shape applies only to event "
"handling. Mouse events which happen while the pointer position corresponds "
"to an unset bit in the mask will be passed on the window below @window."
msgstr ""

#. used by: gdk_window_input_shape_combine_region:
#: gdkwindow.c:7210:5
msgid ""
"An input shape is typically used with RGBA windows. The alpha channel of the "
"window defines which pixels are invisible and allows for nicely antialiased "
"borders, and the input shape controls where the window is \"clickable\"."
msgstr ""

# #used by: gdk_window_input_shape_combine_region:
#. used by: gdk_window_input_shape_combine_region:
#: gdkwindow.c:7216:2
msgid "On the X11 platform, this requires version 1.1 of the shape extension."
msgstr ""

# #used by: gdk_window_input_shape_combine_region:
#. used by: gdk_window_input_shape_combine_region:
#: gdkwindow.c:7219:2
msgid ""
"On the Win32 platform, this functionality is not present and the function "
"does nothing."
msgstr ""

# #used by: gdk_window_set_child_input_shapes:
#. used by: gdk_window_set_child_input_shapes:
#: gdkwindow.c:7286:4
msgid ""
"Sets the input shape mask of @window to the union of input shape masks for "
"all children of @window, ignoring the input shape mask of @window itself. "
"Contrast with gdk_window_merge_child_input_shapes() which includes the input "
"shape mask of @window in the masks to be merged."
msgstr ""

# #used by: gdk_window_merge_child_input_shapes:
#. used by: gdk_window_merge_child_input_shapes:
#: gdkwindow.c:7305:4
msgid ""
"Merges the input shape masks for any child windows into the input shape mask "
"for @window. i.e. the union of all input masks for @window and its children "
"will become the new input mask for @window. See "
"gdk_window_input_shape_combine_region()."
msgstr ""

# #used by: gdk_window_merge_child_input_shapes:
#. used by: gdk_window_merge_child_input_shapes:
#: gdkwindow.c:7310:3
msgid ""
"This function is distinct from gdk_window_set_child_input_shapes() because "
"it includes @window's input shape mask in the set of shapes to be merged."
msgstr ""

# used by: gdk_window_set_static_gravities:
#. used by: gdk_window_set_static_gravities:
#: gdkwindow.c:7328:1
msgid "@use_static: %TRUE to turn on static gravity"
msgstr ""

# #used by: gdk_window_set_static_gravities:
#. used by: gdk_window_set_static_gravities:
#: gdkwindow.c:7330:4
msgid ""
"Set the bit gravity of the given window to static, and flag it so all "
"children get static subwindow gravity. This is used if you are implementing "
"scary features that involve deep knowledge of the windowing system. Don't "
"worry about it unless you have to."
msgstr ""

# #used by: gdk_window_set_static_gravities:
#. used by: gdk_window_set_static_gravities:
#: gdkwindow.c:7335:1
msgid "Return value: %TRUE if the server supports static gravity"
msgstr ""

# #used by: gdk_window_get_composited:
#. used by: gdk_window_get_composited:
#: gdkwindow.c:7358:1
msgid "Determines whether @window is composited."
msgstr ""

# #used by: gdk_window_get_composited:
#. used by: gdk_window_get_composited:
#: gdkwindow.c:7360:1
msgid "See gdk_window_set_composited()."
msgstr ""

# #used by: gdk_window_get_composited:
#. used by: gdk_window_get_composited:
#: gdkwindow.c:7362:1
msgid "Returns: %TRUE if the window is composited."
msgstr ""

# used by: gdk_window_set_composited:
#. used by: gdk_window_set_composited:
#: gdkwindow.c:7377:1
msgid "@composited: %TRUE to set the window as composited"
msgstr ""

#. used by: gdk_window_set_composited:
#: gdkwindow.c:7379:8
msgid ""
"Sets a #GdkWindow as composited, or unsets it. Composited windows do not "
"automatically have their contents drawn to the screen. Drawing is redirected "
"to an offscreen buffer and an expose event is emitted on the parent of the "
"composited window. It is the responsibility of the parent's expose handler "
"to manually merge the off-screen content onto the screen in whatever way it "
"sees fit. See <xref linkend=\"composited-window-example\"/> for an example."
msgstr ""

# #used by: gdk_window_set_composited:
#. used by: gdk_window_set_composited:
#: gdkwindow.c:7388:3
msgid ""
"It only makes sense for child windows to be composited; see "
"gdk_window_set_opacity() if you need translucent toplevel windows."
msgstr ""

# #used by: gdk_window_set_composited:
#. used by: gdk_window_set_composited:
#: gdkwindow.c:7392:4
msgid ""
"An additional effect of this call is that the area of this window is no "
"longer clipped from regions marked for invalidation on its parent. Draws "
"done on the parent window are also no longer clipped by the child."
msgstr ""

# #used by: gdk_window_set_composited:
#. used by: gdk_window_set_composited:
#: gdkwindow.c:7397:5
msgid ""
"This call is only supported on some systems (currently, only X11 with new "
"enough Xcomposite and Xdamage extensions). You must call "
"gdk_display_supports_composite() to check if setting a window as composited "
"is supported before attempting to do so."
msgstr ""

# used by: gdk_window_get_modal_hint:
#. used by: gdk_window_get_modal_hint:
#: gdkwindow.c:7445:1
msgid "@window: A toplevel #GdkWindow."
msgstr ""

# #used by: gdk_window_get_modal_hint:
#. used by: gdk_window_get_modal_hint:
#: gdkwindow.c:7447:2
msgid ""
"Determines whether or not the window manager is hinted that @window has "
"modal behaviour."
msgstr ""

# #used by: gdk_window_get_modal_hint:
#. used by: gdk_window_get_modal_hint:
#: gdkwindow.c:7450:1
msgid "Return value: whether or not the window has the modal hint set."
msgstr ""

# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_get_accept_focus:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_get_focus_on_map:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_accept_focus:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_focus_on_map:
#: gdkwindow.c:7464:1 gdkwindow.c:7483:1
msgid "@window: a toplevel #GdkWindow."
msgstr ""

# #used by: gdk_window_get_accept_focus:
#. used by: gdk_window_get_accept_focus:
#: gdkwindow.c:7466:2
msgid ""
"Determines whether or not the desktop environment shuld be hinted that the "
"window does not want to receive input focus."
msgstr ""

# #used by: gdk_window_get_accept_focus:
#. used by: gdk_window_get_accept_focus:
#: gdkwindow.c:7469:1
msgid "Return value: whether or not the window should receive input focus."
msgstr ""

# #used by: gdk_window_get_focus_on_map:
#. used by: gdk_window_get_focus_on_map:
#: gdkwindow.c:7485:2
msgid ""
"Determines whether or not the desktop environment should be hinted that the "
"window does not want to receive input focus when it is mapped."
msgstr ""

# #used by: gdk_window_get_focus_on_map:
#. used by: gdk_window_get_focus_on_map:
#: gdkwindow.c:7488:2
msgid ""
"Return value: whether or not the window wants to receive input focus when it "
"is mapped."
msgstr ""

#. used by: SECTION:windows
#: gdkwindow.c:75:4
msgid ""
"<para> In the example <xref linkend=\"composited-window-example\"/>, a "
"button is placed inside of an event box inside of a window. The event box is "
"set as composited and therefore is no longer automatically drawn to the "
"screen."
msgstr ""

# #used by: gdk_window_is_input_only:
#. used by: gdk_window_is_input_only:
#: gdkwindow.c:7505:1
msgid "Determines whether or not the window is an input only window."
msgstr ""

# #used by: gdk_window_is_input_only:
#. used by: gdk_window_is_input_only:
#: gdkwindow.c:7507:1
msgid "Return value: %TRUE if @window is input only"
msgstr ""

# #used by: gdk_window_is_shaped:
#. used by: gdk_window_is_shaped:
#: gdkwindow.c:7523:1
msgid "Determines whether or not the window is shaped."
msgstr ""

# #used by: gdk_window_is_shaped:
#. used by: gdk_window_is_shaped:
#: gdkwindow.c:7525:1
msgid "Return value: %TRUE if @window is shaped"
msgstr ""

# #used by: gdk_window_beep:
#. used by: gdk_window_beep:
#: gdkwindow.c:7949:3
msgid ""
"Emits a short beep associated to @window in the appropriate display, if "
"supported. Otherwise, emits a short beep on the display just as "
"gdk_display_beep()."
msgstr ""

# used by: gdk_window_set_support_multidevice:
#. used by: gdk_window_set_support_multidevice:
#: gdkwindow.c:7982:1
msgid "@support_multidevice: %TRUE to enable multidevice support in @window."
msgstr ""

# #used by: gdk_window_set_support_multidevice:
#. used by: gdk_window_set_support_multidevice:
#: gdkwindow.c:7984:1
msgid "This function will enable multidevice features in @window."
msgstr ""

# #used by: gdk_window_set_support_multidevice:
#. used by: gdk_window_set_support_multidevice:
#: gdkwindow.c:7986:2
msgid ""
"Multidevice aware windows will need to handle properly multiple, per device "
"enter/leave events, device grabs and grab ownerships."
msgstr ""

# #used by: SECTION:windows
#. used by: SECTION:windows
#: gdkwindow.c:80:4
msgid ""
"When the contents of the event box change, an expose event is generated on "
"its parent window (which, in this case, belongs to the toplevel #GtkWindow). "
"The expose handler for this widget is responsible for merging the changes "
"back on the screen in the way that it wishes."
msgstr ""

# #used by: gdk_window_get_support_multidevice:
#. used by: gdk_window_get_support_multidevice:
#: gdkwindow.c:8012:2
msgid ""
"Returns %TRUE if the window is aware of the existence of multiple devices."
msgstr ""

# #used by: gdk_window_get_support_multidevice:
#. used by: gdk_window_get_support_multidevice:
#: gdkwindow.c:8015:1
msgid "Returns: %TRUE if the window handles multidevice features."
msgstr ""

#. used by: SECTION:windows
#: gdkwindow.c:85:11
msgid ""
"In our case, we merge the contents with a 50% transparency. We also set the "
"background colour of the window to red. The effect is that the background "
"shows through the button. </para> </refsect2> <refsect2 id=\"OFFSCREEN-"
"WINDOWS\"> <title>Offscreen Windows</title> <para> Offscreen windows are "
"more general than composited windows, since they allow not only to modify "
"the rendering of the child window onto its parent, but also to apply "
"coordinate transformations."
msgstr ""

# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_pointer_grab:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_keyboard_grab:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_pointer_grab:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keyboard_grab:
#: gdkwindow.c:8564:1 gdkwindow.c:8703:1
msgid "@window: the #GdkWindow which will own the grab (the grab window)."
msgstr ""

# used by: gdk_pointer_grab:
#. used by: gdk_pointer_grab:
#: gdkwindow.c:8565:5
msgid ""
"@owner_events: if %FALSE then all pointer events are reported with respect "
"to @window and are only reported if selected by @event_mask. If %TRUE then "
"pointer events for this application are reported as normal, but pointer "
"events outside this application are reported with respect to @window and "
"only if selected by @event_mask. In either mode, unreported events are "
"discarded."
msgstr ""

# used by: gdk_pointer_grab:
#. used by: gdk_pointer_grab:
#: gdkwindow.c:8570:3
msgid ""
"@event_mask: specifies the event mask, which is used in accordance with "
"@owner_events. Note that only pointer events (i.e. button and motion events) "
"may be selected."
msgstr ""

# used by: gdk_pointer_grab:
#. used by: gdk_pointer_grab:
#: gdkwindow.c:8573:4
msgid ""
"@confine_to: If non-%NULL, the pointer will be confined to this window "
"during the grab. If the pointer is outside @confine_to, it will "
"automatically be moved to the closest edge of @confine_to and enter and "
"leave events will be generated as necessary."
msgstr ""

# used by: gdk_pointer_grab:
#. used by: gdk_pointer_grab:
#: gdkwindow.c:8577:3
msgid ""
"@cursor: the cursor to display while the grab is active. If this is %NULL "
"then the normal cursors are used for @window and its descendants, and the "
"cursor for @window is used for all other windows."
msgstr ""

# used by: gdk_pointer_grab:
#. used by: gdk_pointer_grab:
#: gdkwindow.c:8580:3
msgid ""
"@time_: the timestamp of the event which led to this pointer grab. This "
"usually comes from a #GdkEventButton struct, though %GDK_CURRENT_TIME can be "
"used if the time isn't known."
msgstr ""

# #used by: gdk_pointer_grab:
#. used by: gdk_pointer_grab:
#: gdkwindow.c:8584:4
msgid ""
"Grabs the pointer (usually a mouse) so that all events are passed to this "
"application until the pointer is ungrabbed with gdk_pointer_ungrab(), or the "
"grab window becomes unviewable. This overrides any previous pointer grab by "
"this client."
msgstr ""

# #used by: gdk_pointer_grab:
#. used by: gdk_pointer_grab:
#: gdkwindow.c:8589:4
msgid ""
"Pointer grabs are used for operations which need complete control over mouse "
"events, even if the mouse leaves the application. For example in GTK+ it is "
"used for Drag and Drop, for dragging the handle in the #GtkHPaned and "
"#GtkVPaned widgets."
msgstr ""

# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_pointer_grab:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_keyboard_grab:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_pointer_grab:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keyboard_grab:
#: gdkwindow.c:8608:1 gdkwindow.c:8723:1
msgid "Deprecated: 3.0: Use gdk_device_grab() instead."
msgstr ""

# used by: gdk_keyboard_grab:
#. used by: gdk_keyboard_grab:
#: gdkwindow.c:8704:6
msgid ""
"@owner_events: if %FALSE then all keyboard events are reported with respect "
"to @window. If %TRUE then keyboard events for this application are reported "
"as normal, but keyboard events outside this application are reported with "
"respect to @window. Both key press and key release events are always "
"reported, independant of the event mask set by the application."
msgstr ""

# #used by: gdk_keyboard_grab:
#. used by: gdk_keyboard_grab:
#: gdkwindow.c:8713:3
msgid ""
"Grabs the keyboard so that all events are passed to this application until "
"the keyboard is ungrabbed with gdk_keyboard_ungrab(). This overrides any "
"previous keyboard grab by this client."
msgstr ""

# used by: gdk_window_geometry_changed:
#. used by: gdk_window_geometry_changed:
#: gdkwindow.c:8802:1
msgid "@window: an embedded offscreen #GdkWindow"
msgstr ""

# #used by: gdk_window_geometry_changed:
#. used by: gdk_window_geometry_changed:
#: gdkwindow.c:8804:3
msgid ""
"This function informs GDK that the geometry of an embedded offscreen window "
"has changed. This is necessary for GDK to keep track of which offscreen "
"window the pointer is in."
msgstr ""

# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_set_source_events:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_get_source_events:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_source_events:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_source_events:
#: gdkwindow.c:8869:1 gdkwindow.c:8938:1
msgid "@source: a #GdkInputSource to define the source class."
msgstr ""

# #used by: gdk_window_set_source_events:
#. used by: gdk_window_set_source_events:
#: gdkwindow.c:8872:4
msgid ""
"Sets the event mask for any floating device (i.e. not attached to any "
"visible pointer) that has the source defined as @source. This event mask "
"will be applied both to currently existing, newly added devices after this "
"call, and devices being attached/detached."
msgstr ""

# #used by: gdk_window_get_source_events:
#. used by: gdk_window_get_source_events:
#: gdkwindow.c:8940:2
msgid ""
"Returns the event mask for @window corresponding to the device class "
"specified by @source."
msgstr ""

# #used by: gdk_window_get_source_events:
#. used by: gdk_window_get_source_events:
#: gdkwindow.c:8943:1
msgid "Returns: source event mask for @window"
msgstr ""

# used by: gdk_window_create_similar_surface:
#. used by: gdk_window_create_similar_surface:
#: gdkwindow.c:9677:1
msgid "@window: window to make new surface similar to"
msgstr ""

# used by: gdk_window_create_similar_surface:
#. used by: gdk_window_create_similar_surface:
#: gdkwindow.c:9678:1
msgid "@content: the content for the new surface"
msgstr ""

# used by: gdk_window_create_similar_surface:
#. used by: gdk_window_create_similar_surface:
#: gdkwindow.c:9679:1
msgid "@width: width of the new surface"
msgstr ""

# used by: gdk_window_create_similar_surface:
#. used by: gdk_window_create_similar_surface:
#: gdkwindow.c:9680:1
msgid "@height: height of the new surface"
msgstr ""

# #used by: gdk_window_create_similar_surface:
#. used by: gdk_window_create_similar_surface:
#: gdkwindow.c:9682:6
msgid ""
"Create a new surface that is as compatible as possible with the given "
"@window. For example the new surface will have the same fallback resolution "
"and font options as @window. Generally, the new surface will also use the "
"same backend as @window, unless that is not possible for some reason. The "
"type of the returned surface may be examined with cairo_surface_get_type()."
msgstr ""

# #used by: gdk_window_create_similar_surface:
#. used by: gdk_window_create_similar_surface:
#: gdkwindow.c:9689:2
msgid ""
"Initially the surface contents are all 0 (transparent if contents have "
"transparency, black otherwise.)"
msgstr ""

# #used by: gdk_window_create_similar_surface:
#. used by: gdk_window_create_similar_surface:
#: gdkwindow.c:9692:3
msgid ""
"Returns: a pointer to the newly allocated surface. The caller owns the "
"surface and should call cairo_surface_destroy() when done with it."
msgstr ""

#. used by: gdk_window_create_similar_surface:
#: gdkwindow.c:9696:3
msgid ""
"This function always returns a valid pointer, but it will return a pointer "
"to a \"nil\" surface if @other is already in an error state or any other "
"error occurs."
msgstr ""

# #used by: SECTION:windows
#. used by: SECTION:windows
#: gdkwindow.c:97:7
msgid ""
"To integrate an offscreen window into a window hierarchy, one has to call "
"gdk_offscreen_window_set_embedder() and handle a number of signals. The "
"#GdkWindow::pick-embedded-child signal on the embedder window is used to "
"select an offscreen child at given coordinates, and the #GdkWindow::to-"
"embedder and #GdkWindow::from-embedder signals on the offscreen window are "
"used to translate coordinates between the embedder and the offscreen window."
msgstr ""

# used by: gdk_window_focus:
#. used by: gdk_window_focus:
#: gdkwindow.c:9726:1
msgid "@timestamp: timestamp of the event triggering the window focus"
msgstr ""

# #used by: gdk_window_focus:
#. used by: gdk_window_focus:
#: gdkwindow.c:9728:2
msgid ""
"Sets keyboard focus to @window. In most cases, gtk_window_present() should "
"be used on a #GtkWindow, rather than calling this function."
msgstr ""

# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_set_type_hint:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_get_type_hint:
# #-#-#-#-#  gdkwindow.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_window_set_modal_hint:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_type_hint:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_get_type_hint:
#. #-#-#-#-#  gdkwindow.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_window_set_modal_hint:
#: gdkwindow.c:9741:1 gdkwindow.c:9760:1 gdkwindow.c:9776:1
msgid "@window: A toplevel #GdkWindow"
msgstr ""

# used by: gdk_window_set_type_hint:
#. used by: gdk_window_set_type_hint:
#: gdkwindow.c:9742:1
msgid "@hint: A hint of the function this window will have"
msgstr ""

# #used by: gdk_window_set_type_hint:
#. used by: gdk_window_set_type_hint:
#: gdkwindow.c:9744:4
msgid ""
"The application can use this call to provide a hint to the window manager "
"about the functionality of a window. The window manager can use this "
"information when determining the decoration and behaviour of the window."
msgstr ""

# #used by: gdk_window_set_type_hint:
#. used by: gdk_window_set_type_hint:
#: gdkwindow.c:9749:1
msgid "The hint must be set before the window is mapped."
msgstr ""

# #used by: gdk_window_get_type_hint:
#. used by: gdk_window_get_type_hint:
#: gdkwindow.c:9762:1
msgid "This function returns the type hint set for a window."
msgstr ""

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_idle:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_seconds_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: gdk_threads_add_timeout_seconds:
#. used by: gdk_window_get_type_hint:
#: gdkwindow.c:9764:1
#, fuzzy
msgid "Return value: The type hint set for @window"
msgstr "Return value: 事件的屏幕。"

# used by: gdk_window_set_modal_hint:
#. used by: gdk_window_set_modal_hint:
#: gdkwindow.c:9777:1
msgid "@modal: %TRUE if the window is modal, %FALSE otherwise."
msgstr ""

# #used by: gdk_window_set_modal_hint:
#. used by: gdk_window_set_modal_hint:
#: gdkwindow.c:9779:4
msgid ""
"The application can use this hint to tell the window manager that a certain "
"window has modal behaviour. The window manager can use this information to "
"handle modal windows in a special way."
msgstr ""

# #used by: gdk_window_set_modal_hint:
#. used by: gdk_window_set_modal_hint:
#: gdkwindow.c:9784:2
msgid ""
"You should only use this on windows for which you have previously called "
"gdk_window_set_transient_for()"
msgstr ""

# used by: gdk_window_set_skip_taskbar_hint:
#. used by: gdk_window_set_skip_taskbar_hint:
#: gdkwindow.c:9797:1
msgid "@skips_taskbar: %TRUE to skip the taskbar"
msgstr ""

# #used by: gdk_window_set_skip_taskbar_hint:
#. used by: gdk_window_set_skip_taskbar_hint:
#: gdkwindow.c:9799:6
msgid ""
"Toggles whether a window should appear in a task list or window list. If a "
"window's semantic type as specified with gdk_window_set_type_hint() already "
"fully describes the window, this function should <emphasis>not</emphasis> be "
"called in addition, instead you should allow the window to be treated "
"according to standard policy for its semantic type."
msgstr ""

# used by: gdk_window_set_skip_pager_hint:
#. used by: gdk_window_set_skip_pager_hint:
#: gdkwindow.c:9818:1
msgid "@skips_pager: %TRUE to skip the pager"
msgstr ""

# #used by: gdk_window_set_skip_pager_hint:
#. used by: gdk_window_set_skip_pager_hint:
#: gdkwindow.c:9820:8
msgid ""
"Toggles whether a window should appear in a pager (workspace switcher, or "
"other desktop utility program that displays a small thumbnail representation "
"of the windows on the desktop). If a window's semantic type as specified "
"with gdk_window_set_type_hint() already fully describes the window, this "
"function should <emphasis>not</emphasis> be called in addition, instead you "
"should allow the window to be treated according to standard policy for its "
"semantic type."
msgstr ""

# used by: gdk_window_set_urgency_hint:
#. used by: gdk_window_set_urgency_hint:
#: gdkwindow.c:9841:1
msgid "@urgent: %TRUE if the window is urgent"
msgstr ""

# #used by: gdk_window_set_urgency_hint:
#. used by: gdk_window_set_urgency_hint:
#: gdkwindow.c:9843:2
msgid "Toggles whether a window needs the user's urgent attention."
msgstr ""

# used by: gdk_window_set_geometry_hints:
#. used by: gdk_window_set_geometry_hints:
#: gdkwindow.c:9858:1
msgid "@geometry: geometry hints"
msgstr ""

# used by: gdk_window_set_geometry_hints:
#. used by: gdk_window_set_geometry_hints:
#: gdkwindow.c:9859:1
msgid "@geom_mask: bitmask indicating fields of @geometry to pay attention to"
msgstr ""

# #used by: gdk_window_set_geometry_hints:
#. used by: gdk_window_set_geometry_hints:
#: gdkwindow.c:9861:3
msgid ""
"Sets the geometry hints for @window. Hints flagged in @geom_mask are set, "
"hints not flagged in @geom_mask are unset. To unset all hints, use a "
"@geom_mask of 0 and a @geometry of %NULL."
msgstr ""

# #used by: gdk_window_set_geometry_hints:
#. used by: gdk_window_set_geometry_hints:
#: gdkwindow.c:9865:7
msgid ""
"This function provides hints to the windowing system about acceptable sizes "
"for a toplevel window. The purpose of this is to constrain user resizing, "
"but the windowing system will typically  (but is not required to) also "
"constrain the current size of the window to the provided values and "
"constrain programatic resizing via gdk_window_resize() or "
"gdk_window_move_resize()."
msgstr ""

# #used by: gdk_window_set_geometry_hints:
#. used by: gdk_window_set_geometry_hints:
#: gdkwindow.c:9873:4
msgid ""
"Note that on X11, this effect has no effect on windows of type "
"%GDK_WINDOW_TEMP or windows where override redirect has been turned on via "
"gdk_window_set_override_redirect() since these windows are not resizable by "
"the user."
msgstr ""

# #used by: gdk_window_set_geometry_hints:
#. used by: gdk_window_set_geometry_hints:
#: gdkwindow.c:9878:4
msgid ""
"Since you can't count on the windowing system doing the constraints for "
"programmatic resizes, you should generally call gdk_window_constrain_size() "
"yourself to determine appropriate sizes."
msgstr ""

# used by: gdk_window_set_title:
#. used by: gdk_window_set_title:
#: gdkwindow.c:9895:1
msgid "@title: title of @window"
msgstr ""

# #used by: gdk_window_set_title:
#. used by: gdk_window_set_title:
#: gdkwindow.c:9897:5
msgid ""
"Sets the title of a toplevel window, to be displayed in the titlebar. If you "
"haven't explicitly set the icon name for the window (using "
"gdk_window_set_icon_name()), the icon name will be set to @title as well. "
"@title must be in UTF-8 encoding (as with all user-readable strings in GDK/"
"GTK+). @title may not be %NULL."
msgstr ""

# used by: gdk_window_set_role:
#. used by: gdk_window_set_role:
#: gdkwindow.c:9913:1
msgid "@role: a string indicating its role"
msgstr ""

# #used by: gdk_window_set_role:
#. used by: gdk_window_set_role:
#: gdkwindow.c:9915:2
msgid ""
"When using GTK+, typically you should use gtk_window_set_role() instead of "
"this low-level function."
msgstr ""

# #used by: gdk_window_set_role:
#. used by: gdk_window_set_role:
#: gdkwindow.c:9918:9
msgid ""
"The window manager and session manager use a window's role to distinguish it "
"from other kinds of window in the same application. When an application is "
"restarted after being saved in a previous session, all windows with the same "
"title and role are treated as interchangeable.  So if you have two windows "
"with the same title that should be distinguished for session management "
"purposes, you should set the role on those windows. It doesn't matter what "
"string you use for the role, as long as you have a different role for each "
"non-interchangeable kind of window."
msgstr ""

# used by: gdk_window_set_startup_id:
#. used by: gdk_window_set_startup_id:
#: gdkwindow.c:9939:1
msgid "@startup_id: a string with startup-notification identifier"
msgstr ""

# #used by: gdk_window_set_startup_id:
#. used by: gdk_window_set_startup_id:
#: gdkwindow.c:9941:2
msgid ""
"When using GTK+, typically you should use gtk_window_set_startup_id() "
"instead of this low-level function."
msgstr ""

# used by: gdk_window_set_transient_for:
#. used by: gdk_window_set_transient_for:
#: gdkwindow.c:9957:1
msgid "@parent: another toplevel #GdkWindow"
msgstr ""

# #used by: gdk_window_set_transient_for:
#. used by: gdk_window_set_transient_for:
#: gdkwindow.c:9959:4
msgid ""
"Indicates to the window manager that @window is a transient dialog "
"associated with the application window @parent. This allows the window "
"manager to do things like center @window on @parent and keep @window above "
"@parent."
msgstr ""

# #used by: gdk_window_set_transient_for:
#. used by: gdk_window_set_transient_for:
#: gdkwindow.c:9964:2
msgid ""
"See gtk_window_set_transient_for() if you're using #GtkWindow or #GtkDialog."
msgstr ""

# used by: gdk_window_get_root_origin:
#. used by: gdk_window_get_root_origin:
#: gdkwindow.c:9977:1
msgid "@x: (out): return location for X position of window frame"
msgstr ""

# used by: gdk_window_get_root_origin:
#. used by: gdk_window_get_root_origin:
#: gdkwindow.c:9978:1
msgid "@y: (out): return location for Y position of window frame"
msgstr ""

# #used by: gdk_window_get_root_origin:
#. used by: gdk_window_get_root_origin:
#: gdkwindow.c:9980:2
msgid ""
"Obtains the top-left corner of the window manager frame in root window "
"coordinates."
msgstr ""

# used by: gdk_window_get_frame_extents:
#. used by: gdk_window_get_frame_extents:
#: gdkwindow.c:9995:1
msgid "@rect: rectangle to fill with bounding box of the window frame"
msgstr ""

# #used by: gdk_window_get_frame_extents:
#. used by: gdk_window_get_frame_extents:
#: gdkwindow.c:9997:4
msgid ""
"Obtains the bounding box of the window, including window manager titlebar/"
"borders if any. The frame position is given in root window coordinates. To "
"get the position of the window itself (rather than the frame) in root window "
"coordinates, use gdk_window_get_origin()."
msgstr ""

#. used by: GdkWindowHints:
#: gdkwindow.h:118:1
msgid "@GDK_HINT_POS: indicates that the program has positioned the window"
msgstr ""

#. used by: GdkWindowHints:
#: gdkwindow.h:119:1
msgid "@GDK_HINT_MIN_SIZE: min size fields are set"
msgstr ""

#. used by: GdkWindowHints:
#: gdkwindow.h:120:1
msgid "@GDK_HINT_MAX_SIZE: max size fields are set"
msgstr ""

#. used by: GdkWindowHints:
#: gdkwindow.h:121:1
msgid "@GDK_HINT_BASE_SIZE: base size fields are set"
msgstr ""

#. used by: GdkWindowHints:
#: gdkwindow.h:122:1
msgid "@GDK_HINT_ASPECT: aspect ratio fields are set"
msgstr ""

#. used by: GdkWindowHints:
#: gdkwindow.h:123:1
msgid "@GDK_HINT_RESIZE_INC: resize increment fields are set"
msgstr ""

#. used by: GdkWindowHints:
#: gdkwindow.h:124:1
msgid "@GDK_HINT_WIN_GRAVITY: window gravity field is set"
msgstr ""

#. used by: GdkWindowHints:
#: gdkwindow.h:125:2
msgid ""
"@GDK_HINT_USER_POS: indicates that the window's position was explicitly set "
"by the user"
msgstr ""

#. used by: GdkWindowHints:
#: gdkwindow.h:127:2
msgid ""
"@GDK_HINT_USER_SIZE: indicates that the window's size was explicitly set by "
"the user"
msgstr ""

#. used by: GdkWindowHints:
#: gdkwindow.h:130:8
msgid ""
"Used to indicate which fields of a #GdkGeometry struct should be paid "
"attention to. Also, the presence/absence of @GDK_HINT_POS, "
"@GDK_HINT_USER_POS, and @GDK_HINT_USER_SIZE is significant, though they "
"don't directly refer to #GdkGeometry fields. @GDK_HINT_USER_POS will be set "
"automatically by #GtkWindow if you call gtk_window_move(). "
"@GDK_HINT_USER_POS and @GDK_HINT_USER_SIZE should be set if the user "
"specified a size/position using a --geometry command-line argument; "
"gtk_window_parse_geometry() automatically sets these flags."
msgstr ""

#. used by: GdkWindowTypeHint:
#: gdkwindow.h:155:1
msgid "@GDK_WINDOW_TYPE_HINT_NORMAL: Normal toplevel window."
msgstr ""

#. used by: GdkWindowTypeHint:
#: gdkwindow.h:156:1
msgid "@GDK_WINDOW_TYPE_HINT_DIALOG: Dialog window."
msgstr ""

#. used by: GdkWindowTypeHint:
#: gdkwindow.h:157:2
msgid ""
"@GDK_WINDOW_TYPE_HINT_MENU: Window used to implement a menu; GTK+ uses this "
"hint only for torn-off menus, see #GtkTearoffMenuItem."
msgstr ""

#. used by: GdkWindowTypeHint:
#: gdkwindow.h:159:1
msgid "@GDK_WINDOW_TYPE_HINT_TOOLBAR: Window used to implement toolbars."
msgstr ""

#. used by: GdkWindowTypeHint:
#: gdkwindow.h:160:2
msgid ""
"@GDK_WINDOW_TYPE_HINT_SPLASHSCREEN: Window used to display a splash screen "
"during application startup."
msgstr ""

#. used by: GdkWindowTypeHint:
#: gdkwindow.h:162:2
msgid ""
"@GDK_WINDOW_TYPE_HINT_UTILITY: Utility windows which are not detached "
"toolbars or dialogs."
msgstr ""

#. used by: GdkWindowTypeHint:
#: gdkwindow.h:164:1
msgid "@GDK_WINDOW_TYPE_HINT_DOCK: Used for creating dock or panel windows."
msgstr ""

#. used by: GdkWindowTypeHint:
#: gdkwindow.h:165:2
msgid ""
"@GDK_WINDOW_TYPE_HINT_DESKTOP: Used for creating the desktop background "
"window."
msgstr ""

#. used by: GdkWindowTypeHint:
#: gdkwindow.h:167:1
msgid "@GDK_WINDOW_TYPE_HINT_DROPDOWN_MENU: A menu that belongs to a menubar."
msgstr ""

#. used by: GdkWindowTypeHint:
#: gdkwindow.h:168:2
msgid ""
"@GDK_WINDOW_TYPE_HINT_POPUP_MENU: A menu that does not belong to a menubar, "
"e.g. a context menu."
msgstr ""

#. used by: GdkWindowTypeHint:
#: gdkwindow.h:170:1
msgid "@GDK_WINDOW_TYPE_HINT_TOOLTIP: A tooltip."
msgstr ""

#. used by: GdkWindowTypeHint:
#: gdkwindow.h:171:2
msgid ""
"@GDK_WINDOW_TYPE_HINT_NOTIFICATION: A notification - typically a \"bubble\" "
"that belongs to a status icon."
msgstr ""

#. used by: GdkWindowTypeHint:
#: gdkwindow.h:173:1
msgid "@GDK_WINDOW_TYPE_HINT_COMBO: A popup from a combo box."
msgstr ""

#. used by: GdkWindowTypeHint:
#: gdkwindow.h:174:1
msgid ""
"@GDK_WINDOW_TYPE_HINT_DND: A window that is used to implement a DND cursor."
msgstr ""

#. used by: GdkWindowTypeHint:
#: gdkwindow.h:176:3
msgid ""
"These are hints for the window manager that indicate what type of function "
"the window has. The window manager can use this when determining decoration "
"and behaviour of the window. The hint must be set before mapping the window."
msgstr ""

#. used by: GdkWindowTypeHint:
#: gdkwindow.h:180:4
msgid ""
"See the <ulink url=\"http://www.freedesktop.org/Standards/wm-spec\">Extended "
"Window Manager Hints</ulink> specification for more details about window "
"types."
msgstr ""

#. used by: GdkWMDecoration:
#: gdkwindow.h:210:1
msgid "@GDK_DECOR_ALL: all decorations should be applied."
msgstr ""

#. used by: GdkWMDecoration:
#: gdkwindow.h:211:1
msgid "@GDK_DECOR_BORDER: a frame should be drawn around the window."
msgstr ""

#. used by: GdkWMDecoration:
#: gdkwindow.h:212:1
msgid "@GDK_DECOR_RESIZEH: the frame should have resize handles."
msgstr ""

#. used by: GdkWMDecoration:
#: gdkwindow.h:213:1
msgid "@GDK_DECOR_TITLE: a titlebar should be placed above the window."
msgstr ""

#. used by: GdkWMDecoration:
#: gdkwindow.h:214:1
msgid "@GDK_DECOR_MENU: a button for opening a menu should be included."
msgstr ""

#. used by: GdkWMDecoration:
#: gdkwindow.h:215:1
msgid "@GDK_DECOR_MINIMIZE: a minimize button should be included."
msgstr ""

#. used by: GdkWMDecoration:
#: gdkwindow.h:216:1
msgid "@GDK_DECOR_MAXIMIZE: a maximize button should be included."
msgstr ""

#. used by: GdkWMDecoration:
#: gdkwindow.h:218:3
msgid ""
"These are hints originally defined by the Motif toolkit. The window manager "
"can use them when determining how to decorate the window. The hint must be "
"set before mapping the window."
msgstr ""

#. used by: GdkWMFunction:
#: gdkwindow.h:235:1
msgid "@GDK_FUNC_ALL: all functions should be offered."
msgstr ""

#. used by: GdkWMFunction:
#: gdkwindow.h:236:1
msgid "@GDK_FUNC_RESIZE: the window should be resizable."
msgstr ""

#. used by: GdkWMFunction:
#: gdkwindow.h:237:1
msgid "@GDK_FUNC_MOVE: the window should be movable."
msgstr ""

#. used by: GdkWMFunction:
#: gdkwindow.h:238:1
msgid "@GDK_FUNC_MINIMIZE: the window should be minimizable."
msgstr ""

#. used by: GdkWMFunction:
#: gdkwindow.h:239:1
msgid "@GDK_FUNC_MAXIMIZE: the window should be maximizable."
msgstr ""

#. used by: GdkWMFunction:
#: gdkwindow.h:240:1
msgid "@GDK_FUNC_CLOSE: the window should be closable."
msgstr ""

#. used by: GdkWMFunction:
#: gdkwindow.h:242:3
msgid ""
"These are hints originally defined by the Motif toolkit. The window manager "
"can use them when determining the functions to offer for the window. The "
"hint must be set before mapping the window."
msgstr ""

#. used by: GdkGravity:
#: gdkwindow.h:262:1
msgid "@GDK_GRAVITY_NORTH_WEST: the reference point is at the top left corner."
msgstr ""

#. used by: GdkGravity:
#: gdkwindow.h:263:1
msgid ""
"@GDK_GRAVITY_NORTH: the reference point is in the middle of the top edge."
msgstr ""

#. used by: GdkGravity:
#: gdkwindow.h:264:1
msgid ""
"@GDK_GRAVITY_NORTH_EAST: the reference point is at the top right corner."
msgstr ""

#. used by: GdkGravity:
#: gdkwindow.h:265:1
msgid ""
"@GDK_GRAVITY_WEST: the reference point is at the middle of the left edge."
msgstr ""

#. used by: GdkGravity:
#: gdkwindow.h:266:1
msgid ""
"@GDK_GRAVITY_CENTER: the reference point is at the center of the window."
msgstr ""

#. used by: GdkGravity:
#: gdkwindow.h:267:1
msgid ""
"@GDK_GRAVITY_EAST: the reference point is at the middle of the right edge."
msgstr ""

#. used by: GdkGravity:
#: gdkwindow.h:268:1
msgid ""
"@GDK_GRAVITY_SOUTH_WEST: the reference point is at the lower left corner."
msgstr ""

#. used by: GdkGravity:
#: gdkwindow.h:269:1
msgid ""
"@GDK_GRAVITY_SOUTH: the reference point is at the middle of the lower edge."
msgstr ""

#. used by: GdkGravity:
#: gdkwindow.h:270:1
msgid ""
"@GDK_GRAVITY_SOUTH_EAST: the reference point is at the lower right corner."
msgstr ""

#. used by: GdkGravity:
#: gdkwindow.h:271:2
msgid ""
"@GDK_GRAVITY_STATIC: the reference point is at the top left corner of the "
"window itself, ignoring window manager decorations."
msgstr ""

#. used by: GdkGravity:
#: gdkwindow.h:274:5
msgid ""
"Defines the reference point of a window and the meaning of coordinates "
"passed to gtk_window_move(). See gtk_window_move() and the \"implementation "
"notes\" section of the <ulink url=\"http://www.freedesktop.org/Standards/wm-"
"spec\">Extended Window Manager Hints</ulink> specification for more details."
msgstr ""

#. used by: GdkWindowEdge:
#: gdkwindow.h:297:1
msgid "@GDK_WINDOW_EDGE_NORTH_WEST: the top left corner."
msgstr ""

#. used by: GdkWindowEdge:
#: gdkwindow.h:298:1
msgid "@GDK_WINDOW_EDGE_NORTH: the top edge."
msgstr ""

#. used by: GdkWindowEdge:
#: gdkwindow.h:299:1
msgid "@GDK_WINDOW_EDGE_NORTH_EAST: the top right corner."
msgstr ""

#. used by: GdkWindowEdge:
#: gdkwindow.h:300:1
msgid "@GDK_WINDOW_EDGE_WEST: the left edge."
msgstr ""

#. used by: GdkWindowEdge:
#: gdkwindow.h:301:1
msgid "@GDK_WINDOW_EDGE_EAST: the right edge."
msgstr ""

#. used by: GdkWindowEdge:
#: gdkwindow.h:302:1
msgid "@GDK_WINDOW_EDGE_SOUTH_WEST: the lower left corner."
msgstr ""

#. used by: GdkWindowEdge:
#: gdkwindow.h:303:1
msgid "@GDK_WINDOW_EDGE_SOUTH: the lower edge."
msgstr ""

#. used by: GdkWindowEdge:
#: gdkwindow.h:304:1
msgid "@GDK_WINDOW_EDGE_SOUTH_EAST: the lower right corner."
msgstr ""

#. used by: GdkWindowEdge:
#: gdkwindow.h:306:1
msgid "Determines a window edge or corner."
msgstr ""

#. used by: GdkWindowAttr:
#: gdkwindow.h:322:1
msgid "@title: title of the window (for toplevel windows)"
msgstr ""

#. used by: GdkWindowAttr:
#: gdkwindow.h:323:1
msgid "@event_mask: event mask (see gdk_window_set_events())"
msgstr ""

#. used by: GdkWindowAttr:
#: gdkwindow.h:324:1
msgid "@x: X coordinate relative to parent window (see gdk_window_move())"
msgstr ""

#. used by: GdkWindowAttr:
#: gdkwindow.h:325:1
msgid "@y: Y coordinate relative to parent window (see gdk_window_move())"
msgstr ""

#. used by: GdkWindowAttr:
#: gdkwindow.h:326:1
msgid "@width: width of window"
msgstr ""

#. used by: GdkWindowAttr:
#: gdkwindow.h:327:1
msgid "@height: height of window"
msgstr ""

#. used by: GdkWindowAttr:
#: gdkwindow.h:328:2
msgid ""
"@wclass: #GDK_INPUT_OUTPUT (normal window) or #GDK_INPUT_ONLY (invisible "
"window that receives events)"
msgstr ""

#. used by: GdkWindowAttr:
#: gdkwindow.h:330:1
msgid "@visual: #GdkVisual for window"
msgstr ""

#. used by: GdkWindowAttr:
#: gdkwindow.h:331:1
msgid "@window_type: type of window"
msgstr ""

#. used by: GdkWindowAttr:
#: gdkwindow.h:332:1
msgid "@cursor: cursor for the window (see gdk_window_set_cursor())"
msgstr ""

#. used by: GdkWindowAttr:
#: gdkwindow.h:333:1
msgid "@wmclass_name: don't use (see gtk_window_set_wmclass())"
msgstr ""

#. used by: GdkWindowAttr:
#: gdkwindow.h:334:1
msgid "@wmclass_class: don't use (see gtk_window_set_wmclass())"
msgstr ""

#. used by: GdkWindowAttr:
#: gdkwindow.h:335:1
msgid "@override_redirect: %TRUE to bypass the window manager"
msgstr ""

#. used by: GdkWindowAttr:
#: gdkwindow.h:336:1
msgid "@type_hint: a hint of the function of the window"
msgstr ""

#. used by: GdkWindowAttr:
#: gdkwindow.h:338:1
msgid "Attributes to use for a newly-created window."
msgstr ""

#. used by: GdkGeometry:
#: gdkwindow.h:359:2
msgid ""
"@min_width: minimum width of window (or -1 to use requisition, with "
"#GtkWindow only)"
msgstr ""

#. used by: GdkGeometry:
#: gdkwindow.h:361:2
msgid ""
"@min_height: minimum height of window (or -1 to use requisition, with "
"#GtkWindow only)"
msgstr ""

#. used by: GdkGeometry:
#: gdkwindow.h:363:2
msgid ""
"@max_width: maximum width of window (or -1 to use requisition, with "
"#GtkWindow only)"
msgstr ""

#. used by: GdkGeometry:
#: gdkwindow.h:365:2
msgid ""
"@max_height: maximum height of window (or -1 to use requisition, with "
"#GtkWindow only)"
msgstr ""

#. used by: GdkGeometry:
#: gdkwindow.h:367:2
msgid ""
"@base_width: allowed window widths are @base_width + @width_inc * N where N "
"is any integer (-1 allowed with #GtkWindow)"
msgstr ""

#. used by: GdkGeometry:
#: gdkwindow.h:369:2
msgid ""
"@base_height: allowed window widths are @base_height + @height_inc * N where "
"N is any integer (-1 allowed with #GtkWindow)"
msgstr ""

#. used by: GdkGeometry:
#: gdkwindow.h:371:1
msgid "@width_inc: width resize increment"
msgstr ""

#. used by: GdkGeometry:
#: gdkwindow.h:372:1
msgid "@height_inc: height resize increment"
msgstr ""

#. used by: GdkGeometry:
#: gdkwindow.h:373:1
msgid "@min_aspect: minimum width/height ratio"
msgstr ""

#. used by: GdkGeometry:
#: gdkwindow.h:374:1
msgid "@max_aspect: maximum width/height ratio"
msgstr ""

#. used by: GdkGeometry:
#: gdkwindow.h:375:1
msgid "@win_gravity: window gravity, see gtk_window_set_gravity()"
msgstr ""

#. used by: GdkGeometry:
#: gdkwindow.h:377:4
msgid ""
"The #GdkGeometry struct gives the window manager information about a "
"window's geometry constraints. Normally you would set these on the GTK+ "
"level using gtk_window_set_geometry_hints(). #GtkWindow then sets the hints "
"on the #GdkWindow it creates."
msgstr ""

#. used by: GdkGeometry:
#: gdkwindow.h:382:12
msgid ""
"gdk_window_set_geometry_hints() expects the hints to be fully valid already "
"and simply passes them to the window manager; in contrast, "
"gtk_window_set_geometry_hints() performs some interpretation. For example, "
"#GtkWindow will apply the hints to the geometry widget instead of the "
"toplevel window, if you set a geometry widget. Also, the @min_width/"
"@min_height/@max_width/@max_height fields may be set to -1, and #GtkWindow "
"will substitute the size request of the window or geometry widget. If the "
"minimum size hint is not provided, #GtkWindow will use its requisition as "
"the minimum size. If the minimum size is provided and a geometry widget is "
"set, #GtkWindow will take the minimum size as the minimum size of the "
"geometry widget rather than the entire window. The base size is treated "
"similarly."
msgstr ""

#. used by: GdkGeometry:
#: gdkwindow.h:395:9
msgid ""
"The canonical use-case for gtk_window_set_geometry_hints() is to get a "
"terminal widget to resize properly. Here, the terminal text area should be "
"the geometry widget; #GtkWindow will then automatically set the base size to "
"the size of other widgets in the terminal window, such as the menubar and "
"scrollbar. Then, the @width_inc and @height_inc fields should be set to the "
"size of one character in the terminal. Finally, the base size should be set "
"to the size of one character. The net effect is that the minimum size of the "
"terminal will have a 1x1 character terminal area, and only terminal sizes on "
"the \"character grid\" will be allowed."
msgstr ""

#. used by: GdkGeometry:
#: gdkwindow.h:405:2
msgid ""
"Here's an example of how the terminal example would be implemented, assuming "
"a terminal area widget called \"terminal\" and a toplevel window \"toplevel"
"\":"
msgstr ""

#. used by: GdkGeometry:
#: gdkwindow.h:426:6
msgid ""
"The other useful fields are the @min_aspect and @max_aspect fields; these "
"contain a width/height ratio as a floating point number. If a geometry "
"widget is set, the aspect applies to the geometry widget rather than the "
"entire window. The most common use of these hints is probably to set "
"@min_aspect and @max_aspect to the same value, thus forcing the window to "
"keep a constant aspect ratio."
msgstr ""

#. used by: GdkWindowWindowClass:
#: gdkwindow.h:45:1
msgid "@GDK_INPUT_OUTPUT: window for graphics and events"
msgstr ""

#. used by: GdkWindowWindowClass:
#: gdkwindow.h:46:1
msgid "@GDK_INPUT_ONLY: window for events only"
msgstr ""

#. used by: GdkWindowWindowClass:
#: gdkwindow.h:48:5
msgid ""
"@GDK_INPUT_OUTPUT windows are the standard kind of window you might expect. "
"Such windows receive events and are also displayed on screen. "
"@GDK_INPUT_ONLY windows are invisible; they are usually placed above other "
"windows in order to trap or filter the events. You can't draw on "
"@GDK_INPUT_ONLY windows."
msgstr ""

#. used by: GdkWindowType:
#: gdkwindow.h:62:2
msgid ""
"@GDK_WINDOW_ROOT: root window; this window has no parent, covers the entire "
"screen, and is created by the window system"
msgstr ""

#. used by: GdkWindowType:
#: gdkwindow.h:64:1
msgid "@GDK_WINDOW_TOPLEVEL: toplevel window (used to implement #GtkWindow)"
msgstr ""

#. used by: GdkWindowType:
#: gdkwindow.h:65:1
msgid "@GDK_WINDOW_CHILD: child window (used to implement e.g. #GtkEntry)"
msgstr ""

#. used by: GdkWindowType:
#: gdkwindow.h:66:2
msgid ""
"@GDK_WINDOW_TEMP: override redirect temporary window (used to implement "
"#GtkMenu)"
msgstr ""

#. used by: GdkWindowType:
#: gdkwindow.h:68:1
msgid "@GDK_WINDOW_FOREIGN: foreign window (see gdk_window_foreign_new())"
msgstr ""

#. used by: GdkWindowType:
#: gdkwindow.h:69:2
msgid ""
"@GDK_WINDOW_OFFSCREEN: offscreen window (see <xref linkend=\"OFFSCREEN-"
"WINDOWS\"/>). Since 2.18"
msgstr ""

#. used by: GdkWindowType:
#: gdkwindow.h:72:1
msgid "Describes the kind of window."
msgstr ""

#. used by: GdkWindowChildFunc:
#: gdkwindow.h:812:3
msgid ""
"A function of this type is passed to gdk_window_invalidate_maybe_recurse(). "
"It gets called for each child of the window to determine whether to "
"recursively invalidate it or now."
msgstr ""

# #used by: gdk_display_open_default_libgtk_only:
#. used by: GdkWindowChildFunc:
#: gdkwindow.h:816:1
#, fuzzy
msgid "Returns: %TRUE to invalidate @window recursively"
msgstr "Return value: 如果指定的axis 可以找到，返回%TRUE，否则返回%NULL。"

#. used by: GdkWindowAttributesType:
#: gdkwindow.h:86:1
msgid "@GDK_WA_TITLE: Honor the title field"
msgstr ""

#. used by: GdkWindowAttributesType:
#: gdkwindow.h:87:1
msgid "@GDK_WA_X: Honor the X coordinate field"
msgstr ""

#. used by: GdkWindowAttributesType:
#: gdkwindow.h:88:1
msgid "@GDK_WA_Y: Honor the Y coordinate field"
msgstr ""

#. used by: GdkWindowAttributesType:
#: gdkwindow.h:89:1
msgid "@GDK_WA_CURSOR: Honor the cursor field"
msgstr ""

#. used by: GdkWindowAttributesType:
#: gdkwindow.h:90:1
msgid "@GDK_WA_VISUAL: Honor the visual field"
msgstr ""

#. used by: GdkWindowAttributesType:
#: gdkwindow.h:91:1
msgid "@GDK_WA_WMCLASS: Honor the wmclass_class and wmclass_name fields"
msgstr ""

#. used by: GdkWindowAttributesType:
#: gdkwindow.h:92:1
msgid "@GDK_WA_NOREDIR: Honor the override_redirect field"
msgstr ""

#. used by: GdkWindowAttributesType:
#: gdkwindow.h:93:1
msgid "@GDK_WA_TYPE_HINT: Honor the type_hint field"
msgstr ""

#. used by: GdkWindowAttributesType:
#: gdkwindow.h:95:6
msgid ""
"Used to indicate which fields in the #GdkWindowAttr struct should be "
"honored. For example, if you filled in the \"cursor\" and \"x\" fields of "
"#GdkWindowAttr, pass \"@GDK_WA_X | @GDK_WA_CURSOR\" to gdk_window_new(). "
"Fields in #GdkWindowAttr not covered by a bit in this enum are required; for "
"example, the @width/@height, @wclass, and @window_type fields are required, "
"they have no corresponding flag in #GdkWindowAttributesType."
msgstr ""

# used by: gdk_window_redirect_to_drawable:
#~ msgid "@dest_x: x position in @drawable"
#~ msgstr "@dest_x: 在@drawable中的x 坐标位置"

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_idle_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_idle:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_seconds_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_seconds:
#~ msgid "@data: data to pass to @function"
#~ msgstr "@data: 传递给@function的数据"

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_idle_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_idle:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_seconds_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_seconds:
#~ msgid "@function: the #GdkFunction to use"
#~ msgstr "@function: 将使用的 #GdkFunction 函数"

# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_idle_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_idle:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_seconds_full:
# #-#-#-#-#  gdk.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: gdk_threads_add_timeout_seconds:
#~ msgid "@data: callback data passed to @function."
#~ msgstr "@data: 传递给@function的回调数据"
