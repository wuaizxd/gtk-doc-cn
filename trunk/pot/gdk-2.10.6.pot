# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: gdk 2.10.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2007-03-07 15:17-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"

# #-#-#-#-#  gdkcairo.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_cairo_create:
# #-#-#-#-#  gdkdraw.pot (gdk 2.10.6)  #-#-#-#-#
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_drawable_set_data:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_drawable_get_data:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_drawable_get_size:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_drawable_get_visual:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_drawable_get_depth:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_drawable_get_screen:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_drawable_get_display:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_drawable_set_colormap:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_drawable_get_colormap:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_drawable_ref:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_drawable_unref:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_drawable:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_glyphs:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_glyphs_transformed:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_trapezoids:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_drawable_copy_to_image:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_drawable_get_image:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_drawable_get_clip_region:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_drawable_get_visible_region:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: _gdk_drawable_ref_cairo_surface:
# #-#-#-#-#  gdkimage.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_image_get:
# #-#-#-#-#  gdkrgb.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_rgb_32_image_dithalign:
#: gdkcairo.c:28:1 gdkdraw.c:89:1 gdkdraw.c:114:1 gdkdraw.c:134:1
#: gdkdraw.c:158:1 gdkdraw.c:174:1 gdkdraw.c:191:1 gdkdraw.c:209:1
#: gdkdraw.c:227:1 gdkdraw.c:253:1 gdkdraw.c:270:1 gdkdraw.c:285:1
#: gdkdraw.c:590:1 gdkdraw.c:885:1 gdkdraw.c:919:1 gdkdraw.c:958:1
#: gdkdraw.c:1003:1 gdkdraw.c:1079:1 gdkdraw.c:1194:1 gdkdraw.c:1216:1
#: gdkdraw.c:1249:1 gdkimage.c:68:1 gdkrgb.c:3415:1
msgid "@drawable: a #GdkDrawable"
msgstr ""

# #used by: gdk_cairo_create:
#: gdkcairo.c:30:1
msgid "Creates a Cairo context for drawing to @drawable."
msgstr ""

# #used by: gdk_cairo_create:
#: gdkcairo.c:32:2
msgid ""
"Return value: A newly created Cairo context. Free with cairo_destroy() when "
"you are done drawing."
msgstr ""

# #-#-#-#-#  gdkcairo.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_cairo_create:
# #-#-#-#-#  gdkcairo.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_cairo_set_source_color:
# #-#-#-#-#  gdkcairo.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_cairo_rectangle:
# #-#-#-#-#  gdkcairo.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_cairo_region:
# #-#-#-#-#  gdkcairo.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_cairo_set_source_pixbuf:
#: gdkcairo.c:35:1 gdkcairo.c:59:1 gdkcairo.c:81:1 gdkcairo.c:102:1
#: gdkcairo.c:136:1
msgid "Since: 2.8"
msgstr ""

# #-#-#-#-#  gdkcairo.pot (gdk 2.10.6)  #-#-#-#-#
# #-#-#-#-#  gdkcairo.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_cairo_set_source_color:
# #-#-#-#-#  gdkcairo.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_cairo_rectangle:
# #-#-#-#-#  gdkcairo.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_cairo_region:
# #-#-#-#-#  gdkgc.pot (gdk 2.10.6)  #-#-#-#-#
# used by: _gdk_gc_update_context:
#: gdkcairo.c:54:1 gdkcairo.c:76:1 gdkcairo.c:97:1 gdkgc.c:1108:1
msgid "@cr: a #cairo_t"
msgstr ""

# #-#-#-#-#  gdkcairo.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_cairo_set_source_color:
# #-#-#-#-#  gdkrgb.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_rgb_find_color:
#: gdkcairo.c:55:1 gdkrgb.c:822:1
msgid "@color: a #GdkColor"
msgstr ""

# #used by: gdk_cairo_set_source_color:
#: gdkcairo.c:57:1
msgid "Sets the specified #GdkColor as the source color of @cr."
msgstr ""

# #-#-#-#-#  gdkcairo.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_cairo_rectangle:
# #-#-#-#-#  gdkregion-generic.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_region_rectangle:
#: gdkcairo.c:77:1 gdkregion-generic.c:127:1
msgid "@rectangle: a #GdkRectangle"
msgstr ""

# #used by: gdk_cairo_rectangle:
#: gdkcairo.c:79:1
msgid "Adds the given rectangle to the current path of @cr."
msgstr ""

# #-#-#-#-#  gdkcairo.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_cairo_region:
# #-#-#-#-#  gdkregion-generic.pot (gdk 2.10.6)  #-#-#-#-#
# #-#-#-#-#  gdkregion-generic.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_region_copy:
# #-#-#-#-#  gdkregion-generic.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_region_get_clipbox:
# #-#-#-#-#  gdkregion-generic.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_region_get_rectangles:
# #-#-#-#-#  gdkregion-generic.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_region_destroy:
# #-#-#-#-#  gdkregion-generic.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_region_offset:
# #-#-#-#-#  gdkregion-generic.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_region_shrink:
# #-#-#-#-#  gdkregion-generic.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_region_empty:
# #-#-#-#-#  gdkregion-generic.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_region_point_in:
# #-#-#-#-#  gdkregion-generic.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_region_spans_intersect_foreach:
# #-#-#-#-#  gdkwindow.pot (gdk 2.10.6)  #-#-#-#-#
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_invalidate_maybe_recurse:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_invalidate_region:
#: gdkcairo.c:98:1 gdkregion-generic.c:158:1 gdkregion-generic.c:180:1
#: gdkregion-generic.c:202:1 gdkregion-generic.c:329:1
#: gdkregion-generic.c:346:1 gdkregion-generic.c:440:1
#: gdkregion-generic.c:1506:1 gdkregion-generic.c:1560:1
#: gdkregion-generic.c:1746:1 gdkwindow.c:2517:1 gdkwindow.c:2639:1
msgid "@region: a #GdkRegion"
msgstr ""

# #used by: gdk_cairo_region:
#: gdkcairo.c:100:1
msgid "Adds the given region to the current path of @cr."
msgstr ""

# #-#-#-#-#  gdkcairo.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_cairo_set_source_pixbuf:
# #-#-#-#-#  gdkcairo.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_cairo_set_source_pixmap:
#: gdkcairo.c:127:1 gdkcairo.c:229:1
msgid "@cr: a #Cairo context"
msgstr ""

# #-#-#-#-#  gdkcairo.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_cairo_set_source_pixbuf:
# #-#-#-#-#  gdkdraw.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_pixbuf:
#: gdkcairo.c:128:1 gdkdraw.c:711:1
msgid "@pixbuf: a #GdkPixbuf"
msgstr ""

# used by: gdk_cairo_set_source_pixbuf:
#: gdkcairo.c:129:1
msgid ""
"@pixbuf_x: X coordinate of location to place upper left corner of @pixbuf"
msgstr ""

# used by: gdk_cairo_set_source_pixbuf:
#: gdkcairo.c:130:1
msgid ""
"@pixbuf_y: Y coordinate of location to place upper left corner of @pixbuf"
msgstr ""

# #used by: gdk_cairo_set_source_pixbuf:
#: gdkcairo.c:132:3
msgid ""
"Sets the given pixbuf as the source pattern for the Cairo context. The "
"pattern has an extend mode of %CAIRO_EXTEND_NONE and is aligned so that the "
"origin of @pixbuf is @pixbuf_x, @pixbuf_y"
msgstr ""

# used by: gdk_cairo_set_source_pixmap:
#: gdkcairo.c:230:1
msgid "@pixmap: a #GdkPixmap"
msgstr ""

# used by: gdk_cairo_set_source_pixmap:
#: gdkcairo.c:231:1
msgid ""
"@pixmap_x: X coordinate of location to place upper left corner of @pixmap"
msgstr ""

# used by: gdk_cairo_set_source_pixmap:
#: gdkcairo.c:232:1
msgid ""
"@pixmap_y: Y coordinate of location to place upper left corner of @pixmap"
msgstr ""

# #used by: gdk_cairo_set_source_pixmap:
#: gdkcairo.c:234:3
msgid ""
"Sets the given pixmap as the source pattern for the Cairo context. The "
"pattern has an extend mode of %CAIRO_EXTEND_NONE and is aligned so that the "
"origin of @pixbuf is @pixbuf_x, @pixbuf_y"
msgstr ""

# #-#-#-#-#  gdkcairo.pot (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_cairo_set_source_pixmap:
# #-#-#-#-#  gdkscreen.pot (gdk 2.10.6)  #-#-#-#-#
# #-#-#-#-#  gdkscreen.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: GdkScreen::composited-changed:
# #-#-#-#-#  gdkscreen.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_screen_set_font_options:
# #-#-#-#-#  gdkscreen.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_screen_get_font_options:
# #-#-#-#-#  gdkscreen.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_screen_set_resolution:
# #-#-#-#-#  gdkscreen.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_screen_get_resolution:
#: gdkcairo.c:238:1 gdkscreen.c:116:1 gdkscreen.c:384:1 gdkscreen.c:415:1
#: gdkscreen.c:436:1 gdkscreen.c:465:1
msgid "Since: 2.10"
msgstr ""

# #-#-#-#-#  gdkcolor.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_colormap_ref:
# #-#-#-#-#  gdkcolor.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_colormap_unref:
#: gdkcolor.c:37:1 gdkcolor.c:51:1
msgid "@cmap: a #GdkColormap"
msgstr ""

# #-#-#-#-#  gdkcolor.pot (gdk 2.10.6)  #-#-#-#-#
# #-#-#-#-#  gdkcolor.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_colormap_ref:
# #-#-#-#-#  gdkcolor.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_colormap_unref:
# #-#-#-#-#  gdkgc.pot (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_gc_ref:
# #-#-#-#-#  gdkimage.pot (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_image_ref:
#: gdkcolor.c:39:1 gdkcolor.c:53:1 gdkgc.c:203:1 gdkimage.c:41:1
msgid "Deprecated function; use g_object_ref() instead."
msgstr ""

# #used by: gdk_colormap_ref:
#: gdkcolor.c:41:1
msgid "Return value: the colormap"
msgstr ""

# #-#-#-#-#  gdkcolor.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_colormap_get_visual:
# #-#-#-#-#  gdkcolor.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_colors_store:
# #-#-#-#-#  gdkcolor.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_color_white:
# #-#-#-#-#  gdkcolor.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_color_black:
# #-#-#-#-#  gdkcolor.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_colormap_alloc_color:
# #-#-#-#-#  gdkcolor.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_color_alloc:
#: gdkcolor.c:64:1 gdkcolor.c:80:1 gdkcolor.c:144:1 gdkcolor.c:176:1
#: gdkcolor.c:212:1 gdkcolor.c:242:1
msgid "@colormap: a #GdkColormap."
msgstr ""

# #used by: gdk_colormap_get_visual:
#: gdkcolor.c:66:1
msgid "Returns the visual for which a given colormap was created."
msgstr ""

# #used by: gdk_colormap_get_visual:
#: gdkcolor.c:68:1
msgid "Return value: the visual of the colormap."
msgstr ""

# used by: gdk_colors_store:
#: gdkcolor.c:81:1
msgid "@colors: the new color values."
msgstr ""

# used by: gdk_colors_store:
#: gdkcolor.c:82:1
msgid "@ncolors: the number of colors to change."
msgstr ""

# #used by: gdk_colors_store:
#: gdkcolor.c:84:3
msgid ""
"Changes the value of the first @ncolors colors in a private colormap. This "
"function is obsolete and should not be used. See gdk_color_change()."
msgstr ""

# #-#-#-#-#  gdkcolor.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_color_copy:
# #-#-#-#-#  gdkcolor.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_color_free:
#: gdkcolor.c:108:1 gdkcolor.c:129:1
msgid "@color: a #GdkColor."
msgstr ""

# #used by: gdk_color_copy:
#: gdkcolor.c:110:2
msgid ""
"Makes a copy of a color structure. The result must be freed using "
"gdk_color_free()."
msgstr ""

# #used by: gdk_color_copy:
#: gdkcolor.c:113:1
msgid "Return value: a copy of @color."
msgstr ""

# #used by: gdk_color_free:
#: gdkcolor.c:131:2
msgid "Frees a color structure created with gdk_color_copy()."
msgstr ""

# #-#-#-#-#  gdkcolor.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_color_white:
# #-#-#-#-#  gdkcolor.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_color_black:
#: gdkcolor.c:145:1 gdkcolor.c:177:1
msgid "@color: the location to store the color."
msgstr ""

# #used by: gdk_color_white:
#: gdkcolor.c:147:2
msgid ""
"Returns the white color for a given colormap. The resulting value has "
"already allocated been allocated."
msgstr ""

# #-#-#-#-#  gdkcolor.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_color_white:
# #-#-#-#-#  gdkcolor.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_color_black:
# #-#-#-#-#  gdkcolor.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_colormap_alloc_color:
# #-#-#-#-#  gdkcolor.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_color_alloc:
#: gdkcolor.c:150:1 gdkcolor.c:182:1 gdkcolor.c:224:1 gdkcolor.c:248:1
msgid "Return value: %TRUE if the allocation succeeded."
msgstr ""

# #used by: gdk_color_black:
#: gdkcolor.c:179:2
msgid ""
"Returns the black color for a given colormap. The resulting value has "
"already benn allocated."
msgstr ""

# used by: gdk_colormap_alloc_color:
#: gdkcolor.c:213:3
msgid ""
"@color: the color to allocate. On return the <structfield>pixel</"
"structfield> field will be filled in if allocation succeeds."
msgstr ""

# used by: gdk_colormap_alloc_color:
#: gdkcolor.c:216:3
msgid ""
"@writeable: If %TRUE, the color is allocated writeable (their values can "
"later be changed using gdk_color_change()). Writeable colors cannot be "
"shared between applications."
msgstr ""

# used by: gdk_colormap_alloc_color:
#: gdkcolor.c:219:2
msgid ""
"@best_match: If %TRUE, GDK will attempt to do matching against existing "
"colors if the color cannot be allocated as requested."
msgstr ""

# #-#-#-#-#  gdkcolor.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_colormap_alloc_color:
# #-#-#-#-#  gdkcolor.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_color_alloc:
#: gdkcolor.c:222:1 gdkcolor.c:246:1
msgid "Allocates a single color from a colormap."
msgstr ""

# used by: gdk_color_alloc:
#: gdkcolor.c:243:2
msgid ""
"@color: The color to allocate. On return, the <structfield>pixel</"
"structfield> field will be filled in."
msgstr ""

# #used by: gdk_color_alloc:
#: gdkcolor.c:250:1
msgid "Deprecated: Use gdk_colormap_alloc_color() instead."
msgstr ""

# #-#-#-#-#  gdkcolor.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_color_hash:
# #-#-#-#-#  gdkcolor.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_color_equal:
#: gdkcolor.c:265:1 gdkcolor.c:283:1
msgid "@colora: a #GdkColor."
msgstr ""

# #used by: gdk_color_hash:
#: gdkcolor.c:267:2
msgid ""
"A hash function suitable for using for a hash table that stores #GdkColor's."
msgstr ""

# #used by: gdk_color_hash:
#: gdkcolor.c:270:1
msgid "Return value: The hash function appled to @colora"
msgstr ""

# used by: gdk_color_equal:
#: gdkcolor.c:284:1
msgid "@colorb: another #GdkColor."
msgstr ""

# #used by: gdk_color_equal:
#: gdkcolor.c:286:1
msgid "Compares two colors."
msgstr ""

# #used by: gdk_color_equal:
#: gdkcolor.c:288:1
msgid "Return value: %TRUE if the two colors compare equal"
msgstr ""

# used by: gdk_color_parse:
#: gdkcolor.c:316:1
msgid "@spec: the string specifying the color."
msgstr ""

# used by: gdk_color_parse:
#: gdkcolor.c:317:1
msgid "@color: the #GdkColor to fill in"
msgstr ""

# #used by: gdk_color_parse:
#: gdkcolor.c:319:11
msgid ""
"Parses a textual specification of a color and fill in the <structfield>red</"
"structfield>, <structfield>green</structfield>, and <structfield>blue</"
"structfield> fields of a #GdkColor structure. The color is <emphasis>not</"
"emphasis> allocated, you must call gdk_colormap_alloc_color() yourself. The "
"text string can be in any of the forms accepted by <function>XParseColor</"
"function>; these include name for a color from <filename>rgb.txt</filename>, "
"such as <literal>DarkSlateGray</literal>, or a hex specification such as "
"<literal>&num;3050b2</literal> or <literal>&num;35b</literal>."
msgstr ""

# #used by: gdk_color_parse:
#: gdkcolor.c:331:1
msgid "Return value: %TRUE if the parsing succeeded."
msgstr ""

# #used by: gdk_colormap_get_system:
#: gdkcolor.c:354:2
msgid ""
"Gets the system's default colormap for the default screen. (See "
"gdk_colormap_get_system_for_screen ())"
msgstr ""

# #used by: gdk_colormap_get_system:
#: gdkcolor.c:357:1
msgid "Return value: the default colormap."
msgstr ""

# #-#-#-#-#  gdkcursor.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_cursor_ref:
# #-#-#-#-#  gdkcursor.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_cursor_unref:
#: gdkcursor.c:47:1 gdkcursor.c:66:1
msgid "@cursor: a #GdkCursor"
msgstr ""

# #used by: gdk_cursor_ref:
#: gdkcursor.c:49:1
msgid "Adds a reference to @cursor."
msgstr ""

# #used by: gdk_cursor_ref:
#: gdkcursor.c:51:1
msgid "Return value: Same @cursor that was passed in"
msgstr ""

# #used by: gdk_cursor_unref:
#: gdkcursor.c:68:2
msgid ""
"Removes a reference from @cursor, deallocating the cursor if no references "
"remain."
msgstr ""

# used by: gdk_cursor_new:
#: gdkcursor.c:86:1
msgid "@cursor_type: cursor to create"
msgstr ""

# #used by: gdk_cursor_new:
#: gdkcursor.c:88:2
msgid ""
"Creates a new cursor from the set of builtin cursors for the default "
"display. See gdk_cursor_new_for_display()."
msgstr ""

# #used by: gdk_cursor_new:
#: gdkcursor.c:91:2
msgid ""
"To make the cursor invisible, use gdk_cursor_new_from_pixmap() to create a "
"cursor with no pixels in it."
msgstr ""

# #used by: gdk_cursor_new:
#: gdkcursor.c:94:1
msgid "Return value: a new #GdkCursor"
msgstr ""

# used by: GdkDisplayManager::display-opened:
#: gdkdisplaymanager.c:82:1
msgid "@display_manager: the object on which the signal is emitted"
msgstr ""

# used by: GdkDisplayManager::display-opened:
#: gdkdisplaymanager.c:83:1
msgid "@display: the opened display"
msgstr ""

# #used by: GdkDisplayManager::display-opened:
#: gdkdisplaymanager.c:85:1
msgid "The ::display_opened signal is emitted when a display is opened."
msgstr ""

# #-#-#-#-#  gdkdisplaymanager.pot (gdk 2.10.6)  #-#-#-#-#
# #-#-#-#-#  gdkdisplaymanager.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: GdkDisplayManager::display-opened:
# #-#-#-#-#  gdkdisplaymanager.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_display_manager_get:
# #-#-#-#-#  gdkdisplaymanager.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_display_manager_get_default_display:
# #-#-#-#-#  gdkdisplaymanager.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_display_get_default:
# #-#-#-#-#  gdkdisplaymanager.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_screen_get_default:
# #-#-#-#-#  gdkdisplaymanager.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_display_manager_set_default_display:
# #-#-#-#-#  gdkdisplaymanager.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_display_manager_list_displays:
# #-#-#-#-#  gdkdisplay.pot (gdk 2.10.6)  #-#-#-#-#
# #-#-#-#-#  gdkdisplay.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: GdkDisplay::closed:
# #-#-#-#-#  gdkdisplay.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_display_close:
# #-#-#-#-#  gdkdisplay.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_display_get_event:
# #-#-#-#-#  gdkdisplay.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_display_peek_event:
# #-#-#-#-#  gdkdisplay.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_display_put_event:
# #-#-#-#-#  gdkdisplay.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_display_get_core_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_display_get_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_display_get_window_at_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_display_set_pointer_hooks:
# #-#-#-#-#  gdkdraw.pot (gdk 2.10.6)  #-#-#-#-#
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_drawable_get_screen:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_drawable_get_display:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_draw_pixbuf:
# #-#-#-#-#  gdkevents.pot (gdk 2.10.6)  #-#-#-#-#
# #-#-#-#-#  gdkevents.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_event_new:
# #-#-#-#-#  gdkevents.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_event_set_screen:
# #-#-#-#-#  gdkevents.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_event_get_screen:
# #-#-#-#-#  gdkevents.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_display_set_double_click_time:
# #-#-#-#-#  gdkkeys.pot (gdk 2.10.6)  #-#-#-#-#
# #used by: GdkKeymap::keys-changed:
# #-#-#-#-#  gdkpango.pot (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_pango_context_get_for_screen:
# #-#-#-#-#  gdk.pot (gdk 2.10.6)  #-#-#-#-#
# #-#-#-#-#  gdk.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_parse_args:
# #-#-#-#-#  gdk.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_get_display_arg_name:
# #-#-#-#-#  gdkrgb.pot (gdk 2.10.6)  #-#-#-#-#
# #-#-#-#-#  gdkrgb.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_screen_get_rgb_colormap:
# #-#-#-#-#  gdkrgb.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_screen_get_rgb_visual:
# #-#-#-#-#  gdkscreen.pot (gdk 2.10.6)  #-#-#-#-#
# #-#-#-#-#  gdkscreen.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: GdkScreen::size-changed:
# #-#-#-#-#  gdkscreen.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_screen_get_monitor_at_point:
# #-#-#-#-#  gdkscreen.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_screen_get_monitor_at_window:
# #-#-#-#-#  gdkwindow.pot (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_screen_get_toplevel_windows:
#: gdkdisplaymanager.c:87:1 gdkdisplaymanager.c:157:1
#: gdkdisplaymanager.c:179:1 gdkdisplaymanager.c:199:1
#: gdkdisplaymanager.c:215:1 gdkdisplaymanager.c:233:1
#: gdkdisplaymanager.c:255:1 gdkdisplay.c:105:1 gdkdisplay.c:174:1
#: gdkdisplay.c:202:1 gdkdisplay.c:226:1 gdkdisplay.c:251:1 gdkdisplay.c:381:1
#: gdkdisplay.c:444:1 gdkdisplay.c:484:1 gdkdisplay.c:521:1 gdkdraw.c:197:1
#: gdkdraw.c:215:1 gdkdraw.c:734:1 gdkevents.c:269:1 gdkevents.c:846:1
#: gdkevents.c:875:1 gdkevents.c:1142:1 gdkkeys.c:73:1 gdkpango.c:1437:1
#: gdk.c:196:1 gdk.c:239:1 gdkrgb.c:3663:1 gdkrgb.c:3694:1 gdkscreen.c:97:1
#: gdkscreen.c:240:1 gdkscreen.c:280:1 gdkwindow.c:779:1
msgid "Since: 2.2"
msgstr ""

# used by: gdk_display_manager_get:
#: gdkdisplaymanager.c:152:1
msgid "@returns: the singleton #GdkDisplayManager object."
msgstr ""

# #used by: gdk_display_manager_get:
#: gdkdisplaymanager.c:154:2
msgid ""
"Returns the global #GdkDisplayManager singleton; gdk_parse_pargs(), gdk_init"
"(), or gdk_init_check() must have been called first."
msgstr ""

# #-#-#-#-#  gdkdisplaymanager.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_display_manager_get_default_display:
# #-#-#-#-#  gdkdisplaymanager.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_display_manager_set_default_display:
# #-#-#-#-#  gdkdisplaymanager.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_display_manager_list_displays:
#: gdkdisplaymanager.c:172:1 gdkdisplaymanager.c:228:1
#: gdkdisplaymanager.c:248:1
msgid "@display_manager: a #GdkDisplayManager"
msgstr ""

# #used by: gdk_display_manager_get_default_display:
#: gdkdisplaymanager.c:174:1
msgid "Gets the default #GdkDisplay."
msgstr ""

# #-#-#-#-#  gdkdisplaymanager.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_display_manager_get_default_display:
# #-#-#-#-#  gdkdisplaymanager.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_display_get_default:
#: gdkdisplaymanager.c:176:2 gdkdisplaymanager.c:196:2
msgid "Returns: a #GdkDisplay, or %NULL if there is no default display."
msgstr ""

# #used by: gdk_display_get_default:
#: gdkdisplaymanager.c:190:2
msgid "Gets the default #GdkDisplay. This is a convenience function for:"
msgstr ""

# #used by: gdk_screen_get_default:
#: gdkdisplaymanager.c:210:2
msgid ""
"Gets the default screen for the default display. (See "
"gdk_display_get_default ())."
msgstr ""

# #used by: gdk_screen_get_default:
#: gdkdisplaymanager.c:213:1
msgid "Returns: a #GdkScreen, or %NULL if there is no default display."
msgstr ""

# #-#-#-#-#  gdkdisplaymanager.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_display_manager_set_default_display:
# #-#-#-#-#  gdkdisplay.pot (gdk 2.10.6)  #-#-#-#-#
# #-#-#-#-#  gdkdisplay.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_display_close:
# #-#-#-#-#  gdkdisplay.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_display_get_event:
# #-#-#-#-#  gdkdisplay.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_display_peek_event:
# #-#-#-#-#  gdkdisplay.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_display_put_event:
# #-#-#-#-#  gdkdisplay.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_display_get_core_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_display_get_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_display_get_window_at_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_display_set_pointer_hooks:
# #-#-#-#-#  gdkevents.pot (gdk 2.10.6)  #-#-#-#-#
# #-#-#-#-#  gdkevents.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: _gdk_event_queue_find_first:
# #-#-#-#-#  gdkevents.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: _gdk_event_queue_append:
# #-#-#-#-#  gdkevents.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: _gdk_event_queue_remove_link:
# #-#-#-#-#  gdkevents.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: _gdk_event_unqueue:
# #-#-#-#-#  gdkevents.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_display_set_double_click_time:
# #-#-#-#-#  gdkevents.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_display_set_double_click_distance:
#: gdkdisplaymanager.c:229:1 gdkdisplay.c:169:1 gdkdisplay.c:194:1
#: gdkdisplay.c:215:1 gdkdisplay.c:245:1 gdkdisplay.c:374:1 gdkdisplay.c:434:1
#: gdkdisplay.c:473:1 gdkdisplay.c:508:1 gdkevents.c:57:1 gdkevents.c:83:1
#: gdkevents.c:106:1 gdkevents.c:128:1 gdkevents.c:1134:1 gdkevents.c:1169:1
msgid "@display: a #GdkDisplay"
msgstr ""

# #used by: gdk_display_manager_set_default_display:
#: gdkdisplaymanager.c:231:1
msgid "Sets @display as the default display."
msgstr ""

# #used by: gdk_display_manager_list_displays:
#: gdkdisplaymanager.c:250:1
msgid "List all currently open displays."
msgstr ""

# #used by: gdk_display_manager_list_displays:
#: gdkdisplaymanager.c:252:2
msgid ""
"Return value: a newly allocated #GSList of #GdkDisplay objects. Free this "
"list with g_slist_free() when you are done with it."
msgstr ""

# used by: GdkDisplay::closed:
#: gdkdisplay.c:99:1
msgid "@display: the object on which the signal is emitted"
msgstr ""

# used by: GdkDisplay::closed:
#: gdkdisplay.c:100:1
msgid "@is_error: %TRUE if the display was closed due to an error"
msgstr ""

# #used by: GdkDisplay::closed:
#: gdkdisplay.c:102:2
msgid ""
"The ::closed signal is emitted when the connection to the windowing system "
"for @display is closed."
msgstr ""

# #used by: gdk_display_close:
#: gdkdisplay.c:171:2
msgid ""
"Closes the connection to the windowing system for the given display, and "
"cleans up associated resources."
msgstr ""

# #used by: gdk_display_get_event:
#: gdkdisplay.c:196:2
msgid ""
"Gets the next #GdkEvent to be processed for @display, fetching events from "
"the windowing system if necessary."
msgstr ""

# #-#-#-#-#  gdkdisplay.pot (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_display_get_event:
# #-#-#-#-#  gdkevents.pot (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_event_get:
#: gdkdisplay.c:199:2 gdkevents.c:188:2
msgid ""
"Return value: the next #GdkEvent to be processed, or %NULL if no events are "
"pending. The returned #GdkEvent should be freed with gdk_event_free()."
msgstr ""

# #used by: gdk_display_peek_event:
#: gdkdisplay.c:217:4
msgid ""
"Gets a copy of the first #GdkEvent in the @display's event queue, without "
"removing the event from the queue.  (Note that this function will not get "
"more events from the windowing system.  It only checks the events that have "
"already been moved to the GDK event queue.)"
msgstr ""

# #used by: gdk_display_peek_event:
#: gdkdisplay.c:222:3
msgid ""
"Return value: a copy of the first #GdkEvent on the event queue, or %NULL if "
"no events are in the queue. The returned #GdkEvent should be freed with "
"gdk_event_free()."
msgstr ""

# #-#-#-#-#  gdkdisplay.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_display_put_event:
# #-#-#-#-#  gdkevents.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_event_put:
#: gdkdisplay.c:246:1 gdkevents.c:233:1
msgid "@event: a #GdkEvent."
msgstr ""

# #used by: gdk_display_put_event:
#: gdkdisplay.c:248:2
msgid ""
"Appends a copy of the given event onto the front of the event queue for "
"@display."
msgstr ""

# #-#-#-#-#  gdkdisplay.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pointer_ungrab:
# #-#-#-#-#  gdkdisplay.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_keyboard_ungrab:
#: gdkdisplay.c:265:2 gdkdisplay.c:294:2
msgid ""
"@time_: a timestamp from a #GdkEvent, or %GDK_CURRENT_TIME if no timestamp "
"is available."
msgstr ""

# #used by: gdk_pointer_ungrab:
#: gdkdisplay.c:268:1
msgid "Ungrabs the pointer, if it is grabbed by this application."
msgstr ""

# #used by: gdk_pointer_is_grabbed:
#: gdkdisplay.c:279:1
msgid "Returns %TRUE if the pointer is currently grabbed by this application."
msgstr ""

# #used by: gdk_pointer_is_grabbed:
#: gdkdisplay.c:281:2
msgid ""
"Note that this does not take the inmplicit pointer grab on button presses "
"into account."
msgstr ""

# #used by: gdk_pointer_is_grabbed:
#: gdkdisplay.c:284:1
msgid ""
"Return value: %TRUE if the pointer is currently grabbed by this application.*"
msgstr ""

# #used by: gdk_keyboard_ungrab:
#: gdkdisplay.c:297:1
msgid "Ungrabs the keyboard, if it is grabbed by this application."
msgstr ""

# #used by: gdk_beep:
#: gdkdisplay.c:308:1
msgid "Emits a short beep."
msgstr ""

# #-#-#-#-#  gdkdisplay.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_event_send_client_message:
# #-#-#-#-#  gdkdisplay.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_event_send_clientmessage_toall:
#: gdkdisplay.c:318:1 gdkdisplay.c:340:1
msgid "@event: the #GdkEvent to send, which should be a #GdkEventClient."
msgstr ""

# used by: gdk_event_send_client_message:
#: gdkdisplay.c:319:1
msgid "@winid:  the window to send the X ClientMessage event to."
msgstr ""

# #used by: gdk_event_send_client_message:
#: gdkdisplay.c:321:4
msgid ""
"Sends an X ClientMessage event to a given window (which must be on the "
"default #GdkDisplay.) This could be used for communicating between different "
"applications, though the amount of data is limited to 20 bytes."
msgstr ""

# #used by: gdk_event_send_client_message:
#: gdkdisplay.c:326:1
msgid "Return value: non-zero on success."
msgstr ""

# #used by: gdk_event_send_clientmessage_toall:
#: gdkdisplay.c:342:2
msgid ""
"Sends an X ClientMessage event to all toplevel windows on the default "
"#GdkScreen."
msgstr ""

# #used by: gdk_event_send_clientmessage_toall:
#: gdkdisplay.c:345:4
msgid ""
"Toplevel windows are determined by checking for the WM_STATE property, as "
"described in the Inter-Client Communication Conventions Manual (ICCCM). If "
"no windows are found with the WM_STATE property set, the message is sent to "
"all children of the root window."
msgstr ""

# #used by: gdk_device_get_core_pointer:
#: gdkdisplay.c:361:1
msgid "Returns the core pointer device for the default display."
msgstr ""

# #-#-#-#-#  gdkdisplay.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_device_get_core_pointer:
# #-#-#-#-#  gdkdisplay.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_display_get_core_pointer:
#: gdkdisplay.c:363:2 gdkdisplay.c:378:2
msgid ""
"Return value: the core pointer device; this is owned by the display and "
"should not be freed."
msgstr ""

# #used by: gdk_display_get_core_pointer:
#: gdkdisplay.c:376:1
msgid "Returns the core pointer device for the given display"
msgstr ""

# used by: gdk_set_sm_client_id:
#: gdkdisplay.c:391:2
msgid ""
"@sm_client_id: the client id assigned by the session manager when the "
"connection was opened, or %NULL to remove the property."
msgstr ""

# #used by: gdk_set_sm_client_id:
#: gdkdisplay.c:394:3
msgid ""
"Sets the <literal>SM_CLIENT_ID</literal> property on the application's "
"leader window so that the window manager can save the application's state "
"using the X11R6 ICCCM session management protocol."
msgstr ""

# #used by: gdk_set_sm_client_id:
#: gdkdisplay.c:398:4
msgid ""
"See the X Session Management Library documentation for more information on "
"session management and the Inter-Client Communication Conventions Manual "
"(ICCCM) for information on the <literal>WM_CLIENT_LEADER</literal> property. "
"(Both documents are part of the X Window System distribution.)"
msgstr ""

# #used by: _gdk_get_sm_client_id:
#: gdkdisplay.c:421:1
msgid "Gets the client ID set with gdk_set_sm_client_id(), if any."
msgstr ""

# #used by: _gdk_get_sm_client_id:
#: gdkdisplay.c:423:2
msgid ""
"Return value: Session ID, or %NULL if gdk_set_sm_client_id() has never been "
"called."
msgstr ""

# used by: gdk_display_get_pointer:
#: gdkdisplay.c:435:2
msgid "@screen: location to store the screen that the cursor is on, or %NULL."
msgstr ""

# used by: gdk_display_get_pointer:
#: gdkdisplay.c:437:1
msgid "@x: location to store root window X coordinate of pointer, or %NULL."
msgstr ""

# used by: gdk_display_get_pointer:
#: gdkdisplay.c:438:1
msgid "@y: location to store root window Y coordinate of pointer, or %NULL."
msgstr ""

# used by: gdk_display_get_pointer:
#: gdkdisplay.c:439:1
msgid "@mask: location to store current modifier mask, or %NULL"
msgstr ""

# #used by: gdk_display_get_pointer:
#: gdkdisplay.c:441:2
msgid ""
"Gets the current location of the pointer and the current modifier mask for a "
"given display."
msgstr ""

# #-#-#-#-#  gdkdisplay.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_display_get_window_at_pointer:
# #-#-#-#-#  gdkwindow.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_at_pointer:
#: gdkdisplay.c:474:1 gdkwindow.c:2988:1
msgid "@win_x: return location for origin of the window under the pointer"
msgstr ""

# #-#-#-#-#  gdkdisplay.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_display_get_window_at_pointer:
# #-#-#-#-#  gdkwindow.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_at_pointer:
#: gdkdisplay.c:475:1 gdkwindow.c:2989:1
msgid "@win_y: return location for origin of the window under the pointer"
msgstr ""

# #used by: gdk_display_get_window_at_pointer:
#: gdkdisplay.c:477:4
msgid ""
"Obtains the window underneath the mouse pointer, returning the location of "
"that window in @win_x, @win_y for @screen. Returns %NULL if the window under "
"the mouse pointer is not known to GDK (for example, belongs to another "
"application)."
msgstr ""

# #used by: gdk_display_get_window_at_pointer:
#: gdkdisplay.c:482:1
msgid "Returns: the window under the mouse pointer, or %NULL"
msgstr ""

# #-#-#-#-#  gdkdisplay.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_display_set_pointer_hooks:
# #-#-#-#-#  gdkdisplay.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_set_pointer_hooks:
#: gdkdisplay.c:509:3 gdkdisplay.c:597:3
msgid ""
"@new_hooks: a table of pointers to functions for getting quantities related "
"to the current pointer position, or %NULL to restore the default table."
msgstr ""

# #used by: gdk_display_set_pointer_hooks:
#: gdkdisplay.c:513:5
msgid ""
"This function allows for hooking into the operation of getting the current "
"location of the pointer on a particular display. This is only useful for "
"such low-level tools as an event recorder. Applications should never have "
"any reason to use this facility."
msgstr ""

# #-#-#-#-#  gdkdisplay.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_display_set_pointer_hooks:
# #-#-#-#-#  gdkdisplay.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_set_pointer_hooks:
#: gdkdisplay.c:519:1 gdkdisplay.c:610:1
msgid "Return value: the previous pointer hook table"
msgstr ""

# #used by: gdk_set_pointer_hooks:
#: gdkdisplay.c:601:5
msgid ""
"This function allows for hooking into the operation of getting the current "
"location of the pointer. This is only useful for such low-level tools as an "
"event recorder. Applications should never have any reason to use this "
"facility."
msgstr ""

# #used by: gdk_set_pointer_hooks:
#: gdkdisplay.c:607:2
msgid ""
"This function is not multihead safe. For multihead operation, see "
"gdk_display_set_pointer_hooks()."
msgstr ""

# used by: gdk_drag_find_window:
#: gdkdnd.c:35:1
msgid "@context: a #GdkDragContext."
msgstr ""

# used by: gdk_drag_find_window:
#: gdkdnd.c:36:2
msgid ""
"@drag_window: a window which may be at the pointer position, but should be "
"ignored, since it is put up by the drag source as an icon."
msgstr ""

# used by: gdk_drag_find_window:
#: gdkdnd.c:38:1
msgid "@x_root: the x position of the pointer in root coordinates."
msgstr ""

# used by: gdk_drag_find_window:
#: gdkdnd.c:39:1
msgid "@y_root: the y position of the pointer in root coordinates."
msgstr ""

# used by: gdk_drag_find_window:
#: gdkdnd.c:40:1
msgid "@dest_window: location to store the destination window in."
msgstr ""

# used by: gdk_drag_find_window:
#: gdkdnd.c:41:1
msgid "@protocol: location to store the DND protocol in."
msgstr ""

# #used by: gdk_drag_find_window:
#: gdkdnd.c:43:2
msgid ""
"Finds the destination window and DND protocol to use at the given pointer "
"position."
msgstr ""

# #used by: gdk_drag_find_window:
#: gdkdnd.c:46:2
msgid ""
"This function is called by the drag source to obtain the @dest_window and "
"@protocol parameters for gdk_drag_motion()."
msgstr ""

# used by: gdk_drag_get_protocol:
#: gdkdnd.c:64:1
msgid "@xid: the X id of the destination window."
msgstr ""

# used by: gdk_drag_get_protocol:
#: gdkdnd.c:65:1
msgid "@protocol: location where the supported DND protocol is returned."
msgstr ""

# #used by: gdk_drag_get_protocol:
#: gdkdnd.c:67:1
msgid "Finds out the DND protocol supported by a window."
msgstr ""

# #used by: gdk_drag_get_protocol:
#: gdkdnd.c:69:3
msgid ""
"Return value: the X id of the window where the drop should happen. This may "
"be @xid or the X id of a proxy window, or None if @xid doesn't support Drag "
"and Drop."
msgstr ""

# used by: gdk_drawable_set_data:
#: gdkdraw.c:90:1
msgid "@key: name to store the data under"
msgstr ""

# used by: gdk_drawable_set_data:
#: gdkdraw.c:91:1
msgid "@data: arbitrary data"
msgstr ""

# used by: gdk_drawable_set_data:
#: gdkdraw.c:92:1
msgid "@destroy_func: function to free @data, or %NULL"
msgstr ""

# #used by: gdk_drawable_set_data:
#: gdkdraw.c:94:2
msgid ""
"This function is equivalent to g_object_set_data(), the #GObject variant "
"should be used instead."
msgstr ""

# used by: gdk_drawable_get_data:
#: gdkdraw.c:115:1
msgid "@key: name the data was stored under"
msgstr ""

# #used by: gdk_drawable_get_data:
#: gdkdraw.c:117:2
msgid ""
"Equivalent to g_object_get_data(); the #GObject variant should be used "
"instead."
msgstr ""

# #used by: gdk_drawable_get_data:
#: gdkdraw.c:120:1
msgid "Return value: the data stored at @key"
msgstr ""

# used by: gdk_drawable_get_size:
#: gdkdraw.c:135:1
msgid "@width: location to store drawable's width, or %NULL"
msgstr ""

# used by: gdk_drawable_get_size:
#: gdkdraw.c:136:1
msgid "@height: location to store drawable's height, or %NULL"
msgstr ""

# #used by: gdk_drawable_get_size:
#: gdkdraw.c:138:2
msgid ""
"Fills *@width and *@height with the size of @drawable. @width or @height can "
"be %NULL if you only want the other one."
msgstr ""

# #used by: gdk_drawable_get_size:
#: gdkdraw.c:141:3
msgid ""
"On the X11 platform, if @drawable is a #GdkWindow, the returned size is the "
"size reported in the most-recently-processed configure event, rather than "
"the current size on the X server."
msgstr ""

# #used by: gdk_drawable_get_visual:
#: gdkdraw.c:160:1
msgid "Gets the #GdkVisual describing the pixel format of @drawable."
msgstr ""

# #used by: gdk_drawable_get_visual:
#: gdkdraw.c:162:1
msgid "Return value: a #GdkVisual"
msgstr ""

# #used by: gdk_drawable_get_depth:
#: gdkdraw.c:176:3
msgid ""
"Obtains the bit depth of the drawable, that is, the number of bits that make "
"up a pixel in the drawable's visual. Examples are 8 bits per pixel, 24 bits "
"per pixel, etc."
msgstr ""

# #used by: gdk_drawable_get_depth:
#: gdkdraw.c:180:1
msgid "Return value: number of bits per pixel"
msgstr ""

# #used by: gdk_drawable_get_screen:
#: gdkdraw.c:193:1
msgid "Gets the #GdkScreen associated with a #GdkDrawable."
msgstr ""

# #used by: gdk_drawable_get_screen:
#: gdkdraw.c:195:1
msgid "Return value: the #GdkScreen associated with @drawable"
msgstr ""

# #used by: gdk_drawable_get_display:
#: gdkdraw.c:211:1
msgid "Gets the #GdkDisplay associated with a #GdkDrawable."
msgstr ""

# #used by: gdk_drawable_get_display:
#: gdkdraw.c:213:1
msgid "Return value: the #GdkDisplay associated with @drawable"
msgstr ""

# #-#-#-#-#  gdkdraw.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_drawable_set_colormap:
# #-#-#-#-#  gdkgc.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_gc_set_colormap:
# #-#-#-#-#  gdkimage.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_image_set_colormap:
# #-#-#-#-#  gdkpango.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pango_context_set_colormap:
# #-#-#-#-#  gdkrgb.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_rgb_find_color:
#: gdkdraw.c:228:1 gdkgc.c:912:1 gdkimage.c:100:1 gdkpango.c:777:1
#: gdkrgb.c:821:1
msgid "@colormap: a #GdkColormap"
msgstr ""

# #used by: gdk_drawable_set_colormap:
#: gdkdraw.c:230:8
msgid ""
"Sets the colormap associated with @drawable. Normally this will happen "
"automatically when the drawable is created; you only need to use this "
"function if the drawable-creating function did not have a way to determine "
"the colormap, and you then use drawable operations that require a colormap. "
"The colormap for all drawables and graphics contexts you intend to use "
"together should match. i.e. when using a #GdkGC to draw to a drawable, or "
"copying one drawable to another, the colormaps should match."
msgstr ""

# #used by: gdk_drawable_get_colormap:
#: gdkdraw.c:255:2
msgid ""
"Gets the colormap for @drawable, if one is set; returns %NULL otherwise."
msgstr ""

# #used by: gdk_drawable_get_colormap:
#: gdkdraw.c:258:1
msgid "Return value: the colormap, or %NULL"
msgstr ""

# #used by: gdk_drawable_ref:
#: gdkdraw.c:272:2
msgid ""
"Deprecated equivalent of calling g_object_ref() on @drawable. (Drawables "
"were not objects in previous versions of GDK.)"
msgstr ""

# #used by: gdk_drawable_ref:
#: gdkdraw.c:275:1
msgid "Return value: the same @drawable passed in"
msgstr ""

# #used by: gdk_drawable_unref:
#: gdkdraw.c:287:1
msgid "Deprecated equivalent of calling g_object_unref() on @drawable."
msgstr ""

# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_point:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_line:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_rectangle:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_arc:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_polygon:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_string:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_text:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_text_wc:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_image:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_points:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_segments:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_lines:
#: gdkdraw.c:303:1 gdkdraw.c:330:1 gdkdraw.c:364:1 gdkdraw.c:414:1
#: gdkdraw.c:463:1 gdkdraw.c:496:1 gdkdraw.c:526:1 gdkdraw.c:557:1
#: gdkdraw.c:668:1 gdkdraw.c:766:1 gdkdraw.c:793:1 gdkdraw.c:822:1
msgid "@drawable: a #GdkDrawable (a #GdkWindow or a #GdkPixmap)."
msgstr ""

# #-#-#-#-#  gdkdraw.pot (gdk 2.10.6)  #-#-#-#-#
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_point:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_rectangle:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_arc:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_polygon:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_string:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_text:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_text_wc:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_image:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_points:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_segments:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_lines:
# #-#-#-#-#  gdkgc.pot (gdk 2.10.6)  #-#-#-#-#
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_gc_set_foreground:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_gc_set_background:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_gc_set_font:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_gc_set_function:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_gc_set_fill:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_gc_set_stipple:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_gc_set_clip_origin:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_gc_set_clip_rectangle:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_gc_set_clip_region:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_gc_set_subwindow:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_gc_set_exposures:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_gc_set_line_attributes:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_gc_set_dashes:
#: gdkdraw.c:304:1 gdkdraw.c:365:1 gdkdraw.c:415:1 gdkdraw.c:464:1
#: gdkdraw.c:498:1 gdkdraw.c:528:1 gdkdraw.c:559:1 gdkdraw.c:669:1
#: gdkdraw.c:767:1 gdkdraw.c:794:1 gdkdraw.c:823:1 gdkgc.c:323:1 gdkgc.c:346:1
#: gdkgc.c:369:1 gdkgc.c:392:1 gdkgc.c:413:1 gdkgc.c:453:1 gdkgc.c:501:1
#: gdkgc.c:562:1 gdkgc.c:587:1 gdkgc.c:712:1 gdkgc.c:732:1 gdkgc.c:754:1
#: gdkgc.c:787:1
msgid "@gc: a #GdkGC."
msgstr ""

# used by: gdk_draw_point:
#: gdkdraw.c:305:1
msgid "@x: the x coordinate of the point."
msgstr ""

# used by: gdk_draw_point:
#: gdkdraw.c:306:1
msgid "@y: the y coordinate of the point."
msgstr ""

# #used by: gdk_draw_point:
#: gdkdraw.c:308:2
msgid ""
"Draws a point, using the foreground color and other attributes of the #GdkGC."
msgstr ""

# used by: gdk_draw_line:
#: gdkdraw.c:331:5
msgid ""
"@gc: a #GdkGC. @x1_: the x coordinate of the start point. @y1_: the y "
"coordinate of the start point. @x2_: the x coordinate of the end point. "
"@y2_: the y coordinate of the end point."
msgstr ""

# #used by: gdk_draw_line:
#: gdkdraw.c:337:2
msgid ""
"Draws a line, using the foreground color and other attributes of the #GdkGC."
msgstr ""

# used by: gdk_draw_rectangle:
#: gdkdraw.c:366:1
msgid "@filled: %TRUE if the rectangle should be filled."
msgstr ""

# used by: gdk_draw_rectangle:
#: gdkdraw.c:367:1
msgid "@x: the x coordinate of the left edge of the rectangle."
msgstr ""

# used by: gdk_draw_rectangle:
#: gdkdraw.c:368:1
msgid "@y: the y coordinate of the top edge of the rectangle."
msgstr ""

# used by: gdk_draw_rectangle:
#: gdkdraw.c:369:1
msgid "@width: the width of the rectangle."
msgstr ""

# used by: gdk_draw_rectangle:
#: gdkdraw.c:370:1
msgid "@height: the height of the rectangle."
msgstr ""

# #used by: gdk_draw_rectangle:
#: gdkdraw.c:372:2
msgid ""
"Draws a rectangular outline or filled rectangle, using the foreground color "
"and other attributes of the #GdkGC."
msgstr ""

# #used by: gdk_draw_rectangle:
#: gdkdraw.c:375:7
msgid ""
"A rectangle drawn filled is 1 pixel smaller in both dimensions than a "
"rectangle outlined. Calling <literal>gdk_draw_rectangle (window, gc, TRUE, "
"0, 0, 20, 20)</literal> results in a filled rectangle 20 pixels wide and 20 "
"pixels high. Calling <literal>gdk_draw_rectangle (window, gc, FALSE, 0, 0, "
"20, 20)</literal> results in an outlined rectangle with corners at (0, 0), "
"(0, 20), (20, 20), and (20, 0), which makes it 21 pixels wide and 21 pixels "
"high."
msgstr ""

# used by: gdk_draw_arc:
#: gdkdraw.c:416:1
msgid "@filled: %TRUE if the arc should be filled, producing a 'pie slice'."
msgstr ""

# used by: gdk_draw_arc:
#: gdkdraw.c:417:1
msgid "@x: the x coordinate of the left edge of the bounding rectangle."
msgstr ""

# used by: gdk_draw_arc:
#: gdkdraw.c:418:1
msgid "@y: the y coordinate of the top edge of the bounding rectangle."
msgstr ""

# used by: gdk_draw_arc:
#: gdkdraw.c:419:1
msgid "@width: the width of the bounding rectangle."
msgstr ""

# used by: gdk_draw_arc:
#: gdkdraw.c:420:5
msgid ""
"@height: the height of the bounding rectangle. @angle1: the start angle of "
"the arc, relative to the 3 o'clock position, counter-clockwise, in 1/64ths "
"of a degree. @angle2: the end angle of the arc, relative to @angle1, in "
"1/64ths of a degree."
msgstr ""

# #used by: gdk_draw_arc:
#: gdkdraw.c:426:3
msgid ""
"Draws an arc or a filled 'pie slice'. The arc is defined by the bounding "
"rectangle of the entire ellipse, and the start and end angles of the part of "
"the ellipse to be drawn."
msgstr ""

# used by: gdk_draw_polygon:
#: gdkdraw.c:465:3
msgid ""
"@filled: %TRUE if the polygon should be filled. The polygon is closed "
"automatically, connecting the last point to the first point if necessary."
msgstr ""

# used by: gdk_draw_polygon:
#: gdkdraw.c:468:2
msgid ""
"@points: an array of #GdkPoint structures specifying the points making up "
"the polygon."
msgstr ""

# used by: gdk_draw_polygon:
#: gdkdraw.c:470:1
msgid "@npoints: the number of points."
msgstr ""

# #used by: gdk_draw_polygon:
#: gdkdraw.c:472:1
msgid "Draws an outlined or filled polygon."
msgstr ""

# #-#-#-#-#  gdkdraw.pot (gdk 2.10.6)  #-#-#-#-#
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_string:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_text:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_text_wc:
# #-#-#-#-#  gdkfont.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_string_extents:
#: gdkdraw.c:497:1 gdkdraw.c:527:1 gdkdraw.c:558:1 gdkfont.c:174:1
msgid "@font: a #GdkFont."
msgstr ""

# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_string:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_text:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_text_wc:
#: gdkdraw.c:499:1 gdkdraw.c:529:1 gdkdraw.c:560:1
msgid "@x: the x coordinate of the left edge of the text."
msgstr ""

# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_string:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_text:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_text_wc:
#: gdkdraw.c:500:1 gdkdraw.c:530:1 gdkdraw.c:561:1
msgid "@y: the y coordinate of the baseline of the text."
msgstr ""

# used by: gdk_draw_string:
#: gdkdraw.c:501:1
msgid "@string:  the string of characters to draw."
msgstr ""

# #used by: gdk_draw_string:
#: gdkdraw.c:503:1
msgid "Draws a string of characters in the given font or fontset."
msgstr ""

# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_draw_string:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_draw_text:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_draw_text_wc:
#: gdkdraw.c:505:1 gdkdraw.c:536:1 gdkdraw.c:569:1
msgid "Deprecated: Use gdk_draw_layout() instead."
msgstr ""

# used by: gdk_draw_text:
#: gdkdraw.c:531:1
msgid "@text:  the characters to draw."
msgstr ""

# used by: gdk_draw_text:
#: gdkdraw.c:532:1
msgid "@text_length: the number of characters of @text to draw."
msgstr ""

# #used by: gdk_draw_text:
#: gdkdraw.c:534:1
msgid "Draws a number of characters in the given font or fontset."
msgstr ""

# used by: gdk_draw_text_wc:
#: gdkdraw.c:562:1
msgid "@text: the wide characters to draw."
msgstr ""

# used by: gdk_draw_text_wc:
#: gdkdraw.c:563:1
msgid "@text_length: the number of characters to draw."
msgstr ""

# #used by: gdk_draw_text_wc:
#: gdkdraw.c:565:3
msgid ""
"Draws a number of wide characters using the given font of fontset. If the "
"font is a 1-byte font, the string is converted into 1-byte characters "
"(discarding the high bytes) before output."
msgstr ""

# used by: gdk_draw_drawable:
#: gdkdraw.c:591:1
msgid "@gc: a #GdkGC sharing the drawable's visual and colormap"
msgstr ""

# used by: gdk_draw_drawable:
#: gdkdraw.c:592:1
msgid "@src: the source #GdkDrawable, which may be the same as @drawable"
msgstr ""

# used by: gdk_draw_drawable:
#: gdkdraw.c:593:1
msgid "@xsrc: X position in @src of rectangle to draw"
msgstr ""

# used by: gdk_draw_drawable:
#: gdkdraw.c:594:1
msgid "@ysrc: Y position in @src of rectangle to draw"
msgstr ""

# used by: gdk_draw_drawable:
#: gdkdraw.c:595:1
msgid "@xdest: X position in @drawable where the rectangle should be drawn"
msgstr ""

# used by: gdk_draw_drawable:
#: gdkdraw.c:596:1
msgid "@ydest: Y position in @drawable where the rectangle should be drawn"
msgstr ""

# used by: gdk_draw_drawable:
#: gdkdraw.c:597:1
msgid "@width: width of rectangle to draw, or -1 for entire @src width"
msgstr ""

# used by: gdk_draw_drawable:
#: gdkdraw.c:598:1
msgid "@height: height of rectangle to draw, or -1 for entire @src height"
msgstr ""

# #used by: gdk_draw_drawable:
#: gdkdraw.c:600:4
msgid ""
"Copies the @width x @height region of @src at coordinates (@xsrc, @ysrc) to "
"coordinates (@xdest, @ydest) in @drawable. @width and/or @height may be "
"given as -1, in which case the entire @src drawable will be copied."
msgstr ""

# #used by: gdk_draw_drawable:
#: gdkdraw.c:605:2
msgid ""
"Most fields in @gc are not used for this operation, but notably the clip "
"mask or clip region will be honored."
msgstr ""

# #used by: gdk_draw_drawable:
#: gdkdraw.c:608:7
msgid ""
"The source and destination drawables must have the same visual and colormap, "
"or errors will result. (On X11, failure to match visual/colormap results in "
"a BadMatch error from the X server.) A common cause of this problem is an "
"attempt to draw a bitmap to a color drawable. The way to draw a bitmap is to "
"set the bitmap as the stipple on the #GdkGC, set the fill mode to %"
"GDK_STIPPLED, and then draw the rectangle."
msgstr ""

# used by: gdk_draw_image:
#: gdkdraw.c:670:1
msgid "@image: the #GdkImage to draw."
msgstr ""

# used by: gdk_draw_image:
#: gdkdraw.c:671:1
msgid "@xsrc: the left edge of the source rectangle within @image."
msgstr ""

# used by: gdk_draw_image:
#: gdkdraw.c:672:1
msgid "@ysrc: the top of the source rectangle within @image."
msgstr ""

# used by: gdk_draw_image:
#: gdkdraw.c:673:1
msgid "@xdest: the x coordinate of the destination within @drawable."
msgstr ""

# used by: gdk_draw_image:
#: gdkdraw.c:674:1
msgid "@ydest: the y coordinate of the destination within @drawable."
msgstr ""

# used by: gdk_draw_image:
#: gdkdraw.c:675:2
msgid ""
"@width: the width of the area to be copied, or -1 to make the area extend to "
"the right edge of @image."
msgstr ""

# used by: gdk_draw_image:
#: gdkdraw.c:677:2
msgid ""
"@height: the height of the area to be copied, or -1 to make the area extend "
"to the bottom edge of @image."
msgstr ""

# #used by: gdk_draw_image:
#: gdkdraw.c:680:2
msgid ""
"Draws a #GdkImage onto a drawable. The depth of the #GdkImage must match the "
"depth of the #GdkDrawable."
msgstr ""

# #-#-#-#-#  gdkdraw.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_pixbuf:
# #-#-#-#-#  gdkpixbuf-render.pot (gdk 2.10.6)  #-#-#-#-#
# #-#-#-#-#  gdkpixbuf-render.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_render_to_drawable:
# #-#-#-#-#  gdkpixbuf-render.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_render_to_drawable_alpha:
#: gdkdraw.c:709:1 gdkpixbuf-render.c:141:1 gdkpixbuf-render.c:188:1
msgid "@drawable: Destination drawable."
msgstr ""

# used by: gdk_draw_pixbuf:
#: gdkdraw.c:710:1
msgid "@gc: a #GdkGC, used for clipping, or %NULL"
msgstr ""

# #-#-#-#-#  gdkdraw.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_pixbuf:
# #-#-#-#-#  gdkpixbuf-render.pot (gdk 2.10.6)  #-#-#-#-#
# #-#-#-#-#  gdkpixbuf-render.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_render_to_drawable:
# #-#-#-#-#  gdkpixbuf-render.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_render_to_drawable_alpha:
#: gdkdraw.c:712:1 gdkpixbuf-render.c:143:1 gdkpixbuf-render.c:189:1
msgid "@src_x: Source X coordinate within pixbuf."
msgstr ""

# #-#-#-#-#  gdkdraw.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_pixbuf:
# #-#-#-#-#  gdkpixbuf-render.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_render_to_drawable_alpha:
#: gdkdraw.c:713:1 gdkpixbuf-render.c:190:1
msgid "@src_y: Source Y coordinates within pixbuf."
msgstr ""

# #-#-#-#-#  gdkdraw.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_pixbuf:
# #-#-#-#-#  gdkpixbuf-render.pot (gdk 2.10.6)  #-#-#-#-#
# #-#-#-#-#  gdkpixbuf-render.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_render_to_drawable:
# #-#-#-#-#  gdkpixbuf-render.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_render_to_drawable_alpha:
#: gdkdraw.c:714:1 gdkpixbuf-render.c:145:1 gdkpixbuf-render.c:191:1
msgid "@dest_x: Destination X coordinate within drawable."
msgstr ""

# #-#-#-#-#  gdkdraw.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_pixbuf:
# #-#-#-#-#  gdkpixbuf-render.pot (gdk 2.10.6)  #-#-#-#-#
# #-#-#-#-#  gdkpixbuf-render.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_render_to_drawable:
# #-#-#-#-#  gdkpixbuf-render.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_render_to_drawable_alpha:
#: gdkdraw.c:715:1 gdkpixbuf-render.c:146:1 gdkpixbuf-render.c:192:1
msgid "@dest_y: Destination Y coordinate within drawable."
msgstr ""

# #-#-#-#-#  gdkdraw.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_pixbuf:
# #-#-#-#-#  gdkpixbuf-render.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_render_to_drawable_alpha:
#: gdkdraw.c:716:1 gdkpixbuf-render.c:193:1
msgid ""
"@width: Width of region to render, in pixels, or -1 to use pixbuf width."
msgstr ""

# #-#-#-#-#  gdkdraw.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_pixbuf:
# #-#-#-#-#  gdkpixbuf-render.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_render_to_drawable_alpha:
#: gdkdraw.c:717:1 gdkpixbuf-render.c:194:1
msgid ""
"@height: Height of region to render, in pixels, or -1 to use pixbuf height."
msgstr ""

# used by: gdk_draw_pixbuf:
#: gdkdraw.c:718:1
msgid "@dither: Dithering mode for #GdkRGB."
msgstr ""

# #-#-#-#-#  gdkdraw.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_pixbuf:
# #-#-#-#-#  gdkpixbuf-render.pot (gdk 2.10.6)  #-#-#-#-#
# #-#-#-#-#  gdkpixbuf-render.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_render_to_drawable:
# #-#-#-#-#  gdkpixbuf-render.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_render_to_drawable_alpha:
#: gdkdraw.c:719:1 gdkpixbuf-render.c:150:1 gdkpixbuf-render.c:198:1
msgid "@x_dither: X offset for dither."
msgstr ""

# #-#-#-#-#  gdkdraw.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_pixbuf:
# #-#-#-#-#  gdkpixbuf-render.pot (gdk 2.10.6)  #-#-#-#-#
# #-#-#-#-#  gdkpixbuf-render.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_render_to_drawable:
# #-#-#-#-#  gdkpixbuf-render.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_render_to_drawable_alpha:
#: gdkdraw.c:720:1 gdkpixbuf-render.c:151:1 gdkpixbuf-render.c:199:1
msgid "@y_dither: Y offset for dither."
msgstr ""

# #used by: gdk_draw_pixbuf:
#: gdkdraw.c:722:5
msgid ""
"Renders a rectangular portion of a pixbuf to a drawable.  The destination "
"drawable must have a colormap. All windows have a colormap, however, pixmaps "
"only have colormap by default if they were created with a non-%NULL window "
"argument. Otherwise a colormap must be set on them with "
"gdk_drawable_set_colormap()."
msgstr ""

# #-#-#-#-#  gdkdraw.pot (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_draw_pixbuf:
# #-#-#-#-#  gdkpixbuf-render.pot (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_pixbuf_render_to_drawable_alpha:
#: gdkdraw.c:728:2 gdkpixbuf-render.c:206:2
msgid ""
"On older X servers, rendering pixbufs with an alpha channel involves round "
"trips to the X server, and may be somewhat slow."
msgstr ""

# #used by: gdk_draw_pixbuf:
#: gdkdraw.c:731:2
msgid ""
"The clip mask of @gc is ignored, but clip rectangles and clip regions work "
"fine."
msgstr ""

# used by: gdk_draw_points:
#: gdkdraw.c:768:1
msgid "@points: an array of #GdkPoint structures."
msgstr ""

# used by: gdk_draw_points:
#: gdkdraw.c:769:1
msgid "@npoints: the number of points to be drawn."
msgstr ""

# #used by: gdk_draw_points:
#: gdkdraw.c:771:2
msgid ""
"Draws a number of points, using the foreground color and other attributes of "
"the #GdkGC."
msgstr ""

# used by: gdk_draw_segments:
#: gdkdraw.c:795:2
msgid ""
"@segs: an array of #GdkSegment structures specifying the start and end "
"points of the lines to be drawn."
msgstr ""

# used by: gdk_draw_segments:
#: gdkdraw.c:797:2
msgid ""
"@nsegs: the number of line segments to draw, i.e. the size of the @segs "
"array."
msgstr ""

# #used by: gdk_draw_segments:
#: gdkdraw.c:800:1
msgid "Draws a number of unconnected lines."
msgstr ""

# used by: gdk_draw_lines:
#: gdkdraw.c:824:1
msgid ""
"@points: an array of #GdkPoint structures specifying the endpoints of the"
msgstr ""

# used by: gdk_draw_lines:
#: gdkdraw.c:825:1
msgid "@npoints: the size of the @points array."
msgstr ""

# #used by: gdk_draw_lines:
#: gdkdraw.c:827:4
msgid ""
"Draws a series of lines connecting the given points. The way in which joins "
"between lines are draw is determined by the #GdkCapStyle value in the "
"#GdkGC. This can be set with gdk_gc_set_line_attributes()."
msgstr ""

# #-#-#-#-#  gdkdraw.pot (gdk 2.10.6)  #-#-#-#-#
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_glyphs:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_glyphs_transformed:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_trapezoids:
# #-#-#-#-#  gdkgc.pot (gdk 2.10.6)  #-#-#-#-#
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: _gdk_gc_init:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_gc_ref:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_gc_unref:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_gc_set_values:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: _gdk_gc_get_clip_region:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: _gdk_gc_get_fill:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: _gdk_gc_get_tile:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: _gdk_gc_get_stipple:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: _gdk_gc_get_fg_pixel:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: _gdk_gc_get_bg_pixel:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_gc_offset:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_gc_set_colormap:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_gc_get_colormap:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_gc_set_rgb_fg_color:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_gc_set_rgb_bg_color:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: _gdk_gc_update_context:
# #-#-#-#-#  gdkrgb.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_rgb_32_image_dithalign:
#: gdkdraw.c:886:1 gdkdraw.c:920:1 gdkdraw.c:959:1 gdkgc.c:125:1 gdkgc.c:201:1
#: gdkgc.c:215:1 gdkgc.c:249:1 gdkgc.c:608:1 gdkgc.c:626:1 gdkgc.c:642:1
#: gdkgc.c:659:1 gdkgc.c:676:1 gdkgc.c:694:1 gdkgc.c:817:1 gdkgc.c:911:1
#: gdkgc.c:938:1 gdkgc.c:973:1 gdkgc.c:1005:1 gdkgc.c:1107:1 gdkrgb.c:3416:1
msgid "@gc: a #GdkGC"
msgstr ""

# used by: gdk_draw_glyphs:
#: gdkdraw.c:887:1
msgid "@font: font to be used"
msgstr ""

# used by: gdk_draw_glyphs:
#: gdkdraw.c:888:1
msgid "@x: X coordinate of baseline origin"
msgstr ""

# used by: gdk_draw_glyphs:
#: gdkdraw.c:889:1
msgid "@y: Y coordinate of baseline origin"
msgstr ""

# used by: gdk_draw_glyphs:
#: gdkdraw.c:890:1
msgid "@glyphs: the glyph string to draw"
msgstr ""

# #used by: gdk_draw_glyphs:
#: gdkdraw.c:892:2
msgid ""
"This is a low-level function; 99% of text rendering should be done using "
"gdk_draw_layout() instead."
msgstr ""

# #used by: gdk_draw_glyphs:
#: gdkdraw.c:895:5
msgid ""
"A glyph is a single image in a font. This function draws a sequence of "
"glyphs.  To obtain a sequence of glyphs you have to understand a lot about "
"internationalized text handling, which you don't want to understand; thus, "
"use gdk_draw_layout() instead of this function, gdk_draw_layout() handles "
"the details."
msgstr ""

# used by: gdk_draw_glyphs_transformed:
#: gdkdraw.c:921:1
msgid "@matrix: a #PangoMatrix, or %NULL to use an identity transformation"
msgstr ""

# used by: gdk_draw_glyphs_transformed:
#: gdkdraw.c:922:1
msgid "@font: the font in which to draw the string"
msgstr ""

# used by: gdk_draw_glyphs_transformed:
#: gdkdraw.c:923:2
msgid ""
"@x:       the x position of the start of the string (in Pango units in user "
"space coordinates)"
msgstr ""

# used by: gdk_draw_glyphs_transformed:
#: gdkdraw.c:925:2
msgid ""
"@y:       the y position of the baseline (in Pango units in user space "
"coordinates)"
msgstr ""

# used by: gdk_draw_glyphs_transformed:
#: gdkdraw.c:927:1
msgid "@glyphs:  the glyph string to draw"
msgstr ""

# #used by: gdk_draw_glyphs_transformed:
#: gdkdraw.c:929:6
msgid ""
"Renders a #PangoGlyphString onto a drawable, possibly transforming the layed-"
"out coordinates through a transformation matrix. Note that the "
"transformation matrix for @font is not changed, so to produce correct "
"rendering results, the @font must have been loaded using a #PangoContext "
"with an identical transformation matrix to that passed in to this function."
msgstr ""

# #used by: gdk_draw_glyphs_transformed:
#: gdkdraw.c:936:1
msgid "See also gdk_draw_glyphs(), gdk_draw_layout()."
msgstr ""

# #-#-#-#-#  gdkdraw.pot (gdk 2.10.6)  #-#-#-#-#
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_draw_glyphs_transformed:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_draw_trapezoids:
# #-#-#-#-#  gdkpango.pot (gdk 2.10.6)  #-#-#-#-#
# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_pango_renderer_new:
# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_pango_renderer_get_default:
# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_pango_renderer_set_drawable:
# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_pango_renderer_set_gc:
# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_pango_renderer_set_stipple:
# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_pango_renderer_set_override_color:
#: gdkdraw.c:938:1 gdkdraw.c:969:1 gdkpango.c:565:1 gdkpango.c:606:1
#: gdkpango.c:637:1 gdkpango.c:671:1 gdkpango.c:710:1 gdkpango.c:747:1
msgid "Since: 2.6"
msgstr ""

# used by: gdk_draw_trapezoids:
#: gdkdraw.c:960:1
msgid "@trapezoids: an array of #GdkTrapezoid structures"
msgstr ""

# used by: gdk_draw_trapezoids:
#: gdkdraw.c:961:1
msgid "@n_trapezoids: the number of trapezoids to draw"
msgstr ""

# #used by: gdk_draw_trapezoids:
#: gdkdraw.c:963:5
msgid ""
"Draws a set of anti-aliased trapezoids. The trapezoids are combined using "
"saturation addition, then drawn over the background as a set. This is low "
"level functionality used internally to implement rotated underlines and "
"backgrouds when rendering a PangoLayout and is likely not useful for "
"applications."
msgstr ""

# used by: gdk_drawable_copy_to_image:
#: gdkdraw.c:1004:1
msgid "@image: a #GdkDrawable, or %NULL if a new @image should be created."
msgstr ""

# used by: gdk_drawable_copy_to_image:
#: gdkdraw.c:1005:1
msgid "@src_x: x coordinate on @drawable"
msgstr ""

# used by: gdk_drawable_copy_to_image:
#: gdkdraw.c:1006:1
msgid "@src_y: y coordinate on @drawable"
msgstr ""

# used by: gdk_drawable_copy_to_image:
#: gdkdraw.c:1007:1
msgid "@dest_x: x coordinate within @image. Must be 0 if @image is %NULL"
msgstr ""

# used by: gdk_drawable_copy_to_image:
#: gdkdraw.c:1008:1
msgid "@dest_y: y coordinate within @image. Must be 0 if @image is %NULL"
msgstr ""

# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_drawable_copy_to_image:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_drawable_get_image:
#: gdkdraw.c:1009:1 gdkdraw.c:1082:1
msgid "@width: width of region to get"
msgstr ""

# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_drawable_copy_to_image:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_drawable_get_image:
#: gdkdraw.c:1010:1 gdkdraw.c:1083:1
msgid "@height: height or region to get"
msgstr ""

# #used by: gdk_drawable_copy_to_image:
#: gdkdraw.c:1012:3
msgid ""
"Copies a portion of @drawable into the client side image structure @image. "
"If @image is %NULL, creates a new image of size @width x @height and copies "
"into that. See gdk_drawable_get_image() for further details."
msgstr ""

# #used by: gdk_drawable_copy_to_image:
#: gdkdraw.c:1016:2
msgid ""
"Return value: @image, or a new a #GdkImage containing the contents of "
"@drawable"
msgstr ""

# #-#-#-#-#  gdkdraw.pot (gdk 2.10.6)  #-#-#-#-#
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_drawable_copy_to_image:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: _gdk_drawable_get_scratch_gc:
# #-#-#-#-#  gdkevents.pot (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_display_set_double_click_distance:
# #-#-#-#-#  gdk.pot (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_threads_set_lock_functions:
#: gdkdraw.c:1019:1 gdkdraw.c:1669:1 gdkevents.c:1178:1 gdk.c:438:1
msgid "Since: 2.4"
msgstr ""

# used by: gdk_drawable_get_image:
#: gdkdraw.c:1080:1
msgid "@x: x coordinate on @drawable"
msgstr ""

# used by: gdk_drawable_get_image:
#: gdkdraw.c:1081:1
msgid "@y: y coordinate on @drawable"
msgstr ""

# #used by: gdk_drawable_get_image:
#: gdkdraw.c:1085:11
msgid ""
"A #GdkImage stores client-side image data (pixels). In contrast, #GdkPixmap "
"and #GdkWindow are server-side objects. gdk_drawable_get_image() obtains the "
"pixels from a server-side drawable as a client-side #GdkImage.  The format "
"of a #GdkImage depends on the #GdkVisual of the current display, which makes "
"manipulating #GdkImage extremely difficult; therefore, in most cases you "
"should use gdk_pixbuf_get_from_drawable() instead of this lower-level "
"function. A #GdkPixbuf contains image data in a canonicalized RGB format, "
"rather than a display-dependent format. Of course, there's a convenience vs. "
"speed tradeoff here, so you'll want to think about what makes sense for your "
"application."
msgstr ""

# #used by: gdk_drawable_get_image:
#: gdkdraw.c:1097:2
msgid ""
"@x, @y, @width, and @height define the region of @drawable to obtain as an "
"image."
msgstr ""

# #used by: gdk_drawable_get_image:
#: gdkdraw.c:1100:6
msgid ""
"You would usually copy image data to the client side if you intend to "
"examine the values of individual pixels, for example to darken an image or "
"add a red tint. It would be prohibitively slow to make a round-trip request "
"to the windowing system for each pixel, so instead you get all of them at "
"once, modify them, then copy them all back at once."
msgstr ""

# #used by: gdk_drawable_get_image:
#: gdkdraw.c:1107:3
msgid ""
"If the X server or other windowing system backend is on the local machine, "
"this function may use shared memory to avoid copying the image data."
msgstr ""

# #used by: gdk_drawable_get_image:
#: gdkdraw.c:1111:3
msgid ""
"If the source drawable is a #GdkWindow and partially offscreen or obscured, "
"then the obscured portions of the returned image will contain undefined data."
msgstr ""

# #used by: gdk_drawable_get_image:
#: gdkdraw.c:1115:1
msgid "Return value: a #GdkImage containing the contents of @drawable"
msgstr ""

# #used by: gdk_drawable_get_clip_region:
#: gdkdraw.c:1196:6
msgid ""
"Computes the region of a drawable that potentially can be written to by "
"drawing primitives. This region will not take into account the clip region "
"for the GC, and may also not take into account other factors such as if the "
"window is obscured by other windows, but no area outside of this region will "
"be affected by drawing primitives."
msgstr ""

# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_drawable_get_clip_region:
# #-#-#-#-#  gdkdraw.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_drawable_get_visible_region:
#: gdkdraw.c:1203:2 gdkdraw.c:1223:2
msgid ""
"Returns: a #GdkRegion. This must be freed with gdk_region_destroy() when you "
"are done."
msgstr ""

# #used by: gdk_drawable_get_visible_region:
#: gdkdraw.c:1218:4
msgid ""
"Computes the region of a drawable that is potentially visible. This does not "
"necessarily take into account if the window is obscured by other windows, "
"but no area outside of this region is visible."
msgstr ""

# #used by: _gdk_drawable_ref_cairo_surface:
#: gdkdraw.c:1251:3
msgid ""
"Obtains a #cairo_surface_t for the given drawable. If a #cairo_surface_t for "
"the drawable already exists, it will be referenced, otherwise a new surface "
"will be created."
msgstr ""

# #used by: _gdk_drawable_ref_cairo_surface:
#: gdkdraw.c:1255:2
msgid ""
"Return value: a newly referenced #cairo_surface_t that points to @drawable. "
"Unref with cairo_surface_destroy()"
msgstr ""

# used by: _gdk_drawable_get_scratch_gc:
#: gdkdraw.c:1657:1
msgid "@drawable: A #GdkDrawable"
msgstr ""

# used by: _gdk_drawable_get_scratch_gc:
#: gdkdraw.c:1658:1
msgid ""
"@graphics_exposures: Whether the returned #GdkGC should generate graphics "
"exposures"
msgstr ""

# #used by: _gdk_drawable_get_scratch_gc:
#: gdkdraw.c:1660:3
msgid ""
"Returns a #GdkGC suitable for drawing on @drawable. The #GdkGC has the "
"standard values for @drawable, except for the graphics_exposures field which "
"is determined by the @graphics_exposures parameter."
msgstr ""

# #used by: _gdk_drawable_get_scratch_gc:
#: gdkdraw.c:1664:2
msgid ""
"The foreground color of the returned #GdkGC is undefined. The #GdkGC must "
"not be altered in any way, except to change its foreground color."
msgstr ""

# #used by: _gdk_drawable_get_scratch_gc:
#: gdkdraw.c:1667:1
msgid "Return value: A #GdkGC suitable for drawing on @drawable"
msgstr ""

# #used by: _gdk_event_queue_find_first:
#: gdkevents.c:59:2
msgid "Find the first event on the queue that is not still being filled in."
msgstr ""

# #used by: _gdk_event_queue_find_first:
#: gdkevents.c:62:1
msgid "Return value: Pointer to the list node for that event, or NULL."
msgstr ""

# used by: _gdk_event_queue_append:
#: gdkevents.c:84:1
msgid "@event: Event to append."
msgstr ""

# #used by: _gdk_event_queue_append:
#: gdkevents.c:86:1
msgid "Appends an event onto the tail of the event queue."
msgstr ""

# #used by: _gdk_event_queue_append:
#: gdkevents.c:88:1
msgid "Returns: the newly appended list node."
msgstr ""

# used by: _gdk_event_queue_remove_link:
#: gdkevents.c:107:1
msgid "@node: node to remove"
msgstr ""

# #used by: _gdk_event_queue_remove_link:
#: gdkevents.c:109:1
msgid "Removes a specified list node from the event queue."
msgstr ""

# #used by: _gdk_event_unqueue:
#: gdkevents.c:130:2
msgid ""
"Removes and returns the first event from the event queue that is not still "
"being filled in."
msgstr ""

# #used by: _gdk_event_unqueue:
#: gdkevents.c:133:2
msgid ""
"Return value: the event, or %NULL. Ownership is transferred to the caller."
msgstr ""

# used by: gdk_event_handler_set:
#: gdkevents.c:156:1
msgid "@func: the function to call to handle events from GDK."
msgstr ""

# used by: gdk_event_handler_set:
#: gdkevents.c:157:1
msgid "@data: user data to pass to the function."
msgstr ""

# used by: gdk_event_handler_set:
#: gdkevents.c:158:2
msgid ""
"@notify: the function to call when the handler function is removed, i.e. "
"when gdk_event_handler_set() is called with another event handler."
msgstr ""

# #used by: gdk_event_handler_set:
#: gdkevents.c:161:1
msgid "Sets the function to call to handle all events from GDK."
msgstr ""

# #used by: gdk_event_handler_set:
#: gdkevents.c:163:4
msgid ""
"Note that GTK+ uses this to install its own event handler, so it is usually "
"not useful for GTK+ applications. (Although an application can call this "
"function then call gtk_main_do_event() to pass events to GTK+.)"
msgstr ""

# #used by: gdk_event_get:
#: gdkevents.c:184:3
msgid ""
"Checks all open displays for a #GdkEvent to process,to be processed on, "
"fetching events from the windowing system if necessary. See "
"gdk_display_get_event()."
msgstr ""

# #used by: gdk_event_peek:
#: gdkevents.c:209:2
msgid ""
"If there is an event waiting in the event queue of some open display, "
"returns a copy of it. See gdk_display_peek_event()."
msgstr ""

# #used by: gdk_event_peek:
#: gdkevents.c:212:3
msgid ""
"Return value: a copy of the first #GdkEvent on some event queue, or %NULL if "
"no events are in any queues. The returned #GdkEvent should be freed with "
"gdk_event_free()."
msgstr ""

# #used by: gdk_event_put:
#: gdkevents.c:235:3
msgid ""
"Appends a copy of the given event onto the front of the event queue for "
"event->any.window's display, or the default event queue if event->any.window "
"is %NULL. See gdk_display_put_event()."
msgstr ""

# used by: gdk_event_new:
#: gdkevents.c:262:1
msgid "@type: a #GdkEventType"
msgstr ""

# #used by: gdk_event_new:
#: gdkevents.c:264:1
msgid "Creates a new event of the given type. All fields are set to 0."
msgstr ""

# #used by: gdk_event_new:
#: gdkevents.c:266:2
msgid ""
"Return value: a newly-allocated #GdkEvent. The returned #GdkEvent should be "
"freed with gdk_event_free()."
msgstr ""

# #-#-#-#-#  gdkevents.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_event_copy:
# #-#-#-#-#  gdkevents.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_event_get_time:
# #-#-#-#-#  gdkevents.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_event_get_coords:
# #-#-#-#-#  gdkevents.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_event_get_root_coords:
# #-#-#-#-#  gdkevents.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_event_get_axis:
# #-#-#-#-#  gdkevents.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_event_set_screen:
# #-#-#-#-#  gdkevents.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_event_get_screen:
#: gdkevents.c:345:1 gdkevents.c:496:1 gdkevents.c:642:1 gdkevents.c:701:1
#: gdkevents.c:765:1 gdkevents.c:839:1 gdkevents.c:863:1
msgid "@event: a #GdkEvent"
msgstr ""

# #used by: gdk_event_copy:
#: gdkevents.c:347:2
msgid ""
"Copies a #GdkEvent, copying or incrementing the reference count of the "
"resources associated with it (e.g. #GdkWindow's and strings)."
msgstr ""

# #used by: gdk_event_copy:
#: gdkevents.c:350:2
msgid ""
"Return value: a copy of @event. The returned #GdkEvent should be freed with "
"gdk_event_free()."
msgstr ""

# used by: gdk_event_free:
#: gdkevents.c:429:1
msgid "@event:  a #GdkEvent."
msgstr ""

# #used by: gdk_event_free:
#: gdkevents.c:431:4
msgid ""
"Frees a #GdkEvent, freeing or decrementing any resources associated with it. "
"Note that this function should only be called with events returned from "
"functions such as gdk_event_peek(), gdk_event_get(), "
"gdk_event_get_graphics_expose() and gdk_event_copy()."
msgstr ""

# #used by: gdk_event_get_time:
#: gdkevents.c:498:2
msgid ""
"Returns the time stamp from @event, if there is one; otherwise returns "
"#GDK_CURRENT_TIME. If @event is %NULL, returns #GDK_CURRENT_TIME."
msgstr ""

# #used by: gdk_event_get_time:
#: gdkevents.c:501:1
msgid "Return value: time stamp field from @event"
msgstr ""

# used by: gdk_event_get_state:
#: gdkevents.c:564:1
msgid "@event: a #GdkEvent or NULL"
msgstr ""

# used by: gdk_event_get_state:
#: gdkevents.c:565:1
msgid "@state: return location for state"
msgstr ""

# #used by: gdk_event_get_state:
#: gdkevents.c:567:4
msgid ""
"If the event contains a |$_1_$|state|$_1_$| field, puts that field in "
"@state. Otherwise stores an empty state (0). Returns %TRUE if there was a "
"state field in the event. @event may be %NULL, in which case it's treated as "
"if the event had no state field."
msgstr ""

# #used by: gdk_event_get_state:
#: gdkevents.c:572:1
msgid "Return value: %TRUE if there was a state field in the event"
msgstr ""

# used by: gdk_event_get_coords:
#: gdkevents.c:643:1
msgid "@x_win: location to put event window x coordinate"
msgstr ""

# used by: gdk_event_get_coords:
#: gdkevents.c:644:1
msgid "@y_win: location to put event window y coordinate"
msgstr ""

# #used by: gdk_event_get_coords:
#: gdkevents.c:646:1
msgid "Extract the event window relative x/y coordinates from an event."
msgstr ""

# #used by: gdk_event_get_coords:
#: gdkevents.c:648:1
msgid "Return value: %TRUE if the event delivered event window coordinates"
msgstr ""

# used by: gdk_event_get_root_coords:
#: gdkevents.c:702:1
msgid "@x_root: location to put root window x coordinate"
msgstr ""

# used by: gdk_event_get_root_coords:
#: gdkevents.c:703:1
msgid "@y_root: location to put root window y coordinate"
msgstr ""

# #used by: gdk_event_get_root_coords:
#: gdkevents.c:705:1
msgid "Extract the root window relative x/y coordinates from an event."
msgstr ""

# #used by: gdk_event_get_root_coords:
#: gdkevents.c:707:1
msgid "Return value: %TRUE if the event delivered root window coordinates"
msgstr ""

# used by: gdk_event_get_axis:
#: gdkevents.c:766:1
msgid "@axis_use: the axis use to look for"
msgstr ""

# used by: gdk_event_get_axis:
#: gdkevents.c:767:1
msgid "@value: location to store the value found"
msgstr ""

# #used by: gdk_event_get_axis:
#: gdkevents.c:769:2
msgid ""
"Extract the axis value for a particular axis use from an event structure."
msgstr ""

# #used by: gdk_event_get_axis:
#: gdkevents.c:772:1
msgid "Return value: %TRUE if the specified axis was found, otherwise %FALSE"
msgstr ""

# #-#-#-#-#  gdkevents.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_event_set_screen:
# #-#-#-#-#  gdkimage.pot (gdk 2.10.6)  #-#-#-#-#
# used by: _gdk_image_get_scratch:
# #-#-#-#-#  gdkpango.pot (gdk 2.10.6)  #-#-#-#-#
# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pango_renderer_new:
# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pango_renderer_get_default:
# #-#-#-#-#  gdkrgb.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_screen_get_rgb_visual:
# #-#-#-#-#  gdkscreen.pot (gdk 2.10.6)  #-#-#-#-#
# #-#-#-#-#  gdkscreen.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_screen_set_font_options:
# #-#-#-#-#  gdkscreen.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_screen_get_font_options:
# #-#-#-#-#  gdkscreen.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_screen_set_resolution:
# #-#-#-#-#  gdkscreen.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_screen_get_resolution:
#: gdkevents.c:840:1 gdkimage.c:341:1 gdkpango.c:557:1 gdkpango.c:591:1
#: gdkrgb.c:3683:1 gdkscreen.c:374:1 gdkscreen.c:408:1 gdkscreen.c:427:1
#: gdkscreen.c:457:1
msgid "@screen: a #GdkScreen"
msgstr ""

# #used by: gdk_event_set_screen:
#: gdkevents.c:842:3
msgid ""
"Sets the screen for @event to @screen. The event must have been allocated by "
"GTK+, for instance, by gdk_event_copy()."
msgstr ""

# #used by: gdk_event_get_screen:
#: gdkevents.c:865:7
msgid ""
"Returns the screen for the event. The screen is typically the screen for "
"<literal>event->any.window</literal>, but for events such as mouse events, "
"it is the screen where the pointer was when the event occurs - that is, the "
"screen which has the root window to which <literal>event->motion.x_root</"
"literal> and <literal>event->motion.y_root</literal> are relative."
msgstr ""

# #used by: gdk_event_get_screen:
#: gdkevents.c:873:1
msgid "Return value: the screen for the event"
msgstr ""

# used by: gdk_set_show_events:
#: gdkevents.c:896:1
msgid "@show_events:  %TRUE to output event debugging information."
msgstr ""

# #used by: gdk_set_show_events:
#: gdkevents.c:898:4
msgid ""
"Sets whether a trace of received events is output. Note that GTK+ must be "
"compiled with debugging (that is, configured using the <option>--enable-"
"debug</option> option) to use this option."
msgstr ""

# #used by: gdk_get_show_events:
#: gdkevents.c:915:1
msgid "Gets whether event debugging output is enabled."
msgstr ""

# #used by: gdk_get_show_events:
#: gdkevents.c:917:1
msgid "Return value: %TRUE if event debugging output is enabled."
msgstr ""

# #-#-#-#-#  gdkevents.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_display_set_double_click_time:
# #-#-#-#-#  gdkevents.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_set_double_click_time:
#: gdkevents.c:1135:1 gdkevents.c:1153:1
msgid "@msec: double click time in milliseconds (thousandths of a second)"
msgstr ""

# #used by: gdk_display_set_double_click_time:
#: gdkevents.c:1137:4
msgid ""
"Sets the double click time (two clicks within this time interval count as a "
"double click and result in a #GDK_2BUTTON_PRESS event). Applications should "
"<emphasis>not</emphasis> set this, it is a global user-configured setting."
msgstr ""

# #used by: gdk_set_double_click_time:
#: gdkevents.c:1155:5
msgid ""
"Set the double click time for the default display. See "
"gdk_display_set_double_click_time(). See also "
"gdk_display_set_double_click_distance(). Applications should <emphasis>not</"
"emphasis> set this, it is a global user-configured setting."
msgstr ""

# used by: gdk_display_set_double_click_distance:
#: gdkevents.c:1170:1
msgid "@distance: distance in pixels"
msgstr ""

# #used by: gdk_display_set_double_click_distance:
#: gdkevents.c:1172:5
msgid ""
"Sets the double click distance (two clicks within this distance count as a "
"double click and result in a #GDK_2BUTTON_PRESS event). See also "
"gdk_display_set_double_click_time(). Applications should <emphasis>not</"
"emphasis> set this, it is a global user-configured setting."
msgstr ""

# used by: gdk_setting_get:
#: gdkevents.c:1201:1
msgid "@name: the name of the setting."
msgstr ""

# used by: gdk_setting_get:
#: gdkevents.c:1202:1
msgid "@value: location to store the value of the setting."
msgstr ""

# #used by: gdk_setting_get:
#: gdkevents.c:1204:2
msgid ""
"Obtains a desktop-wide setting, such as the double-click time, for the "
"default screen. See gdk_screen_get_setting()."
msgstr ""

# #used by: gdk_setting_get:
#: gdkevents.c:1207:2
msgid ""
"Returns : %TRUE if the setting existed and a value was stored in @value, %"
"FALSE otherwise."
msgstr ""

# #-#-#-#-#  gdkfont.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_font_ref:
# #-#-#-#-#  gdkfont.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_font_unref:
# #-#-#-#-#  gdkfont.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_char_width:
# #-#-#-#-#  gdkfont.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_char_width_wc:
# #-#-#-#-#  gdkfont.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_string_measure:
# #-#-#-#-#  gdkfont.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_text_measure:
# #-#-#-#-#  gdkfont.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_char_measure:
# #-#-#-#-#  gdkfont.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_string_height:
# #-#-#-#-#  gdkfont.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_text_height:
# #-#-#-#-#  gdkfont.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_char_height:
#: gdkfont.c:49:1 gdkfont.c:69:1 gdkfont.c:112:1 gdkfont.c:132:1
#: gdkfont.c:151:1 gdkfont.c:203:1 gdkfont.c:231:1 gdkfont.c:252:1
#: gdkfont.c:274:1 gdkfont.c:301:1
msgid "@font: a #GdkFont"
msgstr ""

# #used by: gdk_font_ref:
#: gdkfont.c:51:1
msgid "Increases the reference count of a font by one."
msgstr ""

# #used by: gdk_font_ref:
#: gdkfont.c:53:1
msgid "Return value: @font"
msgstr ""

# #used by: gdk_font_unref:
#: gdkfont.c:71:2
msgid ""
"Decreases the reference count of a font by one. If the result is zero, "
"destroys the font."
msgstr ""

# used by: gdk_string_width:
#: gdkfont.c:90:1
msgid "@font:  a #GdkFont"
msgstr ""

# used by: gdk_string_width:
#: gdkfont.c:91:1
msgid "@string: the nul-terminated string to measure"
msgstr ""

# #used by: gdk_string_width:
#: gdkfont.c:93:4
msgid ""
"Determines the width of a nul-terminated string. (The distance from the "
"origin of the string to the point where the next string in a sequence of "
"strings should be drawn)"
msgstr ""

# #used by: gdk_string_width:
#: gdkfont.c:98:1
msgid "Return value: the width of the string in pixels."
msgstr ""

# #-#-#-#-#  gdkfont.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_char_width:
# #-#-#-#-#  gdkfont.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_char_width_wc:
# #-#-#-#-#  gdkfont.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_char_measure:
# #-#-#-#-#  gdkfont.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_char_height:
#: gdkfont.c:113:1 gdkfont.c:133:1 gdkfont.c:232:1 gdkfont.c:302:1
msgid "@character: the character to measure."
msgstr ""

# #used by: gdk_char_width:
#: gdkfont.c:115:1
msgid "Determines the width of a given character."
msgstr ""

# #-#-#-#-#  gdkfont.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_char_width:
# #-#-#-#-#  gdkfont.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_char_width_wc:
#: gdkfont.c:117:1 gdkfont.c:138:1
msgid "Return value: the width of the character in pixels."
msgstr ""

# #-#-#-#-#  gdkfont.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_char_width:
# #-#-#-#-#  gdkfont.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_char_height:
#: gdkfont.c:119:1 gdkfont.c:311:1
msgid "Deprecated: Use gdk_text_extents() instead."
msgstr ""

# #used by: gdk_char_width_wc:
#: gdkfont.c:135:2
msgid ""
"Determines the width of a given wide character. (Encoded in the wide-"
"character encoding of the current locale)."
msgstr ""

# #-#-#-#-#  gdkfont.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_string_measure:
# #-#-#-#-#  gdkfont.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_string_extents:
# #-#-#-#-#  gdkfont.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_string_height:
#: gdkfont.c:152:1 gdkfont.c:175:1 gdkfont.c:253:1
msgid "@string: the nul-terminated string to measure."
msgstr ""

# #used by: gdk_string_measure:
#: gdkfont.c:154:5
msgid ""
"Determines the distance from the origin to the rightmost portion of a nul-"
"terminated string when drawn. This is not the correct value for determining "
"the origin of the next portion when drawing text in multiple pieces. See "
"gdk_string_width()."
msgstr ""

# #-#-#-#-#  gdkfont.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_string_measure:
# #-#-#-#-#  gdkfont.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_text_measure:
#: gdkfont.c:160:1 gdkfont.c:213:1
msgid "Return value: the right bearing of the string in pixels."
msgstr ""

# used by: gdk_string_extents:
#: gdkfont.c:176:1
msgid "@lbearing: the left bearing of the string."
msgstr ""

# used by: gdk_string_extents:
#: gdkfont.c:177:1
msgid "@rbearing: the right bearing of the string."
msgstr ""

# used by: gdk_string_extents:
#: gdkfont.c:178:1
msgid "@width: the width of the string."
msgstr ""

# used by: gdk_string_extents:
#: gdkfont.c:179:1
msgid "@ascent: the ascent of the string."
msgstr ""

# used by: gdk_string_extents:
#: gdkfont.c:180:1
msgid "@descent: the descent of the string."
msgstr ""

# #used by: gdk_string_extents:
#: gdkfont.c:182:1
msgid "Gets the metrics of a nul-terminated string."
msgstr ""

# #-#-#-#-#  gdkfont.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_text_measure:
# #-#-#-#-#  gdkfont.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_text_height:
#: gdkfont.c:204:1 gdkfont.c:275:1
msgid "@text: the text to measure."
msgstr ""

# #-#-#-#-#  gdkfont.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_text_measure:
# #-#-#-#-#  gdkfont.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_text_height:
#: gdkfont.c:205:1 gdkfont.c:276:1
msgid "@text_length: the length of the text in bytes."
msgstr ""

# #used by: gdk_text_measure:
#: gdkfont.c:207:5
msgid ""
"Determines the distance from the origin to the rightmost portion of a string "
"when drawn. This is not the correct value for determining the origin of the "
"next portion when drawing text in multiple pieces. See gdk_text_width()."
msgstr ""

# #used by: gdk_char_measure:
#: gdkfont.c:234:4
msgid ""
"Determines the distance from the origin to the rightmost portion of a "
"character when drawn. This is not the correct value for determining the "
"origin of the next portion when drawing text in multiple pieces."
msgstr ""

# #used by: gdk_char_measure:
#: gdkfont.c:239:1
msgid "Return value: the right bearing of the character in pixels."
msgstr ""

# #used by: gdk_string_height:
#: gdkfont.c:255:4
msgid ""
"Determines the total height of a given nul-terminated string. This value is "
"not generally useful, because you cannot determine how this total height "
"will be drawn in relation to the baseline. See gdk_string_extents()."
msgstr ""

# #-#-#-#-#  gdkfont.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_string_height:
# #-#-#-#-#  gdkfont.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_text_height:
#: gdkfont.c:260:1 gdkfont.c:283:1
msgid "Return value: the height of the string in pixels."
msgstr ""

# #used by: gdk_text_height:
#: gdkfont.c:278:4
msgid ""
"Determines the total height of a given string. This value is not generally "
"useful, because you cannot determine how this total height will be drawn in "
"relation to the baseline. See gdk_text_extents()."
msgstr ""

# #used by: gdk_char_height:
#: gdkfont.c:304:4
msgid ""
"Determines the total height of a given character. This value is not "
"generally useful, because you cannot determine how this total height will be "
"drawn in relation to the baseline. See gdk_text_extents()."
msgstr ""

# #used by: gdk_char_height:
#: gdkfont.c:309:1
msgid "Return value: the height of the character in pixels."
msgstr ""

# used by: gdk_font_from_description:
#: gdkfont.c:324:1
msgid "@font_desc: a #PangoFontDescription."
msgstr ""

# #used by: gdk_font_from_description:
#: gdkfont.c:326:5
msgid ""
"Load a #GdkFont based on a Pango font description. This font will only be an "
"approximation of the Pango font, and internationalization will not be "
"handled correctly. This function should only be used for legacy code that "
"cannot be easily converted to use Pango. Using Pango directly will produce "
"better results."
msgstr ""

# #used by: gdk_font_from_description:
#: gdkfont.c:332:2
msgid ""
"Return value: the newly loaded font, or %NULL if the font cannot be loaded."
msgstr ""

# used by: gdk_font_load:
#: gdkfont.c:343:1
msgid "@font_name: a XLFD describing the font to load."
msgstr ""

# #used by: gdk_font_load:
#: gdkfont.c:345:1
msgid "Loads a font."
msgstr ""

# #used by: gdk_font_load:
#: gdkfont.c:347:2
msgid ""
"The font may be newly loaded or looked up the font in a cache. You should "
"make no assumptions about the initial reference count."
msgstr ""

# #used by: gdk_font_load:
#: gdkfont.c:350:1
msgid "Return value: a #GdkFont, or %NULL if the font could not be loaded."
msgstr ""

# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_gc_new:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_gc_new_with_values:
#: gdkgc.c:84:2 gdkgc.c:101:2
msgid ""
"@drawable: a #GdkDrawable. The created GC must always be used with drawables "
"of the same depth as this one."
msgstr ""

# #used by: gdk_gc_new:
#: gdkgc.c:87:1
msgid "Create a new graphics context with default values."
msgstr ""

# #used by: gdk_gc_new:
#: gdkgc.c:89:1
msgid "Returns: the new graphics context."
msgstr ""

# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_gc_new_with_values:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: _gdk_gc_init:
#: gdkgc.c:103:1 gdkgc.c:127:1
msgid "@values: a structure containing initial values for the GC."
msgstr ""

# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_gc_new_with_values:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: _gdk_gc_init:
#: gdkgc.c:104:2 gdkgc.c:128:2
msgid "@values_mask: a bit mask indicating which fields in @values are set."
msgstr ""

# #used by: gdk_gc_new_with_values:
#: gdkgc.c:107:1
msgid "Create a new GC with the given initial values."
msgstr ""

# #used by: gdk_gc_new_with_values:
#: gdkgc.c:109:1
msgid "Return value: the new graphics context."
msgstr ""

# used by: _gdk_gc_init:
#: gdkgc.c:126:1
msgid "@drawable: a #GdkDrawable."
msgstr ""

# #used by: _gdk_gc_init:
#: gdkgc.c:131:5
msgid ""
"Does initialization of the generic portions of a #GdkGC created with the "
"specified values and values_mask. This should be called out of the "
"implementation of GdkDrawable.create_gc() immediately after creating the "
"#GdkGC object."
msgstr ""

# #used by: gdk_gc_ref:
#: gdkgc.c:205:1
msgid "Return value: the gc."
msgstr ""

# #used by: gdk_gc_unref:
#: gdkgc.c:217:1
msgid "Decrement the reference count of @gc."
msgstr ""

# #used by: gdk_gc_unref:
#: gdkgc.c:219:1
msgid "Deprecated: Use g_object_unref() instead."
msgstr ""

# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_gc_get_values:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_gc_set_tile:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_gc_set_ts_origin:
#: gdkgc.c:229:1 gdkgc.c:432:1 gdkgc.c:474:1
msgid "@gc:  a #GdkGC."
msgstr ""

# used by: gdk_gc_get_values:
#: gdkgc.c:230:1
msgid "@values: the #GdkGCValues structure in which to store the results."
msgstr ""

# #used by: gdk_gc_get_values:
#: gdkgc.c:232:4
msgid ""
"Retrieves the current values from a graphics context. Note that only the "
"pixel values of the @values->foreground and @values->background are filled, "
"use gdk_colormap_query_color() to obtain the rgb values if you need them."
msgstr ""

# used by: gdk_gc_set_values:
#: gdkgc.c:250:1
msgid "@values: struct containing the new values"
msgstr ""

# used by: gdk_gc_set_values:
#: gdkgc.c:251:1
msgid "@values_mask: mask indicating which struct fields are to be used"
msgstr ""

# #used by: gdk_gc_set_values:
#: gdkgc.c:253:5
msgid ""
"Sets attributes of a graphics context in bulk. For each flag set in "
"@values_mask, the corresponding field will be read from @values and set as "
"the new value for @gc. If you're only setting a few values on @gc, calling "
"individual |$_1_$|setter|$_1_$| functions is likely more convenient."
msgstr ""

# used by: gdk_gc_set_foreground:
#: gdkgc.c:324:1
msgid "@color: the new foreground color."
msgstr ""

# #used by: gdk_gc_set_foreground:
#: gdkgc.c:326:4
msgid ""
"Sets the foreground color for a graphics context. Note that this function "
"uses @color->pixel, use gdk_gc_set_rgb_fg_color() to specify the foreground "
"color as red, green, blue components."
msgstr ""

# used by: gdk_gc_set_background:
#: gdkgc.c:347:1
msgid "@color: the new background color."
msgstr ""

# #used by: gdk_gc_set_background:
#: gdkgc.c:349:4
msgid ""
"Sets the background color for a graphics context. Note that this function "
"uses @color->pixel, use gdk_gc_set_rgb_bg_color() to specify the background "
"color as red, green, blue components."
msgstr ""

# used by: gdk_gc_set_font:
#: gdkgc.c:370:1
msgid "@font: the new font."
msgstr ""

# #used by: gdk_gc_set_font:
#: gdkgc.c:372:4
msgid ""
"Sets the font for a graphics context. (Note that all text-drawing functions "
"in GDK take a @font argument; the value set here is used when that argument "
"is %NULL.)"
msgstr ""

# used by: gdk_gc_set_function:
#: gdkgc.c:393:1
msgid "@function: the #GdkFunction to use"
msgstr ""

# #used by: gdk_gc_set_function:
#: gdkgc.c:395:3
msgid ""
"Determines how the current pixel values and the pixel values being drawn are "
"combined to produce the final pixel values."
msgstr ""

# used by: gdk_gc_set_fill:
#: gdkgc.c:414:1
msgid "@fill: the new fill mode."
msgstr ""

# #used by: gdk_gc_set_fill:
#: gdkgc.c:416:1
msgid "Set the fill mode for a graphics context."
msgstr ""

# used by: gdk_gc_set_tile:
#: gdkgc.c:433:1
msgid "@tile:  the new tile pixmap."
msgstr ""

# #used by: gdk_gc_set_tile:
#: gdkgc.c:435:3
msgid ""
"Set a tile pixmap for a graphics context. This will only be used if the fill "
"mode is %GDK_TILED."
msgstr ""

# used by: gdk_gc_set_stipple:
#: gdkgc.c:454:1
msgid "@stipple: the new stipple bitmap."
msgstr ""

# #used by: gdk_gc_set_stipple:
#: gdkgc.c:456:3
msgid ""
"Set the stipple bitmap for a graphics context. The stipple will only be used "
"if the fill mode is %GDK_STIPPLED or %GDK_OPAQUE_STIPPLED."
msgstr ""

# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_gc_set_ts_origin:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_gc_set_clip_origin:
#: gdkgc.c:475:1 gdkgc.c:502:1
msgid "@x: the x-coordinate of the origin."
msgstr ""

# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_gc_set_ts_origin:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_gc_set_clip_origin:
#: gdkgc.c:476:1 gdkgc.c:503:1
msgid "@y: the y-coordinate of the origin."
msgstr ""

# #used by: gdk_gc_set_ts_origin:
#: gdkgc.c:478:4
msgid ""
"Set the origin when using tiles or stipples with the GC. The tile or stipple "
"will be aligned such that the upper left corner of the tile or stipple will "
"coincide with this point."
msgstr ""

# #used by: gdk_gc_set_clip_origin:
#: gdkgc.c:505:3
msgid ""
"Sets the origin of the clip mask. The coordinates are interpreted relative "
"to the upper-left corner of the destination drawable of the current "
"operation."
msgstr ""

# used by: gdk_gc_set_clip_mask:
#: gdkgc.c:527:1
msgid "@gc: the #GdkGC."
msgstr ""

# used by: gdk_gc_set_clip_mask:
#: gdkgc.c:528:1
msgid "@mask: a bitmap."
msgstr ""

# #used by: gdk_gc_set_clip_mask:
#: gdkgc.c:530:3
msgid ""
"Sets the clip mask for a graphics context from a bitmap. The clip mask is "
"interpreted relative to the clip origin. (See gdk_gc_set_clip_origin())."
msgstr ""

# used by: gdk_gc_set_clip_rectangle:
#: gdkgc.c:563:1
msgid "@rectangle: the rectangle to clip to."
msgstr ""

# #used by: gdk_gc_set_clip_rectangle:
#: gdkgc.c:565:3
msgid ""
"Sets the clip mask for a graphics context from a rectangle. The clip mask is "
"interpreted relative to the clip origin. (See gdk_gc_set_clip_origin())."
msgstr ""

# used by: gdk_gc_set_clip_region:
#: gdkgc.c:588:1
msgid "@region: the #GdkRegion."
msgstr ""

# #used by: gdk_gc_set_clip_region:
#: gdkgc.c:590:3
msgid ""
"Sets the clip mask for a graphics context from a region structure. The clip "
"mask is interpreted relative to the clip origin. (See gdk_gc_set_clip_origin"
"())."
msgstr ""

# #used by: _gdk_gc_get_clip_region:
#: gdkgc.c:610:1
msgid "Gets the current clip region for @gc, if any."
msgstr ""

# #used by: _gdk_gc_get_clip_region:
#: gdkgc.c:612:3
msgid ""
"Return value: the clip region for the GC, or %NULL. (if a clip mask is set, "
"the return will be %NULL) This value is owned by the GC and must not be "
"freed."
msgstr ""

# #used by: _gdk_gc_get_fill:
#: gdkgc.c:628:1
msgid "Gets the current file style for the GC"
msgstr ""

# #used by: _gdk_gc_get_fill:
#: gdkgc.c:630:1
msgid "Return value: the file style for the GC"
msgstr ""

# #used by: _gdk_gc_get_tile:
#: gdkgc.c:644:1
msgid "Gets the tile pixmap for @gc, if any"
msgstr ""

# #used by: _gdk_gc_get_tile:
#: gdkgc.c:646:2
msgid ""
"Return value: the tile set on the GC, or %NULL. The value is owned by the GC "
"and must not be freed."
msgstr ""

# #used by: _gdk_gc_get_stipple:
#: gdkgc.c:661:1
msgid "Gets the stipple pixmap for @gc, if any"
msgstr ""

# #used by: _gdk_gc_get_stipple:
#: gdkgc.c:663:2
msgid ""
"Return value: the stipple set on the GC, or %NULL. The value is owned by the "
"GC and must not be freed."
msgstr ""

# #used by: _gdk_gc_get_fg_pixel:
#: gdkgc.c:678:3
msgid ""
"Gets the foreground pixel value for @gc. If the foreground pixel has never "
"been set, returns the default value 0."
msgstr ""

# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: _gdk_gc_get_fg_pixel:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: _gdk_gc_get_bg_pixel:
#: gdkgc.c:682:1 gdkgc.c:700:1
msgid "Return value: the foreground pixel value of the GC"
msgstr ""

# #used by: _gdk_gc_get_bg_pixel:
#: gdkgc.c:696:3
msgid ""
"Gets the background pixel value for @gc.If the foreground pixel has never "
"been set, returns the default value 1."
msgstr ""

# used by: gdk_gc_set_subwindow:
#: gdkgc.c:713:1
msgid "@mode: the subwindow mode."
msgstr ""

# #used by: gdk_gc_set_subwindow:
#: gdkgc.c:715:2
msgid ""
"Sets how drawing with this GC on a window will affect child windows of that "
"window."
msgstr ""

# used by: gdk_gc_set_exposures:
#: gdkgc.c:733:1
msgid "@exposures: if %TRUE, exposure events will be generated."
msgstr ""

# #used by: gdk_gc_set_exposures:
#: gdkgc.c:735:4
msgid ""
"Sets whether copying non-visible portions of a drawable using this graphics "
"context generate exposure events for the corresponding regions of the "
"destination drawable. (See gdk_draw_drawable())."
msgstr ""

# used by: gdk_gc_set_line_attributes:
#: gdkgc.c:755:1
msgid "@line_width: the width of lines."
msgstr ""

# used by: gdk_gc_set_line_attributes:
#: gdkgc.c:756:1
msgid "@line_style: the dash-style for lines."
msgstr ""

# used by: gdk_gc_set_line_attributes:
#: gdkgc.c:757:1
msgid "@cap_style: the manner in which the ends of lines are drawn."
msgstr ""

# used by: gdk_gc_set_line_attributes:
#: gdkgc.c:758:1
msgid "@join_style: the in which lines are joined together."
msgstr ""

# #used by: gdk_gc_set_line_attributes:
#: gdkgc.c:760:3
msgid ""
"Sets various attributes of how lines are drawn. See the corresponding "
"members of #GdkGCValues for full explanations of the arguments."
msgstr ""

# used by: gdk_gc_set_dashes:
#: gdkgc.c:788:1
msgid "@dash_offset: the phase of the dash pattern."
msgstr ""

# used by: gdk_gc_set_dashes:
#: gdkgc.c:789:1
msgid "@dash_list: an array of dash lengths."
msgstr ""

# used by: gdk_gc_set_dashes:
#: gdkgc.c:790:1
msgid "@n: the number of elements in @dash_list."
msgstr ""

# #used by: gdk_gc_set_dashes:
#: gdkgc.c:792:6
msgid ""
"Sets the way dashed-lines are drawn. Lines will be drawn with alternating on "
"and off segments of the lengths specified in @dash_list. The manner in which "
"the on and off segments are drawn is determined by the @line_style value of "
"the GC. (This can be changed with gdk_gc_set_line_attributes().)"
msgstr ""

# #used by: gdk_gc_set_dashes:
#: gdkgc.c:799:3
msgid ""
"The @dash_offset defines the phase of the pattern, specifying how many "
"pixels into the dash-list the pattern should actually begin."
msgstr ""

# used by: gdk_gc_offset:
#: gdkgc.c:818:1
msgid "@x_offset: amount by which to offset the GC in the X direction"
msgstr ""

# used by: gdk_gc_offset:
#: gdkgc.c:819:1
msgid "@y_offset: amount by which to offset the GC in the Y direction"
msgstr ""

# #used by: gdk_gc_offset:
#: gdkgc.c:821:4
msgid ""
"Offset attributes such as the clip and tile-stipple origins of the GC so "
"that drawing at x - x_offset, y - y_offset with the offset GC  has the same "
"effect as drawing at x, y with the original GC."
msgstr ""

# used by: gdk_gc_copy:
#: gdkgc.c:850:1
msgid "@dst_gc: the destination graphics context."
msgstr ""

# used by: gdk_gc_copy:
#: gdkgc.c:851:1
msgid "@src_gc: the source graphics context."
msgstr ""

# #used by: gdk_gc_copy:
#: gdkgc.c:853:2
msgid ""
"Copy the set of values from one graphics context onto another graphics "
"context."
msgstr ""

# #used by: gdk_gc_set_colormap:
#: gdkgc.c:914:3
msgid ""
"Sets the colormap for the GC to the given colormap. The depth of the "
"colormap's visual must match the depth of the drawable for which the GC was "
"created."
msgstr ""

# #used by: gdk_gc_get_colormap:
#: gdkgc.c:940:4
msgid ""
"Retrieves the colormap for a given GC, if it exists. A GC will have a "
"colormap if the drawable for which it was created has a colormap, or if a "
"colormap was set explicitely with gdk_gc_set_colormap."
msgstr ""

# #used by: gdk_gc_get_colormap:
#: gdkgc.c:945:1
msgid "Return value: the colormap of @gc, or %NULL if @gc doesn't have one."
msgstr ""

# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_gc_set_rgb_fg_color:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_gc_set_rgb_bg_color:
#: gdkgc.c:974:1 gdkgc.c:1006:1
msgid "@color: an unallocated #GdkColor."
msgstr ""

# #used by: gdk_gc_set_rgb_fg_color:
#: gdkgc.c:976:5
msgid ""
"Set the foreground color of a GC using an unallocated color. The pixel value "
"for the color will be determined using GdkRGB. If the colormap for the GC "
"has not previously been initialized for GdkRGB, then for pseudo-color "
"colormaps (colormaps with a small modifiable number of colors), a colorcube "
"will be allocated in the colormap."
msgstr ""

# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_gc_set_rgb_fg_color:
# #-#-#-#-#  gdkgc.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_gc_set_rgb_bg_color:
#: gdkgc.c:982:1 gdkgc.c:1014:1
msgid "Calling this function for a GC without a colormap is an error."
msgstr ""

# #used by: gdk_gc_set_rgb_bg_color:
#: gdkgc.c:1008:5
msgid ""
"Set the background color of a GC using an unallocated color. The pixel value "
"for the color will be determined using GdkRGB. If the colormap for the GC "
"has not previously been initialized for GdkRGB, then for pseudo-color "
"colormaps (colormaps with a small modifiable number of colors), a colorcube "
"will be allocated in the colormap."
msgstr ""

# used by: _gdk_gc_update_context:
#: gdkgc.c:1109:2
msgid ""
"@override_foreground: a foreground color to use to override the foreground "
"color of the GC"
msgstr ""

# used by: _gdk_gc_update_context:
#: gdkgc.c:1111:4
msgid ""
"@override_stipple: a stipple pattern to use to override the stipple from the "
"GC. If this is present and the fill mode of the GC isn't %GDK_STIPPLED or %"
"GDK_OPAQUE_STIPPLED the fill mode will be forced to %GDK_STIPPLED"
msgstr ""

# used by: _gdk_gc_update_context:
#: gdkgc.c:1115:2
msgid ""
"@gc_changed: pass %FALSE if the @gc has not changed since the last call to "
"this function"
msgstr ""

# #used by: _gdk_gc_update_context:
#: gdkgc.c:1118:3
msgid ""
"Set the attributes of a cairo context to match those of a #GdkGC as far as "
"possible. Some aspects of a #GdkGC, such as clip masks and functions other "
"than %GDK_COPY are not currently handled."
msgstr ""

# #-#-#-#-#  gdkimage.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_image_ref:
# #-#-#-#-#  gdkimage.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_image_unref:
# #-#-#-#-#  gdkimage.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_image_set_colormap:
# #-#-#-#-#  gdkimage.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_image_get_colormap:
#: gdkimage.c:39:1 gdkimage.c:53:1 gdkimage.c:99:1 gdkimage.c:128:1
msgid "@image: a #GdkImage"
msgstr ""

# #used by: gdk_image_ref:
#: gdkimage.c:43:1
msgid "Return value: the image"
msgstr ""

# #used by: gdk_image_unref:
#: gdkimage.c:55:1
msgid "Deprecated function; use g_object_unref() instead."
msgstr ""

# used by: gdk_image_get:
#: gdkimage.c:69:1
msgid "@x: x coordinate in @window"
msgstr ""

# used by: gdk_image_get:
#: gdkimage.c:70:1
msgid "@y: y coordinate in @window"
msgstr ""

# used by: gdk_image_get:
#: gdkimage.c:71:1
msgid "@width: width of area in @window"
msgstr ""

# used by: gdk_image_get:
#: gdkimage.c:72:1
msgid "@height: height of area in @window"
msgstr ""

# #used by: gdk_image_get:
#: gdkimage.c:74:4
msgid ""
"This is a deprecated wrapper for gdk_drawable_get_image(); "
"gdk_drawable_get_image() should be used instead. Or even better: in most "
"cases gdk_pixbuf_get_from_drawable() is the most convenient choice."
msgstr ""

# #used by: gdk_image_get:
#: gdkimage.c:79:1
msgid "Return value: a new #GdkImage or %NULL"
msgstr ""

# #used by: gdk_image_set_colormap:
#: gdkimage.c:102:5
msgid ""
"Sets the colormap for the image to the given colormap.  Normally there's no "
"need to use this function, images are created with the correct colormap if "
"you get the image from a drawable. If you create the image from scratch, use "
"the colormap of the drawable you intend to render the image to."
msgstr ""

# #used by: gdk_image_get_colormap:
#: gdkimage.c:130:4
msgid ""
"Retrieves the colormap for a given image, if it exists.  An image will have "
"a colormap if the drawable from which it was created has a colormap, or if a "
"colormap was set explicitely with gdk_image_set_colormap()."
msgstr ""

# #used by: gdk_image_get_colormap:
#: gdkimage.c:135:1
msgid "Return value: colormap for the image"
msgstr ""

# used by: _gdk_image_get_scratch:
#: gdkimage.c:342:1
msgid "@width: desired width"
msgstr ""

# used by: _gdk_image_get_scratch:
#: gdkimage.c:343:1
msgid "@height: desired height"
msgstr ""

# used by: _gdk_image_get_scratch:
#: gdkimage.c:344:1
msgid "@depth: depth of image"
msgstr ""

# used by: _gdk_image_get_scratch:
#: gdkimage.c:345:1
msgid "@x: X location within returned image of scratch image"
msgstr ""

# used by: _gdk_image_get_scratch:
#: gdkimage.c:346:1
msgid "@y: Y location within returned image of scratch image"
msgstr ""

# #used by: _gdk_image_get_scratch:
#: gdkimage.c:348:3
msgid ""
"Allocates an image of size width/height, up to a maximum of "
"GDK_SCRATCH_IMAGE_WIDTHxGDK_SCRATCH_IMAGE_HEIGHT that is suitable to use on "
"@screen."
msgstr ""

# #used by: _gdk_image_get_scratch:
#: gdkimage.c:352:3
msgid ""
"Return value: a scratch image. This must be used by a call to gdk_image_put"
"() before any other calls to _gdk_image_get_scratch()"
msgstr ""

# #-#-#-#-#  gdkkeys.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: GdkKeymap::direction-changed:
# #-#-#-#-#  gdkkeys.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: GdkKeymap::keys-changed:
#: gdkkeys.c:50:1 gdkkeys.c:68:1
msgid "@keymap: the object on which the signal is emitted"
msgstr ""

# #used by: GdkKeymap::direction-changed:
#: gdkkeys.c:52:2
msgid ""
"The ::direction_changed signal gets emitted when the direction of the keymap "
"changes."
msgstr ""

# #used by: GdkKeymap::direction-changed:
#: gdkkeys.c:55:1
msgid "Since: 2.0"
msgstr ""

# #used by: GdkKeymap::keys-changed:
#: gdkkeys.c:70:2
msgid ""
"The ::keys_changed signal is emitted when the mapping represented by @keymap "
"changes."
msgstr ""

# used by: gdk_keyval_convert_case:
#: gdkkeys.c:102:1
msgid "@symbol: a keyval"
msgstr ""

# used by: gdk_keyval_convert_case:
#: gdkkeys.c:103:1
msgid "@lower: return location for lowercase version of @symbol"
msgstr ""

# used by: gdk_keyval_convert_case:
#: gdkkeys.c:104:1
msgid "@upper: return location for uppercase version of @symbol"
msgstr ""

# #used by: gdk_keyval_convert_case:
#: gdkkeys.c:106:2
msgid ""
"Obtains the upper- and lower-case versions of the keyval @symbol. Examples "
"of keyvals are #GDK_a, #GDK_Enter, #GDK_F1, etc."
msgstr ""

# used by: gdk_keymap_get_default:
#: gdkkeys.c:284:1
msgid "@returns: the #GdkKeymap attached to the default display."
msgstr ""

# #used by: gdk_keymap_get_default:
#: gdkkeys.c:286:1
msgid "Returns the #GdkKeymap attached to the default display."
msgstr ""

# used by: gdk_keyval_to_unicode:
#: gdkkeyuni.c:859:1
msgid "@keyval: a GDK key symbol"
msgstr ""

# #used by: gdk_keyval_to_unicode:
#: gdkkeyuni.c:861:2
msgid ""
"Convert from a GDK key symbol to the corresponding ISO10646 (Unicode) "
"character."
msgstr ""

# #used by: gdk_keyval_to_unicode:
#: gdkkeyuni.c:864:2
msgid ""
"Return value: the corresponding unicode character, or 0 if there is no "
"corresponding character."
msgstr ""

# used by: gdk_unicode_to_keyval:
#: gdkkeyuni.c:1659:1
msgid "@wc: a ISO10646 encoded character"
msgstr ""

# #used by: gdk_unicode_to_keyval:
#: gdkkeyuni.c:1661:1
msgid "Convert from a ISO10646 character to a key symbol."
msgstr ""

# #used by: gdk_unicode_to_keyval:
#: gdkkeyuni.c:1663:3
msgid ""
"Return value: the corresponding GDK key symbol, if one exists. or, if there "
"is no corresponding symbol, wc | 0x01000000"
msgstr ""

# #used by: gdk_pango_renderer_new:
#: gdkpango.c:559:3
msgid ""
"Creates a new #PangoRenderer for @screen. Normally you can use the results "
"of gdk_pango_renderer_get_default() rather than creating a new renderer."
msgstr ""

# #used by: gdk_pango_renderer_new:
#: gdkpango.c:563:1
msgid ""
"Return value: a newly created #PangoRenderer. Free with g_object_unref()."
msgstr ""

# #used by: gdk_pango_renderer_get_default:
#: gdkpango.c:593:4
msgid ""
"Gets the default #PangoRenderer for a screen. This default renderer is "
"shared by all users of the display, so properties such as the color or "
"transformation matrix set for the renderer may be overwritten by functions "
"such as gdk_draw_layout()."
msgstr ""

# #used by: gdk_pango_renderer_get_default:
#: gdkpango.c:598:3
msgid ""
"Before using the renderer, you need to call gdk_pango_renderer_set_drawable"
"() and gdk_pango_renderer_set_gc() to set the drawable and graphics context "
"to use for drawing."
msgstr ""

# #used by: gdk_pango_renderer_get_default:
#: gdkpango.c:602:3
msgid ""
"Return value: the default #PangoRenderer for @screen. The renderer is owned "
"by GTK+ and will be kept around until the screen is closed."
msgstr ""

# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pango_renderer_set_drawable:
# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pango_renderer_set_gc:
# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pango_renderer_set_stipple:
# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pango_renderer_set_override_color:
#: gdkpango.c:632:1 gdkpango.c:662:1 gdkpango.c:699:1 gdkpango.c:738:1
msgid "@gdk_renderer: a #GdkPangoRenderer"
msgstr ""

# used by: gdk_pango_renderer_set_drawable:
#: gdkpango.c:633:1
msgid "@drawable: the new target drawable, or %NULL"
msgstr ""

# #used by: gdk_pango_renderer_set_drawable:
#: gdkpango.c:635:1
msgid "Sets the drawable the renderer draws to."
msgstr ""

# used by: gdk_pango_renderer_set_gc:
#: gdkpango.c:663:1
msgid "@gc: the new GC to use for drawing, or %NULL"
msgstr ""

# #used by: gdk_pango_renderer_set_gc:
#: gdkpango.c:665:5
msgid ""
"Sets the GC the renderer draws with. Note that the GC must not be modified "
"until it is unset by calling the function again with %NULL for the @gc "
"parameter, since GDK may make internal copies of the GC which won't be "
"updated to follow changes to the original GC."
msgstr ""

# used by: gdk_pango_renderer_set_stipple:
#: gdkpango.c:700:1
msgid "@part: the part to render with the stipple"
msgstr ""

# used by: gdk_pango_renderer_set_stipple:
#: gdkpango.c:701:1
msgid "@stipple: the new stipple value."
msgstr ""

# #used by: gdk_pango_renderer_set_stipple:
#: gdkpango.c:703:6
msgid ""
"Sets the stipple for one render part (foreground, background, underline, "
"etc.) Note that this is overwritten when iterating through the individual "
"styled runs of a #PangoLayout or #PangoLayoutLine. This function is thus "
"only useful when you call low level functions like pango_renderer_draw_glyphs"
"() directly, or in the 'prepare_run' virtual function of a subclass of "
"#GdkPangoRenderer."
msgstr ""

# used by: gdk_pango_renderer_set_override_color:
#: gdkpango.c:739:1
msgid "@part: the part to render to set the color of"
msgstr ""

# used by: gdk_pango_renderer_set_override_color:
#: gdkpango.c:740:2
msgid ""
"@color: the color to use, or %NULL to unset a previously set override color."
msgstr ""

# #used by: gdk_pango_renderer_set_override_color:
#: gdkpango.c:743:3
msgid ""
"Sets the color for a particular render part (foreground, background, "
"underline, etc.), overriding any attributes on the layouts renderered with "
"this renderer."
msgstr ""

# used by: gdk_pango_context_set_colormap:
#: gdkpango.c:776:1
msgid "@context: a #PangoContext"
msgstr ""

# #used by: gdk_pango_context_set_colormap:
#: gdkpango.c:779:4
msgid ""
"This function used to set the colormap to be used for drawing with @context. "
"The colormap is now always derived from the graphics context used for "
"drawing, so calling this function is no longer necessary."
msgstr ""

# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_layout_line_with_colors:
# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_layout_line:
#: gdkpango.c:856:1 gdkpango.c:1036:1
msgid "@drawable:  the drawable on which to draw the line"
msgstr ""

# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_layout_line_with_colors:
# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_layout_line:
#: gdkpango.c:857:1 gdkpango.c:1037:1
msgid "@gc:        base graphics to use"
msgstr ""

# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_layout_line_with_colors:
# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_layout_line:
#: gdkpango.c:858:1 gdkpango.c:1038:1
msgid "@x:         the x position of start of string (in pixels)"
msgstr ""

# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_layout_line_with_colors:
# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_layout_line:
#: gdkpango.c:859:1 gdkpango.c:1039:1
msgid "@y:         the y position of baseline (in pixels)"
msgstr ""

# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_layout_line_with_colors:
# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_layout_line:
#: gdkpango.c:860:1 gdkpango.c:1040:1
msgid "@line:      a #PangoLayoutLine"
msgstr ""

# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_layout_line_with_colors:
# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_layout_with_colors:
#: gdkpango.c:861:1 gdkpango.c:973:1
msgid "@foreground: foreground override color, or %NULL for none"
msgstr ""

# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_layout_line_with_colors:
# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_layout_with_colors:
#: gdkpango.c:862:1 gdkpango.c:974:1
msgid "@background: background override color, or %NULL for none"
msgstr ""

# #used by: gdk_draw_layout_line_with_colors:
#: gdkpango.c:864:3
msgid ""
"Render a #PangoLayoutLine onto a #GdkDrawable, overriding the layout's "
"normal colors with @foreground and/or @background. @foreground and "
"@background need not be allocated."
msgstr ""

# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_draw_layout_line_with_colors:
# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_draw_layout_line:
#: gdkpango.c:868:4 gdkpango.c:1044:4
msgid ""
"If the layout's #PangoContext has a transformation matrix set, then @x and "
"@y specify the position of the left edge of the baseline (left is in before-"
"tranform user coordinates) in after-transform device coordinates."
msgstr ""

# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_layout_with_colors:
# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_layout:
#: gdkpango.c:968:1 gdkpango.c:1065:1
msgid "@drawable:  the drawable on which to draw string"
msgstr ""

# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_layout_with_colors:
# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_layout:
#: gdkpango.c:969:1 gdkpango.c:1066:1
msgid "@gc:        base graphics context to use"
msgstr ""

# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_layout_with_colors:
# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_layout:
#: gdkpango.c:970:1 gdkpango.c:1067:1
msgid "@x:         the X position of the left of the layout (in pixels)"
msgstr ""

# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_layout_with_colors:
# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_layout:
#: gdkpango.c:971:1 gdkpango.c:1068:1
msgid "@y:         the Y position of the top of the layout (in pixels)"
msgstr ""

# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_layout_with_colors:
# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_draw_layout:
#: gdkpango.c:972:1 gdkpango.c:1069:1
msgid "@layout:    a #PangoLayout"
msgstr ""

# #used by: gdk_draw_layout_with_colors:
#: gdkpango.c:976:3
msgid ""
"Render a #PangoLayout onto a #GdkDrawable, overriding the layout's normal "
"colors with @foreground and/or @background. @foreground and @background need "
"not be allocated."
msgstr ""

# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_draw_layout_with_colors:
# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_draw_layout:
#: gdkpango.c:980:3 gdkpango.c:1073:3
msgid ""
"If the layout's #PangoContext has a transformation matrix set, then @x and "
"@y specify the position of the top left corner of the bounding box (in "
"device space) of the transformed layout."
msgstr ""

# #used by: gdk_draw_layout_with_colors:
#: gdkpango.c:984:2
msgid ""
"If you're using GTK+, the ususal way to obtain a #PangoLayout is "
"gtk_widget_create_pango_layout()."
msgstr ""

# #used by: gdk_draw_layout_line:
#: gdkpango.c:1042:1
msgid "Render a #PangoLayoutLine onto an GDK drawable"
msgstr ""

# #used by: gdk_draw_layout:
#: gdkpango.c:1071:1
msgid "Render a #PangoLayout onto a GDK drawable"
msgstr ""

# #used by: gdk_draw_layout:
#: gdkpango.c:1077:2
msgid ""
"If you're using GTK+, the usual way to obtain a #PangoLayout is "
"gtk_widget_create_pango_layout()."
msgstr ""

# used by: gdk_pango_attr_stipple_new:
#: gdkpango.c:1125:1
msgid "@stipple: a bitmap to be set as stipple"
msgstr ""

# #used by: gdk_pango_attr_stipple_new:
#: gdkpango.c:1127:2
msgid ""
"Creates a new attribute containing a stipple bitmap to be used when "
"rendering the text."
msgstr ""

# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_pango_attr_stipple_new:
# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_pango_attr_embossed_new:
#: gdkpango.c:1130:1 gdkpango.c:1191:1
msgid "Return value: new #PangoAttribute"
msgstr ""

# used by: gdk_pango_attr_embossed_new:
#: gdkpango.c:1186:1
msgid "@embossed: a bitmap to be set as embossed"
msgstr ""

# #used by: gdk_pango_attr_embossed_new:
#: gdkpango.c:1188:2
msgid ""
"Creates a new attribute containing a embossed bitmap to be used when "
"rendering the text."
msgstr ""

# used by: gdk_pango_layout_line_get_clip_region:
#: gdkpango.c:1282:1
msgid "@line: a #PangoLayoutLine"
msgstr ""

# used by: gdk_pango_layout_line_get_clip_region:
#: gdkpango.c:1283:1
msgid ""
"@x_origin: X pixel where you intend to draw the layout line with this clip"
msgstr ""

# used by: gdk_pango_layout_line_get_clip_region:
#: gdkpango.c:1284:1
msgid ""
"@y_origin: baseline pixel where you intend to draw the layout line with this "
"clip"
msgstr ""

# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pango_layout_line_get_clip_region:
# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pango_layout_get_clip_region:
#: gdkpango.c:1285:1 gdkpango.c:1334:1
msgid ""
"@index_ranges: array of byte indexes into the layout, where even members of "
"array are start indexes and odd elements are end indexes"
msgstr ""

# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pango_layout_line_get_clip_region:
# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pango_layout_get_clip_region:
#: gdkpango.c:1286:1 gdkpango.c:1335:1
msgid ""
"@n_ranges: number of ranges in @index_ranges, i.e. half the size of "
"@index_ranges"
msgstr ""

# #used by: gdk_pango_layout_line_get_clip_region:
#: gdkpango.c:1288:9
msgid ""
"Obtains a clip region which contains the areas where the given ranges of "
"text would be drawn. @x_origin and @y_origin are the same position you would "
"pass to gdk_draw_layout_line(). @index_ranges should contain ranges of bytes "
"in the layout's text. The clip region will include space to the left or "
"right of the line (to the layout bounding box) if you have indexes above or "
"below the indexes contained inside the line. This is to draw the selection "
"all the way to the side of the layout. However, the clip region is in line "
"coordinates, not layout coordinates."
msgstr ""

# #used by: gdk_pango_layout_line_get_clip_region:
#: gdkpango.c:1298:4
msgid ""
"Note that the regions returned correspond to logical extents of the text "
"ranges, not ink extents. So the drawn line may in fact touch areas out of "
"the clip region.  The clip region is mainly useful for highlightling parts "
"of text, such as when text is selected."
msgstr ""

# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_pango_layout_line_get_clip_region:
# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_pango_layout_get_clip_region:
#: gdkpango.c:1303:1 gdkpango.c:1347:1
msgid "Return value: a clip region containing the given ranges"
msgstr ""

# used by: gdk_pango_layout_get_clip_region:
#: gdkpango.c:1331:1
msgid "@layout: a #PangoLayout"
msgstr ""

# used by: gdk_pango_layout_get_clip_region:
#: gdkpango.c:1332:1
msgid "@x_origin: X pixel where you intend to draw the layout with this clip"
msgstr ""

# used by: gdk_pango_layout_get_clip_region:
#: gdkpango.c:1333:1
msgid "@y_origin: Y pixel where you intend to draw the layout with this clip"
msgstr ""

# #used by: gdk_pango_layout_get_clip_region:
#: gdkpango.c:1337:4
msgid ""
"Obtains a clip region which contains the areas where the given ranges of "
"text would be drawn. @x_origin and @y_origin are the same position you would "
"pass to gdk_draw_layout_line(). @index_ranges should contain ranges of bytes "
"in the layout's text."
msgstr ""

# #used by: gdk_pango_layout_get_clip_region:
#: gdkpango.c:1342:4
msgid ""
"Note that the regions returned correspond to logical extents of the text "
"ranges, not ink extents. So the drawn layout may in fact touch areas out of "
"the clip region.  The clip region is mainly useful for highlightling parts "
"of text, such as when text is selected."
msgstr ""

# #used by: gdk_pango_context_get:
#: gdkpango.c:1395:1
msgid "Creates a #PangoContext for the default GDK screen."
msgstr ""

# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_pango_context_get:
# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_pango_context_get_for_screen:
#: gdkpango.c:1397:1 gdkpango.c:1423:1
msgid "The context must be freed when you're finished with it."
msgstr ""

# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_pango_context_get:
# #-#-#-#-#  gdkpango.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_pango_context_get_for_screen:
#: gdkpango.c:1399:3 gdkpango.c:1425:3
msgid ""
"When using GTK+, normally you should use gtk_widget_get_pango_context() "
"instead of this function, to get the appropriate context for the widget you "
"intend to render text onto."
msgstr ""

# #used by: gdk_pango_context_get:
#: gdkpango.c:1403:5
msgid ""
"The newly created context will have the default font options (see "
"#cairo_font_options_t) for the default screen; if these options change it "
"will not be updated. Using gtk_widget_get_pango_context() is more convenient "
"if you want to keep a context around and track changes to the screen's font "
"rendering settings."
msgstr ""

# #used by: gdk_pango_context_get:
#: gdkpango.c:1409:1
msgid "Return value: a new #PangoContext for the default display"
msgstr ""

# used by: gdk_pango_context_get_for_screen:
#: gdkpango.c:1419:1
msgid "@screen: the #GdkScreen for which the context is to be created."
msgstr ""

# #used by: gdk_pango_context_get_for_screen:
#: gdkpango.c:1421:1
msgid "Creates a #PangoContext for @screen."
msgstr ""

# #used by: gdk_pango_context_get_for_screen:
#: gdkpango.c:1429:5
msgid ""
"The newly created context will have the default font options (see "
"#cairo_font_options_t) for the screen; if these options change it will not "
"be updated. Using gtk_widget_get_pango_context() is more convenient if you "
"want to keep a context around and track changes to the screen's font "
"rendering settings."
msgstr ""

# #used by: gdk_pango_context_get_for_screen:
#: gdkpango.c:1435:1
msgid "Return value: a new #PangoContext for @screen"
msgstr ""

# #-#-#-#-#  gdkpixbuf-drawable.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_get_from_drawable:
# #-#-#-#-#  gdkpixbuf-drawable.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_get_from_image:
#: gdkpixbuf-drawable.c:1138:1 gdkpixbuf-drawable.c:1315:1
msgid "@dest: Destination pixbuf, or %NULL if a new pixbuf should be created."
msgstr ""

# used by: gdk_pixbuf_get_from_drawable:
#: gdkpixbuf-drawable.c:1139:1
msgid "@src: Source drawable."
msgstr ""

# used by: gdk_pixbuf_get_from_drawable:
#: gdkpixbuf-drawable.c:1140:1
msgid "@cmap: A colormap if @src doesn't have one set."
msgstr ""

# #-#-#-#-#  gdkpixbuf-drawable.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_get_from_drawable:
# #-#-#-#-#  gdkpixbuf-drawable.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_get_from_image:
#: gdkpixbuf-drawable.c:1141:1 gdkpixbuf-drawable.c:1318:1
msgid "@src_x: Source X coordinate within drawable."
msgstr ""

# #-#-#-#-#  gdkpixbuf-drawable.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_get_from_drawable:
# #-#-#-#-#  gdkpixbuf-drawable.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_get_from_image:
#: gdkpixbuf-drawable.c:1142:1 gdkpixbuf-drawable.c:1319:1
msgid "@src_y: Source Y coordinate within drawable."
msgstr ""

# #-#-#-#-#  gdkpixbuf-drawable.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_get_from_drawable:
# #-#-#-#-#  gdkpixbuf-drawable.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_get_from_image:
#: gdkpixbuf-drawable.c:1143:1 gdkpixbuf-drawable.c:1320:1
msgid "@dest_x: Destination X coordinate in pixbuf, or 0 if @dest is NULL."
msgstr ""

# #-#-#-#-#  gdkpixbuf-drawable.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_get_from_drawable:
# #-#-#-#-#  gdkpixbuf-drawable.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_get_from_image:
#: gdkpixbuf-drawable.c:1144:1 gdkpixbuf-drawable.c:1321:1
msgid "@dest_y: Destination Y coordinate in pixbuf, or 0 if @dest is NULL."
msgstr ""

# #-#-#-#-#  gdkpixbuf-drawable.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_get_from_drawable:
# #-#-#-#-#  gdkpixbuf-drawable.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_get_from_image:
#: gdkpixbuf-drawable.c:1145:1 gdkpixbuf-drawable.c:1322:1
msgid "@width: Width in pixels of region to get."
msgstr ""

# #-#-#-#-#  gdkpixbuf-drawable.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_get_from_drawable:
# #-#-#-#-#  gdkpixbuf-drawable.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_get_from_image:
#: gdkpixbuf-drawable.c:1146:1 gdkpixbuf-drawable.c:1323:1
msgid "@height: Height in pixels of region to get."
msgstr ""

# #used by: gdk_pixbuf_get_from_drawable:
#: gdkpixbuf-drawable.c:1148:4
msgid ""
"Transfers image data from a #GdkDrawable and converts it to an RGB(A) "
"representation inside a #GdkPixbuf. In other words, copies image data from a "
"server-side drawable to a client-side RGB(A) buffer. This allows you to "
"efficiently read individual pixels on the client side."
msgstr ""

# #used by: gdk_pixbuf_get_from_drawable:
#: gdkpixbuf-drawable.c:1153:10
msgid ""
"If the drawable @src has no colormap (gdk_drawable_get_colormap() returns %"
"NULL), then a suitable colormap must be specified. Typically a #GdkWindow or "
"a pixmap created by passing a #GdkWindow to gdk_pixmap_new() will already "
"have a colormap associated with it.  If the drawable has a colormap, the "
"@cmap argument will be ignored.  If the drawable is a bitmap (1 bit per "
"pixel pixmap), then a colormap is not required; pixels with a value of 1 are "
"assumed to be white, and pixels with a value of 0 are assumed to be black. "
"For taking screenshots, gdk_colormap_get_system() returns the correct "
"colormap to use."
msgstr ""

# #used by: gdk_pixbuf_get_from_drawable:
#: gdkpixbuf-drawable.c:1164:7
msgid ""
"If the specified destination pixbuf @dest is %NULL, then this function will "
"create an RGB pixbuf with 8 bits per channel and no alpha, with the same "
"size specified by the @width and @height arguments.  In this case, the "
"@dest_x and @dest_y arguments must be specified as 0.  If the specified "
"destination pixbuf is not %NULL and it contains alpha information, then the "
"filled pixels will be set to full opacity (alpha = 255)."
msgstr ""

# #used by: gdk_pixbuf_get_from_drawable:
#: gdkpixbuf-drawable.c:1172:5
msgid ""
"If the specified drawable is a pixmap, then the requested source rectangle "
"must be completely contained within the pixmap, otherwise the function will "
"return %NULL. For pixmaps only (not for windows) passing -1 for width or "
"height is allowed to mean the full width or height of the pixmap."
msgstr ""

# #used by: gdk_pixbuf_get_from_drawable:
#: gdkpixbuf-drawable.c:1178:4
msgid ""
"If the specified drawable is a window, and the window is off the screen, "
"then there is no image data in the obscured/offscreen regions to be placed "
"in the pixbuf. The contents of portions of the pixbuf corresponding to the "
"offscreen region are undefined."
msgstr ""

# #used by: gdk_pixbuf_get_from_drawable:
#: gdkpixbuf-drawable.c:1183:3
msgid ""
"If the window you're obtaining data from is partially obscured by other "
"windows, then the contents of the pixbuf areas corresponding to the obscured "
"regions are undefined."
msgstr ""

# #used by: gdk_pixbuf_get_from_drawable:
#: gdkpixbuf-drawable.c:1187:3
msgid ""
"If the target drawable is not mapped (typically because it's iconified/"
"minimized or not on the current workspace), then %NULL will be returned."
msgstr ""

# #used by: gdk_pixbuf_get_from_drawable:
#: gdkpixbuf-drawable.c:1191:2
msgid ""
"If memory can't be allocated for the return value, %NULL will be returned "
"instead."
msgstr ""

# #used by: gdk_pixbuf_get_from_drawable:
#: gdkpixbuf-drawable.c:1194:2
msgid ""
"(In short, there are several ways this function can fail, and if it fails it "
"returns %NULL; so check the return value.)"
msgstr ""

# #used by: gdk_pixbuf_get_from_drawable:
#: gdkpixbuf-drawable.c:1197:3
msgid ""
"This function calls gdk_drawable_get_image() internally and converts the "
"resulting image to a #GdkPixbuf, so the documentation for "
"gdk_drawable_get_image() may also be relevant."
msgstr ""

# #used by: gdk_pixbuf_get_from_drawable:
#: gdkpixbuf-drawable.c:1201:2
msgid ""
"Return value: The same pixbuf as @dest if it was non-%NULL, or a newly-"
"created pixbuf with a reference count of 1 if no destination pixbuf was "
"specified, or %NULL on error"
msgstr ""

# used by: gdk_pixbuf_get_from_image:
#: gdkpixbuf-drawable.c:1316:1
msgid "@src: Source #GdkImage."
msgstr ""

# used by: gdk_pixbuf_get_from_image:
#: gdkpixbuf-drawable.c:1317:1
msgid "@cmap: A colormap, or %NULL to use the one for @src"
msgstr ""

# #used by: gdk_pixbuf_get_from_image:
#: gdkpixbuf-drawable.c:1325:2
msgid ""
"Same as gdk_pixbuf_get_from_drawable() but gets the pixbuf from an image."
msgstr ""

# #used by: gdk_pixbuf_get_from_image:
#: gdkpixbuf-drawable.c:1328:1
msgid ""
"Return value: @dest, newly-created pixbuf if @dest was %NULL, %NULL on error"
msgstr ""

# #-#-#-#-#  gdkpixbuf-render.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_render_threshold_alpha:
# #-#-#-#-#  gdkpixbuf-render.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_render_to_drawable:
# #-#-#-#-#  gdkpixbuf-render.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_render_to_drawable_alpha:
# #-#-#-#-#  gdkpixbuf-render.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_render_pixmap_and_mask:
# #-#-#-#-#  gdkpixbuf-render.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_render_pixmap_and_mask_for_colormap:
#: gdkpixbuf-render.c:35:1 gdkpixbuf-render.c:140:1 gdkpixbuf-render.c:187:1
#: gdkpixbuf-render.c:229:1 gdkpixbuf-render.c:264:1
msgid "@pixbuf: A pixbuf."
msgstr ""

# used by: gdk_pixbuf_render_threshold_alpha:
#: gdkpixbuf-render.c:36:1
msgid "@bitmap: Bitmap where the bilevel mask will be painted to."
msgstr ""

# used by: gdk_pixbuf_render_threshold_alpha:
#: gdkpixbuf-render.c:37:1
msgid "@src_x: Source X coordinate."
msgstr ""

# used by: gdk_pixbuf_render_threshold_alpha:
#: gdkpixbuf-render.c:38:1
msgid "@src_y: source Y coordinate."
msgstr ""

# used by: gdk_pixbuf_render_threshold_alpha:
#: gdkpixbuf-render.c:39:1
msgid "@dest_x: Destination X coordinate."
msgstr ""

# used by: gdk_pixbuf_render_threshold_alpha:
#: gdkpixbuf-render.c:40:1
msgid "@dest_y: Destination Y coordinate."
msgstr ""

# used by: gdk_pixbuf_render_threshold_alpha:
#: gdkpixbuf-render.c:41:1
msgid "@width: Width of region to threshold, or -1 to use pixbuf width"
msgstr ""

# used by: gdk_pixbuf_render_threshold_alpha:
#: gdkpixbuf-render.c:42:1
msgid "@height: Height of region to threshold, or -1 to use pixbuf height"
msgstr ""

# used by: gdk_pixbuf_render_threshold_alpha:
#: gdkpixbuf-render.c:43:2
msgid ""
"@alpha_threshold: Opacity values below this will be painted as zero; all "
"other values will be painted as one."
msgstr ""

# #used by: gdk_pixbuf_render_threshold_alpha:
#: gdkpixbuf-render.c:46:3
msgid ""
"Takes the opacity values in a rectangular portion of a pixbuf and thresholds "
"them to produce a bi-level alpha mask that can be used as a clipping mask "
"for a drawable."
msgstr ""

# used by: gdk_pixbuf_render_to_drawable:
#: gdkpixbuf-render.c:142:1
msgid "@gc: GC used for rendering."
msgstr ""

# used by: gdk_pixbuf_render_to_drawable:
#: gdkpixbuf-render.c:144:1
msgid "@src_y: Source Y coordinate within pixbuf."
msgstr ""

# used by: gdk_pixbuf_render_to_drawable:
#: gdkpixbuf-render.c:147:1
msgid "@width: Width of region to render, in pixels, or -1 to use pixbuf width"
msgstr ""

# used by: gdk_pixbuf_render_to_drawable:
#: gdkpixbuf-render.c:148:1
msgid ""
"@height: Height of region to render, in pixels, or -1 to use pixbuf height"
msgstr ""

# #-#-#-#-#  gdkpixbuf-render.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_render_to_drawable:
# #-#-#-#-#  gdkpixbuf-render.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_render_to_drawable_alpha:
#: gdkpixbuf-render.c:149:1 gdkpixbuf-render.c:197:1
msgid "@dither: Dithering mode for GdkRGB."
msgstr ""

# #used by: gdk_pixbuf_render_to_drawable:
#: gdkpixbuf-render.c:153:5
msgid ""
"Renders a rectangular portion of a pixbuf to a drawable while using the "
"specified GC.  This is done using GdkRGB, so the specified drawable must "
"have the GdkRGB visual and colormap.  Note that this function will ignore "
"the opacity information for images with an alpha channel; the GC must "
"already have the clipping mask set if you want transparent regions to show "
"through."
msgstr ""

# #used by: gdk_pixbuf_render_to_drawable:
#: gdkpixbuf-render.c:159:6
msgid ""
"For an explanation of dither offsets, see the GdkRGB documentation.  In "
"brief, the dither offset is important when re-rendering partial regions of "
"an image to a rendered version of the full image, or for when the offsets to "
"a base position change, as in scrolling.  The dither matrix has to be "
"shifted for consistent visual results.  If you do not have any of these "
"cases, the dither offsets can be both zero."
msgstr ""

# #-#-#-#-#  gdkpixbuf-render.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_pixbuf_render_to_drawable:
# #-#-#-#-#  gdkpixbuf-render.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_pixbuf_render_to_drawable_alpha:
#: gdkpixbuf-render.c:166:1 gdkpixbuf-render.c:209:1
msgid ""
"Deprecated: 2.4: This function is obsolete. Use gdk_draw_pixbuf() instead."
msgstr ""

# used by: gdk_pixbuf_render_to_drawable_alpha:
#: gdkpixbuf-render.c:195:1
msgid "@alpha_mode: Ignored. Present for backwards compatibility."
msgstr ""

# used by: gdk_pixbuf_render_to_drawable_alpha:
#: gdkpixbuf-render.c:196:1
msgid "@alpha_threshold: Ignored. Present for backwards compatibility"
msgstr ""

# #used by: gdk_pixbuf_render_to_drawable_alpha:
#: gdkpixbuf-render.c:201:4
msgid ""
"Renders a rectangular portion of a pixbuf to a drawable.  The destination "
"drawable must have a colormap. All windows have a colormap, however, pixmaps "
"only have colormap by default if they were created with a non-%NULL window "
"argument. Otherwise a colormap must be set on them with "
"gdk_drawable_set_colormap."
msgstr ""

# #-#-#-#-#  gdkpixbuf-render.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_render_pixmap_and_mask:
# #-#-#-#-#  gdkpixbuf-render.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_render_pixmap_and_mask_for_colormap:
#: gdkpixbuf-render.c:230:2 gdkpixbuf-render.c:266:2
msgid ""
"@pixmap_return: Location to store a pointer to the created pixmap, or %NULL "
"if the pixmap is not needed."
msgstr ""

# #-#-#-#-#  gdkpixbuf-render.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_render_pixmap_and_mask:
# #-#-#-#-#  gdkpixbuf-render.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_render_pixmap_and_mask_for_colormap:
#: gdkpixbuf-render.c:232:2 gdkpixbuf-render.c:268:2
msgid ""
"@mask_return: Location to store a pointer to the created mask, or %NULL if "
"the mask is not needed."
msgstr ""

# #-#-#-#-#  gdkpixbuf-render.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_render_pixmap_and_mask:
# #-#-#-#-#  gdkpixbuf-render.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_pixbuf_render_pixmap_and_mask_for_colormap:
#: gdkpixbuf-render.c:234:1 gdkpixbuf-render.c:270:1
msgid "@alpha_threshold: Threshold value for opacity values."
msgstr ""

# #used by: gdk_pixbuf_render_pixmap_and_mask:
#: gdkpixbuf-render.c:236:5
msgid ""
"Creates a pixmap and a mask bitmap which are returned in the @pixmap_return "
"and @mask_return arguments, respectively, and renders a pixbuf and its "
"corresponding thresholded alpha mask to them.  This is merely a convenience "
"function; applications that need to render pixbufs with dither offsets or to "
"given drawables should use gdk_draw_pixbuf() and "
"gdk_pixbuf_render_threshold_alpha()."
msgstr ""

# #used by: gdk_pixbuf_render_pixmap_and_mask:
#: gdkpixbuf-render.c:242:4
msgid ""
"The pixmap that is created is created for the colormap returned by "
"gdk_rgb_get_colormap(). You normally will want to instead use the actual "
"colormap for a widget, and use gdk_pixbuf_render_pixmap_and_mask_for_colormap"
"()."
msgstr ""

# #-#-#-#-#  gdkpixbuf-render.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_pixbuf_render_pixmap_and_mask:
# #-#-#-#-#  gdkpixbuf-render.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_pixbuf_render_pixmap_and_mask_for_colormap:
#: gdkpixbuf-render.c:247:2 gdkpixbuf-render.c:282:2
msgid ""
"If the pixbuf does not have an alpha channel, then *@mask_return will be set "
"to %NULL."
msgstr ""

# used by: gdk_pixbuf_render_pixmap_and_mask_for_colormap:
#: gdkpixbuf-render.c:265:1
msgid "@colormap: A #GdkColormap"
msgstr ""

# #used by: gdk_pixbuf_render_pixmap_and_mask_for_colormap:
#: gdkpixbuf-render.c:272:5
msgid ""
"Creates a pixmap and a mask bitmap which are returned in the @pixmap_return "
"and @mask_return arguments, respectively, and renders a pixbuf and its "
"corresponding tresholded alpha mask to them.  This is merely a convenience "
"function; applications that need to render pixbufs with dither offsets or to "
"given drawables should use gdk_draw_pixbuf(), and "
"gdk_pixbuf_render_threshold_alpha()."
msgstr ""

# #used by: gdk_pixbuf_render_pixmap_and_mask_for_colormap:
#: gdkpixbuf-render.c:278:3
msgid ""
"The pixmap that is created uses the #GdkColormap specified by @colormap. "
"This colormap must match the colormap of the window where the pixmap will "
"eventually be used or an error will result."
msgstr ""

# used by: gdk_region_polygon:
#: gdkpolyreg-generic.c:456:1
msgid "@points: an array of #GdkPoint structs"
msgstr ""

# used by: gdk_region_polygon:
#: gdkpolyreg-generic.c:457:1
msgid "@npoints: the number of elements in the @points array"
msgstr ""

# used by: gdk_region_polygon:
#: gdkpolyreg-generic.c:458:2
msgid ""
"@fill_rule: specifies which pixels are included in the region when the "
"polygon overlaps itself."
msgstr ""

# #used by: gdk_region_polygon:
#: gdkpolyreg-generic.c:461:2
msgid ""
"Creates a new #GdkRegion using the polygon defined by a number of points."
msgstr ""

# #used by: gdk_region_polygon:
#: gdkpolyreg-generic.c:464:1
msgid "Returns: a new #GdkRegion based on the given polygon"
msgstr ""

# used by: gdk_add_option_entries_libgtk_only:
#: gdk.c:140:1
msgid "@group: An option group."
msgstr ""

# #used by: gdk_add_option_entries_libgtk_only:
#: gdk.c:142:2
msgid ""
"Appends gdk option entries to the passed in option group. This is not public "
"API and must not be used by applications."
msgstr ""

# used by: gdk_parse_args:
#: gdk.c:184:1
msgid "@argc: the number of command line arguments."
msgstr ""

# used by: gdk_parse_args:
#: gdk.c:185:1
msgid "@argv: the array of command line arguments."
msgstr ""

# #used by: gdk_parse_args:
#: gdk.c:187:2
msgid ""
"Parse command line arguments, and store for future use by calls to "
"gdk_display_open()."
msgstr ""

# #used by: gdk_parse_args:
#: gdk.c:190:2
msgid ""
"Any arguments used by GDK are removed from the array and @argc and @argv are "
"updated accordingly."
msgstr ""

# #used by: gdk_parse_args:
#: gdk.c:193:2
msgid ""
"You shouldn't call this function explicitely if you are using gtk_init(), "
"gtk_init_check(), gdk_init(), or gdk_init_check()."
msgstr ""

# #used by: gdk_get_display_arg_name:
#: gdk.c:233:2
msgid ""
"Gets the display name specified in the command line arguments passed to "
"gdk_init() or gdk_parse_args(), if any."
msgstr ""

# #used by: gdk_get_display_arg_name:
#: gdk.c:236:2
msgid ""
"Returns: the display name, if specified explicitely, otherwise %NULL this "
"string is owned by GTK+ and must not be modified or freed."
msgstr ""

# #used by: gdk_display_open_default_libgtk_only:
#: gdk.c:258:5
msgid ""
"Opens the default display specified by command line arguments or environment "
"variables, sets it as the default display, and returns it.  gdk_parse_args "
"must have been called first. If the default display has previously been set, "
"simply returns that. An internal function that should not be used by "
"applications."
msgstr ""

# #used by: gdk_display_open_default_libgtk_only:
#: gdk.c:264:2
msgid ""
"Return value: the default display, if it could be opened, otherwise %NULL."
msgstr ""

# #used by: gdk_threads_init:
#: gdk.c:391:3
msgid ""
"Initializes GDK so that it can be used from multiple threads in conjunction "
"with gdk_threads_enter() and gdk_threads_leave(). g_thread_init() must be "
"called previous to this function."
msgstr ""

# #used by: gdk_threads_init:
#: gdk.c:395:2
msgid ""
"This call must be made before any use of the main loop from GTK+; to be "
"safe, call it before gtk_init()."
msgstr ""

# used by: gdk_threads_set_lock_functions:
#: gdk.c:413:1
msgid "@enter_fn:   function called to guard GDK"
msgstr ""

# used by: gdk_threads_set_lock_functions:
#: gdk.c:414:1
msgid "@leave_fn: function called to release the guard"
msgstr ""

# #used by: gdk_threads_set_lock_functions:
#: gdk.c:416:7
msgid ""
"Allows the application to replace the standard method that GDK uses to "
"protect its data structures. Normally, GDK creates a single #GMutex that is "
"locked by gdk_threads_enter(), and released by gdk_threads_leave(); using "
"this function an application provides, instead, a function @enter_fn that is "
"called by gdk_threads_enter() and a function @leave_fn that is called by "
"gdk_threads_leave()."
msgstr ""

# #used by: gdk_threads_set_lock_functions:
#: gdk.c:424:3
msgid ""
"The functions must provide at least same locking functionality as the "
"default implementation, but can also do extra application specific "
"processing."
msgstr ""

# #used by: gdk_threads_set_lock_functions:
#: gdk.c:428:4
msgid ""
"As an example, consider an application that has its own recursive lock that "
"when held, holds the GTK+ lock as well. When GTK+ unlocks the GTK+ lock when "
"entering a recursive main loop, the application must temporarily release its "
"lock as well."
msgstr ""

# #used by: gdk_threads_set_lock_functions:
#: gdk.c:433:1
msgid "Most threaded GTK+ apps won't need to use this method."
msgstr ""

# #used by: gdk_threads_set_lock_functions:
#: gdk.c:435:2
msgid ""
"This method must be called before gdk_threads_init(), and cannot be called "
"multiple times."
msgstr ""

# #used by: gdk_rectangle_union:
#: gdkrectangle.c:33:3
msgid ""
"@src1: a #GdkRectangle @src2: a #GdkRectangle @dest: return location for the "
"union of @src1 and @src2"
msgstr ""

# #used by: gdk_rectangle_union:
#: gdkrectangle.c:37:4
msgid ""
"Calculates the union of two rectangles. The union of rectangles @src1 and "
"@src2 is the smallest rectangle which includes both @src1 and @src2 within "
"it. It is allowed for @dest to be the same as either @src1 or @src2."
msgstr ""

# #used by: gdk_rectangle_intersect:
#: gdkrectangle.c:63:3
msgid ""
"@src1: a #GdkRectangle @src2: a #GdkRectangle @dest: return location for the "
"intersection of @src1 and @src2"
msgstr ""

# #used by: gdk_rectangle_intersect:
#: gdkrectangle.c:67:2
msgid ""
"Calculates the intersection of two rectangles. It is allowed for @dest to be "
"the same as either @src1 or @src2."
msgstr ""

# #used by: gdk_rectangle_intersect:
#: gdkrectangle.c:70:1
msgid "Returns: %TRUE if the rectangles intersect."
msgstr ""

# #used by: gdk_region_new:
#: gdkregion-generic.c:103:1
msgid "Creates a new empty #GdkRegion."
msgstr ""

# #used by: gdk_region_new:
#: gdkregion-generic.c:105:1
msgid "Returns: a new empty #GdkRegion"
msgstr ""

# #used by: gdk_region_rectangle:
#: gdkregion-generic.c:129:1
msgid "Creates a new region containing the area @rectangle."
msgstr ""

# #used by: gdk_region_rectangle:
#: gdkregion-generic.c:131:1
msgid "Return value: a new region"
msgstr ""

# #used by: gdk_region_copy:
#: gdkregion-generic.c:160:1
msgid "Copies @region, creating an identical new region."
msgstr ""

# #used by: gdk_region_copy:
#: gdkregion-generic.c:162:1
msgid "Return value: a new region identical to @region"
msgstr ""

# used by: gdk_region_get_clipbox:
#: gdkregion-generic.c:181:1
msgid "@rectangle: return location for the clipbox"
msgstr ""

# #used by: gdk_region_get_clipbox:
#: gdkregion-generic.c:183:1
msgid "Obtains the smallest rectangle which includes the entire #GdkRegion."
msgstr ""

# used by: gdk_region_get_rectangles:
#: gdkregion-generic.c:203:1
msgid "@rectangles: return location for an array of rectangles"
msgstr ""

# used by: gdk_region_get_rectangles:
#: gdkregion-generic.c:204:1
msgid "@n_rectangles: length of returned array"
msgstr ""

# #used by: gdk_region_get_rectangles:
#: gdkregion-generic.c:206:2
msgid ""
"Obtains the area covered by the region as a list of rectangles. The array "
"returned in @rectangles must be freed with g_free()."
msgstr ""

# #-#-#-#-#  gdkregion-generic.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_region_union_with_rect:
# #-#-#-#-#  gdkregion-generic.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_region_rect_in:
#: gdkregion-generic.c:236:1 gdkregion-generic.c:1591:1
msgid "@region: a #GdkRegion."
msgstr ""

# used by: gdk_region_union_with_rect:
#: gdkregion-generic.c:237:1
msgid "@rect: a #GdkRectangle."
msgstr ""

# #used by: gdk_region_union_with_rect:
#: gdkregion-generic.c:239:3
msgid ""
"Sets the area of @region to the union of the areas of @region and @rect. The "
"resulting area is the set of pixels contained in either @region or @rect."
msgstr ""

# #used by: gdk_region_destroy:
#: gdkregion-generic.c:331:1
msgid "Destroys a #GdkRegion."
msgstr ""

# used by: gdk_region_offset:
#: gdkregion-generic.c:347:1
msgid "@dx: the distance to move the region horizontally"
msgstr ""

# used by: gdk_region_offset:
#: gdkregion-generic.c:348:1
msgid "@dy: the distance to move the region vertically"
msgstr ""

# #used by: gdk_region_offset:
#: gdkregion-generic.c:350:1
msgid "Moves a region the specified distance."
msgstr ""

# used by: gdk_region_shrink:
#: gdkregion-generic.c:441:1
msgid "@dx: the number of pixels to shrink the region horizontally"
msgstr ""

# used by: gdk_region_shrink:
#: gdkregion-generic.c:442:1
msgid "@dy: the number of pixels to shrink the region vertically"
msgstr ""

# #used by: gdk_region_shrink:
#: gdkregion-generic.c:444:2
msgid ""
"Resizes a region by the specified amount. Positive values shrink the region. "
"Negative values expand it."
msgstr ""

# #-#-#-#-#  gdkregion-generic.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_region_intersect:
# #-#-#-#-#  gdkregion-generic.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_region_subtract:
# #-#-#-#-#  gdkregion-generic.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_region_xor:
#: gdkregion-generic.c:562:2 gdkregion-generic.c:1446:2
#: gdkregion-generic.c:1478:2
msgid "@source1: a #GdkRegion @source2: another #GdkRegion"
msgstr ""

# #used by: gdk_region_intersect:
#: gdkregion-generic.c:565:3
msgid ""
"Sets the area of @source1 to the intersection of the areas of @source1 and "
"@source2. The resulting area is the set of pixels contained in both @source1 "
"and @source2."
msgstr ""

# #used by: gdk_region_union:
#: gdkregion-generic.c:1184:2
msgid "@source1:  a #GdkRegion @source2: a #GdkRegion"
msgstr ""

# #used by: gdk_region_union:
#: gdkregion-generic.c:1187:3
msgid ""
"Sets the area of @source1 to the union of the areas of @source1 and "
"@source2. The resulting area is the set of pixels contained in either "
"@source1 or @source2."
msgstr ""

# #used by: gdk_region_subtract:
#: gdkregion-generic.c:1449:2
msgid ""
"Subtracts the area of @source2 from the area @source1. The resulting area is "
"the set of pixels contained in @source1 but not in @source2."
msgstr ""

# #used by: gdk_region_xor:
#: gdkregion-generic.c:1481:3
msgid ""
"Sets the area of @source1 to the exclusive-OR of the areas of @source1 and "
"@source2. The resulting area is the set of pixels contained in one or the "
"other of the two sources but not in both."
msgstr ""

# #used by: gdk_region_empty:
#: gdkregion-generic.c:1508:1
msgid "Finds out if the #GdkRegion is empty."
msgstr ""

# #used by: gdk_region_empty:
#: gdkregion-generic.c:1510:1
msgid "Returns: %TRUE if @region is empty."
msgstr ""

# #used by: gdk_region_equal:
#: gdkregion-generic.c:1525:2
msgid "@region1: a #GdkRegion @region2: a #GdkRegion"
msgstr ""

# #used by: gdk_region_equal:
#: gdkregion-generic.c:1528:1
msgid "Finds out if the two regions are the same."
msgstr ""

# #used by: gdk_region_equal:
#: gdkregion-generic.c:1530:1
msgid "Returns: %TRUE if @region1 and @region2 are equal."
msgstr ""

# used by: gdk_region_point_in:
#: gdkregion-generic.c:1561:1
msgid "@x: the x coordinate of a point"
msgstr ""

# used by: gdk_region_point_in:
#: gdkregion-generic.c:1562:1
msgid "@y: the y coordinate of a point"
msgstr ""

# #used by: gdk_region_point_in:
#: gdkregion-generic.c:1564:1
msgid "Finds out if a point is in a region."
msgstr ""

# #used by: gdk_region_point_in:
#: gdkregion-generic.c:1566:1
msgid "Returns: %TRUE if the point is in @region."
msgstr ""

# used by: gdk_region_rect_in:
#: gdkregion-generic.c:1592:1
msgid "@rectangle: a #GdkRectangle."
msgstr ""

# #used by: gdk_region_rect_in:
#: gdkregion-generic.c:1594:1
msgid "Tests whether a rectangle is within a region."
msgstr ""

# #used by: gdk_region_rect_in:
#: gdkregion-generic.c:1596:3
msgid ""
"Returns: %GDK_OVERLAP_RECTANGLE_IN, %GDK_OVERLAP_RECTANGLE_OUT, or %"
"GDK_OVERLAP_RECTANGLE_PART, depending on whether the rectangle is inside, "
"outside, or partly inside the #GdkRegion, respectively."
msgstr ""

# used by: gdk_region_spans_intersect_foreach:
#: gdkregion-generic.c:1747:1
msgid "@spans: an array of #GdkSpans"
msgstr ""

# used by: gdk_region_spans_intersect_foreach:
#: gdkregion-generic.c:1748:1
msgid "@n_spans: the length of @spans"
msgstr ""

# used by: gdk_region_spans_intersect_foreach:
#: gdkregion-generic.c:1749:1
msgid "@sorted: %TRUE if @spans is sorted wrt. the y coordinate"
msgstr ""

# used by: gdk_region_spans_intersect_foreach:
#: gdkregion-generic.c:1750:1
msgid "@function: function to call on each span in the intersection"
msgstr ""

# used by: gdk_region_spans_intersect_foreach:
#: gdkregion-generic.c:1751:1
msgid "@data: data to pass to @function"
msgstr ""

# #used by: gdk_region_spans_intersect_foreach:
#: gdkregion-generic.c:1753:1
msgid ""
"Calls a function on each span in the intersection of @region and @spans."
msgstr ""

# #used by: gdk_rgb_find_color:
#: gdkrgb.c:824:3
msgid ""
"@colormap should be the colormap for the graphics context and drawable "
"you're using to draw. If you're drawing to a #GtkWidget, call "
"gtk_widget_get_colormap()."
msgstr ""

# #used by: gdk_rgb_find_color:
#: gdkrgb.c:828:5
msgid ""
"@color should have its %red, %green, and %blue fields initialized; "
"gdk_rgb_find_color() will fill in the %pixel field with the best matching "
"pixel from a color cube. The color is then ready to be used for drawing, e."
"g. you can call gdk_gc_set_foreground() which expects %pixel to be "
"initialized."
msgstr ""

# #used by: gdk_rgb_find_color:
#: gdkrgb.c:834:4
msgid ""
"In many cases, you can avoid this whole issue by calling "
"gdk_gc_set_rgb_fg_color() or gdk_gc_set_rgb_bg_color(), which do not expect %"
"pixel to be initialized in advance. If you use those functions, there's no "
"need for gdk_rgb_find_color()."
msgstr ""

# used by: gdk_draw_rgb_32_image_dithalign:
#: gdkrgb.c:3417:1
msgid "@x: X coordinate on @drawable where image should go"
msgstr ""

# used by: gdk_draw_rgb_32_image_dithalign:
#: gdkrgb.c:3418:1
msgid "@y: Y coordinate on @drawable where image should go"
msgstr ""

# used by: gdk_draw_rgb_32_image_dithalign:
#: gdkrgb.c:3419:1
msgid "@width: width of area of image to draw"
msgstr ""

# used by: gdk_draw_rgb_32_image_dithalign:
#: gdkrgb.c:3420:1
msgid "@height: height of area of image to draw"
msgstr ""

# used by: gdk_draw_rgb_32_image_dithalign:
#: gdkrgb.c:3421:1
msgid "@dith: dithering mode"
msgstr ""

# used by: gdk_draw_rgb_32_image_dithalign:
#: gdkrgb.c:3422:1
msgid "@buf: RGB image data"
msgstr ""

# used by: gdk_draw_rgb_32_image_dithalign:
#: gdkrgb.c:3423:1
msgid "@rowstride: rowstride of RGB image data"
msgstr ""

# used by: gdk_draw_rgb_32_image_dithalign:
#: gdkrgb.c:3424:1
msgid "@xdith: X dither offset"
msgstr ""

# used by: gdk_draw_rgb_32_image_dithalign:
#: gdkrgb.c:3425:1
msgid "@ydith: Y dither offset"
msgstr ""

# #used by: gdk_draw_rgb_32_image_dithalign:
#: gdkrgb.c:3427:2
msgid ""
"Like gdk_draw_rgb_32_image(), but allows you to specify the dither offsets. "
"See gdk_draw_rgb_image_dithalign() for more details."
msgstr ""

# #used by: gdk_rgb_get_colormap:
#: gdkrgb.c:3630:5
msgid ""
"Get the preferred colormap for rendering image data.  Not a very useful "
"function; historically, GDK could only render RGB image data to one colormap "
"and visual, but in the current version it can render to any colormap and "
"visual. So there's no need to call this function."
msgstr ""

# #-#-#-#-#  gdkrgb.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_rgb_get_colormap:
# #-#-#-#-#  gdkrgb.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_screen_get_rgb_colormap:
#: gdkrgb.c:3636:1 gdkrgb.c:3661:1
msgid "Return value: the preferred colormap"
msgstr ""

# #-#-#-#-#  gdkrgb.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_screen_get_rgb_colormap:
# #-#-#-#-#  gdkscreen.pot (gdk 2.10.6)  #-#-#-#-#
# #-#-#-#-#  gdkscreen.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_screen_get_monitor_at_point:
# #-#-#-#-#  gdkscreen.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_screen_get_monitor_at_window:
#: gdkrgb.c:3653:1 gdkscreen.c:231:1 gdkscreen.c:271:1
msgid "@screen: a #GdkScreen."
msgstr ""

# #used by: gdk_screen_get_rgb_colormap:
#: gdkrgb.c:3655:5
msgid ""
"Gets the preferred colormap for rendering image data on @screen. Not a very "
"useful function; historically, GDK could only render RGB image data to one "
"colormap and visual, but in the current version it can render to any "
"colormap and visual. So there's no need to call this function."
msgstr ""

# #used by: gdk_screen_get_rgb_visual:
#: gdkrgb.c:3685:6
msgid ""
"Gets a |$_1_$|preferred visual|$_1_$| chosen by GdkRGB for rendering image "
"data on @screen. In previous versions of GDK, this was the only visual "
"GdkRGB could use for rendering. In current versions, it's simply the visual "
"GdkRGB would have chosen as the optimal one in those previous versions. "
"GdkRGB can now render to drawables with any visual."
msgstr ""

# #-#-#-#-#  gdkrgb.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_screen_get_rgb_visual:
# #-#-#-#-#  gdkrgb.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_rgb_get_visual:
#: gdkrgb.c:3692:1 gdkrgb.c:3713:1
msgid "Return value: The #GdkVisual chosen by GdkRGB."
msgstr ""

# #used by: gdk_rgb_get_visual:
#: gdkrgb.c:3706:6
msgid ""
"Gets a |$_1_$|preferred visual|$_1_$| chosen by GdkRGB for rendering image "
"data on the default screen. In previous versions of GDK, this was the only "
"visual GdkRGB could use for rendering. In current versions, it's simply the "
"visual GdkRGB would have chosen as the optimal one in those previous "
"versions. GdkRGB can now render to drawables with any visual."
msgstr ""

# #-#-#-#-#  gdkscreen.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: GdkScreen::size-changed:
# #-#-#-#-#  gdkscreen.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: GdkScreen::composited-changed:
#: gdkscreen.c:92:1 gdkscreen.c:111:1
msgid "@screen: the object on which the signal is emitted"
msgstr ""

# #used by: GdkScreen::size-changed:
#: gdkscreen.c:94:2
msgid ""
"The ::size_changed signal is emitted when the pixel width or height of a "
"screen changes."
msgstr ""

# #used by: GdkScreen::composited-changed:
#: gdkscreen.c:113:2
msgid ""
"The ::composited_changed signal is emitted when the composited status of the "
"screen changes"
msgstr ""

# used by: gdk_screen_get_monitor_at_point:
#: gdkscreen.c:232:1
msgid "@x: the x coordinate in the virtual screen."
msgstr ""

# used by: gdk_screen_get_monitor_at_point:
#: gdkscreen.c:233:1
msgid "@y: the y coordinate in the virtual screen."
msgstr ""

# #used by: gdk_screen_get_monitor_at_point:
#: gdkscreen.c:235:1
msgid "Returns the monitor number in which the point (@x,@y) is located."
msgstr ""

# #used by: gdk_screen_get_monitor_at_point:
#: gdkscreen.c:237:2
msgid ""
"Returns: the monitor number in which the point (@x,@y) lies, or a monitor "
"close to (@x,@y) if the point is not in any monitor."
msgstr ""

# #-#-#-#-#  gdkscreen.pot (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_screen_get_monitor_at_window:
# #-#-#-#-#  gdkwindow.pot (gdk 2.10.6)  #-#-#-#-#
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: _gdk_window_destroy_hierarchy:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: _gdk_window_destroy:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_destroy:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_set_user_data:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_get_user_data:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_get_window_type:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_get_position:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_get_parent:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_get_toplevel:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_get_children:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_peek_children:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_add_filter:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_remove_filter:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_is_visible:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_is_viewable:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_get_state:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_begin_paint_rect:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_begin_paint_region:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_end_paint:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_get_internal_paint_info:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_clear:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_clear_area:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_clear_area_e:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_process_updates:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_invalidate_rect:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_invalidate_maybe_recurse:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_invalidate_region:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_get_update_area:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_freeze_updates:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_thaw_updates:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_get_pointer:
#: gdkscreen.c:272:1 gdkwindow.c:333:1 gdkwindow.c:456:1 gdkwindow.c:474:1
#: gdkwindow.c:493:1 gdkwindow.c:516:1 gdkwindow.c:534:1 gdkwindow.c:550:1
#: gdkwindow.c:582:1 gdkwindow.c:603:1 gdkwindow.c:625:1 gdkwindow.c:650:1
#: gdkwindow.c:670:1 gdkwindow.c:721:1 gdkwindow.c:824:1 gdkwindow.c:841:1
#: gdkwindow.c:878:1 gdkwindow.c:897:1 gdkwindow.c:925:1 gdkwindow.c:1025:1
#: gdkwindow.c:1140:1 gdkwindow.c:1906:1 gdkwindow.c:1926:1 gdkwindow.c:1955:1
#: gdkwindow.c:2400:1 gdkwindow.c:2448:1 gdkwindow.c:2516:1 gdkwindow.c:2638:1
#: gdkwindow.c:2673:1 gdkwindow.c:2732:1 gdkwindow.c:2753:1 gdkwindow.c:2932:1
msgid "@window: a #GdkWindow"
msgstr ""

# used by: gdk_screen_get_monitor_at_window:
#: gdkscreen.c:273:3
msgid ""
"@returns: the monitor number in which most of @window is located, or if "
"@window does not intersect any monitors, a monitor, close to @window."
msgstr ""

# #used by: gdk_screen_get_monitor_at_window:
#: gdkscreen.c:277:2
msgid ""
"Returns the number of the monitor in which the largest area of the bounding "
"rectangle of @window resides."
msgstr ""

# #used by: gdk_screen_width:
#: gdkscreen.c:319:1
msgid "Returns the width of the default screen in pixels."
msgstr ""

# #used by: gdk_screen_width:
#: gdkscreen.c:321:1
msgid "Return value: the width of the default screen in pixels."
msgstr ""

# #used by: gdk_screen_height:
#: gdkscreen.c:332:1
msgid "Returns the height of the default screen in pixels."
msgstr ""

# #used by: gdk_screen_height:
#: gdkscreen.c:334:1
msgid "Return value: the height of the default screen in pixels."
msgstr ""

# #used by: gdk_screen_width_mm:
#: gdkscreen.c:345:2
msgid ""
"Returns the width of the default screen in millimeters. Note that on many X "
"servers this value will not be correct."
msgstr ""

# #used by: gdk_screen_width_mm:
#: gdkscreen.c:348:2
msgid ""
"Return value: the width of the default screen in millimeters, though it is "
"not always correct."
msgstr ""

# #used by: gdk_screen_height_mm:
#: gdkscreen.c:360:2
msgid ""
"Returns the height of the default screen in millimeters. Note that on many X "
"servers this value will not be correct."
msgstr ""

# #used by: gdk_screen_height_mm:
#: gdkscreen.c:363:2
msgid ""
"Return value: the height of the default screen in millimeters, though it is "
"not always correct."
msgstr ""

# used by: gdk_screen_set_font_options:
#: gdkscreen.c:375:2
msgid ""
"@options: a #cairo_font_options_t, or %NULL to unset any previously set "
"default font options."
msgstr ""

# #used by: gdk_screen_set_font_options:
#: gdkscreen.c:378:5
msgid ""
"Sets the default font options for the screen. These options will be set on "
"any #PangoContext's newly created with gdk_pango_context_get_for_screen(). "
"Changing the default set of font options does not affect contexts that have "
"already been created."
msgstr ""

# #used by: gdk_screen_get_font_options:
#: gdkscreen.c:410:1
msgid "Gets any options previously set with gdk_screen_set_font_options()."
msgstr ""

# #used by: gdk_screen_get_font_options:
#: gdkscreen.c:412:2
msgid ""
"Return value: the current font options, or %NULL if no default font options "
"have been set."
msgstr ""

# used by: gdk_screen_set_resolution:
#: gdkscreen.c:428:2
msgid ""
"@dpi: the resolution in |$_1_$|dots per inch|$_1_$|. (Physical inches aren't "
"actually involved; the terminology is conventional.)"
msgstr ""

# #used by: gdk_screen_set_resolution:
#: gdkscreen.c:431:4
msgid ""
"Sets the resolution for font handling on the screen. This is a scale factor "
"between points specified in a #PangoFontDescription and cairo units. The "
"default value is 96, meaning that a 10 point font will be 13 units high. (10 "
"* 96. / 72. = 13.3)."
msgstr ""

# #used by: gdk_screen_get_resolution:
#: gdkscreen.c:459:2
msgid ""
"Gets the resolution for font handling on the screen; see "
"gdk_screen_set_resolution() for full details."
msgstr ""

# #used by: gdk_screen_get_resolution:
#: gdkscreen.c:462:2
msgid ""
"Return value: the current resolution, or -1 if no resolution has been set."
msgstr ""

# used by: gdk_text_property_to_utf8_list:
#: gdkselection.c:76:1
msgid "@encoding: an atom representing the encoding of the text"
msgstr ""

# used by: gdk_text_property_to_utf8_list:
#: gdkselection.c:77:1
msgid "@format:   the format of the property"
msgstr ""

# used by: gdk_text_property_to_utf8_list:
#: gdkselection.c:78:1
msgid "@text:     the text to convert"
msgstr ""

# used by: gdk_text_property_to_utf8_list:
#: gdkselection.c:79:1
msgid "@length:   the length of @text, in bytes"
msgstr ""

# used by: gdk_text_property_to_utf8_list:
#: gdkselection.c:80:2
msgid ""
"@list:     location to store the list of strings or %NULL. The list should "
"be freed with g_strfreev()."
msgstr ""

# #used by: gdk_text_property_to_utf8_list:
#: gdkselection.c:83:2
msgid ""
"Convert a text property in the giving encoding to a list of UTF-8 strings."
msgstr ""

# #used by: gdk_text_property_to_utf8_list:
#: gdkselection.c:86:2
msgid "Return value: the number of strings in the resulting list."
msgstr ""

# used by: gdk_utf8_to_compound_text:
#: gdkselection.c:114:1
msgid "@str:      a UTF-8 string"
msgstr ""

# used by: gdk_utf8_to_compound_text:
#: gdkselection.c:115:1
msgid "@encoding: location to store resulting encoding"
msgstr ""

# used by: gdk_utf8_to_compound_text:
#: gdkselection.c:116:1
msgid "@format:   location to store format of the result"
msgstr ""

# used by: gdk_utf8_to_compound_text:
#: gdkselection.c:117:1
msgid "@ctext:    location to store the data of the result"
msgstr ""

# used by: gdk_utf8_to_compound_text:
#: gdkselection.c:118:2
msgid "@length:   location to store the length of the data stored in @ctext"
msgstr ""

# #used by: gdk_utf8_to_compound_text:
#: gdkselection.c:121:1
msgid "Convert from UTF-8 to compound text."
msgstr ""

# #used by: gdk_utf8_to_compound_text:
#: gdkselection.c:123:2
msgid "Return value: %TRUE if the conversion succeeded, otherwise false."
msgstr ""

# #used by: gdk_list_visuals:
#: gdkvisual.c:32:5
msgid ""
"Lists the available visuals for the default screen. (See "
"gdk_screen_list_visuals()) A visual describes a hardware image data format. "
"For example, a visual might support 24-bit color, or 8-bit color, and might "
"expect pixels to be in a certain format."
msgstr ""

# #used by: gdk_list_visuals:
#: gdkvisual.c:38:1
msgid "Call g_list_free() on the return value when you're finished with it."
msgstr ""

# #used by: gdk_list_visuals:
#: gdkvisual.c:40:1
msgid ""
"Return value: a list of visuals; the list must be freed, but not its contents"
msgstr ""

# #used by: gdk_visual_get_system:
#: gdkvisual.c:51:3
msgid ""
"Get the system'sdefault visual for the default GDK screen. This is the "
"visual for the root window of the display. The return value should not be "
"freed."
msgstr ""

# #used by: gdk_visual_get_system:
#: gdkvisual.c:55:1
msgid "Return value: system visual"
msgstr ""

# used by: _gdk_window_destroy_hierarchy:
#: gdkwindow.c:334:5
msgid ""
"@recursing: If TRUE, then this is being called because a parent was "
"destroyed. This generally means that the call to the windowing system to "
"destroy the window can be omitted, since it will be destroyed as a result of "
"the parent being destroyed. Unless @foreign_destroy."
msgstr ""

# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: _gdk_window_destroy_hierarchy:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: _gdk_window_destroy:
#: gdkwindow.c:339:4 gdkwindow.c:457:4
msgid ""
"@foreign_destroy: If TRUE, the window or a parent was destroyed by some "
"external agency. The window has already been destroyed and no windowing "
"system calls should be made. (This may never happen for some windowing "
"systems.)"
msgstr ""

# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: _gdk_window_destroy_hierarchy:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: _gdk_window_destroy:
#: gdkwindow.c:344:2 gdkwindow.c:462:2
msgid ""
"Internal function to destroy a window. Like gdk_window_destroy(), but does "
"not drop the reference count created by gdk_window_new()."
msgstr ""

# #used by: gdk_window_destroy:
#: gdkwindow.c:476:3
msgid ""
"Destroys the window system resources associated with @window and decrements "
"@window's reference count. The window system resources for all children of "
"@window are also destroyed, but the children's reference counts are not "
"decremented."
msgstr ""

# #used by: gdk_window_destroy:
#: gdkwindow.c:480:2
msgid ""
"Note that a window will not be destroyed automatically when its reference "
"count reaches zero. You must call this function yourself before that happens."
msgstr ""

# used by: gdk_window_set_user_data:
#: gdkwindow.c:494:1
msgid "@user_data: user data"
msgstr ""

# #used by: gdk_window_set_user_data:
#: gdkwindow.c:496:7
msgid ""
"For most purposes this function is deprecated in favor of g_object_set_data"
"(). However, for historical reasons GTK+ stores the #GtkWidget that owns a "
"#GdkWindow as user data on the #GdkWindow. So, custom widget implementations "
"should use this function for that. If GTK+ receives an event for a "
"#GdkWindow, and the user data for the window is non-%NULL, GTK+ will assume "
"the user data is a #GtkWidget, and forward the event to that widget."
msgstr ""

# used by: gdk_window_get_user_data:
#: gdkwindow.c:517:1
msgid "@data: return location for user data"
msgstr ""

# #used by: gdk_window_get_user_data:
#: gdkwindow.c:519:2
msgid ""
"Retrieves the user data for @window, which is normally the widget that "
"@window belongs to. See gdk_window_set_user_data()."
msgstr ""

# #used by: gdk_window_get_window_type:
#: gdkwindow.c:536:1
msgid "Gets the type of the window. See #GdkWindowType."
msgstr ""

# #used by: gdk_window_get_window_type:
#: gdkwindow.c:538:1
msgid "Return value: type of window"
msgstr ""

# used by: gdk_window_get_position:
#: gdkwindow.c:551:1
msgid "@x: X coordinate of window"
msgstr ""

# used by: gdk_window_get_position:
#: gdkwindow.c:552:1
msgid "@y: Y coordinate of window"
msgstr ""

# #used by: gdk_window_get_position:
#: gdkwindow.c:554:5
msgid ""
"Obtains the position of the window as reported in the most-recently-"
"processed #GdkEventConfigure. Contrast with gdk_window_get_geometry() which "
"queries the X server for the current window position, regardless of which "
"events have been received or processed."
msgstr ""

# #used by: gdk_window_get_position:
#: gdkwindow.c:560:1
msgid "The position coordinates are relative to the window's parent window."
msgstr ""

# #used by: gdk_window_get_parent:
#: gdkwindow.c:584:6
msgid ""
"Obtains the parent of @window, as known to GDK. Does not query the X server; "
"thus this returns the parent as passed to gdk_window_new(), not the actual "
"parent. This should never matter unless you're using Xlib calls mixed with "
"GDK calls on the X11 platform. It may also matter for toplevel windows, "
"because the window manager may choose to reparent them."
msgstr ""

# #used by: gdk_window_get_parent:
#: gdkwindow.c:591:1
msgid "Return value: parent of @window"
msgstr ""

# #used by: gdk_window_get_toplevel:
#: gdkwindow.c:605:1
msgid "Gets the toplevel window that's an ancestor of @window."
msgstr ""

# #used by: gdk_window_get_toplevel:
#: gdkwindow.c:607:1
msgid "Return value: the toplevel window containing @window"
msgstr ""

# #used by: gdk_window_get_children:
#: gdkwindow.c:627:4
msgid ""
"Gets the list of children of @window known to GDK. This function only "
"returns children created via GDK, so for example it's useless when used with "
"the root window; it only returns windows an application created itself."
msgstr ""

# #used by: gdk_window_get_children:
#: gdkwindow.c:632:2
msgid ""
"The returned list must be freed, but the elements in the list need not be."
msgstr ""

# #used by: gdk_window_get_children:
#: gdkwindow.c:635:1
msgid "Return value: list of child windows inside @window"
msgstr ""

# #used by: gdk_window_peek_children:
#: gdkwindow.c:652:2
msgid ""
"Like gdk_window_get_children(), but does not copy the list of children, so "
"the list does not need to be freed."
msgstr ""

# #used by: gdk_window_peek_children:
#: gdkwindow.c:655:1
msgid "Return value: a reference to the list of child windows in @window"
msgstr ""

# used by: gdk_window_add_filter:
#: gdkwindow.c:671:1
msgid "@function: filter callback"
msgstr ""

# used by: gdk_window_add_filter:
#: gdkwindow.c:672:1
msgid "@data: data to pass to filter callback"
msgstr ""

# #used by: gdk_window_add_filter:
#: gdkwindow.c:674:5
msgid ""
"Adds an event filter to @window, allowing you to intercept events before "
"they reach GDK. This is a low-level operation and makes it easy to break GDK "
"and/or GTK+, so you have to know what you're doing. Pass %NULL for @window "
"to get all events for all windows, instead of events for a specific window."
msgstr ""

# used by: gdk_window_remove_filter:
#: gdkwindow.c:722:1
msgid "@function: previously-added filter function"
msgstr ""

# used by: gdk_window_remove_filter:
#: gdkwindow.c:723:1
msgid "@data: user data for previously-added filter function"
msgstr ""

# #used by: gdk_window_remove_filter:
#: gdkwindow.c:725:1
msgid "Remove a filter previously added with gdk_window_add_filter()."
msgstr ""

# used by: gdk_screen_get_toplevel_windows:
#: gdkwindow.c:768:1
msgid "@screen: The #GdkScreen where the toplevels are located."
msgstr ""

# #used by: gdk_screen_get_toplevel_windows:
#: gdkwindow.c:770:3
msgid ""
"Obtains a list of all toplevel windows known to GDK on the screen @screen. A "
"toplevel window is a child of the root window (see "
"gdk_get_default_root_window())."
msgstr ""

# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_screen_get_toplevel_windows:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_window_get_toplevels:
#: gdkwindow.c:774:2 gdkwindow.c:811:2
msgid ""
"The returned list should be freed with g_list_free(), but its elements need "
"not be freed."
msgstr ""

# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_screen_get_toplevel_windows:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_window_get_toplevels:
#: gdkwindow.c:777:1 gdkwindow.c:814:1
msgid "Return value: list of toplevel windows, free with g_list_free()"
msgstr ""

# #used by: gdk_window_get_toplevels:
#: gdkwindow.c:806:4
msgid ""
"Obtains a list of all toplevel windows known to GDK on the default screen "
"(see gdk_screen_get_toplevel_windows()). A toplevel window is a child of the "
"root window (see gdk_get_default_root_window())."
msgstr ""

# #used by: gdk_window_is_visible:
#: gdkwindow.c:826:2
msgid ""
"Checks whether the window has been mapped (with gdk_window_show() or "
"gdk_window_show_unraised())."
msgstr ""

# #used by: gdk_window_is_visible:
#: gdkwindow.c:829:1
msgid "Return value: %TRUE if the window is mapped"
msgstr ""

# #used by: gdk_window_is_viewable:
#: gdkwindow.c:843:4
msgid ""
"Check if the window and all ancestors of the window are mapped. (This is not "
"necessarily |$_1_$|viewable|$_1_$| in the X sense, since we only check as "
"far as we have GDK window parents, not to the root window.)"
msgstr ""

# #used by: gdk_window_is_viewable:
#: gdkwindow.c:848:1
msgid "Return value: %TRUE if the window is viewable"
msgstr ""

# #used by: gdk_window_get_state:
#: gdkwindow.c:880:2
msgid ""
"Gets the bitwise OR of the currently active window state flags, from the "
"#GdkWindowState enumeration."
msgstr ""

# #used by: gdk_window_get_state:
#: gdkwindow.c:883:1
msgid "Return value: window state bitfield"
msgstr ""

# used by: gdk_window_begin_paint_rect:
#: gdkwindow.c:898:1
msgid "@rectangle: rectangle you intend to draw to"
msgstr ""

# #used by: gdk_window_begin_paint_rect:
#: gdkwindow.c:900:3
msgid ""
"A convenience wrapper around gdk_window_begin_paint_region() which creates a "
"rectangular region for you. See gdk_window_begin_paint_region() for details."
msgstr ""

# used by: gdk_window_begin_paint_region:
#: gdkwindow.c:926:1
msgid "@region: region you intend to draw to"
msgstr ""

# #used by: gdk_window_begin_paint_region:
#: gdkwindow.c:928:9
msgid ""
"Indicates that you are beginning the process of redrawing @region. A backing "
"store (offscreen buffer) large enough to contain @region will be created. "
"The backing store will be initialized with the background color or "
"background pixmap for @window. Then, all drawing operations performed on "
"@window will be diverted to the backing store.  When you call "
"gdk_window_end_paint(), the backing store will be copied to @window, making "
"it visible onscreen. Only the part of @window contained in @region will be "
"modified; that is, drawing operations are clipped to @region."
msgstr ""

# #used by: gdk_window_begin_paint_region:
#: gdkwindow.c:938:8
msgid ""
"The net result of all this is to remove flicker, because the user sees the "
"finished product appear all at once when you call gdk_window_end_paint(). If "
"you draw to @window directly without calling gdk_window_begin_paint_region"
"(), the user may see flicker as individual drawing operations are performed "
"in sequence.  The clipping and background-initializing features of "
"gdk_window_begin_paint_region() are conveniences for the programmer, so you "
"can avoid doing that work yourself."
msgstr ""

# #used by: gdk_window_begin_paint_region:
#: gdkwindow.c:947:10
msgid ""
"When using GTK+, the widget system automatically places calls to "
"gdk_window_begin_paint_region() and gdk_window_end_paint() around emissions "
"of the expose_event signal. That is, if you're writing an expose event "
"handler, you can assume that the exposed area in #GdkEventExpose has already "
"been cleared to the window background, is already set as the clip region, "
"and already has a backing store. Therefore in most cases, application code "
"need not call gdk_window_begin_paint_region(). (You can disable the "
"automatic calls around expose events on a widget-by-widget basis by calling "
"gtk_widget_set_double_buffered().)"
msgstr ""

# #used by: gdk_window_begin_paint_region:
#: gdkwindow.c:958:8
msgid ""
"If you call this function multiple times before calling the matching "
"gdk_window_end_paint(), the backing stores are pushed onto a stack. "
"gdk_window_end_paint() copies the topmost backing store onscreen, subtracts "
"the topmost region from all other regions in the stack, and pops the stack. "
"All drawing operations affect only the topmost backing store in the stack. "
"One matching call to gdk_window_end_paint() is required for each call to "
"gdk_window_begin_paint_region()."
msgstr ""

# #used by: gdk_window_end_paint:
#: gdkwindow.c:1027:7
msgid ""
"Indicates that the backing store created by the most recent call to "
"gdk_window_begin_paint_region() should be copied onscreen and deleted, "
"leaving the next-most-recent backing store or no backing store at all as the "
"active paint region. See gdk_window_begin_paint_region() for full details. "
"It is an error to call this function without a matching "
"gdk_window_begin_paint_region() first."
msgstr ""

# used by: gdk_window_get_internal_paint_info:
#: gdkwindow.c:1141:2
msgid ""
"@real_drawable: location to store the drawable to which drawing should be "
"done."
msgstr ""

# used by: gdk_window_get_internal_paint_info:
#: gdkwindow.c:1143:3
msgid ""
"@x_offset: location to store the X offset between coordinates in @window, "
"and the underlying window system primitive coordinates for *@real_drawable."
msgstr ""

# used by: gdk_window_get_internal_paint_info:
#: gdkwindow.c:1146:3
msgid ""
"@y_offset: location to store the Y offset between coordinates in @window, "
"and the underlying window system primitive coordinates for *@real_drawable."
msgstr ""

# #used by: gdk_window_get_internal_paint_info:
#: gdkwindow.c:1150:7
msgid ""
"If you bypass the GDK layer and use windowing system primitives to draw "
"directly onto a #GdkWindow, then you need to deal with two details: there "
"may be an offset between GDK coordinates and windowing system coordinates, "
"and GDK may have redirected drawing to a offscreen pixmap as the result of a "
"gdk_window_begin_paint_region() calls. This function allows retrieving the "
"information you need to compensate for these effects."
msgstr ""

# #used by: gdk_window_get_internal_paint_info:
#: gdkwindow.c:1158:2
msgid ""
"This function exposes details of the GDK implementation, and is thus likely "
"to change in future releases of GDK."
msgstr ""

# #used by: gdk_window_clear:
#: gdkwindow.c:1908:1
msgid "Clears an entire @window to the background color or background pixmap."
msgstr ""

# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_clear_area:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_clear_area_e:
#: gdkwindow.c:1927:1 gdkwindow.c:1956:1
msgid "@x: x coordinate of rectangle to clear"
msgstr ""

# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_clear_area:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_clear_area_e:
#: gdkwindow.c:1928:1 gdkwindow.c:1957:1
msgid "@y: y coordinate of rectangle to clear"
msgstr ""

# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_clear_area:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_clear_area_e:
#: gdkwindow.c:1929:1 gdkwindow.c:1958:1
msgid "@width: width of rectangle to clear"
msgstr ""

# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_clear_area:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# used by: gdk_window_clear_area_e:
#: gdkwindow.c:1930:1 gdkwindow.c:1959:1
msgid "@height: height of rectangle to clear"
msgstr ""

# #used by: gdk_window_clear_area:
#: gdkwindow.c:1932:1
msgid "Clears an area of @window to the background color or background pixmap."
msgstr ""

# #used by: gdk_window_clear_area_e:
#: gdkwindow.c:1961:2
msgid ""
"Like gdk_window_clear_area(), but also generates an expose event for the "
"cleared area."
msgstr ""

# #used by: gdk_window_clear_area_e:
#: gdkwindow.c:1964:2
msgid ""
"This function has a stupid name because it dates back to the mists time, pre-"
"GDK-1.0."
msgstr ""

# #used by: gdk_window_process_all_updates:
#: gdkwindow.c:2362:2
msgid ""
"Calls gdk_window_process_updates() for all windows (see #GdkWindow) in the "
"application."
msgstr ""

# used by: gdk_window_process_updates:
#: gdkwindow.c:2401:1
msgid "@update_children: whether to also process updates for child windows"
msgstr ""

# #used by: gdk_window_process_updates:
#: gdkwindow.c:2403:8
msgid ""
"Sends one or more expose events to @window. The areas in each expose event "
"will cover the entire update area for the window (see "
"gdk_window_invalidate_region() for details). Normally GDK calls "
"gdk_window_process_all_updates() on your behalf, so there's no need to call "
"this function unless you want to force expose events to be delivered "
"immediately and synchronously (vs. the usual case, where GDK delivers them "
"in an idle handler). Occasionally this is useful to produce nicer scrolling "
"behavior, for example."
msgstr ""

# used by: gdk_window_invalidate_rect:
#: gdkwindow.c:2449:1
msgid "@rect: rectangle to invalidate"
msgstr ""

# used by: gdk_window_invalidate_rect:
#: gdkwindow.c:2450:1
msgid "@invalidate_children: whether to also invalidate child windows"
msgstr ""

# #used by: gdk_window_invalidate_rect:
#: gdkwindow.c:2452:3
msgid ""
"A convenience wrapper around gdk_window_invalidate_region() which "
"invalidates a rectangular region. See gdk_window_invalidate_region() for "
"details."
msgstr ""

# used by: gdk_window_invalidate_maybe_recurse:
#: gdkwindow.c:2518:2
msgid ""
"@child_func: function to use to decide if to recurse to a child, %NULL means "
"never recurse."
msgstr ""

# used by: gdk_window_invalidate_maybe_recurse:
#: gdkwindow.c:2520:1
msgid "@user_data: data passed to @child_func"
msgstr ""

# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_window_invalidate_maybe_recurse:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_window_invalidate_region:
#: gdkwindow.c:2522:6 gdkwindow.c:2642:6
msgid ""
"Adds @region to the update area for @window. The update area is the region "
"that needs to be redrawn, or |$_1_$|dirty region.|$_1_$| The call "
"gdk_window_process_updates() sends one or more expose events to the window, "
"which together cover the entire update area. An application would normally "
"redraw the contents of @window in response to those expose events."
msgstr ""

# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_window_invalidate_maybe_recurse:
# #-#-#-#-#  gdkwindow.pot~ (gdk 2.10.6)  #-#-#-#-#
# #used by: gdk_window_invalidate_region:
#: gdkwindow.c:2529:4 gdkwindow.c:2649:4
msgid ""
"GDK will call gdk_window_process_all_updates() on your behalf whenever your "
"program returns to the main loop and becomes idle, so normally there's no "
"need to do that manually, you just need to invalidate regions that you know "
"should be redrawn."
msgstr ""

# #used by: gdk_window_invalidate_maybe_recurse:
#: gdkwindow.c:2534:4
msgid ""
"The @child_func parameter controls whether the region of each child window "
"that intersects @region will also be invalidated. Only children for which "
"@child_func returns TRUE will have the area invalidated."
msgstr ""

# used by: gdk_window_invalidate_region:
#: gdkwindow.c:2640:1
msgid "@invalidate_children: %TRUE to also invalidate child windows"
msgstr ""

# #used by: gdk_window_invalidate_region:
#: gdkwindow.c:2654:5
msgid ""
"The @invalidate_children parameter controls whether the region of each child "
"window that intersects @region will also be invalidated. If %FALSE, then the "
"update area for child windows will remain unaffected. See "
"gdk_window_invalidate_maybe_recurse if you need fine grained control over "
"which children are invalidated."
msgstr ""

# #used by: gdk_window_get_update_area:
#: gdkwindow.c:2675:6
msgid ""
"Transfers ownership of the update area from @window to the caller of the "
"function. That is, after calling this function, @window will no longer have "
"an invalid/dirty region; the update area is removed from @window and handed "
"to you. If a window has no update area, gdk_window_get_update_area() returns "
"%NULL. You are responsible for calling gdk_region_destroy() on the returned "
"region if it's non-%NULL."
msgstr ""

# #used by: gdk_window_get_update_area:
#: gdkwindow.c:2682:1
msgid "Return value: the update area for @window"
msgstr ""

# used by: _gdk_window_clear_update_area:
#: gdkwindow.c:2708:1
msgid "@window: a #GdkWindow."
msgstr ""

# #used by: _gdk_window_clear_update_area:
#: gdkwindow.c:2710:2
msgid ""
"Internal function to clear the update area for a window. This is called when "
"the window is hidden or destroyed."
msgstr ""

# #used by: gdk_window_freeze_updates:
#: gdkwindow.c:2734:5
msgid ""
"Temporarily freezes a window such that it won't receive expose events.  The "
"window will begin receiving expose events again when gdk_window_thaw_updates"
"() is called. If gdk_window_freeze_updates() has been called more than once, "
"gdk_window_thaw_updates() must be called an equal number of times to begin "
"processing exposes."
msgstr ""

# #used by: gdk_window_thaw_updates:
#: gdkwindow.c:2755:1
msgid "Thaws a window frozen with gdk_window_freeze_updates()."
msgstr ""

# used by: gdk_window_set_debug_updates:
#: gdkwindow.c:2772:1
msgid "@setting: %TRUE to turn on update debugging"
msgstr ""

# #used by: gdk_window_set_debug_updates:
#: gdkwindow.c:2774:7
msgid ""
"With update debugging enabled, calls to gdk_window_invalidate_region() clear "
"the invalidated region of the screen to a noticeable color, and GDK pauses "
"for a short time before sending exposes to windows during "
"gdk_window_process_updates().  The net effect is that you can see the "
"invalid region for each window and watch redraws as they occur. This allows "
"you to diagnose inefficiencies in your application."
msgstr ""

# #used by: gdk_window_set_debug_updates:
#: gdkwindow.c:2782:5
msgid ""
"In essence, because the GDK rendering model prevents all flicker, if you are "
"redrawing the same region 400 times you may never notice, aside from "
"noticing a speed problem. Enabling update debugging causes GTK to flicker "
"slowly and noticeably, so you can see exactly what's being redrawn when, in "
"what order."
msgstr ""

# #used by: gdk_window_set_debug_updates:
#: gdkwindow.c:2788:5
msgid ""
"The --gtk-debug=updates command line option passed to GTK+ programs enables "
"this debug option at application startup time. That's usually more useful "
"than calling gdk_window_set_debug_updates() yourself, though you might want "
"to use this function to enable updates sometime after application startup "
"time."
msgstr ""

# used by: gdk_window_constrain_size:
#: gdkwindow.c:2803:1
msgid "@geometry: a #GdkGeometry structure"
msgstr ""

# used by: gdk_window_constrain_size:
#: gdkwindow.c:2804:1
msgid "@flags: a mask indicating what portions of @geometry are set"
msgstr ""

# used by: gdk_window_constrain_size:
#: gdkwindow.c:2805:1
msgid "@width: desired width of window"
msgstr ""

# used by: gdk_window_constrain_size:
#: gdkwindow.c:2806:1
msgid "@height: desired height of the window"
msgstr ""

# used by: gdk_window_constrain_size:
#: gdkwindow.c:2807:1
msgid "@new_width: location to store resulting width"
msgstr ""

# used by: gdk_window_constrain_size:
#: gdkwindow.c:2808:1
msgid "@new_height: location to store resulting height"
msgstr ""

# #used by: gdk_window_constrain_size:
#: gdkwindow.c:2810:2
msgid ""
"Constrains a desired width and height according to a set of geometry hints "
"(such as minimum and maximum size)."
msgstr ""

# used by: gdk_window_get_pointer:
#: gdkwindow.c:2933:1
msgid "@x: return location for X coordinate of pointer"
msgstr ""

# used by: gdk_window_get_pointer:
#: gdkwindow.c:2934:1
msgid "@y: return location for Y coordinate of pointer"
msgstr ""

# used by: gdk_window_get_pointer:
#: gdkwindow.c:2935:1
msgid "@mask: return location for modifier mask"
msgstr ""

# #used by: gdk_window_get_pointer:
#: gdkwindow.c:2937:3
msgid ""
"Obtains the current pointer position and modifier state. The position is "
"given in coordinates relative to the upper left corner of @window."
msgstr ""

# #used by: gdk_window_get_pointer:
#: gdkwindow.c:2941:3
msgid ""
"Return value: the window containing the pointer (as with "
"gdk_window_at_pointer()), or %NULL if the window containing the pointer "
"isn't known to GDK"
msgstr ""

# #used by: gdk_window_at_pointer:
#: gdkwindow.c:2991:5
msgid ""
"Obtains the window underneath the mouse pointer, returning the location of "
"that window in @win_x, @win_y. Returns %NULL if the window under the mouse "
"pointer is not known to GDK (if the window belongs to another application "
"and a #GdkWindow hasn't been created for it with gdk_window_foreign_new())"
msgstr ""

# #used by: gdk_window_at_pointer:
#: gdkwindow.c:2997:2
msgid ""
"NOTE: For multihead-aware widgets or applications use "
"gdk_display_get_window_at_pointer() instead."
msgstr ""

# #used by: gdk_window_at_pointer:
#: gdkwindow.c:3000:1
msgid "Return value: window under the mouse pointer"
msgstr ""

# #used by: gdk_get_default_root_window:
#: gdkwindow.c:3012:2
msgid ""
"Obtains the root window (parent all other windows are inside) for the "
"default display and screen."
msgstr ""

# #used by: gdk_get_default_root_window:
#: gdkwindow.c:3015:1
msgid "Return value: the default root window"
msgstr ""

# used by: gdk_window_foreign_new:
#: gdkwindow.c:3025:1
msgid "@anid: a native window handle."
msgstr ""

# #used by: gdk_window_foreign_new:
#: gdkwindow.c:3027:2
msgid ""
"Wraps a native window for the default display in a #GdkWindow. This may fail "
"if the window has been destroyed."
msgstr ""

# #used by: gdk_window_foreign_new:
#: gdkwindow.c:3030:2
msgid ""
"For example in the X backend, a native window handle is an Xlib <type>XID</"
"type>."
msgstr ""

# #used by: gdk_window_foreign_new:
#: gdkwindow.c:3033:2
msgid ""
"Return value: the newly-created #GdkWindow wrapper for the native window or %"
"NULL if the window has been destroyed."
msgstr ""
