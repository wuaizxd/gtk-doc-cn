msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2011-04-14 19:54+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2
#: building.sgml:0(None)
msgid "translator-credits"
msgstr ""

#: building.sgml:110(programlisting)
#, no-wrap
msgid ""
"\n"
"      CPPFLAGS=\"-I/opt/gtk/include\"\n"
"      LDFLAGS=\"-L/opt/gtk/lib\"\n"
"      PKG_CONFIG_PATH=\"/opt/gtk/lib/pkgconfig\"\n"
"      export CPPFLAGS LDFLAGS PKG_CONFIG_PATH\n"
"    "
msgstr ""

#: building.sgml:116(para)
msgid ""
"You may also need to set the <envar>LD_LIBRARY_PATH</envar> environment "
"variable so the systems dynamic linker can find the newly installed "
"libraries, and the <envar>PATH</envar> environment program so that utility "
"binaries installed by the various libraries will be found."
msgstr ""

#: building.sgml:123(programlisting)
#, no-wrap
msgid ""
"\n"
"      LD_LIBRARY_PATH=\"/opt/gtk/lib\"\n"
"      PATH=\"/opt/gtk/bin:$PATH\"\n"
"      export LD_LIBRARY_PATH PATH\n"
"    "
msgstr ""

#: building.sgml:13(refname)
msgid "Compiling the GTK+ Libraries"
msgstr ""

#: building.sgml:130(title)
msgid "Dependencies"
msgstr ""

#: building.sgml:131(para)
msgid ""
"Before you can compile the GTK+ widget toolkit, you need to have various "
"other tools and libraries installed on your system. The two tools needed "
"during the build process (as differentiated from the tools used in when "
"creating GTK+ mentioned above such as <application>autoconf</application>) "
"are <command>pkg-config</command> and GNU make."
msgstr ""

#: building.sgml:14(refpurpose)
msgid "How to compile GTK+ itself"
msgstr ""

#: building.sgml:141(para)
msgid ""
"<ulink url=\"http://pkg-config.freedesktop.org\">pkg-config</ulink> is a "
"tool for tracking the compilation flags needed for libraries that are used "
"by the GTK+ libraries. (For each library, a small <literal>.pc</literal> "
"text file is installed in a standard location that contains the compilation "
"flags needed for that library along with version number information.)"
msgstr ""

#: building.sgml:152(para)
msgid ""
"The GTK+ makefiles will mostly work with different versions of "
"<command>make</command>, however, there tends to be a few incompatibilities, "
"so the GTK+ team recommends installing <ulink url=\"http://www.gnu.org/"
"software/make\">GNU make</ulink> if you don't already have it on your system "
"and using it. (It may be called <command>gmake</command> rather than "
"<command>make</command>.)"
msgstr ""

#: building.sgml:163(para)
msgid ""
"Some of the libraries that GTK+ depends on are maintained by by the GTK+ "
"team: GLib, GdkPixbuf, Pango, and ATK. Other libraries are maintained "
"separately."
msgstr ""

#: building.sgml:170(para)
msgid ""
"The GLib library provides core non-graphical functionality such as high "
"level data types, Unicode manipulation, and an object and type system to C "
"programs. It is available from the <ulink url=\"ftp://ftp.gtk.org/pub/glib/"
"\">GTK+ FTP site</ulink>."
msgstr ""

#: building.sgml:179(para)
msgid ""
"<ulink url=\"http://www.pango.org\">Pango</ulink> is a library for "
"internationalized text handling. It is available from the <ulink url=\"ftp://"
"ftp.gtk.org/pub/pango/\">GTK+ FTP site</ulink>."
msgstr ""

#: building.sgml:187(para)
msgid ""
"ATK is the Accessibility Toolkit. It provides a set of generic interfaces "
"allowing accessibility technologies such as screen readers to interact with "
"a graphical user interface. It is available from the <ulink url=\"ftp://ftp."
"gtk.org/pub/atk/\">GTK+ FTP site</ulink>."
msgstr ""

#: building.sgml:19(title)
msgid "Building GTK+ on UNIX-like systems"
msgstr ""

#: building.sgml:196(para)
msgid ""
"The <ulink url=\"http://www.gnu.org/software/libiconv/\">GNU libiconv "
"library</ulink> is needed to build GLib if your system doesn't have the "
"<function>iconv()</function> function for doing conversion between character "
"encodings. Most modern systems should have <function>iconv()</function>."
msgstr ""

#: building.sgml:20(para)
msgid ""
"This chapter covers building and installing GTK+ on UNIX and UNIX-like "
"systems such as Linux. Compiling GTK+ on Microsoft Windows is different in "
"detail and somewhat more difficult to get going since the necessary tools "
"aren't included with the operating system."
msgstr ""

#: building.sgml:206(para)
msgid ""
"The libintl library from the <ulink url=\"http://www.gnu.org/software/"
"gettext/\">GNU gettext package</ulink> is needed if your system doesn't have "
"the <function>gettext()</function> functionality for handling message "
"translation databases."
msgstr ""

#: building.sgml:215(para)
msgid ""
"The libraries from the X window system are needed to build Pango and GTK+. "
"You should already have these installed on your system, but it's possible "
"that you'll need to install the development environment for these libraries "
"that your operating system vendor provides."
msgstr ""

#: building.sgml:224(para)
msgid ""
"The <ulink url=\"http://www.fontconfig.org\">fontconfig</ulink> library "
"provides Pango with a standard way of locating fonts and matching them "
"against font names."
msgstr ""

#: building.sgml:231(para)
msgid ""
"<ulink url=\"http://www.cairographics.org\">Cairo</ulink> is a graphics "
"library that supports vector graphics and image compositing. Both Pango and "
"GTK+ use cairo for all of their drawing."
msgstr ""

#: building.sgml:239(para)
msgid ""
"The GdkPixbuf library provides facilities for loading images in a variety of "
"file formats."
msgstr ""

#: building.sgml:245(para)
msgid ""
"<ulink url=\"http://live.gnome.org/GObjectIntrospection\">gobject-"
"introspection</ulink> is a framework for making introspection data available "
"to language bindings."
msgstr ""

#: building.sgml:252(para)
msgid ""
"The <ulink url=\"http://www.freedesktop.org/wiki/Software/shared-mime-info"
"\">shared-mime-info</ulink> package is not a hard dependency of GTK+, but it "
"contains definitions for mime types that are used by GIO and, indirectly, by "
"GTK+. gdk-pixbuf will use GIO for mime type detection if possible. For this "
"to work, shared-mime-info needs to be installed and <envar>XDG_DATA_DIRS</"
"envar> set accordingly at configure time. Otherwise, gdk-pixbuf falls back "
"to its built-in mime type detection."
msgstr ""

#: building.sgml:265(title)
msgid "Building and testing GTK+"
msgstr ""

#: building.sgml:266(para)
msgid ""
"First make sure that you have the necessary external dependencies installed: "
"<command>pkg-config</command>, GNU make, the JPEG, PNG, and TIFF libraries, "
"FreeType, and, if necessary, libiconv and libintl. To get detailed "
"information about building these packages, see the documentation provided "
"with the individual packages. On a Linux system, it's quite likely you'll "
"have all of these installed already except for <command>pkg-config</command>."
msgstr ""

#: building.sgml:27(para)
msgid ""
"Before we get into the details of how to compile GTK+, we should mention "
"that in many cases, binary packages of GTK+ prebuilt for your operating "
"system will be available, either from your operating system vendor or from "
"independent sources. If such a set of packages is available, installing it "
"will get you programming with GTK+ much faster than building it yourself. In "
"fact, you may well already have GTK+ installed on your system already."
msgstr ""

#: building.sgml:276(para)
msgid ""
"Then build and install the GTK+ libraries in the order: GLib, Pango, ATK, "
"then GTK+. For each library, follow the steps of <literal>configure</"
"literal>, <literal>make</literal>, <literal>make install</literal> mentioned "
"above. If you're lucky, this will all go smoothly, and you'll be ready to "
"<link linkend=\"gtk-compiling\">start compiling your own GTK+ applications</"
"link>. You can test your GTK+ installation by running the <command>gtk3-"
"demo</command> program that GTK+ installs."
msgstr ""

#: building.sgml:287(para)
msgid ""
"If one of the <filename>configure</filename> scripts fails or running "
"<command>make</command> fails, look closely at the error messages printed; "
"these will often provide useful information as to what went wrong. When "
"<filename>configure</filename> fails, extra information, such as errors that "
"a test compilation ran into, is found in the file <filename>config.log</"
"filename>. Looking at the last couple of hundred lines in this file will "
"frequently make clear what went wrong. If all else fails, you can ask for "
"help on the gtk-list mailing list. See <xref linkend=\"gtk-resources\"/> for "
"more information."
msgstr ""

#: building.sgml:301(title)
msgid "Extra Configuration Options"
msgstr ""

#: building.sgml:303(para)
msgid ""
"In addition to the normal options, the <command>configure</command> script "
"for the GTK+ library supports a number of additional arguments. (Command "
"line arguments for the other GTK+ libraries are described in the "
"documentation distributed with the those libraries.) "
"<cmdsynopsis><command>configure</command><sbr/><group><arg>--disable-"
"modules</arg><arg>--enable-modules</arg></group><sbr/><group><arg>--with-"
"included-immodules=MODULE1,MODULE2,...</arg></group><sbr/><group><arg>--"
"enable-debug=[no/minimum/yes]</arg></group><sbr/><group><arg>--disable-"
"Bsymbolic</arg><arg>--enable-Bsymbolic</arg></group><sbr/><group><arg>--"
"disable-xkb</arg><arg>--enable-xkb</arg></group><sbr/><group><arg>--disable-"
"xinerama</arg><arg>--enable-xinerama</arg></group><sbr/><group><arg>--"
"disable-gtk-doc</arg><arg>--enable-gtk-doc</arg></group><sbr/><group><arg>--"
"disable-cups</arg><arg>--enable-cups</arg></group><sbr/><group><arg>--"
"disable-papi</arg><arg>--enable-papi</arg></group><sbr/><group><arg>--enable-"
"xinput</arg><arg>--disable-xinput</arg></group><sbr/><group><arg>--enable-"
"packagekit</arg><arg>--disable-packagekit</arg></group><sbr/><group><arg>--"
"enable-x11-backend</arg><arg>--disable-x11-backend</arg><arg>--enable-win32-"
"backend</arg><arg>--disable-win32-backend</arg><arg>--enable-quartz-backend</"
"arg><arg>--disable-quartz-backend</arg></group><sbr/><group><arg>--enable-"
"introspection=[no/auto/yes]</arg></group><sbr/><group><arg>--enable-gtk2-"
"dependency</arg><arg>--disable-gtk2-dependency</arg></group></cmdsynopsis>"
msgstr ""

#: building.sgml:37(para)
msgid ""
"On UNIX-like systems GTK+ uses the standard GNU build system, using "
"<application>autoconf</application> for package configuration and resolving "
"portability issues, <application>automake</application> for building "
"makefiles that comply with the GNU Coding Standards, and "
"<application>libtool</application> for building shared libraries on multiple "
"platforms."
msgstr ""

#: building.sgml:387(title)
msgid ""
"<systemitem>--disable-modules</systemitem> and <systemitem>--enable-modules</"
"systemitem>"
msgstr ""

#: building.sgml:390(para)
msgid ""
"Normally GTK+ will try to build the input method modules as little shared "
"libraries that are loaded on demand. The <systemitem>--disable-modules</"
"systemitem> argument indicates that they should all be built statically into "
"the GTK+ library instead. This is useful for people who need to produce "
"statically-linked binaries. If neither <systemitem>--disable-modules</"
"systemitem> nor <systemitem>--enable-modules</systemitem> is specified, then "
"the <command>configure</command> script will try to auto-detect whether "
"shared modules work on your system."
msgstr ""

#: building.sgml:405(systemitem)
msgid "--with-included-immodules"
msgstr ""

#: building.sgml:407(para)
msgid ""
"This option allows you to specify which input method modules you want to "
"include directly into the GTK+ shared library, as opposed to building them "
"as loadable modules."
msgstr ""

#: building.sgml:415(systemitem)
msgid "--enable-debug"
msgstr ""

#: building.sgml:417(para)
msgid ""
"Turns on various amounts of debugging support. Setting this to 'no' disables "
"g_assert(), g_return_if_fail(), g_return_val_if_fail() and all cast checks "
"between different object types. Setting it to 'minimum' disables only cast "
"checks. Setting it to 'yes' enables <link linkend=\"GTK-Debug-Options"
"\">runtime debugging</link>. The default is 'minimum'. Note that 'no' is "
"fast, but dangerous as it tends to destabilize even mostly bug-free software "
"by changing the effect of many bugs from simple warnings into fatal crashes. "
"Thus <option>--enable-debug=no</option> should <emphasis>not</emphasis> be "
"used for stable releases of GTK+."
msgstr ""

#: building.sgml:432(title)
msgid ""
"<systemitem>--disable-Bsymbolic</systemitem> and <systemitem>--enable-"
"Bsymbolic</systemitem>"
msgstr ""

#: building.sgml:434(para)
msgid ""
"The option <systemitem>--disable-Bsymbolic</systemitem> turns off the use of "
"the -Bsymbolic-functions linker flag. This is only necessary if you want to "
"override GTK+ functions by using <envar>LD_PRELOAD</envar>."
msgstr ""

#: building.sgml:443(title)
msgid ""
"<systemitem>--enable-explicit-deps</systemitem> and <systemitem>--disable-"
"explicit-deps</systemitem>"
msgstr ""

#: building.sgml:445(para)
msgid ""
"If <systemitem>--enable-explicit-deps</systemitem> is specified then GTK+ "
"will write the full set of libraries that GTK+ depends upon into its "
"<literal>.pc</literal> files to be used when programs depending on GTK+ are "
"linked. Otherwise, GTK+ only will include the GTK+ libraries themselves, and "
"will depend on system library dependency facilities to bring in the other "
"libraries. By default GTK+ will disable explicit dependencies unless it "
"detects that they are needed on the system. (If you specify <systemitem>--"
"enable-static</systemitem> to force building of static libraries, then "
"explicit dependencies will be written since library dependencies don't work "
"for static libraries.) Specifying <systemitem>--enable-explicit-deps</"
"systemitem> or <systemitem>--enable-static</systemitem> can cause "
"compatibility problems when libraries that GTK+ depends upon change their "
"versions, and should be avoided if possible."
msgstr ""

#: building.sgml:46(para)
msgid ""
"If you are building GTK+ from the distributed source packages, then you "
"won't need these tools installed; the necessary pieces of the tools are "
"already included in the source packages. But it's useful to know a bit about "
"how packages that use these tools work. A source package is distributed as a "
"<literal>tar.gz</literal> or <literal>tar.bz2</literal> file which you "
"unpack into a directory full of the source files as follows:"
msgstr ""

#: building.sgml:468(title)
msgid ""
"<systemitem>--disable-xkb</systemitem> and <systemitem>--enable-xkb</"
"systemitem>"
msgstr ""

#: building.sgml:471(para)
msgid ""
"By default the <command>configure</command> script will try to auto-detect "
"whether the XKB extension is supported by the X libraries GTK+ is linked "
"with. These options can be used to explicitly control whether GTK+ will "
"support the XKB extension."
msgstr ""

#: building.sgml:481(title)
msgid ""
"<systemitem>--disable-xinerama</systemitem> and <systemitem>--enable-"
"xinerama</systemitem>"
msgstr ""

#: building.sgml:484(para)
msgid ""
"By default the <command>configure</command> script will try to link against "
"the Xinerama libraries if they are found. These options can be used to "
"explicitly control whether Xinerama should be used."
msgstr ""

#: building.sgml:493(title)
msgid ""
"<systemitem>--disable-xinput</systemitem> and <systemitem>--enable-xinput</"
"systemitem>"
msgstr ""

#: building.sgml:495(para)
msgid ""
"Controls whether GTK+ is built with support for the XInput or XInput2 "
"extension. These extensions provide an extended interface to input devices "
"such as graphics tablets. When this support is compiled in, specially "
"written GTK+ programs can get access to subpixel positions, multiple "
"simultaneous input devices, and extra \"axes\" provided by the device such "
"as pressure and tilt information."
msgstr ""

#: building.sgml:508(title)
msgid ""
"<systemitem>--disable-gtk-doc</systemitem> and <systemitem>--enable-gtk-doc</"
"systemitem>"
msgstr ""

#: building.sgml:511(para)
msgid ""
"The <application>gtk-doc</application> package is used to generate the "
"reference documentation included with GTK+. By default support for "
"<application>gtk-doc</application> is disabled because it requires various "
"extra dependencies to be installed. If you have <application>gtk-doc</"
"application> installed and are modifying GTK+, you may want to enable "
"<application>gtk-doc</application> support by passing in <systemitem>--"
"enable-gtk-doc</systemitem>. If not enabled, pre-generated HTML files "
"distributed with GTK+ will be installed."
msgstr ""

#: building.sgml:527(title)
msgid ""
"<systemitem>--disable-cups</systemitem> and <systemitem>--enable-cups</"
"systemitem>"
msgstr ""

#: building.sgml:530(para)
msgid ""
"By default the <command>configure</command> script will try to build the "
"cups print backend if the cups libraries are found. These options can be "
"used to explicitly control whether the cups print backend should be built."
msgstr ""

#: building.sgml:539(title)
msgid ""
"<systemitem>--disable-papi</systemitem> and <systemitem>--enable-papi</"
"systemitem>"
msgstr ""

#: building.sgml:542(para)
msgid ""
"By default the <command>configure</command> script will try to build the "
"papi print backend if the papi libraries are found. These options can be "
"used to explicitly control whether the papi print backend should be built."
msgstr ""

#: building.sgml:55(programlisting)
#, no-wrap
msgid ""
"\n"
"      tar xvfz gtk+-3.0.0.tar.gz\n"
"      tar xvfj gtk+-3.0.0.tar.bz2\n"
"    "
msgstr ""

#: building.sgml:551(title)
msgid ""
"<systemitem>--disable-packagekit</systemitem> and <systemitem>--enable-"
"packagekit</systemitem>"
msgstr ""

#: building.sgml:553(para)
msgid ""
"By default the <command>configure</command> script will try to build the "
"PackageKit support for the open-with dialog if the PackageKit libraries are "
"found. These options can be used to explicitly control whether PackageKit "
"support should be built."
msgstr ""

#: building.sgml:563(title)
msgid ""
"<systemitem>--enable-x11-backend</systemitem>, <systemitem>--disable-x11-"
"backend</systemitem>, <systemitem>--enable-win32-backend</systemitem>, "
"<systemitem>--disable-win32-backend</systemitem>, <systemitem>--enable-"
"quartz-backend</systemitem>, and <systemitem>--disable-quartz-backend</"
"systemitem>"
msgstr ""

#: building.sgml:570(para)
msgid ""
"Enables specific backends for GDK. If none of these options are given, the "
"x11 backend will be enabled by default, unless the platform is Windows, in "
"which case the default is win32. If any backend is explicitly enabled or "
"disabled, no other platform will be enabled automatically. Other supported "
"backends are the quartz backend for OS X."
msgstr ""

#: building.sgml:581(systemitem)
msgid "--enable-introspection"
msgstr ""

#: building.sgml:583(para)
msgid "Build with or without introspection support. The default is 'auto'."
msgstr ""

#: building.sgml:59(para)
msgid ""
"In the toplevel directory that is created, there will be a shell script "
"called <filename>configure</filename> which you then run to take the "
"template makefiles called <filename>Makefile.in</filename> in the package "
"and create makefiles customized for your operating system. The "
"<filename>configure</filename> script can be passed various command line "
"arguments to determine how the package is built and installed. The most "
"commonly useful argument is the <systemitem>--prefix</systemitem> argument "
"which determines where the package is installed. To install a package in "
"<filename>/opt/gtk</filename> you would run configure as:"
msgstr ""

#: building.sgml:590(title)
msgid ""
"<systemitem>--enable-gtk2-dependency</systemitem> or <systemitem>--disable-"
"gtk2-dependency</systemitem>"
msgstr ""

#: building.sgml:593(para)
msgid ""
"Whether to rely on an exiting gtk-update-icon-cache utility instead of "
"building our own. Distributions which are shipping both GTK+ 2.x and GTK+ 3 "
"may want to use this option to avoid file conflicts between these packages. "
"The default is to build gtk-update-icon-cache."
msgstr ""

#: building.sgml:7(refentrytitle)
msgid "Compiling the GTK+ libraries"
msgstr ""

#: building.sgml:72(programlisting)
#, no-wrap
msgid ""
"\n"
"      ./configure --prefix=/opt/gtk\n"
"    "
msgstr ""

#: building.sgml:75(para)
msgid ""
"A full list of options can be found by running <filename>configure</"
"filename> with the <systemitem>--help</systemitem> argument. In general, the "
"defaults are right and should be trusted. After you've run "
"<filename>configure</filename>, you then run the <command>make</command> "
"command to build the package and install it."
msgstr ""

#: building.sgml:8(manvolnum)
msgid "3"
msgstr ""

#: building.sgml:84(programlisting)
#, no-wrap
msgid ""
"\n"
"      make\n"
"      make install\n"
"    "
msgstr ""

#: building.sgml:88(para)
msgid ""
"If you don't have permission to write to the directory you are installing "
"in, you may have to change to root temporarily before running <literal>make "
"install</literal>. Also, if you are installing in a system directory, on "
"some systems (such as Linux), you will need to run <command>ldconfig</"
"command> after <literal>make install</literal> so that the newly installed "
"libraries will be found."
msgstr ""

#: building.sgml:9(refmiscinfo)
msgid "GTK Library"
msgstr ""

#: building.sgml:97(para)
msgid ""
"Several environment variables are useful to pass to set before running "
"configure. <envar>CPPFLAGS</envar> contains options to pass to the C "
"compiler, and is used to tell the compiler where to look for include files. "
"The <envar>LDFLAGS</envar> variable is used in a similar fashion for the "
"linker. Finally the <envar>PKG_CONFIG_PATH</envar> environment variable "
"contains a search path that <command>pkg-config</command> (see below) uses "
"when looking for for file describing how to compile programs using different "
"libraries. If you were installing GTK+ and it's dependencies into <filename>/"
"opt/gtk</filename>, you might want to set these variables as:"
msgstr ""
