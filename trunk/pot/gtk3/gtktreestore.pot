# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-04-23 20:09-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"

#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_set_column_types:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_set_valuesv:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_set_valist:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_set:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_remove:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_insert:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_insert_before:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_insert_after:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_insert_with_values:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_insert_with_valuesv:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_prepend:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_append:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_is_ancestor:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_iter_depth:
#: gtktreestore.c:1076:1 gtktreestore.c:1124:1 gtktreestore.c:1164:1
#: gtktreestore.c:1192:1 gtktreestore.c:1260:1 gtktreestore.c:1322:1
#: gtktreestore.c:1403:1 gtktreestore.c:1485:1 gtktreestore.c:1577:1
#: gtktreestore.c:1656:1 gtktreestore.c:1715:1 gtktreestore.c:1774:1
#: gtktreestore.c:1799:1 gtktreestore.c:388:1
msgid "@tree_store: A #GtkTreeStore"
msgstr ""

#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_set_value:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_set_valuesv:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_set_valist:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_set:
#: gtktreestore.c:1077:1 gtktreestore.c:1125:1 gtktreestore.c:1165:1
#: gtktreestore.c:932:1
msgid "@iter: A valid #GtkTreeIter for the row being modified"
msgstr ""

#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_set_valuesv:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_insert_with_valuesv:
#: gtktreestore.c:1078:1 gtktreestore.c:1581:1
msgid "@columns: (array length=n_values): an array of column numbers"
msgstr ""

#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_set_valuesv:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_insert_with_valuesv:
#: gtktreestore.c:1079:1 gtktreestore.c:1582:1
msgid "@values: (array length=n_values): an array of GValues"
msgstr ""

#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_set_valuesv:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_insert_with_valuesv:
#: gtktreestore.c:1080:1 gtktreestore.c:1583:1
msgid "@n_values: the length of the @columns and @values arrays"
msgstr ""

#. used by: gtk_tree_store_set_valuesv:
#: gtktreestore.c:1082:4
msgid ""
"A variant of gtk_tree_store_set_valist() which takes the columns and values "
"as two arrays, instead of varargs.  This function is mainly intended for "
"language bindings or in case the number of columns to change is not known "
"until run-time."
msgstr ""

#. used by: gtk_tree_store_set_valuesv:
#: gtktreestore.c:1087:2
msgid "Since: 2.12 Rename to: gtk_tree_store_set"
msgstr ""

#. used by: gtk_tree_store_set_valist:
#: gtktreestore.c:1126:1
msgid "@var_args: <type>va_list</type> of column/value pairs"
msgstr ""

#. used by: gtk_tree_store_set_valist:
#: gtktreestore.c:1128:2
msgid ""
"See gtk_tree_store_set(); this version takes a <type>va_list</type> for use "
"by language bindings."
msgstr ""

#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_set:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_insert_with_values:
#: gtktreestore.c:1166:1 gtktreestore.c:1489:1
msgid "@Varargs: pairs of column number and value, terminated with -1"
msgstr ""

#. used by: gtk_tree_store_set:
#: gtktreestore.c:1168:6
msgid ""
"Sets the value of one or more cells in the row referenced by @iter. The "
"variable argument list should contain integer column numbers, each column "
"number followed by the value to be set. The list is terminated by a -1. For "
"example, to set column 0 with type %G_TYPE_STRING to \"Foo\", you would "
"write <literal>gtk_tree_store_set (store, iter, 0, \"Foo\", -1)</literal>."
msgstr ""

#. used by: gtk_tree_store_set:
#: gtktreestore.c:1175:2
msgid ""
"The value will be referenced by the store if it is a %G_TYPE_OBJECT, and it "
"will be copied if it is a %G_TYPE_STRING or %G_TYPE_BOXED."
msgstr ""

#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_remove:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_is_ancestor:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_iter_depth:
#: gtktreestore.c:1193:1 gtktreestore.c:1775:1 gtktreestore.c:1800:1
msgid "@iter: A valid #GtkTreeIter"
msgstr ""

#. used by: gtk_tree_store_remove:
#: gtktreestore.c:1195:3
msgid ""
"Removes @iter from @tree_store.  After being removed, @iter is set to the "
"next valid row at that level, or invalidated if it previously pointed to the "
"last one."
msgstr ""

#. used by: gtk_tree_store_remove:
#: gtktreestore.c:1199:1
msgid "Return value: %TRUE if @iter is still valid, %FALSE if not."
msgstr ""

#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_insert:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_insert_before:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_insert_after:
#: gtktreestore.c:1261:1 gtktreestore.c:1323:1 gtktreestore.c:1404:1
msgid "@iter: (out): An unset #GtkTreeIter to set to the new row"
msgstr ""

#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_insert:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_insert_before:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_insert_after:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_insert_with_values:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_insert_with_valuesv:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_prepend:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_append:
#: gtktreestore.c:1262:1 gtktreestore.c:1324:1 gtktreestore.c:1405:1
#: gtktreestore.c:1487:1 gtktreestore.c:1579:1 gtktreestore.c:1658:1
#: gtktreestore.c:1717:1
msgid "@parent: (allow-none): A valid #GtkTreeIter, or %NULL"
msgstr ""

#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_insert:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_insert_with_values:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_insert_with_valuesv:
#: gtktreestore.c:1263:1 gtktreestore.c:1488:1 gtktreestore.c:1580:1
msgid "@position: position to insert the new row"
msgstr ""

#. used by: gtk_tree_store_insert:
#: gtktreestore.c:1265:7
msgid ""
"Creates a new row at @position.  If parent is non-%NULL, then the row will "
"be made a child of @parent.  Otherwise, the row will be created at the "
"toplevel. If @position is larger than the number of rows at that level, then "
"the new row will be inserted to the end of the list.  @iter will be changed "
"to point to this new row.  The row will be empty after this function is "
"called.  To fill in values, you need to call gtk_tree_store_set() or "
"gtk_tree_store_set_value()."
msgstr ""

#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_insert_before:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_insert_after:
#: gtktreestore.c:1325:1 gtktreestore.c:1406:1
msgid "@sibling: (allow-none): A valid #GtkTreeIter, or %NULL"
msgstr ""

#. used by: gtk_tree_store_insert_before:
#: gtktreestore.c:1327:5
msgid ""
"Inserts a new row before @sibling.  If @sibling is %NULL, then the row will "
"be appended to @parent 's children.  If @parent and @sibling are %NULL, then "
"the row will be appended to the toplevel.  If both @sibling and @parent are "
"set, then @parent must be the parent of @sibling.  When @sibling is set, "
"@parent is optional."
msgstr ""

#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_insert_before:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_insert_after:
#: gtktreestore.c:1333:3 gtktreestore.c:1414:3
msgid ""
"@iter will be changed to point to this new row.  The row will be empty after "
"this function is called.  To fill in values, you need to call "
"gtk_tree_store_set() or gtk_tree_store_set_value()."
msgstr ""

#. used by: gtk_tree_store_insert_after:
#: gtktreestore.c:1408:5
msgid ""
"Inserts a new row after @sibling.  If @sibling is %NULL, then the row will "
"be prepended to @parent 's children.  If @parent and @sibling are %NULL, "
"then the row will be prepended to the toplevel.  If both @sibling and "
"@parent are set, then @parent must be the parent of @sibling.  When @sibling "
"is set, @parent is optional."
msgstr ""

#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_insert_with_values:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_insert_with_valuesv:
#: gtktreestore.c:1486:1 gtktreestore.c:1578:1
msgid ""
"@iter: (out) (allow-none): An unset #GtkTreeIter to set the new row, or "
"%NULL."
msgstr ""

#. used by: gtk_tree_store_insert_with_values:
#: gtktreestore.c:1491:4
msgid ""
"Creates a new row at @position.  @iter will be changed to point to this new "
"row.  If @position is larger than the number of rows on the list, then the "
"new row will be appended to the list.  The row will be filled with the "
"values given to this function."
msgstr ""

#. used by: gtk_tree_store_insert_with_values:
#: gtktreestore.c:1496:3
msgid ""
"Calling <literal>gtk_tree_store_insert_with_values (tree_store, iter, "
"position, ...)</literal> has the same effect as calling"
msgstr ""

#. used by: gtk_tree_store_insert_with_values:
#: gtktreestore.c:1503:6
msgid ""
"with the different that the former will only emit a row_inserted signal, "
"while the latter will emit row_inserted, row_changed and if the tree store "
"is sorted, rows_reordered.  Since emitting the rows_reordered signal "
"repeatedly can affect the performance of the program, "
"gtk_tree_store_insert_with_values() should generally be preferred when "
"inserting rows in a sorted tree store."
msgstr ""

#. used by: gtk_tree_store_insert_with_values:
#: gtktreestore.c:1510:1
msgid "Since: 2.10"
msgstr ""

#. used by: gtk_tree_store_insert_with_valuesv:
#: gtktreestore.c:1585:3
msgid ""
"A variant of gtk_tree_store_insert_with_values() which takes the columns and "
"values as two arrays, instead of varargs.  This function is mainly intended "
"for language bindings."
msgstr ""

#. used by: gtk_tree_store_insert_with_valuesv:
#: gtktreestore.c:1589:2
msgid "Since: 2.10 Rename to: gtk_tree_store_insert_with_values"
msgstr ""

#. used by: gtk_tree_store_prepend:
#: gtktreestore.c:1657:1
msgid "@iter: (out): An unset #GtkTreeIter to set to the prepended row"
msgstr ""

#. used by: gtk_tree_store_prepend:
#: gtktreestore.c:1660:5
msgid ""
"Prepends a new row to @tree_store.  If @parent is non-%NULL, then it will "
"prepend the new row before the first child of @parent, otherwise it will "
"prepend a row to the top level.  @iter will be changed to point to this new "
"row.  The row will be empty after this function is called.  To fill in "
"values, you need to call gtk_tree_store_set() or gtk_tree_store_set_value()."
msgstr ""

#. used by: gtk_tree_store_append:
#: gtktreestore.c:1716:1
msgid "@iter: (out): An unset #GtkTreeIter to set to the appended row"
msgstr ""

#. used by: gtk_tree_store_append:
#: gtktreestore.c:1719:5
msgid ""
"Appends a new row to @tree_store.  If @parent is non-%NULL, then it will "
"append the new row after the last child of @parent, otherwise it will append "
"a row to the top level.  @iter will be changed to point to this new row.  "
"The row will be empty after this function is called.  To fill in values, you "
"need to call gtk_tree_store_set() or gtk_tree_store_set_value()."
msgstr ""

#. used by: gtk_tree_store_is_ancestor:
#: gtktreestore.c:1776:1
msgid "@descendant: A valid #GtkTreeIter"
msgstr ""

#. used by: gtk_tree_store_is_ancestor:
#: gtktreestore.c:1778:2
msgid ""
"Returns %TRUE if @iter is an ancestor of @descendant.  That is, @iter is the "
"parent (or grandparent or great-grandparent) of @descendant."
msgstr ""

#. used by: gtk_tree_store_is_ancestor:
#: gtktreestore.c:1781:1
msgid "Return value: %TRUE, if @iter is an ancestor of @descendant"
msgstr ""

#. used by: gtk_tree_store_iter_depth:
#: gtktreestore.c:1802:2
msgid ""
"Returns the depth of @iter.  This will be 0 for anything on the root level, "
"1 for anything down a level, etc."
msgstr ""

#. used by: gtk_tree_store_iter_depth:
#: gtktreestore.c:1805:1
msgid "Return value: The depth of @iter"
msgstr ""

#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_set_column_type:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_set_value:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_clear:
#: gtktreestore.c:1871:1 gtktreestore.c:442:1 gtktreestore.c:931:1
msgid "@tree_store: a #GtkTreeStore"
msgstr ""

#. used by: gtk_tree_store_clear:
#: gtktreestore.c:1873:1
msgid "Removes all rows from @tree_store"
msgstr ""

#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_iter_is_valid:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_reorder: (skip)
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_swap:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_move_before:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_move_after:
#: gtktreestore.c:1910:1 gtktreestore.c:2252:1 gtktreestore.c:2337:1
#: gtktreestore.c:2801:1 gtktreestore.c:2822:1
msgid "@tree_store: A #GtkTreeStore."
msgstr ""

#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_iter_is_valid:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_move_before:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_move_after:
#: gtktreestore.c:1911:1 gtktreestore.c:2802:1 gtktreestore.c:2823:1
msgid "@iter: A #GtkTreeIter."
msgstr ""

#. used by: gtk_tree_store_iter_is_valid:
#: gtktreestore.c:1913:2
msgid ""
"WARNING: This function is slow. Only use it for debugging and/or testing "
"purposes."
msgstr ""

#. used by: gtk_tree_store_iter_is_valid:
#: gtktreestore.c:1916:1
msgid "Checks if the given iter is a valid iter for this #GtkTreeStore."
msgstr ""

#. used by: gtk_tree_store_iter_is_valid:
#: gtktreestore.c:1918:1
msgid ""
"Return value: %TRUE if the iter is valid, %FALSE if the iter is invalid."
msgstr ""

#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_iter_is_valid:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_reorder: (skip)
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_swap:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_move_before:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_move_after:
#: gtktreestore.c:1920:1 gtktreestore.c:2262:1 gtktreestore.c:2344:1
#: gtktreestore.c:2810:1 gtktreestore.c:2831:1
msgid "Since: 2.2"
msgstr ""

#. used by: gtk_tree_store_reorder: (skip)
#: gtktreestore.c:2253:1
msgid "@parent: A #GtkTreeIter."
msgstr ""

#. used by: gtk_tree_store_reorder: (skip)
#: gtktreestore.c:2254:3
msgid ""
"@new_order: (array): an array of integers mapping the new position of each "
"child to its old position before the re-ordering, i.e. @new_order<literal>"
"[newpos] = oldpos</literal>."
msgstr ""

#. used by: gtk_tree_store_reorder: (skip)
#: gtktreestore.c:2258:3
msgid ""
"Reorders the children of @parent in @tree_store to follow the order "
"indicated by @new_order. Note that this function only works with unsorted "
"stores."
msgstr ""

#. used by: gtk_tree_store_swap:
#: gtktreestore.c:2338:1
msgid "@a: A #GtkTreeIter."
msgstr ""

#. used by: gtk_tree_store_swap:
#: gtktreestore.c:2339:1
msgid "@b: Another #GtkTreeIter."
msgstr ""

#. used by: gtk_tree_store_swap:
#: gtktreestore.c:2341:2
msgid ""
"Swaps @a and @b in the same level of @tree_store. Note that this function "
"only works with unsorted stores."
msgstr ""

#. used by: gtk_tree_store_move_before:
#: gtktreestore.c:2803:1
msgid "@position: (allow-none): A #GtkTreeIter or %NULL."
msgstr ""

#. used by: gtk_tree_store_move_before:
#: gtktreestore.c:2805:4
msgid ""
"Moves @iter in @tree_store to the position before @position. @iter and "
"@position should be in the same level. Note that this function only works "
"with unsorted stores. If @position is %NULL, @iter will be moved to the end "
"of the level."
msgstr ""

#. used by: gtk_tree_store_move_after:
#: gtktreestore.c:2824:1
msgid "@position: (allow-none): A #GtkTreeIter."
msgstr ""

#. used by: gtk_tree_store_move_after:
#: gtktreestore.c:2826:4
msgid ""
"Moves @iter in @tree_store to the position after @position. @iter and "
"@position should be in the same level. Note that this function only works "
"with unsorted stores. If @position is %NULL, @iter will be moved to the "
"start of the level."
msgstr ""

#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_new:
#. #-#-#-#-#  gtktreestore.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_tree_store_newv:
#: gtktreestore.c:305:1 gtktreestore.c:351:1
msgid "@n_columns: number of columns in the tree store"
msgstr ""

#. used by: gtk_tree_store_new:
#: gtktreestore.c:306:1
msgid "@Varargs: all #GType types for the columns, from first to last"
msgstr ""

#. used by: gtk_tree_store_new:
#: gtktreestore.c:308:3
msgid ""
"Creates a new tree store as with @n_columns columns each of the types passed "
"in.  Note that only types derived from standard GObject fundamental types "
"are supported."
msgstr ""

#. used by: gtk_tree_store_new:
#: gtktreestore.c:312:3
msgid ""
"As an example, <literal>gtk_tree_store_new (3, G_TYPE_INT, G_TYPE_STRING, "
"GDK_TYPE_PIXBUF);</literal> will create a new #GtkTreeStore with three "
"columns, of type <type>int</type>, <type>string</type> and #GdkPixbuf "
"respectively."
msgstr ""

#. used by: gtk_tree_store_new:
#: gtktreestore.c:316:1
msgid "Return value: a new #GtkTreeStore"
msgstr ""

#. used by: SECTION:gtktreestore
#: gtktreestore.c:33:1
msgid ""
"@Short_description: A tree-like data structure that can be used with the "
"GtkTreeView"
msgstr ""

#. used by: SECTION:gtktreestore
#: gtktreestore.c:34:1
msgid "@Title: GtkTreeStore"
msgstr ""

#. used by: SECTION:gtktreestore
#: gtktreestore.c:35:1
msgid "@See_also: #GtkTreeModel"
msgstr ""

#. used by: gtk_tree_store_newv:
#: gtktreestore.c:352:1
msgid ""
"@types: (array length=n_columns): an array of #GType types for the columns, "
"from first to last"
msgstr ""

#. used by: gtk_tree_store_newv:
#: gtktreestore.c:354:1
msgid "Non vararg creation function.  Used primarily by language bindings."
msgstr ""

#. used by: gtk_tree_store_newv:
#: gtktreestore.c:356:2
msgid ""
"Return value: (transfer full): a new #GtkTreeStore Rename to: "
"gtk_tree_store_new"
msgstr ""

#. used by: SECTION:gtktreestore
#: gtktreestore.c:37:6
msgid ""
"The #GtkTreeStore object is a list model for use with a #GtkTreeView "
"widget.  It implements the #GtkTreeModel interface, and consequentialy, can "
"use all of the methods available there.  It also implements the "
"#GtkTreeSortable interface so it can be sorted by the view.  Finally, it "
"also implements the tree <link linkend=\"gtktreednd\">drag and drop</link> "
"interfaces."
msgstr ""

#. used by: gtk_tree_store_set_column_types:
#: gtktreestore.c:389:1
msgid "@n_columns: Number of columns for the tree store"
msgstr ""

#. used by: gtk_tree_store_set_column_types:
#: gtktreestore.c:390:1
msgid ""
"@types: (array length=n_columns): An array of #GType types, one for each "
"column"
msgstr ""

#. used by: gtk_tree_store_set_column_types:
#: gtktreestore.c:392:4
msgid ""
"This function is meant primarily for #GObjects that inherit from "
"#GtkTreeStore, and should only be used when constructing a new "
"#GtkTreeStore.  It will not function after a row has been added, or a method "
"on the #GtkTreeModel interface is called."
msgstr ""

#. used by: SECTION:gtktreestore
#: gtktreestore.c:44:8
msgid ""
"<refsect2 id=\"GtkTreeStore-BUILDER-UI\"> <title>GtkTreeStore as "
"GtkBuildable</title> The GtkTreeStore implementation of the #GtkBuildable "
"interface allows to specify the model columns with a &lt;columns&gt; element "
"that may contain multiple &lt;column&gt; elements, each specifying one model "
"column. The \"type\" attribute specifies the data type for the column. "
"<example> <title>A UI Definition fragment for a tree store</title>"
msgstr ""

#. used by: gtk_tree_store_set_column_type:
#: gtktreestore.c:443:1
msgid "@column: column number"
msgstr ""

#. used by: gtk_tree_store_set_column_type:
#: gtktreestore.c:444:1
msgid "@type: type of the data to be stored in @column"
msgstr ""

#. used by: gtk_tree_store_set_column_type:
#: gtktreestore.c:446:4
msgid ""
"Supported types include: %G_TYPE_UINT, %G_TYPE_INT, %G_TYPE_UCHAR, "
"%G_TYPE_CHAR, %G_TYPE_BOOLEAN, %G_TYPE_POINTER, %G_TYPE_FLOAT, "
"%G_TYPE_DOUBLE, %G_TYPE_STRING, %G_TYPE_OBJECT, and %G_TYPE_BOXED, along "
"with subclasses of those types such as %GDK_TYPE_PIXBUF."
msgstr ""

#. used by: SECTION:gtktreestore
#: gtktreestore.c:61:2
msgid "</example> </refsect2>"
msgstr ""

#. used by: gtk_tree_store_set_value:
#: gtktreestore.c:933:1
msgid "@column: column number to modify"
msgstr ""

#. used by: gtk_tree_store_set_value:
#: gtktreestore.c:934:1
msgid "@value: new value for the cell"
msgstr ""

#. used by: gtk_tree_store_set_value:
#: gtktreestore.c:936:3
msgid ""
"Sets the data in the cell specified by @iter and @column. The type of @value "
"must be convertible to the type of the column."
msgstr ""
