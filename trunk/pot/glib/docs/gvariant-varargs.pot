msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2011-04-23 10:05+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2
#: gvariant-varargs.xml:0(None)
msgid "translator-credits"
msgstr ""

#: gvariant-varargs.xml:1000(para)
msgid ""
"equivalent to <link linkend=\"g-variant-dup-strv"
"\"><function>g_variant_dup_strv()</function></link>"
msgstr ""

#: gvariant-varargs.xml:101(emphasis)
msgid ""
"<placeholder-1/>, <placeholder-2/>, <placeholder-3/>, <placeholder-4/>, "
"<placeholder-5/>, <placeholder-6/>, <placeholder-7/>, <placeholder-8/>, "
"<placeholder-9/>, <placeholder-10/>"
msgstr ""

#: gvariant-varargs.xml:1010(literal)
msgid "^a&amp;s"
msgstr ""

#: gvariant-varargs.xml:1015(para)
msgid ""
"equivalent to <link linkend=\"g-variant-get-strv"
"\"><function>g_variant_get_strv()</function></link>"
msgstr ""

#: gvariant-varargs.xml:102(literal) gvariant-varargs.xml:287(literal)
#: gvariant-varargs.xml:324(literal)
msgid "b"
msgstr ""

#: gvariant-varargs.xml:102(literal) gvariant-varargs.xml:288(literal)
#: gvariant-varargs.xml:380(literal)
msgid "i"
msgstr ""

#: gvariant-varargs.xml:102(literal) gvariant-varargs.xml:287(literal)
#: gvariant-varargs.xml:352(literal)
msgid "n"
msgstr ""

#: gvariant-varargs.xml:102(literal) gvariant-varargs.xml:287(literal)
#: gvariant-varargs.xml:366(literal)
msgid "q"
msgstr ""

#: gvariant-varargs.xml:102(literal) gvariant-varargs.xml:287(literal)
#: gvariant-varargs.xml:338(literal)
msgid "y"
msgstr ""

#: gvariant-varargs.xml:1025(literal)
msgid "^ay"
msgstr ""

#: gvariant-varargs.xml:103(literal) gvariant-varargs.xml:289(literal)
#: gvariant-varargs.xml:450(literal)
msgid "d"
msgstr ""

#: gvariant-varargs.xml:103(literal) gvariant-varargs.xml:288(literal)
#: gvariant-varargs.xml:436(literal)
msgid "h"
msgstr ""

#: gvariant-varargs.xml:103(literal) gvariant-varargs.xml:288(literal)
#: gvariant-varargs.xml:422(literal)
msgid "t"
msgstr ""

#: gvariant-varargs.xml:103(literal) gvariant-varargs.xml:288(literal)
#: gvariant-varargs.xml:394(literal)
msgid "u"
msgstr ""

#: gvariant-varargs.xml:103(literal) gvariant-varargs.xml:288(literal)
#: gvariant-varargs.xml:408(literal)
msgid "x"
msgstr ""

#: gvariant-varargs.xml:1030(para)
msgid ""
"equivalent to <link linkend=\"g-variant-new-bytestring"
"\"><function>g_variant_new_bytestring()</function></link>"
msgstr ""

#: gvariant-varargs.xml:1035(para)
msgid ""
"equivalent to <link linkend=\"g-variant-dup-bytestring"
"\"><function>g_variant_dup_bytestring()</function></link>"
msgstr ""

#: gvariant-varargs.xml:1045(literal)
msgid "^&amp;ay"
msgstr ""

#: gvariant-varargs.xml:1050(para)
msgid ""
"equivalent to <link linkend=\"g-variant-get-bytestring"
"\"><function>g_variant_get_bytestring()</function></link>"
msgstr ""

#: gvariant-varargs.xml:1060(literal)
msgid "^aay"
msgstr ""

#: gvariant-varargs.xml:1065(para)
msgid ""
"equivalent to <link linkend=\"g-variant-new-bytestring-array"
"\"><function>g_variant_new_bytestring_array()</function></link>"
msgstr ""

#: gvariant-varargs.xml:1070(para)
msgid ""
"equivalent to <link linkend=\"g-variant-dup-bytestring-array"
"\"><function>g_variant_dup_bytestring_array()</function></link>"
msgstr ""

#: gvariant-varargs.xml:108(para)
msgid ""
"Used for building or deconstructing boolean, byte and numeric types. See "
"<link linkend=\"gvariant-format-strings-numeric-types\">Numeric Types</link> "
"below."
msgstr ""

#: gvariant-varargs.xml:1080(literal)
msgid "^a&amp;ay"
msgstr ""

#: gvariant-varargs.xml:1085(para)
msgid ""
"equivalent to <link linkend=\"g-variant-get-bytestring-array"
"\"><function>g_variant_get_bytestring_array()</function></link>"
msgstr ""

#: gvariant-varargs.xml:11(para)
msgid ""
"This page attempts to document how to perform variable argument conversions "
"with GVariant."
msgstr ""

#: gvariant-varargs.xml:118(emphasis) gvariant-varargs.xml:236(emphasis)
msgid "<placeholder-1/>, <placeholder-2/>, <placeholder-3/>"
msgstr ""

#: gvariant-varargs.xml:119(literal) gvariant-varargs.xml:515(literal)
msgid "g"
msgstr ""

#: gvariant-varargs.xml:119(literal) gvariant-varargs.xml:515(literal)
msgid "o"
msgstr ""

#: gvariant-varargs.xml:119(literal) gvariant-varargs.xml:515(literal)
msgid "s"
msgstr ""

#: gvariant-varargs.xml:124(para)
msgid ""
"Used for building or deconstructing string types. See <link linkend="
"\"gvariant-format-strings-strings\">Strings</link> below."
msgstr ""

#: gvariant-varargs.xml:134(literal) gvariant-varargs.xml:565(literal)
msgid "v"
msgstr ""

#: gvariant-varargs.xml:138(para)
msgid ""
"Used for building or deconstructing variant types. See <link linkend="
"\"gvariant-format-strings-variants\">Variants</link> below."
msgstr ""

#: gvariant-varargs.xml:14(para)
msgid ""
"Conversions occur according to format strings. A format string is a two-way "
"mapping between a single <link linkend=\"GVariant\">GVariant</link> value "
"and one or more C values."
msgstr ""

#: gvariant-varargs.xml:149(literal) gvariant-varargs.xml:606(literal)
msgid "a"
msgstr ""

#: gvariant-varargs.xml:154(para)
msgid ""
"Used for building or deconstructing arrays. See <link linkend=\"gvariant-"
"format-strings-arrays\">Arrays</link> below."
msgstr ""

#: gvariant-varargs.xml:165(literal) gvariant-varargs.xml:664(literal)
msgid "m"
msgstr ""

#: gvariant-varargs.xml:170(para)
msgid ""
"Used for building or deconstructing maybe types. See <link linkend="
"\"gvariant-format-strings-maybe-types\">Maybe Types</link> below."
msgstr ""

#: gvariant-varargs.xml:18(para)
msgid ""
"A conversion from C values into a <link linkend=\"GVariant\">GVariant</link> "
"value is made using the <link linkend=\"g-variant-new"
"\"><function>g_variant_new()</function></link> function. A conversion from a "
"<link linkend=\"GVariant\">GVariant</link> into C values is made using the "
"<link linkend=\"g-variant-get\"><function>g_variant_get()</function></link> "
"function."
msgstr ""

#: gvariant-varargs.xml:181(literal) gvariant-varargs.xml:780(code)
msgid "()"
msgstr ""

#: gvariant-varargs.xml:186(para)
msgid ""
"Used for building or deconstructing tuples. See <link linkend=\"gvariant-"
"format-strings-tuples\">Tuples</link> below."
msgstr ""

#: gvariant-varargs.xml:197(literal) gvariant-varargs.xml:813(code)
msgid "{}"
msgstr ""

#: gvariant-varargs.xml:202(para)
msgid ""
"Used for building or deconstructing dictionary entries. See <link linkend="
"\"gvariant-format-strings-dictionaries\">Dictionaries</link> below."
msgstr ""

#: gvariant-varargs.xml:213(literal) gvariant-varargs.xml:838(literal)
msgid "@"
msgstr ""

#: gvariant-varargs.xml:218(para)
msgid ""
"Used as a prefix on a GVariant type string (not format string). Denotes that "
"a pointer to a <link linkend=\"GVariant\">GVariant</link> should be used in "
"place of the normal C type or types. For <link linkend=\"g-variant-new"
"\"><function>g_variant_new()</function></link> this means that you must pass "
"a non-<link linkend=\"NULL:CAPS\"><literal>NULL</literal></link><code>(<link "
"linkend=\"GVariant\">GVariant</link> *)</code>; if it is a floating "
"reference, ownership will be taken, as if by using <link linkend=\"g-variant-"
"ref-sink\"><function>g_variant_ref_sink()</function></link>. For <link "
"linkend=\"g-variant-get\"><function>g_variant_get()</function></link> this "
"means that you must pass a pointer to a <code>(<link linkend=\"GVariant"
"\">GVariant</link> *)</code> for the value to be returned by reference or "
"<link linkend=\"NULL:CAPS\"><literal>NULL</literal></link> to ignore the "
"value. See <link linkend=\"gvariant-format-strings-gvariant\"><code>GVariant "
"*</code></link> below."
msgstr ""

#: gvariant-varargs.xml:237(literal) gvariant-varargs.xml:838(literal)
msgid "*"
msgstr ""

#: gvariant-varargs.xml:237(literal) gvariant-varargs.xml:838(literal)
msgid "?"
msgstr ""

#: gvariant-varargs.xml:237(literal) gvariant-varargs.xml:838(literal)
msgid "r"
msgstr ""

#: gvariant-varargs.xml:242(para)
msgid ""
"Exactly equivalent to <literal>@*</literal>, <literal>@?</literal> and "
"<literal>@r</literal>. Provided only for completeness so that all GVariant "
"type strings can be used also as format strings. See <link linkend="
"\"gvariant-format-strings-gvariant\"><code>GVariant *</code></link> below."
msgstr ""

#: gvariant-varargs.xml:253(literal) gvariant-varargs.xml:903(code)
msgid "&amp;"
msgstr ""

#: gvariant-varargs.xml:257(para)
msgid ""
"Used as a prefix on a GVariant type string (not format string). Denotes that "
"a C pointer to serialised data should be used in place of the normal C type. "
"See <link linkend=\"gvariant-format-strings-pointers\">Pointers</link> below."
msgstr ""

#: gvariant-varargs.xml:268(literal) gvariant-varargs.xml:940(literal)
msgid "^"
msgstr ""

#: gvariant-varargs.xml:27(title)
msgid "Syntax"
msgstr ""

#: gvariant-varargs.xml:272(para)
msgid ""
"Used as a prefix on some specific types of format strings. See <link linkend="
"\"gvariant-format-strings-convenience\">Convenience Conversions</link> below."
msgstr ""

#: gvariant-varargs.xml:284(title)
msgid "Numeric Types"
msgstr ""

#: gvariant-varargs.xml:286(emphasis)
msgid ""
"Characters: <placeholder-1/>, <placeholder-2/>, <placeholder-3/>, "
"<placeholder-4/>, <placeholder-5/>, <placeholder-6/>, <placeholder-7/>, "
"<placeholder-8/>, <placeholder-9/>, <placeholder-10/>"
msgstr ""

#: gvariant-varargs.xml:29(para)
msgid ""
"This section exhaustively describes all possibilities for GVariant format "
"strings. There are no valid forms of format strings other than those "
"described here. Please note that the format string syntax is likely to "
"expand in the future."
msgstr ""

#: gvariant-varargs.xml:293(para)
msgid ""
"Variable argument conversions from numeric types work in the most obvious "
"way possible. Upon encountering one of these characters, <link linkend=\"g-"
"variant-new\"><function>g_variant_new()</function></link> takes the "
"equivalent C type as an argument. <link linkend=\"g-variant-get"
"\"><function>g_variant_get()</function></link> takes a pointer to the "
"equivalent C type (or <link linkend=\"NULL:CAPS\"><literal>NULL</literal></"
"link> to ignore the value)."
msgstr ""

#: gvariant-varargs.xml:300(para)
msgid "The equivalent C types are as follows:"
msgstr ""

#: gvariant-varargs.xml:311(emphasis)
msgid "Character"
msgstr ""

#: gvariant-varargs.xml:316(emphasis)
msgid "Equivalent C type"
msgstr ""

#: gvariant-varargs.xml:330(type)
msgid "gboolean"
msgstr ""

#: gvariant-varargs.xml:34(para)
msgid "Valid format strings have one of the following forms:"
msgstr ""

#: gvariant-varargs.xml:344(type)
msgid "guchar"
msgstr ""

#: gvariant-varargs.xml:358(type)
msgid "gint16"
msgstr ""

#: gvariant-varargs.xml:372(type)
msgid "guint16"
msgstr ""

#: gvariant-varargs.xml:386(type) gvariant-varargs.xml:442(type)
msgid "gint32"
msgstr ""

#: gvariant-varargs.xml:39(para)
msgid "any type string"
msgstr ""

#: gvariant-varargs.xml:400(type)
msgid "guint32"
msgstr ""

#: gvariant-varargs.xml:414(type)
msgid "gint64"
msgstr ""

#: gvariant-varargs.xml:42(para)
msgid "a type string prefixed with a '<literal>@</literal>'"
msgstr ""

#: gvariant-varargs.xml:428(type)
msgid "guint64"
msgstr ""

#: gvariant-varargs.xml:456(type)
msgid "gdouble"
msgstr ""

#: gvariant-varargs.xml:464(para)
msgid ""
"Note that in C, small integer types in variable argument lists are promoted "
"up to <link linkend=\"gint\"><type>int</type></link> or <link linkend=\"guint"
"\"><type>unsigned int</type></link> as appropriate, and read back "
"accordingly. <link linkend=\"gint\"><type>int</type></link> is 32 bits on "
"every platform on which GLib is currently suported. This means that you can "
"use C expressions of type <link linkend=\"gint\"><type>int</type></link> "
"with <link linkend=\"g-variant-new\"><function>g_variant_new()</function></"
"link> and format characters '<literal>b</literal>', '<literal>y</literal>', "
"'<literal>n</literal>', '<literal>q</literal>', '<literal>i</literal>', "
"'<literal>u</literal>' and '<literal>h</literal>'. Specifically, you can use "
"integer literals with these characters."
msgstr ""

#: gvariant-varargs.xml:47(para)
msgid ""
"'<literal>&amp;s</literal>' '<literal>&amp;o</literal>', '<literal>&amp;g</"
"literal>', '<literal>^as</literal>', '<literal>^a&amp;s</literal>', "
"'<literal>^ay</literal>', '<literal>^&amp;ay</literal>', '<literal>^aay</"
"literal>' or '<literal>^a&amp;ay</literal>'."
msgstr ""

#: gvariant-varargs.xml:475(para)
msgid ""
"When using the '<literal>x</literal>' and '<literal>t</literal>' characters, "
"you must ensure that the value that you provide is 64 bit. This means that "
"you should use a cast or make use of the <link linkend=\"G-GINT64-CONSTANT:"
"CAPS\"><literal>G_GINT64_CONSTANT</literal></link> or <link linkend=\"G-"
"GUINT64-CONSTANT:CAPS\"><literal>G_GUINT64_CONSTANT</literal></link> macros."
msgstr ""

#: gvariant-varargs.xml:482(para)
msgid ""
"No type promotion occurs when using <link linkend=\"g-variant-get"
"\"><function>g_variant_get()</function></link> since it operates with "
"pointers. The pointers must always point to a memory region of exactly the "
"correct size."
msgstr ""

#: gvariant-varargs.xml:488(title) gvariant-varargs.xml:539(title)
#: gvariant-varargs.xml:587(title) gvariant-varargs.xml:633(title)
#: gvariant-varargs.xml:716(title) gvariant-varargs.xml:789(title)
#: gvariant-varargs.xml:822(title) gvariant-varargs.xml:871(title)
#: gvariant-varargs.xml:922(title)
msgid "Examples"
msgstr ""

#: gvariant-varargs.xml:5(refentrytitle)
msgid "GVariant Format Strings"
msgstr ""

#: gvariant-varargs.xml:512(title)
msgid "Strings"
msgstr ""

#: gvariant-varargs.xml:514(emphasis)
msgid "Characters: <placeholder-1/>, <placeholder-2/>, <placeholder-3/>"
msgstr ""

#: gvariant-varargs.xml:519(para)
msgid ""
"String conversions occur to and from standard nul-terminated C strings. Upon "
"encountering an '<literal>s</literal>', '<literal>o</literal>' or "
"'<literal>g</literal>' in a format string, <link linkend=\"g-variant-new"
"\"><function>g_variant_new()</function></link> takes a <code>(const <link "
"linkend=\"gchar\">gchar</link> *)</code> and makes a copy of it. <link "
"linkend=\"NULL:CAPS\"><literal>NULL</literal></link> is not a valid string. "
"If the '<literal>o</literal>' or '<literal>g</literal>' characters are used, "
"care must be taken to ensure that the passed string is a valid DBus object "
"path or DBus type signature, respectively."
msgstr ""

#: gvariant-varargs.xml:528(para)
msgid ""
"Upon encounting '<literal>s</literal>', '<literal>o</literal>' or "
"'<literal>g</literal>', <link linkend=\"g-variant-get"
"\"><function>g_variant_get()</function></link> takes a pointer to a <code>"
"(<link linkend=\"gchar\">gchar</link> *)</code> (ie: <code>(<link linkend="
"\"gchar\">gchar</link> **)</code>) and sets it to a newly-allocated copy of "
"the string. It is appropriate to free this copy using <link linkend=\"g-free"
"\"><function>g_free()</function></link>. <link linkend=\"NULL:CAPS"
"\"><literal>NULL</literal></link> may also be passed to indicate that the "
"value of the string should be ignored (in which case no copy is made)."
msgstr ""

#: gvariant-varargs.xml:54(para)
msgid "any format string, prefixed with an '<literal>m</literal>'"
msgstr ""

#: gvariant-varargs.xml:562(title)
msgid "Variants"
msgstr ""

#: gvariant-varargs.xml:564(emphasis) gvariant-varargs.xml:605(emphasis)
#: gvariant-varargs.xml:663(emphasis) gvariant-varargs.xml:779(emphasis)
#: gvariant-varargs.xml:812(emphasis) gvariant-varargs.xml:902(emphasis)
#: gvariant-varargs.xml:939(emphasis)
msgid "Characters: <placeholder-1/>"
msgstr ""

#: gvariant-varargs.xml:569(para)
msgid ""
"Upon encountering a '<literal>v</literal>', <link linkend=\"g-variant-new"
"\"><function>g_variant_new()</function></link> takes a <code>(<link linkend="
"\"GVariant\">GVariant</link> *)</code>. The value of the <link linkend="
"\"GVariant\"><type>GVariant</type></link> is used as the contents of the "
"variant value."
msgstr ""

#: gvariant-varargs.xml:575(para)
msgid ""
"Upon encountering a '<literal>v</literal>', <link linkend=\"g-variant-get"
"\"><function>g_variant_get()</function></link> takes a pointer to a <code>"
"(<link linkend=\"GVariant\">GVariant</link> *)</code> (ie: <code>(<link "
"linkend=\"GVariant\">GVariant</link> **) </code>). It is set to a new "
"reference to a <link linkend=\"GVariant\"><type>GVariant</type></link> "
"instance containing the contents of the variant value. It is appropriate to "
"free this reference using <link linkend=\"g-variant-unref"
"\"><function>g_variant_unref()</function></link>. <link linkend=\"NULL:CAPS"
"\"><literal>NULL</literal></link> may also be passed to indicate that the "
"value should be ignored (in which case no new reference is created)."
msgstr ""

#: gvariant-varargs.xml:59(para)
msgid ""
"a sequence of zero or more format strings strings, concatenated and enclosed "
"in parentheses"
msgstr ""

#: gvariant-varargs.xml:603(title)
msgid "Arrays"
msgstr ""

#: gvariant-varargs.xml:610(para)
msgid ""
"Upon encountering an '<literal>a</literal>' character followed by a type "
"string, <link linkend=\"g-variant-new\"><function>g_variant_new()</"
"function></link> will take a <code>(<link linkend=\"GVariantBuilder"
"\">GVariantBuilder</link> *)</code> that has been created as an array "
"builder for an array of the type given in the type string. The builder will "
"have <link linkend=\"g-variant-builder-end\"><function>g_variant_builder_end"
"()</function></link> called on it and the result will be used as the value. "
"As a special exception, if the given type string is a definite type, then "
"<link linkend=\"NULL:CAPS\"><literal>NULL</literal></link> may be given to "
"mean an empty array of that type."
msgstr ""

#: gvariant-varargs.xml:620(para)
msgid ""
"Upon encountering an '<literal>a</literal>' character followed by a type "
"string, <link linkend=\"g-variant-get\"><function>g_variant_get()</"
"function></link> will take a pointer to a <code>(<link linkend=\"GVariantIter"
"\">GVariantIter</link> *)</code> (ie: <code>(<link linkend=\"GVariantIter"
"\">GVariantIter</link> **)</code>). A new heap-allocated iterator is created "
"and returned, initialised for iterating over the elements of the array. This "
"iterator should be freed when you are done with it, using <link linkend=\"g-"
"variant-iter-free\"><function>g_variant_iter_free()</function></link>. <link "
"linkend=\"NULL:CAPS\"><literal>NULL</literal></link> may also be given to "
"indicate that the value of the array should be ignored."
msgstr ""

#: gvariant-varargs.xml:64(para)
msgid ""
"an opening brace, followed by two format strings, followed by a closing "
"brace (subject to the constraint that the first format string correspond to "
"a type valid for use as the key type of a dictionary)"
msgstr ""

#: gvariant-varargs.xml:661(title)
msgid "Maybe Types"
msgstr ""

#: gvariant-varargs.xml:667(para)
msgid ""
"Maybe types are handled in two separate ways depending on the format string "
"that follows the '<literal>m</literal>'. The method that is used currently "
"depends entirely on the character immediately following the '<literal>m</"
"literal>'."
msgstr ""

#: gvariant-varargs.xml:673(para)
msgid ""
"The first way is used with format strings starting with '<literal>s</"
"literal>', '<literal>o</literal>', '<literal>g</literal>', '<literal>v</"
"literal>', '<literal>@</literal>', '<literal>*</literal>', '<literal>?</"
"literal>', '<literal>r</literal>', '<literal>&amp;</literal>', or "
"'<literal>^</literal>'. In all of these cases, for non-maybe types, <link "
"linkend=\"g-variant-new\"><function>g_variant_new()</function></link> takes "
"a pointer to a non-<link linkend=\"NULL:CAPS\"><literal>NULL</literal></"
"link> value and <link linkend=\"g-variant-get\"><function>g_variant_get()</"
"function></link> returns (by reference) a non-<link linkend=\"NULL:CAPS"
"\"><literal>NULL</literal></link> pointer. When any of these format strings "
"are prefixed with an '<literal>m</literal>', the type of arguments that are "
"collected does not change in any way, but <link linkend=\"NULL:CAPS"
"\"><literal>NULL</literal></link> becomes a permissable value, to indicate "
"the Nothing case."
msgstr ""

#: gvariant-varargs.xml:684(para)
msgid ""
"Note that the \"special exception\" introduced in the array section for "
"constructing empty arrays is ignored here. Using a <literal>NULL</literal> "
"pointer with the format string '<literal>mas</literal>' constructs the "
"Nothing value -- not an empty array."
msgstr ""

#: gvariant-varargs.xml:689(para)
msgid ""
"The second way is used with all other format strings. For <link linkend=\"g-"
"variant-new\"><function>g_variant_new()</function></link> an additional "
"<link linkend=\"gboolean\"><type>gboolean</type></link> argument is "
"collected and for <link linkend=\"g-variant-get\"><function>g_variant_get()</"
"function></link> an additional <code>(<link linkend=\"gboolean\">gboolean</"
"link> *)</code>. Following this argument, the arguments that are normally "
"collected for the equivalent non-maybe type will be collected."
msgstr ""

#: gvariant-varargs.xml:697(para)
msgid ""
"If <link linkend=\"FALSE:CAPS\"><literal>FALSE</literal></link> is given to "
"<link linkend=\"g-variant-new\"><function>g_variant_new()</function></link> "
"then the Nothing value is constructed and the collected arguments are "
"ignored. Otherwise (if <link linkend=\"TRUE:CAPS\"><literal>TRUE</literal></"
"link> was given), the arguments are used in the normal way to create the "
"Just value."
msgstr ""

#: gvariant-varargs.xml:703(para)
msgid ""
"If <link linkend=\"NULL:CAPS\"><literal>NULL</literal></link> is given to "
"<link linkend=\"g-variant-get\"><function>g_variant_get()</function></link> "
"then the value is ignored. If a non-<link linkend=\"NULL:CAPS"
"\"><literal>NULL</literal></link> pointer is given then it is used to return "
"by reference whether the value was Just. In the case that the value was "
"Just, the <link linkend=\"gboolean\"><type>gboolean</type></link> will be "
"set to <link linkend=\"TRUE:CAPS\"><literal>TRUE</literal></link> and the "
"value will be stored in the arguments in the usual way. In the case that the "
"value was Nothing, the <link linkend=\"gboolean\"><type>gboolean</type></"
"link> will be set to <link linkend=\"FALSE:CAPS\"><literal>FALSE</literal></"
"link> and the arguments will be collected in the normal way but have their "
"values set to binary zero."
msgstr ""

#: gvariant-varargs.xml:72(title)
msgid "Symbols"
msgstr ""

#: gvariant-varargs.xml:74(para)
msgid ""
"The following table describes the rough meaning of symbols that may appear "
"inside a GVariant format string. Each symbol is described in detail in its "
"own section, including usage examples."
msgstr ""

#: gvariant-varargs.xml:777(title)
msgid "Tuples"
msgstr ""

#: gvariant-varargs.xml:784(para)
msgid ""
"Tuples are handled by handling each item in the tuple, in sequence. Each "
"item is handled in the usual way."
msgstr ""

#: gvariant-varargs.xml:810(title)
msgid "Dictionaries"
msgstr ""

#: gvariant-varargs.xml:817(para)
msgid ""
"Dictionary entries are handled by handling first the key, then the value. "
"Each is handled in the usual way."
msgstr ""

#: gvariant-varargs.xml:835(title)
msgid "GVariant *"
msgstr ""

#: gvariant-varargs.xml:837(emphasis)
msgid ""
"Characters: <placeholder-1/>, <placeholder-2/>, <placeholder-3/>, "
"<placeholder-4/>"
msgstr ""

#: gvariant-varargs.xml:842(para)
msgid ""
"Upon encountering a '<literal>@</literal>' in front of a type string, <link "
"linkend=\"g-variant-new\"><function>g_variant_new()</function></link> takes "
"a non-<link linkend=\"NULL:CAPS\"><literal>NULL</literal></link> pointer to "
"a <link linkend=\"GVariant\"><type>GVariant</type></link> and uses its value "
"directly instead of collecting arguments to create the value. The provided "
"<link linkend=\"GVariant\"><type>GVariant</type></link> must have a type "
"that matches the type string following the '<literal>@</literal>'. "
"'<literal>*</literal>' is the same as '<literal>@*</literal>' (ie: take a "
"<link linkend=\"GVariant\"><type>GVariant</type></link> of any type). "
"'<literal>?</literal>' is the same as '<literal>@?</literal>' (ie: take a "
"<link linkend=\"GVariant\"><type>GVariant</type></link> of any basic type). "
"'<literal>r</literal>' is the same as '<literal>@r</literal>' (ie: take a "
"<link linkend=\"GVariant\"><type>GVariant</type></link> of any tuple type)."
msgstr ""

#: gvariant-varargs.xml:854(para)
msgid ""
"Upon encountering a '<literal>@</literal>' in front of a type string, <link "
"linkend=\"g-variant-get\"><function>g_variant_get()</function></link> takes "
"a pointer to a <code>(<link linkend=\"GVariant\">GVariant</link> *)</code> "
"(ie: a <code>(<link linkend=\"GVariant\">GVariant</link> **)</code>) and "
"sets it to a new reference to a <link linkend=\"GVariant\"><type>GVariant</"
"type></link> containing the value (instead of deconstructing the value into "
"C types in the usual way). <link linkend=\"NULL:CAPS\"><literal>NULL</"
"literal></link> can be given to ignore the value. '<literal>*</literal>', "
"'<literal>?</literal>' and '<literal>r</literal>' are handled in a way "
"analogous to what is stated above."
msgstr ""

#: gvariant-varargs.xml:864(para)
msgid ""
"You can always use '<literal>*</literal>' as an alternative to '<literal>?</"
"literal>', '<literal>r</literal>' or any use of '<literal>@</literal>'. "
"Using the other characters where possible is recommended, however, due to "
"the improvements in type safety and code self-documentation."
msgstr ""

#: gvariant-varargs.xml:88(emphasis)
msgid "Symbol"
msgstr ""

#: gvariant-varargs.xml:9(title)
msgid "Variable Argument Conversions"
msgstr ""

#: gvariant-varargs.xml:900(title)
msgid "Pointers"
msgstr ""

#: gvariant-varargs.xml:907(para)
msgid ""
"The '<code>&amp;</code>' character is used to indicate that serialised data "
"should be directly exchanged via a pointer."
msgstr ""

#: gvariant-varargs.xml:911(para)
msgid ""
"Currently, the only use for this character is when it is applied to a string "
"(ie: '<literal>&amp;s</literal>', '<literal>&amp;o</literal>' or '<code>&amp;"
"g</code>'). For <link linkend=\"g-variant-new\"><function>g_variant_new()</"
"function></link> this has absolutely no effect. The string is collected and "
"duplicated normally. For <link linkend=\"g-variant-get"
"\"><function>g_variant_get()</function></link> it means that instead of "
"creating a newly allocated copy of the string, a pointer to the serialised "
"data is returned. This pointer should not be freed. Validity checks are "
"performed to ensure that the string data will always be properly nul-"
"terminated."
msgstr ""

#: gvariant-varargs.xml:93(emphasis)
msgid "Meaning"
msgstr ""

#: gvariant-varargs.xml:937(title)
msgid "Convenience Conversions"
msgstr ""

#: gvariant-varargs.xml:944(para)
msgid ""
"The '<literal>^</literal>' character currently supports conversion to and "
"from bytestrings or to and from arrays of strings or bytestrings. It has a "
"number of forms."
msgstr ""

#: gvariant-varargs.xml:949(para)
msgid ""
"In all forms, when used with <link linkend=\"g-variant-new"
"\"><function>g_variant_new()</function></link> one pointer value is "
"collected from the variable arguments and passed to a function (as given in "
"the table below). The result of that function is used as the value for this "
"position. When used with <link linkend=\"g-variant-get"
"\"><function>g_variant_get()</function></link> one pointer value is produced "
"by using the function (given in the table) and returned by reference."
msgstr ""

#: gvariant-varargs.xml:967(emphasis)
msgid "Conversion"
msgstr ""

#: gvariant-varargs.xml:972(emphasis)
msgid "Used with <link linkend=\"g-variant-new\"><placeholder-1/></link>"
msgstr ""

#: gvariant-varargs.xml:973(function)
msgid "g_variant_new()"
msgstr ""

#: gvariant-varargs.xml:979(emphasis)
msgid "Used with <link linkend=\"g-variant-get\"><placeholder-1/></link>"
msgstr ""

#: gvariant-varargs.xml:980(function)
msgid "g_variant_get()"
msgstr ""

#: gvariant-varargs.xml:990(literal)
msgid "^as"
msgstr ""

#: gvariant-varargs.xml:995(para)
msgid ""
"equivalent to <link linkend=\"g-variant-new-strv"
"\"><function>g_variant_new_strv()</function></link>"
msgstr ""
