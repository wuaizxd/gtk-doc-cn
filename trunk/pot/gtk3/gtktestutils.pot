# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-04-13 21:49-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"

# used by: gtk_test_widget_send_key:
#: gtktestutils.c:117:1
msgid "@widget: Widget to generate a key press and release on."
msgstr ""

# used by: gtk_test_widget_send_key:
#: gtktestutils.c:118:1
msgid "@keyval: A Gdk keyboard value."
msgstr ""

# #-#-#-#-#  gtktestutils.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gtk_test_widget_send_key:
# #-#-#-#-#  gtktestutils.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gtk_test_widget_click:
#: gtktestutils.c:119:1 gtktestutils.c:154:1
msgid "@modifiers: Keyboard modifiers the event is setup with."
msgstr ""

# #used by: gtk_test_widget_send_key:
#: gtktestutils.c:121:7
msgid ""
"This function will generate keyboard press and release events in the middle "
"of the first GdkWindow found that belongs to @widget. For %GTK_NO_WINDOW "
"widgets like GtkButton, this will often be an input-only event window. For "
"other widgets, this is usually widget->window. Certain caveats should be "
"considered when using this function, in particular because the mouse pointer "
"is warped to the key press location, see gdk_test_simulate_key() for details."
msgstr ""

# #used by: gtk_test_widget_send_key:
#: gtktestutils.c:129:1
msgid ""
"Returns: wether all actions neccessary for the key event simulation were "
"carried out successfully."
msgstr ""

# #-#-#-#-#  gtktestutils.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gtk_test_init:
# #-#-#-#-#  gtktestutils.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gtk_test_widget_send_key:
# #-#-#-#-#  gtktestutils.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gtk_test_widget_click:
# #-#-#-#-#  gtktestutils.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gtk_test_spin_button_click:
# #-#-#-#-#  gtktestutils.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gtk_test_find_label:
# #-#-#-#-#  gtktestutils.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gtk_test_find_sibling:
# #-#-#-#-#  gtktestutils.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gtk_test_find_widget:
# #-#-#-#-#  gtktestutils.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gtk_test_slider_set_perc:
# #-#-#-#-#  gtktestutils.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gtk_test_slider_get_value:
# #-#-#-#-#  gtktestutils.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gtk_test_text_set:
# #-#-#-#-#  gtktestutils.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gtk_test_text_get:
# #-#-#-#-#  gtktestutils.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gtk_test_create_widget:
# #-#-#-#-#  gtktestutils.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gtk_test_display_button_window:
# #-#-#-#-#  gtktestutils.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gtk_test_create_simple_window:
# #-#-#-#-#  gtktestutils.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gtk_test_list_all_types:
# #-#-#-#-#  gtktestutils.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gtk_test_register_all_types:
#: gtktestutils.c:131:1 gtktestutils.c:167:1 gtktestutils.c:198:1
#: gtktestutils.c:236:1 gtktestutils.c:339:1 gtktestutils.c:381:1
#: gtktestutils.c:407:1 gtktestutils.c:439:1 gtktestutils.c:460:1
#: gtktestutils.c:490:1 gtktestutils.c:526:1 gtktestutils.c:584:1
#: gtktestutils.c:59:1 gtktestutils.c:626:1 gtktestutils.c:652:1
#: gtktestutils.c:669:1
msgid "Since: 2.14"
msgstr ""

# used by: gtk_test_widget_click:
#: gtktestutils.c:152:1
msgid "@widget: Widget to generate a button click on."
msgstr ""

# used by: gtk_test_widget_click:
#: gtktestutils.c:153:1
msgid "@button: Number of the pointer button for the event, usually 1, 2 or 3."
msgstr ""

# #used by: gtk_test_widget_click:
#: gtktestutils.c:156:8
msgid ""
"This function will generate a @button click (button press and button release "
"event) in the middle of the first GdkWindow found that belongs to @widget. "
"For %GTK_NO_WINDOW widgets like GtkButton, this will often be an input-only "
"event window. For other widgets, this is usually widget->window. Certain "
"caveats should be considered when using this function, in particular because "
"the mouse pointer is warped to the button click location, see "
"gdk_test_simulate_button() for details."
msgstr ""

# #-#-#-#-#  gtktestutils.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gtk_test_widget_click:
# #-#-#-#-#  gtktestutils.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: gtk_test_spin_button_click:
#: gtktestutils.c:165:1 gtktestutils.c:196:1
msgid ""
"Returns: wether all actions neccessary for the button click simulation were "
"carried out successfully."
msgstr ""

# used by: gtk_test_spin_button_click:
#: gtktestutils.c:188:1
msgid "@spinner: valid GtkSpinButton widget."
msgstr ""

# used by: gtk_test_spin_button_click:
#: gtktestutils.c:189:1
msgid ""
"@button:  Number of the pointer button for the event, usually 1, 2 or 3."
msgstr ""

# used by: gtk_test_spin_button_click:
#: gtktestutils.c:190:1
msgid ""
"@upwards: %TRUE for upwards arrow click, %FALSE for downwards arrow click."
msgstr ""

# #used by: gtk_test_spin_button_click:
#: gtktestutils.c:192:3
msgid ""
"This function will generate a @button click in the upwards or downwards spin "
"button arrow areas, usually leading to an increase or decrease of spin "
"button's value."
msgstr ""

# used by: gtk_test_find_label:
#: gtktestutils.c:223:1
msgid "@widget:        Valid label or container widget."
msgstr ""

# #-#-#-#-#  gtktestutils.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gtk_test_find_label:
# #-#-#-#-#  gtktestutils.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gtk_test_find_widget:
#: gtktestutils.c:224:1 gtktestutils.c:368:1
msgid "@label_pattern: Shell-glob pattern to match a label string."
msgstr ""

# #used by: gtk_test_find_label:
#: gtktestutils.c:226:7
msgid ""
"This function will search @widget and all its descendants for a GtkLabel "
"widget with a text string matching @label_pattern. The @label_pattern may "
"contain asterisks '*' and question marks '?' as placeholders, g_pattern_match"
"() is used for the matching. Note that locales other than |$_1_$|C|$_1_$| "
"tend to alter (translate|$_1_$| label strings, so this function is genrally "
"only useful in test programs with predetermined locales, see gtk_test_init() "
"for more details."
msgstr ""

# #used by: gtk_test_find_label:
#: gtktestutils.c:234:1
msgid "Returns: (transfer none): a GtkLabel widget if any is found."
msgstr ""

# used by: gtk_test_find_sibling:
#: gtktestutils.c:326:1
msgid "@base_widget:        Valid widget, part of a widget hierarchy"
msgstr ""

# used by: gtk_test_find_sibling:
#: gtktestutils.c:327:1
msgid "@widget_type:        Type of a aearched for sibling widget"
msgstr ""

# #used by: gtk_test_find_sibling:
#: gtktestutils.c:329:7
msgid ""
"This function will search siblings of @base_widget and siblings of its "
"ancestors for all widgets matching @widget_type. Of the matching widgets, "
"the one that is geometrically closest to @base_widget will be returned. The "
"general purpose of this function is to find the most likely |$_1_$|action|"
"$_1_$| widget, relative to another labeling widget. Such as finding a button "
"or text entry widget, given its corresponding label widget."
msgstr ""

# #used by: gtk_test_find_sibling:
#: gtktestutils.c:337:1
msgid ""
"Returns: (transfer none): a widget of type @widget_type if any is found."
msgstr ""

# used by: SECTION:gtktesting
#: gtktestutils.c:34:1
msgid "@Short_description: Utilities for testing GTK+ applications"
msgstr ""

# used by: SECTION:gtktesting
#: gtktestutils.c:35:1
msgid "@Title: Testing"
msgstr ""

# used by: gtk_test_find_widget:
#: gtktestutils.c:367:1
msgid "@widget:        Container widget, usually a GtkWindow."
msgstr ""

# used by: gtk_test_find_widget:
#: gtktestutils.c:369:1
msgid "@widget_type:   Type of a aearched for label sibling widget."
msgstr ""

# #used by: gtk_test_find_widget:
#: gtktestutils.c:371:7
msgid ""
"This function will search the descendants of @widget for a widget of type "
"@widget_type that has a label matching @label_pattern next to it. This is "
"most useful for automated GUI testing, e.g. to find the |$_1_$|OK|$_1_$| "
"button in a dialog and synthesize clicks on it. However see "
"gtk_test_find_label(), gtk_test_find_sibling() and gtk_test_widget_click() "
"for possible caveats involving the search of such widgets and synthesizing "
"widget events."
msgstr ""

# #used by: gtk_test_find_widget:
#: gtktestutils.c:379:1
msgid "Returns: (transfer none): a valid widget if any is found or %NULL."
msgstr ""

# #-#-#-#-#  gtktestutils.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gtk_test_slider_set_perc:
# #-#-#-#-#  gtktestutils.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gtk_test_slider_get_value:
# #-#-#-#-#  gtktestutils.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gtk_test_text_set:
# #-#-#-#-#  gtktestutils.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gtk_test_text_get:
#: gtktestutils.c:398:1 gtktestutils.c:429:1 gtktestutils.c:454:1
#: gtktestutils.c:483:1
msgid "@widget:     valid widget pointer."
msgstr ""

# used by: gtk_test_slider_set_perc:
#: gtktestutils.c:399:1
msgid "@percentage: value between 0 and 100."
msgstr ""

# used by: gtk_test_init:
#: gtktestutils.c:40:2
msgid ""
"@argcp: Address of the <parameter>argc</parameter> parameter of the main() "
"function. Changed if any arguments were handled."
msgstr ""

# #used by: gtk_test_slider_set_perc:
#: gtktestutils.c:401:5
msgid ""
"This function will adjust the slider position of all GtkRange based widgets, "
"such as scrollbars or scales, it'll also adjust spin buttons. The adjustment "
"value of these widgets is set to a value between the lower and upper limits, "
"according to the @percentage argument."
msgstr ""

# used by: gtk_test_init:
#: gtktestutils.c:42:4
msgid ""
"@argvp: (inout) (array length=argcp): Address of the <parameter>argv</"
"parameter> parameter of main(). Any parameters understood by g_test_init() "
"or gtk_init() are stripped before return."
msgstr ""

# #used by: gtk_test_slider_get_value:
#: gtktestutils.c:431:5
msgid ""
"Retrive the literal adjustment value for GtkRange based widgets and spin "
"buttons. Note that the value returned by this function is anything between "
"the lower and upper bounds of the adjustment belonging to @widget, and is "
"not a percentage as passed in to gtk_test_slider_set_perc()."
msgstr ""

# #used by: gtk_test_slider_get_value:
#: gtktestutils.c:437:1
msgid ""
"Returns: gtk_adjustment_get_value (adjustment) for an adjustment belonging "
"to @widget."
msgstr ""

# used by: gtk_test_text_set:
#: gtktestutils.c:455:1
msgid "@string:     a 0-terminated C string"
msgstr ""

# #used by: gtk_test_text_set:
#: gtktestutils.c:457:2
msgid ""
"Set the text string of @widget to @string if it is a GtkLabel, GtkEditable "
"(entry and text widgets) or GtkTextView."
msgstr ""

# used by: gtk_test_init:
#: gtktestutils.c:46:1
msgid "@Varargs: currently unused"
msgstr ""

# #used by: gtk_test_init:
#: gtktestutils.c:48:1
msgid "This function is used to initialize a GTK+ test program."
msgstr ""

# #used by: gtk_test_text_get:
#: gtktestutils.c:485:2
msgid ""
"Retrive the text string of @widget if it is a GtkLabel, GtkEditable (entry "
"and text widgets) or GtkTextView."
msgstr ""

# #used by: gtk_test_text_get:
#: gtktestutils.c:488:1
msgid "Returns: new 0-terminated C string, needs to be released with g_free()."
msgstr ""

# #used by: gtk_test_init:
#: gtktestutils.c:50:5
msgid ""
"It will in turn call g_test_init() and gtk_init() to properly initialize the "
"testing framework and graphical toolkit. It'll also set the program's locale "
"to |$_1_$|C|$_1_$| and prevent loading of rc files and Gtk+ modules. This is "
"done to make tets program environments as deterministic as possible."
msgstr ""

# used by: gtk_test_create_widget:
#: gtktestutils.c:514:1
msgid "@widget_type: a valid widget type."
msgstr ""

# used by: gtk_test_create_widget:
#: gtktestutils.c:515:1
msgid ""
"@first_property_name: (allow-none): Name of first property to set or %NULL"
msgstr ""

# used by: gtk_test_create_widget:
#: gtktestutils.c:516:2
msgid ""
"@Varargs: value to set the first property to, followed by more name-value "
"pairs, terminated by %NULL"
msgstr ""

# #used by: gtk_test_create_widget:
#: gtktestutils.c:519:4
msgid ""
"This function wraps g_object_new() for widget types. It'll automatically "
"show all created non window widgets, also g_object_ref_sink() them (to keep "
"them alive across a running test) and set them up for destruction during the "
"next test teardown phase."
msgstr ""

# #used by: gtk_test_create_widget:
#: gtktestutils.c:524:1
msgid "Returns: (transfer none): a newly created widget."
msgstr ""

# #used by: gtk_test_init:
#: gtktestutils.c:56:2
msgid ""
"Like gtk_init() and g_test_init(), any known arguments will be processed and "
"stripped from @argc and @argv."
msgstr ""

# #-#-#-#-#  gtktestutils.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gtk_test_display_button_window:
# #-#-#-#-#  gtktestutils.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gtk_test_create_simple_window:
#: gtktestutils.c:567:1 gtktestutils.c:616:1
msgid "@window_title:       Title of the window to be displayed."
msgstr ""

# #-#-#-#-#  gtktestutils.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gtk_test_display_button_window:
# #-#-#-#-#  gtktestutils.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: gtk_test_create_simple_window:
#: gtktestutils.c:568:1 gtktestutils.c:617:1
msgid "@dialog_text:        Text inside the window to be displayed."
msgstr ""

# used by: gtk_test_display_button_window:
#: gtktestutils.c:569:1
msgid ""
"@...:                %NULL terminated list of (const char *label, int *nump) "
"pairs."
msgstr ""

# #used by: gtk_test_display_button_window:
#: gtktestutils.c:571:10
msgid ""
"Create a window with window title @window_title, text contents @dialog_text, "
"and a number of buttons, according to the paired argument list given as @... "
"parameters. Each button is created with a @label and a ::clicked signal "
"handler that incremrents the integer stored in @nump. The window will be "
"automatically shown with gtk_widget_show_now() after creation, so when this "
"function returns it has already been mapped, resized and positioned on "
"screen. The window will quit any running gtk_main()-loop when destroyed, and "
"it will automatically be destroyed upon test function teardown."
msgstr ""

# #used by: gtk_test_display_button_window:
#: gtktestutils.c:582:1
msgid ""
"Returns: (transfer full): a widget pointer to the newly created GtkWindow."
msgstr ""

# #used by: gtk_test_create_simple_window:
#: gtktestutils.c:619:4
msgid ""
"Create a simple window with window title @window_title and text contents "
"@dialog_text. The window will quit any running gtk_main()-loop when "
"destroyed, and it will automatically be destroyed upon test function "
"teardown."
msgstr ""

# #used by: gtk_test_create_simple_window:
#: gtktestutils.c:624:1
msgid ""
"Returns: (transfer none): a widget pointer to the newly created GtkWindow."
msgstr ""

# used by: gtk_test_list_all_types:
#: gtktestutils.c:645:1
msgid "@n_types: location to store number of types"
msgstr ""

# used by: gtk_test_list_all_types:
#: gtktestutils.c:646:2
msgid ""
"@returns: (array length=n_types zero-terminated=1) (transfer none): 0-"
"terminated array of type ids"
msgstr ""

# #used by: gtk_test_list_all_types:
#: gtktestutils.c:649:2
msgid ""
"Return the type ids that have been registered after calling "
"gtk_test_register_all_types()."
msgstr ""

# #used by: gtk_test_register_all_types:
#: gtktestutils.c:665:3
msgid ""
"Force registration of all core Gtk+ and Gdk object types. This allowes to "
"refer to any of those object types via g_type_from_name() after calling this "
"function."
msgstr ""
