<!-- ##### SECTION Title ##### -->
版本信息

<!-- ##### SECTION Short_Description ##### -->
检查GLib版本信息的变量和函数

<!-- ##### SECTION Long_Description ##### -->
<para>
GLib提供了版本信息，主要在编译脚本中用来做配置检查。通常应用程序不会使用到这些信息。
</para>

<!-- ##### SECTION See_Also ##### -->
<para>

</para>

<!-- ##### SECTION Stability_Level ##### -->


<!-- ##### VARIABLE glib_major_version ##### -->
<para>
GLib主版本号。 
(例如：GLib版本1.2.5中，1表示主版本号。）
</para>

<para>
这个变量存在于GLib库文件中，表示你链接的GLib库的主版本号。注意与宏#GLIB_MAJOR_VERSION的区别，那个宏定义表示包含的GLib头文件的主版本号。
</para>


<!-- ##### VARIABLE glib_minor_version ##### -->
<para>
GLib库的次版本号。
(例如：GLib版本1.2.5中，2表示次版本号。)
</para>

<para>
这个变量存在于GLib库文件中，表示你链接的GLib库的次版本号。注意与宏#GLIB_MINOR_VERSION的区别，那个宏定义表示包含的GLib头文件的次版本号。
</para>


<!-- ##### VARIABLE glib_micro_version ##### -->
<para>
 GLib库的小版本号。                                                                          
(例如：GLib版本1.2.5中，5表示小版本号。)
</para>

<para>
这个变量存在于GLib库文件中，表示你链接的GLib库的小版本号。注意与宏#GLIB_MICRO_VERSION的区别，那个宏定义表示包含的GLib头文件的小版本号。
</para>


<!-- ##### VARIABLE glib_binary_age ##### -->
<para>
This is the binary age passed to <application>libtool</application>. If 
<application>libtool</application> means nothing to you, don't worry 
about it. ;-)
</para>


<!-- ##### VARIABLE glib_interface_age ##### -->
<para>
This is the interface age passed to <application>libtool</application>. If 
<application>libtool</application> means nothing to you, don't worry 
about it. ;-)
</para>


<!-- ##### FUNCTION glib_check_version ##### -->
<para>

</para>

@required_major: 
@required_minor: 
@required_micro: 
@Returns: 


<!-- ##### MACRO GLIB_MAJOR_VERSION ##### -->
<para>
The major version number of the GLib library.
Like #glib_major_version, but from the headers used at
application compile time, rather than from the library linked against
at application run time.
</para>



<!-- ##### MACRO GLIB_MINOR_VERSION ##### -->
<para>
The minor version number of the GLib library.
Like #gtk_minor_version, but from the headers used at
application compile time, rather than from the library linked against
at application run time.
</para>



<!-- ##### MACRO GLIB_MICRO_VERSION ##### -->
<para>
The micro version number of the GLib library.
Like #gtk_micro_version, but from the headers used at
application compile time, rather than from the library linked against
at application run time.
</para>



<!-- ##### MACRO GLIB_CHECK_VERSION ##### -->
<para>
Checks the version of the GLib library.
Returns %TRUE if the version of the GLib header files is the same 
as or newer than the passed-in version.

<example>
<title>Checking the version of the GLib library</title>
<programlisting>
  if (!GLIB_CHECK_VERSION (1, 2, 0))
    g_error ("GLib version 1.2.0 or above is needed");
</programlisting>
</example>
</para>

@major: the major version number.
@minor: the minor version number.
@micro: the micro version number.


