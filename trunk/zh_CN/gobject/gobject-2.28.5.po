# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-04-10 23:28-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"

# used by: SECTION:gbinding
#: gbinding.c:25:1
msgid "@Title: GBinding"
msgstr ""

# used by: SECTION:gbinding
#: gbinding.c:26:1
msgid "@Short_Description: Bind two object properties"
msgstr ""

# #used by: SECTION:gbinding
#: gbinding.c:28:5
msgid ""
"#GBinding is the representation of a binding between a property on a "
"#GObject instance (or source) and another property on another #GObject "
"instance (or target). Whenever the source property changes, the same value "
"is applied to the target property; for instance, the following binding:"
msgstr ""

# #used by: SECTION:gbinding
#: gbinding.c:34:5
msgid ""
"|[ g_object_bind_property (object1, |$_1_$|property-a|$_1_$|, object2, |$_1_"
"$|property-b|$_1_$|, G_BINDING_DEFAULT); ]|"
msgstr ""

# #used by: SECTION:gbinding
#: gbinding.c:40:3
msgid ""
"will cause <emphasis>object2:property-b</emphasis> to be updated every time "
"g_object_set() or the specific accessor changes the value of "
"<emphasis>object1:property-a</emphasis>."
msgstr ""

# #used by: SECTION:gbinding
#: gbinding.c:44:3
msgid ""
"It is possible to create a bidirectional binding between two properties of "
"two #GObject instances, so that if either property changes, the other is "
"updated as well, for instance:"
msgstr ""

# #used by: SECTION:gbinding
#: gbinding.c:48:5
msgid ""
"|[ g_object_bind_property (object1, |$_1_$|property-a|$_1_$|, object2, |$_1_"
"$|property-b|$_1_$|, G_BINDING_BIDIRECTIONAL); ]|"
msgstr ""

# #used by: SECTION:gbinding
#: gbinding.c:54:1
msgid "will keep the two properties in sync."
msgstr ""

# #used by: SECTION:gbinding
#: gbinding.c:56:4
msgid ""
"It is also possible to set a custom transformation function (in both "
"directions, in case of a bidirectional binding) to apply a custom "
"transformation from the source value to the target value before applying it; "
"for instance, the following binding:"
msgstr ""

# #used by: SECTION:gbinding
#: gbinding.c:61:8
msgid ""
"|[ g_object_bind_property_full (adjustment1, |$_1_$|value|$_1_$|, "
"adjustment2, |$_1_$|value|$_1_$|, G_BINDING_BIDIRECTIONAL, "
"celsius_to_fahrenheit, fahrenheit_to_celsius, NULL, NULL); ]|"
msgstr ""

# #used by: SECTION:gbinding
#: gbinding.c:70:9
msgid ""
"will keep the <emphasis>value</emphasis> property of the two adjustments in "
"sync; the <function>celsius_to_fahrenheit</function> function will be called "
"whenever the <emphasis>adjustment1:value</emphasis> property changes and "
"will transform the current value of the property before applying it to the "
"<emphasis>adjustment2:value</emphasis> property; vice versa, the "
"<function>fahrenheit_to_celsius</function> function will be called whenever "
"the <emphasis>adjustment2:value</emphasis> property changes, and will "
"transform the current value of the property before applying it to the "
"<emphasis>adjustment1:value</emphasis>."
msgstr ""

# #used by: SECTION:gbinding
#: gbinding.c:80:1
msgid "Note that #GBinding does not resolve cycles by itself; a cycle like"
msgstr ""

# #used by: SECTION:gbinding
#: gbinding.c:82:5
msgid ""
"|[ object1:propertyA -> object2:propertyB object2:propertyB -> object3:"
"propertyC object3:propertyC -> object1:propertyA ]|"
msgstr ""

# #used by: SECTION:gbinding
#: gbinding.c:88:6
msgid ""
"might lead to an infinite loop. The loop, in this particular case, can be "
"avoided if the objects emit the #GObject::notify signal only if the value "
"has effectively been changed. A binding is implemented using the #GObject::"
"notify signal, so it is susceptible to all the various ways of blocking a "
"signal emission, like g_signal_stop_emission() or g_signal_handler_block()."
msgstr ""

# #used by: SECTION:gbinding
#: gbinding.c:95:3
msgid ""
"A binding will be severed, and the resources it allocates freed, whenever "
"either one of the #GObject instances it refers to are finalized, or when the "
"#GBinding instance loses its last reference."
msgstr ""

# #used by: SECTION:gbinding
#: gbinding.c:99:1
msgid "#GBinding is available since GObject 2.26"
msgstr ""

# #used by: GBinding:source:
#: gbinding.c:598:1
msgid "The #GObject that should be used as the source of the binding"
msgstr ""

# #-#-#-#-#  gbinding.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: GBinding:source:
# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: GBinding:target:
# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: GBinding:source-property:
# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: GBinding:target-property:
# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: GBinding:flags:
# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_binding_get_flags:
# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_binding_get_source:
# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_binding_get_target:
# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_binding_get_source_property:
# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_binding_get_target_property:
# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_object_bind_property_full:
# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_object_bind_property:
# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_object_bind_property_with_closures:
# #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_cclosure_marshal_VOID__VARIANT:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_cclosure_marshal_BOOLEAN__OBJECT_BOXED_BOXED:
# #-#-#-#-#  gobject.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_object_class_install_properties:
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_object_notify_by_pspec:
# #-#-#-#-#  gparamspecs.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_variant: (skip)
# #-#-#-#-#  gvaluetypes.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_value_set_variant:
# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_value_take_variant:
# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_value_get_variant:
# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_value_dup_variant:
#: gbinding.c:600:1 gbinding.c:615:1 gbinding.c:631:1 gbinding.c:647:1
#: gbinding.c:662:1 gbinding.c:688:1 gbinding.c:706:1 gbinding.c:724:1
#: gbinding.c:743:1 gbinding.c:762:1 gbinding.c:816:1 gbinding.c:997:1
#: gbinding.c:1148:1 gclosure.c:1190:1 gclosure.c:1253:1 gobject.c:527:1
#: gobject.c:1072:1 gparamspecs.c:2491:1 gvaluetypes.c:1179:1
#: gvaluetypes.c:1220:1 gvaluetypes.c:1247:1 gvaluetypes.c:1266:1
msgid "Since: 2.26"
msgstr ""

# #used by: GBinding:target:
#: gbinding.c:613:1
msgid "The #GObject that should be used as the target of the binding"
msgstr ""

# #used by: GBinding:source-property:
#: gbinding.c:628:2
msgid ""
"The name of the property of #GBinding:source that should be used as the "
"source of the binding"
msgstr ""

# #used by: GBinding:target-property:
#: gbinding.c:644:2
msgid ""
"The name of the property of #GBinding:target that should be used as the "
"target of the binding"
msgstr ""

# #used by: GBinding:flags:
#: gbinding.c:660:1
msgid "Flags to be used to control the #GBinding"
msgstr ""

# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_binding_get_flags:
# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_binding_get_source:
# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_binding_get_target:
# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_binding_get_source_property:
# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_binding_get_target_property:
#: gbinding.c:682:1 gbinding.c:700:1 gbinding.c:718:1 gbinding.c:736:1
#: gbinding.c:755:1
msgid "@binding: a #GBinding"
msgstr ""

# #used by: g_binding_get_flags:
#: gbinding.c:684:1
msgid "Retrieves the flags passed when constructing the #GBinding"
msgstr ""

# #used by: g_binding_get_flags:
#: gbinding.c:686:1
msgid "Return value: the #GBindingFlags used by the #GBinding"
msgstr ""

# #used by: g_binding_get_source:
#: gbinding.c:702:1
msgid "Retrieves the #GObject instance used as the source of the binding"
msgstr ""

# #used by: g_binding_get_source:
#: gbinding.c:704:1
msgid "Return value: (transfer none): the source #GObject"
msgstr ""

# #used by: g_binding_get_target:
#: gbinding.c:720:1
msgid "Retrieves the #GObject instance used as the target of the binding"
msgstr ""

# #used by: g_binding_get_target:
#: gbinding.c:722:1
msgid "Return value: (transfer none): the target #GObject"
msgstr ""

# #used by: g_binding_get_source_property:
#: gbinding.c:738:2
msgid ""
"Retrieves the name of the property of #GBinding:source used as the source of "
"the binding"
msgstr ""

# #used by: g_binding_get_source_property:
#: gbinding.c:741:1
msgid "Return value: the name of the source property"
msgstr ""

# #used by: g_binding_get_target_property:
#: gbinding.c:757:2
msgid ""
"Retrieves the name of the property of #GBinding:target used as the target of "
"the binding"
msgstr ""

# #used by: g_binding_get_target_property:
#: gbinding.c:760:1
msgid "Return value: the name of the target property"
msgstr ""

# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_bind_property_full:
# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_bind_property:
# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_bind_property_with_closures:
#: gbinding.c:774:1 gbinding.c:964:1 gbinding.c:1124:1
msgid "@source: the source #GObject"
msgstr ""

# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_bind_property_full:
# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_bind_property:
# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_bind_property_with_closures:
#: gbinding.c:775:1 gbinding.c:965:1 gbinding.c:1125:1
msgid "@source_property: the property on @source to bind"
msgstr ""

# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_bind_property_full:
# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_bind_property:
# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_bind_property_with_closures:
#: gbinding.c:776:1 gbinding.c:966:1 gbinding.c:1126:1
msgid "@target: the target #GObject"
msgstr ""

# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_bind_property_full:
# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_bind_property:
# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_bind_property_with_closures:
#: gbinding.c:777:1 gbinding.c:967:1 gbinding.c:1127:1
msgid "@target_property: the property on @target to bind"
msgstr ""

# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_bind_property_full:
# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_bind_property:
# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_bind_property_with_closures:
#: gbinding.c:778:1 gbinding.c:968:1 gbinding.c:1128:1
msgid "@flags: flags to pass to #GBinding"
msgstr ""

# used by: g_object_bind_property_full:
#: gbinding.c:779:2
msgid ""
"@transform_to: (scope notified) (allow-none): the transformation function "
"from the @source to the @target, or %NULL to use the default"
msgstr ""

# used by: g_object_bind_property_full:
#: gbinding.c:781:2
msgid ""
"@transform_from: (scope notified) (allow-none): the transformation function "
"from the @target to the @source, or %NULL to use the default"
msgstr ""

# used by: g_object_bind_property_full:
#: gbinding.c:783:2
msgid ""
"@user_data: custom data to be passed to the transformation functions, or "
"%NULL"
msgstr ""

# used by: g_object_bind_property_full:
#: gbinding.c:785:2
msgid ""
"@notify: function to be called when disposing the binding, to free the "
"resources used by the transformation functions"
msgstr ""

# #used by: g_object_bind_property_full:
#: gbinding.c:788:1
msgid "Complete version of g_object_bind_property()."
msgstr ""

# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_object_bind_property_full:
# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_object_bind_property_with_closures:
#: gbinding.c:790:3 gbinding.c:1134:3
msgid ""
"Creates a binding between @source_property on @source and @target_property "
"on @target, allowing you to set the transformation functions to be used by "
"the binding."
msgstr ""

# #used by: g_object_bind_property_full:
#: gbinding.c:794:4
msgid ""
"If @flags contains %G_BINDING_BIDIRECTIONAL then the binding will be mutual: "
"if @target_property on @target changes then the @source_property on @source "
"will be updated as well. The @transform_from function is only used in case "
"of bidirectional bindings, otherwise it will be ignored"
msgstr ""

# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_object_bind_property_full:
# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_object_bind_property:
#: gbinding.c:799:4 gbinding.c:986:4
msgid ""
"The binding will automatically be removed when either the @source or the "
"@target instances are finalized. To remove the binding without affecting the "
"@source and the @target you can just call g_object_unref() on the returned "
"#GBinding instance."
msgstr ""

# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_object_bind_property_full:
# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_object_bind_property:
#: gbinding.c:804:1 gbinding.c:991:1
msgid "A #GObject can have multiple bindings."
msgstr ""

# #used by: g_object_bind_property_full:
#: gbinding.c:806:5
msgid ""
"<note>The same @user_data parameter will be used for both @transform_to and "
"@transform_from transformation functions; the @notify function will be "
"called once, when the binding is removed. If you need different data for "
"each transformation function, please use g_object_bind_property_with_closures"
"() instead.</note>"
msgstr ""

# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_object_bind_property_full:
# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_object_bind_property:
# #-#-#-#-#  gbinding.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_object_bind_property_with_closures:
#: gbinding.c:812:3 gbinding.c:993:3 gbinding.c:1144:3
msgid ""
"Return value: (transfer none): the #GBinding instance representing the "
"binding between the two #GObject instances. The binding is released whenever "
"the #GBinding reference count reaches zero."
msgstr ""

# #used by: g_object_bind_property:
#: gbinding.c:970:3
msgid ""
"Creates a binding between @source_property on @source and @target_property "
"on @target. Whenever the @source_property is changed the @target_property is "
"updated using the same value. For instance:"
msgstr ""

# #used by: g_object_bind_property:
#: gbinding.c:974:3
msgid ""
"|[ g_object_bind_property (action, |$_1_$|active|$_1_$|, widget, |$_1_$|"
"sensitive|$_1_$|, 0); ]|"
msgstr ""

# #used by: g_object_bind_property:
#: gbinding.c:978:3
msgid ""
"Will result in the |$_1_$|sensitive|$_1_$| property of the widget #GObject "
"instance to be updated with the same value of the |$_1_$|active|$_1_$| "
"property of the action #GObject instance."
msgstr ""

# #used by: g_object_bind_property:
#: gbinding.c:982:3
msgid ""
"If @flags contains %G_BINDING_BIDIRECTIONAL then the binding will be mutual: "
"if @target_property on @target changes then the @source_property on @source "
"will be updated as well."
msgstr ""

# used by: g_object_bind_property_with_closures:
#: gbinding.c:1129:2
msgid ""
"@transform_to: a #GClosure wrapping the transformation function from the "
"@source to the @target, or %NULL to use the default"
msgstr ""

# used by: g_object_bind_property_with_closures:
#: gbinding.c:1131:2
msgid ""
"@transform_from: a #GClosure wrapping the transformation function from the "
"@target to the @source, or %NULL to use the default"
msgstr ""

# #used by: g_object_bind_property_with_closures:
#: gbinding.c:1138:3
msgid ""
"This function is the language bindings friendly version of "
"g_object_bind_property_full(), using #GClosure<!-- -->s instead of function "
"pointers."
msgstr ""

# #used by: g_object_bind_property_with_closures:
#: gbinding.c:1142:1
msgid "Rename to: g_object_bind_property_full"
msgstr ""

# used by: SECTION:gboxed
#: gboxed.c:34:2
msgid ""
"@short_description: A mechanism to wrap opaque C structures registered by "
"the type system"
msgstr ""

# used by: SECTION:gboxed
#: gboxed.c:36:1
msgid "@see_also: #GParamSpecBoxed, g_param_spec_boxed()"
msgstr ""

# used by: SECTION:gboxed
#: gboxed.c:37:1
msgid "@title: Boxed Types"
msgstr ""

# #used by: SECTION:gboxed
#: gboxed.c:39:3
msgid ""
"GBoxed is a generic wrapper mechanism for arbitrary C structures. The only "
"thing the type system needs to know about the structures is how to copy and "
"free them, beyond that they are treated as opaque chunks of memory."
msgstr ""

# #used by: SECTION:gboxed
#: gboxed.c:43:3
msgid ""
"Boxed types are useful for simple value-holder structures like rectangles or "
"points. They can also be used for wrapping structures defined in non-GObject "
"based libraries."
msgstr ""

# #used by: g_variant_get_gtype:
#: gboxed.c:167:2
msgid "Since: 2.24 Deprecated: 2.26"
msgstr ""

# used by: g_boxed_type_register_static:
#: gboxed.c:250:1
msgid "@name: Name of the new boxed type."
msgstr ""

# used by: g_boxed_type_register_static:
#: gboxed.c:251:1
msgid "@boxed_copy: Boxed structure copy function."
msgstr ""

# used by: g_boxed_type_register_static:
#: gboxed.c:252:1
msgid "@boxed_free: Boxed structure free function."
msgstr ""

# #used by: g_boxed_type_register_static:
#: gboxed.c:254:3
msgid ""
"This function creates a new %G_TYPE_BOXED derived type id for a new boxed "
"type with name @name. Boxed type handling functions have to be provided to "
"copy and free opaque boxed structures of this type."
msgstr ""

# #used by: g_boxed_type_register_static:
#: gboxed.c:258:1
msgid "Returns: New %G_TYPE_BOXED derived type id for @name."
msgstr ""

# used by: g_boxed_copy:
#: gboxed.c:305:1
msgid "@boxed_type: The type of @src_boxed."
msgstr ""

# used by: g_boxed_copy:
#: gboxed.c:306:1
msgid "@src_boxed: The boxed structure to be copied."
msgstr ""

# #used by: g_boxed_copy:
#: gboxed.c:308:1
msgid ""
"Provide a copy of a boxed structure @src_boxed which is of type @boxed_type."
msgstr ""

# #used by: g_boxed_copy:
#: gboxed.c:310:1
msgid "Returns: The newly created copy of the boxed structure."
msgstr ""

# used by: g_boxed_free:
#: gboxed.c:366:1
msgid "@boxed_type: The type of @boxed."
msgstr ""

# used by: g_boxed_free:
#: gboxed.c:367:1
msgid "@boxed: The boxed structure to be freed."
msgstr ""

# #used by: g_boxed_free:
#: gboxed.c:369:1
msgid "Free the boxed structure @boxed which is of type @boxed_type."
msgstr ""

# #-#-#-#-#  gboxed.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_get_boxed:
# #-#-#-#-#  gboxed.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_dup_boxed: (skip)
# #-#-#-#-#  gboxed.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_set_boxed:
# #-#-#-#-#  gboxed.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_set_static_boxed:
# #-#-#-#-#  gboxed.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_set_boxed_take_ownership:
# #-#-#-#-#  gboxed.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_take_boxed:
#: gboxed.c:401:1 gboxed.c:418:1 gboxed.c:461:1 gboxed.c:478:1 gboxed.c:497:1
#: gboxed.c:513:1
msgid "@value: a valid #GValue of %G_TYPE_BOXED derived type"
msgstr ""

# #used by: g_value_get_boxed:
#: gboxed.c:403:1
msgid "Get the contents of a %G_TYPE_BOXED derived #GValue."
msgstr ""

# #used by: g_value_get_boxed:
#: gboxed.c:405:1
msgid "Returns: (transfer none): boxed contents of @value"
msgstr ""

# #used by: g_value_dup_boxed: (skip)
#: gboxed.c:420:4
msgid ""
"Get the contents of a %G_TYPE_BOXED derived #GValue.  Upon getting, the "
"boxed value is duplicated and needs to be later freed with g_boxed_free(), e."
"g. like: g_boxed_free (G_VALUE_TYPE (@value), return_value);"
msgstr ""

# #used by: g_value_dup_boxed: (skip)
#: gboxed.c:425:1
msgid "Returns: boxed contents of @value"
msgstr ""

# used by: g_value_set_boxed:
#: gboxed.c:462:1
msgid "@v_boxed: boxed value to be set"
msgstr ""

# #used by: g_value_set_boxed:
#: gboxed.c:464:1
msgid "Set the contents of a %G_TYPE_BOXED derived #GValue to @v_boxed."
msgstr ""

# used by: g_value_set_static_boxed:
#: gboxed.c:479:1
msgid "@v_boxed: static boxed value to be set"
msgstr ""

# #used by: g_value_set_static_boxed:
#: gboxed.c:481:3
msgid ""
"Set the contents of a %G_TYPE_BOXED derived #GValue to @v_boxed. The boxed "
"value is assumed to be static, and is thus not duplicated when setting the "
"#GValue."
msgstr ""

# #-#-#-#-#  gboxed.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_set_boxed_take_ownership:
# #-#-#-#-#  gboxed.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_take_boxed:
#: gboxed.c:498:1 gboxed.c:514:1
msgid "@v_boxed: duplicated unowned boxed value to be set"
msgstr ""

# #-#-#-#-#  gboxed.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_value_set_boxed_take_ownership:
# #-#-#-#-#  gobject.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_value_set_object_take_ownership: (skip)
# #-#-#-#-#  gparam.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_value_set_param_take_ownership: (skip)
# #-#-#-#-#  gvaluetypes.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_value_set_string_take_ownership:
# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_value_take_variant:
#: gboxed.c:500:1 gobject.c:3149:1 gparam.c:1439:1 gvaluetypes.c:1035:1
#: gvaluetypes.c:1218:1
msgid "This is an internal function introduced mainly for C marshallers."
msgstr ""

# #used by: g_value_set_boxed_take_ownership:
#: gboxed.c:502:1
msgid "Deprecated: 2.4: Use g_value_take_boxed() instead."
msgstr ""

# #used by: g_value_take_boxed:
#: gboxed.c:516:3
msgid ""
"Sets the contents of a %G_TYPE_BOXED derived #GValue to @v_boxed and takes "
"over the ownership of the callers reference to @v_boxed; the caller doesn't "
"have to unref it any more."
msgstr ""

# #-#-#-#-#  gboxed.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_value_take_boxed:
# #-#-#-#-#  gobject.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_object_interface_install_property:
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_object_interface_find_property:
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_object_class_override_property:
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_object_interface_list_properties:
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_value_take_object: (skip)
# #-#-#-#-#  gparam.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_get_redirect_target:
# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_value_take_param: (skip)
# #-#-#-#-#  gparamspecs.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_override: (skip)
# #-#-#-#-#  gsignal.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_accumulator_true_handled:
# #-#-#-#-#  gtype.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_type_add_interface_check: (skip)
# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_type_remove_interface_check: (skip)
# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_type_default_interface_ref:
# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_type_default_interface_peek:
# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_type_default_interface_unref:
# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_type_class_add_private:
# #-#-#-#-#  gvaluetypes.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_value_take_string:
#: gboxed.c:520:1 gobject.c:601:1 gobject.c:665:1 gobject.c:712:1
#: gobject.c:804:1 gobject.c:3173:1 gparam.c:557:1 gparam.c:1459:1
#: gparamspecs.c:2438:1 gsignal.c:3422:1 gtype.c:2517:1 gtype.c:2543:1
#: gtype.c:3168:1 gtype.c:3218:1 gtype.c:3252:1 gtype.c:4452:1
#: gvaluetypes.c:1053:1
msgid "Since: 2.4"
msgstr ""

# used by: SECTION:gclosure
#: gclosure.c:35:1
msgid "@short_description: Functions as first-class objects"
msgstr ""

# used by: SECTION:gclosure
#: gclosure.c:36:1
msgid "@title: Closures"
msgstr ""

# #used by: SECTION:gclosure
#: gclosure.c:38:6
msgid ""
"A #GClosure represents a callback supplied by the programmer. It will "
"generally comprise a function of some kind and a marshaller used to call it. "
"It is the reponsibility of the marshaller to convert the arguments for the "
"invocation from #GValue<!-- -->s into a suitable form, perform the callback "
"on the converted arguments, and transform the return value back into a "
"#GValue."
msgstr ""

# #used by: SECTION:gclosure
#: gclosure.c:45:7
msgid ""
"In the case of C programs, a closure usually just holds a pointer to a "
"function and maybe a data argument, and the marshaller converts between "
"#GValue<!-- --> and native C types. The GObject library provides the "
"#GCClosure type for this purpose. Bindings for other languages need "
"marshallers which convert between #GValue<!-- -->s and suitable "
"representations in the runtime of the language in order to use functions "
"written in that languages as callbacks."
msgstr ""

# #used by: SECTION:gclosure
#: gclosure.c:53:13
msgid ""
"Within GObject, closures play an important role in the implementation of "
"signals. When a signal is registered, the @c_marshaller argument to "
"g_signal_new() specifies the default C marshaller for any closure which is "
"connected to this signal. GObject provides a number of C marshallers for "
"this purpose, see the g_cclosure_marshal_*() functions. Additional C "
"marshallers can be generated with the <link linkend=|$_1_$|glib-genmarshal|"
"$_1_$|>glib-genmarshal</link> utility.  Closures can be explicitly connected "
"to signals with g_signal_connect_closure(), but it usually more convenient "
"to let GObject create a closure automatically by using one of the "
"g_signal_connect_*() functions which take a callback function/user data pair."
msgstr ""

# #used by: SECTION:gclosure
#: gclosure.c:67:18
msgid ""
"Using closures has a number of important advantages over a simple callback "
"function/data pointer combination: <itemizedlist> <listitem><para> Closures "
"allow the callee to get the types of the callback parameters, which means "
"that language bindings don't have to write individual glue for each callback "
"type. </para></listitem> <listitem><para> The reference counting of "
"#GClosure makes it easy to handle reentrancy right; if a callback is removed "
"while it is being invoked, the closure and its parameters won't be freed "
"until the invocation finishes. </para></listitem> <listitem><para> "
"g_closure_invalidate() and invalidation notifiers allow callbacks to be "
"automatically removed when the objects they point to go away. </para></"
"listitem> </itemizedlist>"
msgstr ""

# #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_closure_new_simple:
# #-#-#-#-#  gobject.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_closure_new_object:
#: gclosure.c:148:2 gobject.c:3409:2
msgid ""
"@sizeof_closure: the size of the structure to allocate, must be at least "
"<literal>sizeof (GClosure)</literal>"
msgstr ""

# used by: g_closure_new_simple:
#: gclosure.c:150:1
msgid ""
"@data: data to store in the @data field of the newly allocated #GClosure"
msgstr ""

# #used by: g_closure_new_simple:
#: gclosure.c:152:3
msgid ""
"Allocates a struct of the given size and initializes the initial part as a "
"#GClosure. This function is mainly useful when implementing new types of "
"closures."
msgstr ""

# #used by: g_closure_new_simple:
#: gclosure.c:156:7
msgid ""
"|[ typedef struct _MyClosure MyClosure; struct _MyClosure { GClosure "
"closure; // extra data goes here };"
msgstr ""

# #used by: g_closure_new_simple:
#: gclosure.c:164:5
msgid ""
"static void my_closure_finalize (gpointer  notify_data, GClosure *closure) "
"{ MyClosure *my_closure = (MyClosure *)closure;"
msgstr ""

# #used by: g_closure_new_simple:
#: gclosure.c:170:2
msgid "// free extra data here }"
msgstr ""

# #used by: g_closure_new_simple:
#: gclosure.c:173:4
msgid ""
"MyClosure *my_closure_new (gpointer data) { GClosure *closure; MyClosure "
"*my_closure;"
msgstr ""

# #used by: g_closure_new_simple:
#: gclosure.c:178:2
msgid ""
"closure = g_closure_new_simple (sizeof (MyClosure), data); my_closure = "
"(MyClosure *) closure;"
msgstr ""

# #used by: g_closure_new_simple:
#: gclosure.c:181:1
msgid "// initialize extra data here"
msgstr ""

# #used by: g_closure_new_simple:
#: gclosure.c:183:5
msgid ""
"g_closure_add_finalize_notifier (closure, notify_data, my_closure_finalize); "
"return my_closure; } ]|"
msgstr ""

# #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_closure_new_simple:
# #-#-#-#-#  gobject.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_closure_new_object:
#: gclosure.c:189:1 gobject.c:3419:1
msgid "Returns: (transfer full): a newly allocated #GClosure"
msgstr ""

# #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_closure_set_meta_marshal: (skip)
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_closure_add_marshal_guards: (skip)
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_closure_add_finalize_notifier: (skip)
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_closure_add_invalidate_notifier: (skip)
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_closure_remove_invalidate_notifier: (skip)
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_closure_remove_finalize_notifier: (skip)
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_closure_invoke:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_closure_set_marshal: (skip)
# #-#-#-#-#  gsourceclosure.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_source_set_closure:
#: gclosure.c:297:1 gclosure.c:347:1 gclosure.c:405:1 gclosure.c:441:1
#: gclosure.c:669:1 gclosure.c:697:1 gclosure.c:725:1 gclosure.c:781:1
#: gsourceclosure.c:151:1
msgid "@closure: a #GClosure"
msgstr ""

# used by: g_closure_set_meta_marshal: (skip)
#: gclosure.c:298:1
msgid "@marshal_data: context-dependent data to pass to @meta_marshal"
msgstr ""

# used by: g_closure_set_meta_marshal: (skip)
#: gclosure.c:299:1
msgid "@meta_marshal: a #GClosureMarshal function"
msgstr ""

# #used by: g_closure_set_meta_marshal: (skip)
#: gclosure.c:301:9
msgid ""
"Sets the meta marshaller of @closure.  A meta marshaller wraps @closure-"
">marshal and modifies the way it is called in some fashion. The most common "
"use of this facility is for C callbacks. The same marshallers (generated by "
"<link linkend=|$_1_$|glib-genmarshal|$_1_$|>glib-genmarshal</link>) are used "
"everywhere, but the way that we get the callback function differs. In most "
"cases we want to use @closure->callback, but in other cases we want to use "
"some different technique to retrieve the callback function."
msgstr ""

# #used by: g_closure_set_meta_marshal: (skip)
#: gclosure.c:311:5
msgid ""
"For example, class closures for signals (see g_signal_type_cclosure_new()) "
"retrieve the callback function from a fixed offset in the class structure.  "
"The meta marshaller retrieves the right callback and passes it to the "
"marshaller as the @marshal_data argument."
msgstr ""

# used by: g_closure_add_marshal_guards: (skip)
#: gclosure.c:348:1
msgid "@pre_marshal_data: data to pass to @pre_marshal_notify"
msgstr ""

# used by: g_closure_add_marshal_guards: (skip)
#: gclosure.c:349:1
msgid "@pre_marshal_notify: a function to call before the closure callback"
msgstr ""

# used by: g_closure_add_marshal_guards: (skip)
#: gclosure.c:350:1
msgid "@post_marshal_data: data to pass to @post_marshal_notify"
msgstr ""

# used by: g_closure_add_marshal_guards: (skip)
#: gclosure.c:351:1
msgid "@post_marshal_notify: a function to call after the closure callback"
msgstr ""

# #used by: g_closure_add_marshal_guards: (skip)
#: gclosure.c:353:4
msgid ""
"Adds a pair of notifiers which get invoked before and after the closure "
"callback, respectively. This is typically used to protect the extra "
"arguments for the duration of the callback. See g_object_watch_closure() for "
"an example of marshal guards."
msgstr ""

# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_closure_add_finalize_notifier: (skip)
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_closure_add_invalidate_notifier: (skip)
#: gclosure.c:406:1 gclosure.c:442:1
msgid "@notify_data: data to pass to @notify_func"
msgstr ""

# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_closure_add_finalize_notifier: (skip)
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_closure_add_invalidate_notifier: (skip)
#: gclosure.c:407:1 gclosure.c:443:1
msgid "@notify_func: the callback function to register"
msgstr ""

# #used by: g_closure_add_finalize_notifier: (skip)
#: gclosure.c:409:6
msgid ""
"Registers a finalization notifier which will be called when the reference "
"count of @closure goes down to 0. Multiple finalization notifiers on a "
"single closure are invoked in unspecified order. If a single call to "
"g_closure_unref() results in the closure being both invalidated and "
"finalized, then the invalidate notifiers will be run before the finalize "
"notifiers."
msgstr ""

# #used by: g_closure_add_invalidate_notifier: (skip)
#: gclosure.c:445:4
msgid ""
"Registers an invalidation notifier which will be called when the @closure is "
"invalidated with g_closure_invalidate(). Invalidation notifiers are invoked "
"before finalization notifiers, in an unspecified order."
msgstr ""

# used by: g_closure_ref:
#: gclosure.c:515:1
msgid "@closure: #GClosure to increment the reference count on"
msgstr ""

# #used by: g_closure_ref:
#: gclosure.c:517:2
msgid ""
"Increments the reference count on a closure to force it staying alive while "
"the caller holds a pointer to it."
msgstr ""

# #used by: g_closure_ref:
#: gclosure.c:520:1
msgid "Returns: (transfer none): The @closure passed in, for convenience"
msgstr ""

# used by: g_closure_invalidate:
#: gclosure.c:538:1
msgid "@closure: GClosure to invalidate"
msgstr ""

# #used by: g_closure_invalidate:
#: gclosure.c:540:9
msgid ""
"Sets a flag on the closure to indicate that its calling environment has "
"become invalid, and thus causes any future invocations of g_closure_invoke() "
"on this @closure to be ignored. Also, invalidation notifiers installed on "
"the closure will be called at this point. Note that unless you are holding a "
"reference to the closure yourself, the invalidation notifiers may unref the "
"closure and cause it to be destroyed, so if you need to access the closure "
"after calling g_closure_invalidate(), make sure that you've previously "
"called g_closure_ref()."
msgstr ""

# #used by: g_closure_invalidate:
#: gclosure.c:550:3
msgid ""
"Note that g_closure_invalidate() will also be called when the reference "
"count of a closure drops to zero (unless it has already been invalidated "
"before)."
msgstr ""

# used by: g_closure_unref:
#: gclosure.c:573:1
msgid "@closure: #GClosure to decrement the reference count on"
msgstr ""

# #used by: g_closure_unref:
#: gclosure.c:575:3
msgid ""
"Decrements the reference count of a closure after it was previously "
"incremented by the same caller. If no other callers are using the closure, "
"then the closure will be destroyed and freed."
msgstr ""

# used by: g_closure_sink:
#: gclosure.c:602:2
msgid ""
"@closure: #GClosure to decrement the initial reference count on, if it's "
"still being held"
msgstr ""

# #used by: g_closure_sink:
#: gclosure.c:605:18
msgid ""
"Takes over the initial ownership of a closure.  Each closure is initially "
"created in a <firstterm>floating</firstterm> state, which means that the "
"initial reference count is not owned by any caller. g_closure_sink() checks "
"to see if the object is still floating, and if so, unsets the floating state "
"and decreases the reference count. If the closure is not floating, "
"g_closure_sink() does nothing. The reason for the existance of the floating "
"state is to prevent cumbersome code sequences like: |[ closure = "
"g_cclosure_new (cb_func, cb_data); g_source_set_closure (source, closure); "
"g_closure_unref (closure); // XXX GObject doesn't really need this ]| "
"Because g_source_set_closure() (and similar functions) take ownership of the "
"initial reference count, if it is unowned, we instead can write: |"
"[ g_source_set_closure (source, g_cclosure_new (cb_func, cb_data)); ]|"
msgstr ""

# #used by: g_closure_sink:
#: gclosure.c:624:17
msgid ""
"Generally, this function is used together with g_closure_ref(). Ane example "
"of storing a closure for later notification looks like: |[ static GClosure "
"*notify_closure = NULL; void foo_notify_set_closure (GClosure *closure) { if "
"(notify_closure) g_closure_unref (notify_closure); notify_closure = closure; "
"if (notify_closure) { g_closure_ref (notify_closure); g_closure_sink "
"(notify_closure); } } ]|"
msgstr ""

# #used by: g_closure_sink:
#: gclosure.c:642:3
msgid ""
"Because g_closure_sink() may decrement the reference count of a closure (if "
"it hasn't been called on @closure yet) just like g_closure_unref(), "
"g_closure_ref() should be called prior to this function."
msgstr ""

# used by: g_closure_remove_invalidate_notifier: (skip)
#: gclosure.c:670:2
msgid ""
"@notify_data: data which was passed to g_closure_add_invalidate_notifier() "
"when registering @notify_func"
msgstr ""

# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_closure_remove_invalidate_notifier: (skip)
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_closure_remove_finalize_notifier: (skip)
#: gclosure.c:672:1 gclosure.c:700:1
msgid "@notify_func: the callback function to remove"
msgstr ""

# #used by: g_closure_remove_invalidate_notifier: (skip)
#: gclosure.c:674:1
msgid "Removes an invalidation notifier."
msgstr ""

# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_closure_remove_invalidate_notifier: (skip)
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_closure_remove_finalize_notifier: (skip)
#: gclosure.c:676:1 gclosure.c:704:1
msgid "Notice that notifiers are automatically removed after they are run."
msgstr ""

# used by: g_closure_remove_finalize_notifier: (skip)
#: gclosure.c:698:2
msgid ""
"@notify_data: data which was passed to g_closure_add_finalize_notifier() "
"when registering @notify_func"
msgstr ""

# #used by: g_closure_remove_finalize_notifier: (skip)
#: gclosure.c:702:1
msgid "Removes a finalization notifier."
msgstr ""

# used by: g_closure_invoke:
#: gclosure.c:726:2
msgid ""
"@return_value: a #GValue to store the return value. May be %NULL if the "
"callback of @closure doesn't return a value."
msgstr ""

# used by: g_closure_invoke:
#: gclosure.c:728:1
msgid "@n_param_values: the length of the @param_values array"
msgstr ""

# used by: g_closure_invoke:
#: gclosure.c:729:3
msgid ""
"@param_values: (array length=n_param_values): an array of #GValue<!-- -->s "
"holding the arguments on which to invoke the callback of @closure"
msgstr ""

# used by: g_closure_invoke:
#: gclosure.c:732:1
msgid "@invocation_hint: a context-dependent invocation hint"
msgstr ""

# #used by: g_closure_invoke:
#: gclosure.c:734:1
msgid ""
"Invokes the closure, i.e. executes the callback represented by the @closure."
msgstr ""

# used by: g_closure_set_marshal: (skip)
#: gclosure.c:782:1
msgid "@marshal: a #GClosureMarshal function"
msgstr ""

# #used by: g_closure_set_marshal: (skip)
#: gclosure.c:784:6
msgid ""
"Sets the marshaller of @closure. The <literal>marshal_data</literal> of "
"@marshal provides a way for a meta marshaller to provide additional "
"information to the marshaller. (See g_closure_set_meta_marshal().) For "
"GObject's C predefined marshallers (the g_cclosure_marshal_*() functions), "
"what it provides is a callback function to use instead of @closure->callback."
msgstr ""

# #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_new: (skip)
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_new_swap: (skip)
# #-#-#-#-#  gobject.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_new_object: (skip)
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_new_object_swap: (skip)
#: gclosure.c:807:1 gclosure.c:835:1 gobject.c:3438:1 gobject.c:3467:1
msgid "@callback_func: the function to invoke"
msgstr ""

# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_new: (skip)
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_new_swap: (skip)
#: gclosure.c:808:1 gclosure.c:836:1
msgid "@user_data: user data to pass to @callback_func"
msgstr ""

# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_new: (skip)
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_new_swap: (skip)
#: gclosure.c:809:1 gclosure.c:837:1
msgid ""
"@destroy_data: destroy notify to be called when @user_data is no longer used"
msgstr ""

# #used by: g_cclosure_new: (skip)
#: gclosure.c:811:2
msgid ""
"Creates a new closure which invokes @callback_func with @user_data as the "
"last parameter."
msgstr ""

# #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_cclosure_new: (skip)
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_type_cclosure_new:
# #-#-#-#-#  gobject.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_cclosure_new_object: (skip)
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_cclosure_new_object_swap: (skip)
#: gclosure.c:814:1 gclosure.c:918:1 gobject.c:3447:1 gobject.c:3476:1
msgid "Returns: a new #GCClosure"
msgstr ""

# #used by: g_cclosure_new_swap: (skip)
#: gclosure.c:839:2
msgid ""
"Creates a new closure which invokes @callback_func with @user_data as the "
"first parameter."
msgstr ""

# #used by: g_cclosure_new_swap: (skip)
#: gclosure.c:842:1
msgid "Returns: (transfer full): a new #GCClosure"
msgstr ""

# used by: g_signal_type_cclosure_new:
#: gclosure.c:910:1
msgid "@itype: the #GType identifier of an interface or classed type"
msgstr ""

# used by: g_signal_type_cclosure_new:
#: gclosure.c:911:2
msgid ""
"@struct_offset: the offset of the member function of @itype's class "
"structure which is to be invoked by the new closure"
msgstr ""

# #used by: g_signal_type_cclosure_new:
#: gclosure.c:914:3
msgid ""
"Creates a new closure which invokes the function found at the offset "
"@struct_offset in the class structure of the interface or classed type "
"identified by @itype."
msgstr ""

# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__VOID:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__BOOLEAN:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__CHAR:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__UCHAR:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__INT:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__UINT:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__LONG:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__ULONG:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__ENUM:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__FLAGS:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__FLOAT:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__DOUBLE:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__STRING:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__PARAM:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__BOXED:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__POINTER:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__OBJECT:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__VARIANT:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__UINT_POINTER:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_BOOLEAN__FLAGS:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_STRING__OBJECT_POINTER:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_BOOLEAN__OBJECT_BOXED_BOXED:
#: gclosure.c:941:1 gclosure.c:955:1 gclosure.c:969:1 gclosure.c:983:1
#: gclosure.c:997:1 gclosure.c:1011:1 gclosure.c:1025:1 gclosure.c:1039:1
#: gclosure.c:1053:1 gclosure.c:1067:1 gclosure.c:1081:1 gclosure.c:1095:1
#: gclosure.c:1109:1 gclosure.c:1123:1 gclosure.c:1137:1 gclosure.c:1151:1
#: gclosure.c:1165:1 gclosure.c:1179:1 gclosure.c:1195:1 gclosure.c:1209:1
#: gclosure.c:1229:1 gclosure.c:1242:1
msgid "@closure: the #GClosure to which the marshaller belongs"
msgstr ""

# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__VOID:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__BOOLEAN:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__CHAR:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__UCHAR:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__INT:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__UINT:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__LONG:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__ULONG:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__ENUM:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__FLAGS:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__FLOAT:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__DOUBLE:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__STRING:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__PARAM:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__BOXED:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__POINTER:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__OBJECT:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__VARIANT:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__UINT_POINTER:
#: gclosure.c:942:1 gclosure.c:956:1 gclosure.c:970:1 gclosure.c:984:1
#: gclosure.c:998:1 gclosure.c:1012:1 gclosure.c:1026:1 gclosure.c:1040:1
#: gclosure.c:1054:1 gclosure.c:1068:1 gclosure.c:1082:1 gclosure.c:1096:1
#: gclosure.c:1110:1 gclosure.c:1124:1 gclosure.c:1138:1 gclosure.c:1152:1
#: gclosure.c:1166:1 gclosure.c:1180:1 gclosure.c:1196:1
msgid "@return_value: ignored"
msgstr ""

# used by: g_cclosure_marshal_VOID__VOID:
#: gclosure.c:943:1
msgid "@n_param_values: 1"
msgstr ""

# used by: g_cclosure_marshal_VOID__VOID:
#: gclosure.c:944:1
msgid "@param_values: a #GValue array holding only the instance"
msgstr ""

# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__VOID:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__BOOLEAN:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__CHAR:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__UCHAR:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__INT:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__UINT:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__LONG:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__ULONG:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__ENUM:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__FLAGS:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__FLOAT:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__DOUBLE:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__STRING:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__PARAM:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__BOXED:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__POINTER:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__OBJECT:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__VARIANT:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__UINT_POINTER:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_BOOLEAN__FLAGS:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_STRING__OBJECT_POINTER:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_BOOLEAN__OBJECT_BOXED_BOXED:
#: gclosure.c:945:2 gclosure.c:959:2 gclosure.c:973:2 gclosure.c:987:2
#: gclosure.c:1001:2 gclosure.c:1015:2 gclosure.c:1029:2 gclosure.c:1043:2
#: gclosure.c:1057:2 gclosure.c:1071:2 gclosure.c:1085:2 gclosure.c:1099:2
#: gclosure.c:1113:2 gclosure.c:1127:2 gclosure.c:1141:2 gclosure.c:1155:2
#: gclosure.c:1169:2 gclosure.c:1183:2 gclosure.c:1199:2 gclosure.c:1213:2
#: gclosure.c:1233:2 gclosure.c:1246:2
msgid ""
"@invocation_hint: the invocation hint given as the last argument to "
"g_closure_invoke()"
msgstr ""

# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__VOID:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__BOOLEAN:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__CHAR:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__UCHAR:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__INT:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__UINT:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__LONG:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__ULONG:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__ENUM:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__FLAGS:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__FLOAT:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__DOUBLE:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__STRING:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__PARAM:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__BOXED:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__POINTER:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__OBJECT:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__VARIANT:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__UINT_POINTER:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_BOOLEAN__FLAGS:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_STRING__OBJECT_POINTER:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_BOOLEAN__OBJECT_BOXED_BOXED:
#: gclosure.c:947:1 gclosure.c:961:1 gclosure.c:975:1 gclosure.c:989:1
#: gclosure.c:1003:1 gclosure.c:1017:1 gclosure.c:1031:1 gclosure.c:1045:1
#: gclosure.c:1059:1 gclosure.c:1073:1 gclosure.c:1087:1 gclosure.c:1101:1
#: gclosure.c:1115:1 gclosure.c:1129:1 gclosure.c:1143:1 gclosure.c:1157:1
#: gclosure.c:1171:1 gclosure.c:1185:1 gclosure.c:1201:1 gclosure.c:1215:1
#: gclosure.c:1235:1 gclosure.c:1248:1
msgid ""
"@marshal_data: additional data specified when registering the marshaller"
msgstr ""

# #used by: g_cclosure_marshal_VOID__VOID:
#: gclosure.c:949:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, gpointer user_data)</literal>."
msgstr ""

# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__BOOLEAN:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__CHAR:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__UCHAR:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__INT:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__UINT:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__LONG:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__ULONG:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__ENUM:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__FLAGS:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__FLOAT:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__DOUBLE:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__STRING:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__PARAM:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__BOXED:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__POINTER:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__OBJECT:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__VARIANT:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_BOOLEAN__FLAGS:
#: gclosure.c:957:1 gclosure.c:971:1 gclosure.c:985:1 gclosure.c:999:1
#: gclosure.c:1013:1 gclosure.c:1027:1 gclosure.c:1041:1 gclosure.c:1055:1
#: gclosure.c:1069:1 gclosure.c:1083:1 gclosure.c:1097:1 gclosure.c:1111:1
#: gclosure.c:1125:1 gclosure.c:1139:1 gclosure.c:1153:1 gclosure.c:1167:1
#: gclosure.c:1181:1 gclosure.c:1211:1
msgid "@n_param_values: 2"
msgstr ""

# used by: g_cclosure_marshal_VOID__BOOLEAN:
#: gclosure.c:958:1
msgid ""
"@param_values: a #GValue array holding the instance and the #gboolean "
"parameter"
msgstr ""

# #used by: g_cclosure_marshal_VOID__BOOLEAN:
#: gclosure.c:963:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, gboolean arg1, gpointer user_data)</literal>."
msgstr ""

# used by: g_cclosure_marshal_VOID__CHAR:
#: gclosure.c:972:1
msgid ""
"@param_values: a #GValue array holding the instance and the #gchar parameter"
msgstr ""

# #used by: g_cclosure_marshal_VOID__CHAR:
#: gclosure.c:977:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, gchar arg1, gpointer user_data)</literal>."
msgstr ""

# used by: g_cclosure_marshal_VOID__UCHAR:
#: gclosure.c:986:1
msgid ""
"@param_values: a #GValue array holding the instance and the #guchar parameter"
msgstr ""

# #used by: g_cclosure_marshal_VOID__UCHAR:
#: gclosure.c:991:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, guchar arg1, gpointer user_data)</literal>."
msgstr ""

# used by: g_cclosure_marshal_VOID__INT:
#: gclosure.c:1000:1
msgid ""
"@param_values: a #GValue array holding the instance and the #gint parameter"
msgstr ""

# #used by: g_cclosure_marshal_VOID__INT:
#: gclosure.c:1005:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, gint arg1, gpointer user_data)</literal>."
msgstr ""

# used by: g_cclosure_marshal_VOID__UINT:
#: gclosure.c:1014:1
msgid ""
"@param_values: a #GValue array holding the instance and the #guint parameter"
msgstr ""

# #used by: g_cclosure_marshal_VOID__UINT:
#: gclosure.c:1019:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, guint arg1, gpointer user_data)</literal>."
msgstr ""

# used by: g_cclosure_marshal_VOID__LONG:
#: gclosure.c:1028:1
msgid ""
"@param_values: a #GValue array holding the instance and the #glong parameter"
msgstr ""

# #used by: g_cclosure_marshal_VOID__LONG:
#: gclosure.c:1033:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, glong arg1, gpointer user_data)</literal>."
msgstr ""

# used by: g_cclosure_marshal_VOID__ULONG:
#: gclosure.c:1042:1
msgid ""
"@param_values: a #GValue array holding the instance and the #gulong parameter"
msgstr ""

# #used by: g_cclosure_marshal_VOID__ULONG:
#: gclosure.c:1047:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, gulong arg1, gpointer user_data)</literal>."
msgstr ""

# used by: g_cclosure_marshal_VOID__ENUM:
#: gclosure.c:1056:1
msgid ""
"@param_values: a #GValue array holding the instance and the enumeration "
"parameter"
msgstr ""

# #used by: g_cclosure_marshal_VOID__ENUM:
#: gclosure.c:1061:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, gint arg1, gpointer user_data)</literal> "
"where the #gint parameter denotes an enumeration type.."
msgstr ""

# used by: g_cclosure_marshal_VOID__FLAGS:
#: gclosure.c:1070:1
msgid ""
"@param_values: a #GValue array holding the instance and the flags parameter"
msgstr ""

# #used by: g_cclosure_marshal_VOID__FLAGS:
#: gclosure.c:1075:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, gint arg1, gpointer user_data)</literal> "
"where the #gint parameter denotes a flags type."
msgstr ""

# used by: g_cclosure_marshal_VOID__FLOAT:
#: gclosure.c:1084:1
msgid ""
"@param_values: a #GValue array holding the instance and the #gfloat parameter"
msgstr ""

# #used by: g_cclosure_marshal_VOID__FLOAT:
#: gclosure.c:1089:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, gfloat arg1, gpointer user_data)</literal>."
msgstr ""

# used by: g_cclosure_marshal_VOID__DOUBLE:
#: gclosure.c:1098:1
msgid ""
"@param_values: a #GValue array holding the instance and the #gdouble "
"parameter"
msgstr ""

# #used by: g_cclosure_marshal_VOID__DOUBLE:
#: gclosure.c:1103:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, gdouble arg1, gpointer user_data)</literal>."
msgstr ""

# used by: g_cclosure_marshal_VOID__STRING:
#: gclosure.c:1112:1
msgid ""
"@param_values: a #GValue array holding the instance and the #gchar* parameter"
msgstr ""

# #used by: g_cclosure_marshal_VOID__STRING:
#: gclosure.c:1117:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, const gchar *arg1, gpointer user_data)</"
"literal>."
msgstr ""

# used by: g_cclosure_marshal_VOID__PARAM:
#: gclosure.c:1126:1
msgid ""
"@param_values: a #GValue array holding the instance and the #GParamSpec* "
"parameter"
msgstr ""

# #used by: g_cclosure_marshal_VOID__PARAM:
#: gclosure.c:1131:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, GParamSpec *arg1, gpointer user_data)</"
"literal>."
msgstr ""

# used by: g_cclosure_marshal_VOID__BOXED:
#: gclosure.c:1140:1
msgid ""
"@param_values: a #GValue array holding the instance and the #GBoxed* "
"parameter"
msgstr ""

# #used by: g_cclosure_marshal_VOID__BOXED:
#: gclosure.c:1145:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, GBoxed *arg1, gpointer user_data)</literal>."
msgstr ""

# used by: g_cclosure_marshal_VOID__POINTER:
#: gclosure.c:1154:1
msgid ""
"@param_values: a #GValue array holding the instance and the #gpointer "
"parameter"
msgstr ""

# #used by: g_cclosure_marshal_VOID__POINTER:
#: gclosure.c:1159:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, gpointer arg1, gpointer user_data)</literal>."
msgstr ""

# used by: g_cclosure_marshal_VOID__OBJECT:
#: gclosure.c:1168:1
msgid ""
"@param_values: a #GValue array holding the instance and the #GObject* "
"parameter"
msgstr ""

# #used by: g_cclosure_marshal_VOID__OBJECT:
#: gclosure.c:1173:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, GObject *arg1, gpointer user_data)</literal>."
msgstr ""

# used by: g_cclosure_marshal_VOID__VARIANT:
#: gclosure.c:1182:1
msgid ""
"@param_values: a #GValue array holding the instance and the #GVariant* "
"parameter"
msgstr ""

# #used by: g_cclosure_marshal_VOID__VARIANT:
#: gclosure.c:1187:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, GVariant *arg1, gpointer user_data)</"
"literal>."
msgstr ""

# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__UINT_POINTER:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_STRING__OBJECT_POINTER:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_BOOLEAN__OBJECT_BOXED_BOXED:
#: gclosure.c:1197:1 gclosure.c:1231:1 gclosure.c:1244:1
msgid "@n_param_values: 3"
msgstr ""

# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_VOID__UINT_POINTER:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_STRING__OBJECT_POINTER:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_BOOLEAN__OBJECT_BOXED_BOXED:
#: gclosure.c:1198:1 gclosure.c:1232:1 gclosure.c:1245:1
msgid "@param_values: a #GValue array holding instance, arg1 and arg2"
msgstr ""

# #used by: g_cclosure_marshal_VOID__UINT_POINTER:
#: gclosure.c:1203:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, guint arg1, gpointer arg2, gpointer "
"user_data)</literal>."
msgstr ""

# used by: g_cclosure_marshal_BOOLEAN__FLAGS:
#: gclosure.c:1210:1
msgid "@return_value: a #GValue which can store the returned #gboolean"
msgstr ""

# used by: g_cclosure_marshal_BOOLEAN__FLAGS:
#: gclosure.c:1212:1
msgid "@param_values: a #GValue array holding instance and arg1"
msgstr ""

# #used by: g_cclosure_marshal_BOOLEAN__FLAGS:
#: gclosure.c:1217:3
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>gboolean "
"(*callback) (gpointer instance, gint arg1, gpointer user_data)</literal> "
"where the #gint parameter denotes a flags type."
msgstr ""

# #used by: g_cclosure_marshal_BOOL__FLAGS:
#: gclosure.c:1225:1
msgid "Another name for g_cclosure_marshal_BOOLEAN__FLAGS()."
msgstr ""

# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_STRING__OBJECT_POINTER:
# #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_marshal_BOOLEAN__OBJECT_BOXED_BOXED:
#: gclosure.c:1230:1 gclosure.c:1243:1
msgid "@return_value: a #GValue, which can store the returned string"
msgstr ""

# #used by: g_cclosure_marshal_STRING__OBJECT_POINTER:
#: gclosure.c:1237:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>gchar* "
"(*callback) (gpointer instance, GObject *arg1, gpointer arg2, gpointer "
"user_data)</literal>."
msgstr ""

# #used by: g_cclosure_marshal_BOOLEAN__OBJECT_BOXED_BOXED:
#: gclosure.c:1250:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>gboolean "
"(*callback) (gpointer instance, GBoxed *arg1, GBoxed *arg2, gpointer "
"user_data)</literal>."
msgstr ""

# used by: SECTION:enumerations_flags
#: genums.c:35:1
msgid "@short_description: Enumeration and flags types"
msgstr ""

# used by: SECTION:enumerations_flags
#: genums.c:36:1
msgid "@title: Enumeration and Flag Types"
msgstr ""

# used by: SECTION:enumerations_flags
#: genums.c:37:2
msgid ""
"@see_also:#GParamSpecEnum, #GParamSpecFlags, g_param_spec_enum(), "
"g_param_spec_flags()"
msgstr ""

# #used by: SECTION:enumerations_flags
#: genums.c:40:10
msgid ""
"The GLib type system provides fundamental types for enumeration and flags "
"types. (Flags types are like enumerations, but allow their values to be "
"combined by bitwise or). A registered enumeration or flags type associates a "
"name and a nickname with each allowed value, and the methods "
"g_enum_get_value_by_name(), g_enum_get_value_by_nick(), "
"g_flags_get_value_by_name() and g_flags_get_value_by_nick() can look up "
"values by their name or nickname.  When an enumeration or flags type is "
"registered with the GLib type system, it can be used as value type for "
"object properties, using g_param_spec_enum() or g_param_spec_flags()."
msgstr ""

# #used by: SECTION:enumerations_flags
#: genums.c:51:4
msgid ""
"GObject ships with a utility called <link linkend=|$_1_$|glib-mkenums|$_1_$|"
">glib-mkenums</link> that can construct suitable type registration functions "
"from C enumeration definitions."
msgstr ""

# #-#-#-#-#  genums.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_enum_register_static:
# #-#-#-#-#  genums.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_flags_register_static:
#: genums.c:167:1 genums.c:212:1
msgid "@name: A nul-terminated string used as the name of the new type."
msgstr ""

# used by: g_enum_register_static:
#: genums.c:168:4
msgid ""
"@const_static_values: An array of #GEnumValue structs for the possible "
"enumeration values. The array is terminated by a struct with all members "
"being 0. GObject keeps a reference to the data, so it cannot be stack-"
"allocated."
msgstr ""

# #used by: g_enum_register_static:
#: genums.c:173:1
msgid "Registers a new static enumeration type with the name @name."
msgstr ""

# #used by: g_enum_register_static:
#: genums.c:175:4
msgid ""
"It is normally more convenient to let <link linkend=|$_1_$|glib-mkenums|$_1_"
"$|>glib-mkenums</link> generate a my_enum_get_type() function from a usual C "
"enumeration definition than to write one yourself using "
"g_enum_register_static()."
msgstr ""

# #-#-#-#-#  genums.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  genums.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_enum_register_static:
# #-#-#-#-#  genums.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_flags_register_static:
# #-#-#-#-#  gparam.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_type_register_static:
# #-#-#-#-#  gtype.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_type_register_static_simple: (skip)
# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_type_register_static:
#: genums.c:180:1 genums.c:224:1 gparam.c:1370:1 gtype.c:2661:1 gtype.c:2701:1
msgid "Returns: The new type identifier."
msgstr ""

# used by: g_flags_register_static:
#: genums.c:213:3
msgid ""
"@const_static_values: An array of #GFlagsValue structs for the possible "
"flags values. The array is terminated by a struct with all members being 0. "
"GObject keeps a reference to the data, so it cannot be stack-allocated."
msgstr ""

# #used by: g_flags_register_static:
#: genums.c:217:1
msgid "Registers a new static flags type with the name @name."
msgstr ""

# #used by: g_flags_register_static:
#: genums.c:219:4
msgid ""
"It is normally more convenient to let <link linkend=|$_1_$|glib-mkenums|$_1_"
"$|>glib-mkenums</link> generate a my_flags_get_type() function from a usual "
"C enumeration definition than to write one yourself using "
"g_flags_register_static()."
msgstr ""

# used by: g_enum_complete_type_info:
#: genums.c:256:1
msgid "@g_enum_type: the type identifier of the type being completed"
msgstr ""

# #-#-#-#-#  genums.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_enum_complete_type_info:
# #-#-#-#-#  genums.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_flags_complete_type_info:
#: genums.c:257:1 genums.c:303:1
msgid "@info: the #GTypeInfo struct to be filled in"
msgstr ""

# used by: g_enum_complete_type_info:
#: genums.c:258:3
msgid ""
"@const_values: An array of #GEnumValue structs for the possible enumeration "
"values. The array is terminated by a struct with all members being 0."
msgstr ""

# #used by: g_enum_complete_type_info:
#: genums.c:262:3
msgid ""
"This function is meant to be called from the complete_type_info() function "
"of a #GTypePlugin implementation, as in the following example:"
msgstr ""

# #used by: g_enum_complete_type_info:
#: genums.c:266:12
msgid ""
"|[ static void my_enum_complete_type_info (GTypePlugin     *plugin, "
"GType            g_type, GTypeInfo       *info, GTypeValueTable "
"*value_table) { static const GEnumValue values[] = { { MY_ENUM_FOO, |$_1_$|"
"MY_ENUM_FOO|$_1_$|, |$_1_$|foo|$_1_$| }, { MY_ENUM_BAR, |$_1_$|MY_ENUM_BAR|"
"$_1_$|, |$_1_$|bar|$_1_$| }, { 0, NULL, NULL } };"
msgstr ""

# #used by: g_enum_complete_type_info:
#: genums.c:279:3
msgid "g_enum_complete_type_info (type, info, values); } ]|"
msgstr ""

# used by: g_flags_complete_type_info:
#: genums.c:302:1
msgid "@g_flags_type: the type identifier of the type being completed"
msgstr ""

# used by: g_flags_complete_type_info:
#: genums.c:304:3
msgid ""
"@const_values: An array of #GFlagsValue structs for the possible enumeration "
"values. The array is terminated by a struct with all members being 0."
msgstr ""

# #used by: g_flags_complete_type_info:
#: genums.c:308:3
msgid ""
"This function is meant to be called from the complete_type_info() function "
"of a #GTypePlugin implementation, see the example for "
"g_enum_complete_type_info() above."
msgstr ""

# #-#-#-#-#  genums.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_enum_get_value_by_name:
# #-#-#-#-#  genums.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_enum_get_value_by_nick:
# #-#-#-#-#  genums.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_enum_get_value:
#: genums.c:379:1 genums.c:437:1 genums.c:495:1
msgid "@enum_class: a #GEnumClass"
msgstr ""

# #-#-#-#-#  genums.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_enum_get_value_by_name:
# #-#-#-#-#  genums.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_flags_get_value_by_name:
#: genums.c:380:1 genums.c:409:1
msgid "@name: the name to look up"
msgstr ""

# #used by: g_enum_get_value_by_name:
#: genums.c:382:1
msgid "Looks up a #GEnumValue by name."
msgstr ""

# #used by: g_enum_get_value_by_name:
#: genums.c:384:2
msgid ""
"Returns: the #GEnumValue with name @name, or %NULL if the enumeration "
"doesn't have a member with that name"
msgstr ""

# #-#-#-#-#  genums.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_flags_get_value_by_name:
# #-#-#-#-#  genums.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_flags_get_value_by_nick:
# #-#-#-#-#  genums.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_flags_get_first_value:
#: genums.c:408:1 genums.c:466:1 genums.c:523:1
msgid "@flags_class: a #GFlagsClass"
msgstr ""

# #used by: g_flags_get_value_by_name:
#: genums.c:411:1
msgid "Looks up a #GFlagsValue by name."
msgstr ""

# #used by: g_flags_get_value_by_name:
#: genums.c:413:2
msgid ""
"Returns: the #GFlagsValue with name @name, or %NULL if there is no flag with "
"that name"
msgstr ""

# #-#-#-#-#  genums.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_enum_get_value_by_nick:
# #-#-#-#-#  genums.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_flags_get_value_by_nick:
#: genums.c:438:1 genums.c:467:1
msgid "@nick: the nickname to look up"
msgstr ""

# #used by: g_enum_get_value_by_nick:
#: genums.c:440:1
msgid "Looks up a #GEnumValue by nickname."
msgstr ""

# #used by: g_enum_get_value_by_nick:
#: genums.c:442:2
msgid ""
"Returns: the #GEnumValue with nickname @nick, or %NULL if the enumeration "
"doesn't have a member with that nickname"
msgstr ""

# #used by: g_flags_get_value_by_nick:
#: genums.c:469:1
msgid "Looks up a #GFlagsValue by nickname."
msgstr ""

# #used by: g_flags_get_value_by_nick:
#: genums.c:471:2
msgid ""
"Returns: the #GFlagsValue with nickname @nick, or %NULL if there is no flag "
"with that nickname"
msgstr ""

# used by: g_enum_get_value:
#: genums.c:496:1
msgid "@value: the value to look up"
msgstr ""

# #used by: g_enum_get_value:
#: genums.c:498:1
msgid "Returns the #GEnumValue for a value."
msgstr ""

# #used by: g_enum_get_value:
#: genums.c:500:2
msgid ""
"Returns: the #GEnumValue for @value, or %NULL if @value is not a member of "
"the enumeration"
msgstr ""

# #-#-#-#-#  genums.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_flags_get_first_value:
# #-#-#-#-#  gobject.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_set_property:
#: genums.c:524:1 gobject.c:1878:1
msgid "@value: the value"
msgstr ""

# #used by: g_flags_get_first_value:
#: genums.c:526:1
msgid "Returns the first #GFlagsValue which is set in @value."
msgstr ""

# #used by: g_flags_get_first_value:
#: genums.c:528:2
msgid ""
"Returns: the first #GFlagsValue which is set in @value, or %NULL if none is "
"set"
msgstr ""

# #-#-#-#-#  genums.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_set_enum:
# #-#-#-#-#  genums.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_get_enum:
#: genums.c:560:1 genums.c:576:1
msgid "@value: a valid #GValue whose type is derived from %G_TYPE_ENUM"
msgstr ""

# used by: g_value_set_enum:
#: genums.c:561:1
msgid "@v_enum: enum value to be set"
msgstr ""

# #used by: g_value_set_enum:
#: genums.c:563:1
msgid "Set the contents of a %G_TYPE_ENUM #GValue to @v_enum."
msgstr ""

# #used by: g_value_get_enum:
#: genums.c:578:1
msgid "Get the contents of a %G_TYPE_ENUM #GValue."
msgstr ""

# #used by: g_value_get_enum:
#: genums.c:580:1
msgid "Returns: enum contents of @value"
msgstr ""

# #-#-#-#-#  genums.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_set_flags:
# #-#-#-#-#  genums.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_get_flags:
#: genums.c:592:1 genums.c:608:1
msgid "@value: a valid #GValue whose type is derived from %G_TYPE_FLAGS"
msgstr ""

# used by: g_value_set_flags:
#: genums.c:593:1
msgid "@v_flags: flags value to be set"
msgstr ""

# #used by: g_value_set_flags:
#: genums.c:595:1
msgid "Set the contents of a %G_TYPE_FLAGS #GValue to @v_flags."
msgstr ""

# #used by: g_value_get_flags:
#: genums.c:610:1
msgid "Get the contents of a %G_TYPE_FLAGS #GValue."
msgstr ""

# #used by: g_value_get_flags:
#: genums.c:612:1
msgid "Returns: flags contents of @value"
msgstr ""

# used by: SECTION:objects
#: gobject.c:40:1
msgid "@short_description: The base object type"
msgstr ""

# used by: SECTION:objects
#: gobject.c:41:1
msgid "@see_also: #GParamSpecObject, g_param_spec_object()"
msgstr ""

# used by: SECTION:objects
#: gobject.c:42:1
msgid "@title: The Base Object Type"
msgstr ""

# #used by: SECTION:objects
#: gobject.c:44:6
msgid ""
"GObject is the fundamental type providing the common attributes and methods "
"for all object types in GTK+, Pango and other libraries based on GObject.  "
"The GObject class provides methods for object construction and destruction, "
"property access methods, and signal support.  Signals are described in "
"detail in <xref linkend=|$_1_$|gobject-Signals|$_1_$|/>."
msgstr ""

# #used by: SECTION:objects
#: gobject.c:51:33
msgid ""
"<para id=|$_1_$|floating-ref|$_1_$|> #GInitiallyUnowned is derived from "
"#GObject. The only difference between the two is that the initial reference "
"of a #GInitiallyUnowned is flagged as a <firstterm>floating</firstterm> "
"reference. This means that it is not specifically claimed to be |$_1_$|owned|"
"$_1_$| by any code portion. The main motivation for providing floating "
"references is C convenience. In particular, it allows code to be written as: "
"|[ container = create_container(); container_add_child (container, "
"create_child()); ]| If <function>container_add_child()</function> will "
"g_object_ref_sink() the passed in child, no reference of the newly created "
"child is leaked. Without floating references, <function>container_add_child()"
"</function> can only g_object_ref() the new child, so to implement this code "
"without reference leaks, it would have to be written as: |[ Child *child; "
"container = create_container(); child = create_child(); container_add_child "
"(container, child); g_object_unref (child); ]| The floating reference can be "
"converted into an ordinary reference by calling g_object_ref_sink(). For "
"already sunken objects (objects that don't have a floating reference "
"anymore), g_object_ref_sink() is equivalent to g_object_ref() and returns a "
"new reference. Since floating references are useful almost exclusively for C "
"convenience, language bindings that provide automated reference and memory "
"ownership maintenance (such as smart pointers or garbage collection) "
"therefore don't need to expose floating references in their API. </para>"
msgstr ""

# #used by: SECTION:objects
#: gobject.c:85:3
msgid ""
"Some object implementations may need to save an objects floating state "
"across certain code portions (an example is #GtkMenu), to achive this, the "
"following sequence can be used:"
msgstr ""

# #used by: SECTION:objects
#: gobject.c:89:11
msgid ""
"|[ // save floating state gboolean was_floating = g_object_is_floating "
"(object); g_object_ref_sink (object); // protected code portion ...; // "
"restore floating state if (was_floating) g_object_force_floating (object); "
"g_obejct_unref (object); // release previously acquired reference ]|"
msgstr ""

# used by: GObject::notify:
#: gobject.c:356:1
msgid "@gobject: the object which received the signal."
msgstr ""

# used by: GObject::notify:
#: gobject.c:357:1
msgid "@pspec: the #GParamSpec of the property which changed."
msgstr ""

# #used by: GObject::notify:
#: gobject.c:359:5
msgid ""
"The notify signal is emitted on an object when one of its properties has "
"been changed. Note that getting this signal doesn't guarantee that the value "
"of the property has actually changed, it may also be emitted when the setter "
"for the property is called to reinstate the previous value."
msgstr ""

# #used by: GObject::notify:
#: gobject.c:365:11
msgid ""
"This signal is typically used to obtain change notification for a single "
"property, by specifying the property name as a detail in the g_signal_connect"
"() call, like this: |[ g_signal_connect (text_view->buffer, |$_1_$|notify::"
"paste-target-list|$_1_$|, G_CALLBACK (gtk_text_view_target_list_notify), "
"text_view) ]| It is important to note that you must use <link linkend=|$_1_$|"
"canonical-parameter-name|$_1_$|>canonical</link> parameter names as detail "
"strings for the notify signal."
msgstr ""

# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_class_install_property:
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_class_install_properties:
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_class_find_property:
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_class_override_property:
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_class_list_properties:
#: gobject.c:414:1 gobject.c:464:1 gobject.c:619:1 gobject.c:688:1
#: gobject.c:767:1
msgid "@oclass: a #GObjectClass"
msgstr ""

# used by: g_object_class_install_property:
#: gobject.c:415:1
msgid "@property_id: the id for the new property"
msgstr ""

# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_class_install_property:
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_interface_install_property:
#: gobject.c:416:1 gobject.c:584:1
msgid "@pspec: the #GParamSpec for the new property"
msgstr ""

# #used by: g_object_class_install_property:
#: gobject.c:418:1
msgid "Installs a new property. This is usually done in the class initializer."
msgstr ""

# #used by: g_object_class_install_property:
#: gobject.c:420:3
msgid ""
"Note that it is possible to redefine a property in a derived class, by "
"installing a property with the same name. This can be useful at times, e.g. "
"to change the range of allowed values or the default value."
msgstr ""

# used by: g_object_class_install_properties:
#: gobject.c:465:1
msgid "@n_pspecs: the length of the #GParamSpec<!-- -->s array"
msgstr ""

# used by: g_object_class_install_properties:
#: gobject.c:466:2
msgid ""
"@pspecs: (array length=n_pspecs): the #GParamSpec<!-- -->s array defining "
"the new properties"
msgstr ""

# #used by: g_object_class_install_properties:
#: gobject.c:469:2
msgid ""
"Installs new properties from an array of #GParamSpec<!-- -->s. This is "
"usually done in the class initializer."
msgstr ""

# #used by: g_object_class_install_properties:
#: gobject.c:472:2
msgid ""
"The property id of each property is the index of each #GParamSpec in the "
"@pspecs array."
msgstr ""

# #used by: g_object_class_install_properties:
#: gobject.c:475:2
msgid ""
"The property id of 0 is treated specially by #GObject and it should not be "
"used to store a #GParamSpec."
msgstr ""

# #used by: g_object_class_install_properties:
#: gobject.c:478:3
msgid ""
"This function should be used if you plan to use a static array of "
"#GParamSpec<!-- -->s and g_object_notify_by_pspec(). For instance, this "
"class initialization:"
msgstr ""

# #used by: g_object_class_install_properties:
#: gobject.c:482:4
msgid "|[ enum { PROP_0, PROP_FOO, PROP_BAR, N_PROPERTIES };"
msgstr ""

# #used by: g_object_class_install_properties:
#: gobject.c:487:1
msgid "static GParamSpec *obj_properties[N_PROPERTIES] = { NULL, };"
msgstr ""

# #used by: g_object_class_install_properties:
#: gobject.c:489:4
msgid ""
"static void my_object_class_init (MyObjectClass *klass) { GObjectClass "
"*gobject_class = G_OBJECT_CLASS (klass);"
msgstr ""

# #used by: g_object_class_install_properties:
#: gobject.c:494:5
msgid ""
"obj_properties[PROP_FOO] = g_param_spec_int (|$_1_$|foo|$_1_$|, |$_1_$|Foo|"
"$_1_$|, |$_1_$|Foo|$_1_$|, -1, G_MAXINT, 0, G_PARAM_READWRITE);"
msgstr ""

# #used by: g_object_class_install_properties:
#: gobject.c:500:4
msgid ""
"obj_properties[PROP_BAR] = g_param_spec_string (|$_1_$|bar|$_1_$|, |$_1_$|"
"Bar|$_1_$|, |$_1_$|Bar|$_1_$|, NULL, G_PARAM_READWRITE);"
msgstr ""

# #used by: g_object_class_install_properties:
#: gobject.c:505:7
msgid ""
"gobject_class->set_property = my_object_set_property; gobject_class-"
">get_property = my_object_get_property; g_object_class_install_properties "
"(gobject_class, N_PROPERTIES, obj_properties); } ]|"
msgstr ""

# #used by: g_object_class_install_properties:
#: gobject.c:513:1
msgid ""
"allows calling g_object_notify_by_pspec() to notify of property changes:"
msgstr ""

# #used by: g_object_class_install_properties:
#: gobject.c:515:11
msgid ""
"|[ void my_object_set_foo (MyObject *self, gint foo) { if (self->foo != foo) "
"{ self->foo = foo; g_object_notify_by_pspec (G_OBJECT (self), obj_properties"
"[PROP_FOO]); } } ]|"
msgstr ""

# used by: g_object_interface_install_property:
#: gobject.c:582:2
msgid ""
"@g_iface: any interface vtable for the interface, or the default vtable for "
"the interface."
msgstr ""

# #used by: g_object_interface_install_property:
#: gobject.c:586:9
msgid ""
"Add a property to an interface; this is only useful for interfaces that are "
"added to GObject-derived types. Adding a property to an interface forces all "
"objects classes with that interface to have a compatible property. The "
"compatible property could be a newly created #GParamSpec, but normally "
"g_object_class_override_property() will be used so that the object class "
"only needs to provide an implementation and inherits the property "
"description, default value, bounds, and so forth from the interface property."
msgstr ""

# #used by: g_object_interface_install_property:
#: gobject.c:596:4
msgid ""
"This function is meant to be called from the interface's default vtable "
"initialization function (the @class_init member of #GTypeInfo.) It must not "
"be called after after @class_init has been called for any object types "
"implementing this interface."
msgstr ""

# used by: g_object_class_find_property:
#: gobject.c:620:1
msgid "@property_name: the name of the property to look up"
msgstr ""

# #used by: g_object_class_find_property:
#: gobject.c:622:1
msgid "Looks up the #GParamSpec for a property of a class."
msgstr ""

# #used by: g_object_class_find_property:
#: gobject.c:624:2
msgid ""
"Returns: (transfer none): the #GParamSpec for the property, or %NULL if the "
"class doesn't have a property of that name"
msgstr ""

# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_interface_find_property:
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_interface_list_properties:
#: gobject.c:655:2 gobject.c:795:2
msgid ""
"@g_iface: any interface vtable for the interface, or the default vtable for "
"the interface"
msgstr ""

# used by: g_object_interface_find_property:
#: gobject.c:657:1
msgid "@property_name: name of a property to lookup."
msgstr ""

# #used by: g_object_interface_find_property:
#: gobject.c:659:5
msgid ""
"Find the #GParamSpec with the given name for an interface. Generally, the "
"interface vtable passed in as @g_iface will be the default vtable from "
"g_type_default_interface_ref(), or, if you know the interface has already "
"been loaded, g_type_default_interface_peek()."
msgstr ""

# #used by: g_object_interface_find_property:
#: gobject.c:667:3
msgid ""
"Returns: (transfer none): the #GParamSpec for the property of the interface "
"with the name @property_name, or %NULL if no such property exists."
msgstr ""

# used by: g_object_class_override_property:
#: gobject.c:689:1
msgid "@property_id: the new property ID"
msgstr ""

# used by: g_object_class_override_property:
#: gobject.c:690:2
msgid ""
"@name: the name of a property registered in a parent class or in an "
"interface of this class."
msgstr ""

# #used by: g_object_class_override_property:
#: gobject.c:693:5
msgid ""
"Registers @property_id as referring to a property with the name @name in a "
"parent class or in an interface implemented by @oclass. This allows this "
"class to <firstterm>override</firstterm> a property implementation in a "
"parent class or to provide the implementation of a property from an "
"interface."
msgstr ""

# #used by: g_object_class_override_property:
#: gobject.c:699:12
msgid ""
"<note> Internally, overriding is implemented by creating a property of type "
"#GParamSpecOverride; generally operations that query the properties of the "
"object class, such as g_object_class_find_property() or "
"g_object_class_list_properties() will return the overridden property. "
"However, in one case, the @construct_properties argument of the @constructor "
"virtual function, the #GParamSpecOverride is passed instead, so that the "
"@param_id field of the #GParamSpec will be correct.  For virtually all uses, "
"this makes no difference. If you need to get the overridden property, you "
"can call g_param_spec_get_redirect_target(). </note>"
msgstr ""

# used by: g_object_class_list_properties:
#: gobject.c:768:1
msgid ""
"@n_properties: (out): return location for the length of the returned array"
msgstr ""

# #used by: g_object_class_list_properties:
#: gobject.c:770:1
msgid "Get an array of #GParamSpec* for all properties of a class."
msgstr ""

# #used by: g_object_class_list_properties:
#: gobject.c:772:2
msgid ""
"Returns: (array length=n_properties) (transfer container): an array of "
"#GParamSpec* which should be freed after use"
msgstr ""

# used by: g_object_interface_list_properties:
#: gobject.c:797:1
msgid ""
"@n_properties_p: (out): location to store number of properties returned."
msgstr ""

# #used by: g_object_interface_list_properties:
#: gobject.c:799:4
msgid ""
"Lists the properties of an interface.Generally, the interface vtable passed "
"in as @g_iface will be the default vtable from g_type_default_interface_ref"
"(), or, if you know the interface has already been loaded, "
"g_type_default_interface_peek()."
msgstr ""

# #used by: g_object_interface_list_properties:
#: gobject.c:806:5
msgid ""
"Returns: (array length=n_properties_p) (transfer container): a pointer to an "
"array of pointers to #GParamSpec structures. The paramspecs are owned by "
"GLib, but the array should be freed with g_free() when you are done with it."
msgstr ""

# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_run_dispose:
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_freeze_notify:
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_notify:
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_notify_by_pspec:
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_thaw_notify:
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_set_valist: (skip)
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_get_valist: (skip)
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_set: (skip)
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_get: (skip)
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_set_property:
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_get_property:
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_connect: (skip)
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_disconnect: (skip)
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_force_floating:
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_add_toggle_ref: (skip)
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_remove_toggle_ref: (skip)
#: gobject.c:930:1 gobject.c:952:1 gobject.c:988:1 gobject.c:1030:1
#: gobject.c:1089:1 gobject.c:1649:1 gobject.c:1725:1 gobject.c:1801:1
#: gobject.c:1825:1 gobject.c:1876:1 gobject.c:1923:1 gobject.c:2002:1
#: gobject.c:2154:1 gobject.c:2441:1 gobject.c:2490:1 gobject.c:2571:1
msgid "@object: a #GObject"
msgstr ""

# #used by: g_object_run_dispose:
#: gobject.c:932:2
msgid ""
"Releases all references to other objects. This can be used to break "
"reference cycles."
msgstr ""

# #used by: g_object_run_dispose:
#: gobject.c:935:1
msgid ""
"This functions should only be called from object system implementations."
msgstr ""

# #used by: g_object_freeze_notify:
#: gobject.c:954:4
msgid ""
"Increases the freeze count on @object. If the freeze count is non-zero, the "
"emission of |$_1_$|notify|$_1_$| signals on @object is stopped. The signals "
"are queued until the freeze count is decreased to zero."
msgstr ""

# #used by: g_object_freeze_notify:
#: gobject.c:959:2
msgid ""
"This is necessary for accessors that modify multiple properties to prevent "
"premature notification while the object is still being modified."
msgstr ""

# used by: g_object_notify:
#: gobject.c:989:1
msgid ""
"@property_name: the name of a property installed on the class of @object."
msgstr ""

# #used by: g_object_notify:
#: gobject.c:991:1
msgid ""
"Emits a |$_1_$|notify|$_1_$| signal for the property @property_name on "
"@object."
msgstr ""

# #used by: g_object_notify:
#: gobject.c:993:3
msgid ""
"When possible, eg. when signaling a property change from within the class "
"that registered the property, you should use g_object_notify_by_pspec() "
"instead."
msgstr ""

# used by: g_object_notify_by_pspec:
#: gobject.c:1031:1
msgid ""
"@pspec: the #GParamSpec of a property installed on the class of @object."
msgstr ""

# #used by: g_object_notify_by_pspec:
#: gobject.c:1033:1
msgid ""
"Emits a |$_1_$|notify|$_1_$| signal for the property specified by @pspec on "
"@object."
msgstr ""

# #used by: g_object_notify_by_pspec:
#: gobject.c:1035:2
msgid ""
"This function omits the property name lookup, hence it is faster than "
"g_object_notify()."
msgstr ""

# #used by: g_object_notify_by_pspec:
#: gobject.c:1038:4
msgid ""
"One way to avoid using g_object_notify() from within the class that "
"registered the properties, and using g_object_notify_by_pspec() instead, is "
"to store the GParamSpec used with g_object_class_install_property() inside a "
"static array, e.g.:"
msgstr ""

# #used by: g_object_notify_by_pspec:
#: gobject.c:1043:7
msgid "|[ enum { PROP_0, PROP_FOO, PROP_LAST };"
msgstr ""

# #used by: g_object_notify_by_pspec:
#: gobject.c:1051:1
msgid "static GParamSpec *properties[PROP_LAST];"
msgstr ""

# #used by: g_object_notify_by_pspec:
#: gobject.c:1053:12
msgid ""
"static void my_object_class_init (MyObjectClass *klass) { properties"
"[PROP_FOO] = g_param_spec_int (|$_1_$|foo|$_1_$|, |$_1_$|Foo|$_1_$|, |$_1_$|"
"The foo|$_1_$|, 0, 100, 50, G_PARAM_READWRITE); "
"g_object_class_install_property (gobject_class, PROP_FOO, properties"
"[PROP_FOO]); } ]|"
msgstr ""

# #used by: g_object_notify_by_pspec:
#: gobject.c:1066:1
msgid "and then notify a change on the |$_1_$|foo|$_1_$| property with:"
msgstr ""

# #used by: g_object_notify_by_pspec:
#: gobject.c:1068:3
msgid "|[ g_object_notify_by_pspec (self, properties[PROP_FOO]); ]|"
msgstr ""

# #used by: g_object_thaw_notify:
#: gobject.c:1091:3
msgid ""
"Reverts the effect of a previous call to g_object_freeze_notify(). The "
"freeze count is decreased on @object and when it reaches zero, all queued |"
"$_1_$|notify|$_1_$| signals are emitted."
msgstr ""

# #used by: g_object_thaw_notify:
#: gobject.c:1095:1
msgid "It is an error to call this function when the freeze count is zero."
msgstr ""

# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_new: (skip)
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_newv:
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_new_valist: (skip)
#: gobject.c:1284:1 gobject.c:1351:1 gobject.c:1529:1
msgid "@object_type: the type id of the #GObject subtype to instantiate"
msgstr ""

# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_new: (skip)
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_new_valist: (skip)
#: gobject.c:1285:1 gobject.c:1530:1
msgid "@first_property_name: the name of the first property"
msgstr ""

# used by: g_object_new: (skip)
#: gobject.c:1286:2
msgid ""
"@...: the value of the first property, followed optionally by more name/"
"value pairs, followed by %NULL"
msgstr ""

# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_object_new: (skip)
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_object_newv:
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_object_new_valist: (skip)
#: gobject.c:1289:1 gobject.c:1355:1 gobject.c:1534:1
msgid "Creates a new instance of a #GObject subtype and sets its properties."
msgstr ""

# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_object_new: (skip)
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_object_newv:
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_object_new_valist: (skip)
#: gobject.c:1291:2 gobject.c:1357:2 gobject.c:1536:2
msgid ""
"Construction parameters (see #G_PARAM_CONSTRUCT, #G_PARAM_CONSTRUCT_ONLY) "
"which are not explicitly specified are set to their default values."
msgstr ""

# #used by: g_object_new: (skip)
#: gobject.c:1294:1
msgid "Returns: (transfer full): a new instance of @object_type"
msgstr ""

# used by: g_object_newv:
#: gobject.c:1352:1
msgid "@n_parameters: the length of the @parameters array"
msgstr ""

# used by: g_object_newv:
#: gobject.c:1353:1
msgid "@parameters: (array length=n_parameters): an array of #GParameter"
msgstr ""

# #used by: g_object_newv:
#: gobject.c:1360:3
msgid ""
"Rename to: g_object_new Returns: (type GObject.Object) (transfer full): a "
"new instance of @object_type"
msgstr ""

# used by: g_object_new_valist: (skip)
#: gobject.c:1531:2
msgid ""
"@var_args: the value of the first property, followed optionally by more name/"
"value pairs, followed by %NULL"
msgstr ""

# #used by: g_object_new_valist: (skip)
#: gobject.c:1539:1
msgid "Returns: a new instance of @object_type"
msgstr ""

# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_set_valist: (skip)
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_set: (skip)
#: gobject.c:1650:1 gobject.c:1802:1
msgid "@first_property_name: name of the first property to set"
msgstr ""

# used by: g_object_set_valist: (skip)
#: gobject.c:1651:2
msgid ""
"@var_args: value for the first property, followed optionally by more name/"
"value pairs, followed by %NULL"
msgstr ""

# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_object_set_valist: (skip)
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_object_set: (skip)
#: gobject.c:1654:1 gobject.c:1806:1
msgid "Sets properties on an object."
msgstr ""

# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_get_valist: (skip)
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_get: (skip)
#: gobject.c:1726:1 gobject.c:1826:1
msgid "@first_property_name: name of the first property to get"
msgstr ""

# used by: g_object_get_valist: (skip)
#: gobject.c:1727:2
msgid ""
"@var_args: return location for the first property, followed optionally by "
"more name/return location pairs, followed by %NULL"
msgstr ""

# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_object_get_valist: (skip)
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_object_get: (skip)
#: gobject.c:1730:1 gobject.c:1830:1
msgid "Gets properties of an object."
msgstr ""

# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_object_get_valist: (skip)
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_object_get: (skip)
#: gobject.c:1732:3 gobject.c:1832:3
msgid ""
"In general, a copy is made of the property contents and the caller is "
"responsible for freeing the memory in the appropriate manner for the type, "
"for instance by calling g_free() or g_object_unref()."
msgstr ""

# #used by: g_object_get_valist: (skip)
#: gobject.c:1736:1
msgid "See g_object_get()."
msgstr ""

# used by: g_object_set: (skip)
#: gobject.c:1803:2
msgid ""
"@...: value for the first property, followed optionally by more name/value "
"pairs, followed by %NULL"
msgstr ""

# used by: g_object_get: (skip)
#: gobject.c:1827:2
msgid ""
"@...: return location for the first property, followed optionally by more "
"name/return location pairs, followed by %NULL"
msgstr ""

# #used by: g_object_get: (skip)
#: gobject.c:1836:5
msgid ""
"<example> <title>Using g_object_get(<!-- -->)</title> An example of using "
"g_object_get() to get the contents of three properties - one of type "
"#G_TYPE_INT, one of type #G_TYPE_STRING, and one of type #G_TYPE_OBJECT:"
msgstr ""

# #used by: g_object_get: (skip)
#: gobject.c:1857:1
msgid "</example>"
msgstr ""

# used by: g_object_set_property:
#: gobject.c:1877:1
msgid "@property_name: the name of the property to set"
msgstr ""

# #used by: g_object_set_property:
#: gobject.c:1880:1
msgid "Sets a property on an object."
msgstr ""

# used by: g_object_get_property:
#: gobject.c:1924:1
msgid "@property_name: the name of the property to get"
msgstr ""

# used by: g_object_get_property:
#: gobject.c:1925:1
msgid "@value: return location for the property value"
msgstr ""

# #used by: g_object_get_property:
#: gobject.c:1927:3
msgid ""
"Gets a property of an object. @value must have been initialized to the "
"expected type of the property (or a type to which the expected type can be "
"transformed) using g_value_init()."
msgstr ""

# #used by: g_object_get_property:
#: gobject.c:1931:2
msgid ""
"In general, a copy is made of the property contents and the caller is "
"responsible for freeing the memory by calling g_value_unset()."
msgstr ""

# #used by: g_object_get_property:
#: gobject.c:1934:2
msgid ""
"Note that g_object_get_property() is really intended for language bindings, "
"g_object_get() is much more convenient for C programming."
msgstr ""

# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_connect: (skip)
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_disconnect: (skip)
#: gobject.c:2003:1 gobject.c:2155:1
msgid "@signal_spec: the spec for the first signal"
msgstr ""

# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_connect: (skip)
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_disconnect: (skip)
#: gobject.c:2004:3 gobject.c:2156:3
msgid ""
"@...: #GCallback for the first signal, followed by data for the first "
"signal, followed optionally by more signal spec/callback/data triples, "
"followed by %NULL"
msgstr ""

# #used by: g_object_connect: (skip)
#: gobject.c:2008:1
msgid "A convenience function to connect multiple signals at once."
msgstr ""

# #used by: g_object_connect: (skip)
#: gobject.c:2010:59
msgid ""
"The signal specs expected by this function have the form |$_1_$|modifier::"
"signal_name|$_1_$|, where modifier can be one of the following: "
"<variablelist> <varlistentry> <term>signal</term> <listitem><para> "
"equivalent to <literal>g_signal_connect_data (..., NULL, 0)</literal> </"
"para></listitem> </varlistentry> <varlistentry> <term>object_signal</term> "
"<term>object-signal</term> <listitem><para> equivalent to "
"<literal>g_signal_connect_object (..., 0)</literal> </para></listitem> </"
"varlistentry> <varlistentry> <term>swapped_signal</term> <term>swapped-"
"signal</term> <listitem><para> equivalent to <literal>g_signal_connect_data "
"(..., NULL, G_CONNECT_SWAPPED)</literal> </para></listitem> </varlistentry> "
"<varlistentry> <term>swapped_object_signal</term> <term>swapped-object-"
"signal</term> <listitem><para> equivalent to "
"<literal>g_signal_connect_object (..., G_CONNECT_SWAPPED)</literal> </para></"
"listitem> </varlistentry> <varlistentry> <term>signal_after</term> "
"<term>signal-after</term> <listitem><para> equivalent to "
"<literal>g_signal_connect_data (..., NULL, G_CONNECT_AFTER)</literal> </"
"para></listitem> </varlistentry> <varlistentry> <term>object_signal_after</"
"term> <term>object-signal-after</term> <listitem><para> equivalent to "
"<literal>g_signal_connect_object (..., G_CONNECT_AFTER)</literal> </para></"
"listitem> </varlistentry> <varlistentry> <term>swapped_signal_after</term> "
"<term>swapped-signal-after</term> <listitem><para> equivalent to "
"<literal>g_signal_connect_data (..., NULL, G_CONNECT_SWAPPED | "
"G_CONNECT_AFTER)</literal> </para></listitem> </varlistentry> <varlistentry> "
"<term>swapped_object_signal_after</term> <term>swapped-object-signal-after</"
"term> <listitem><para> equivalent to <literal>g_signal_connect_object (..., "
"G_CONNECT_SWAPPED | G_CONNECT_AFTER)</literal> </para></listitem> </"
"varlistentry> </variablelist>"
msgstr ""

# #used by: g_object_connect: (skip)
#: gobject.c:2070:10
msgid ""
"|[ menu->toplevel = g_object_connect (g_object_new (GTK_TYPE_WINDOW, |$_1_$|"
"type|$_1_$|, GTK_WINDOW_POPUP, |$_1_$|child|$_1_$|, menu, NULL), |$_1_$|"
"signal::event|$_1_$|, gtk_menu_window_event, menu, |$_1_$|signal::"
"size_request|$_1_$|, gtk_menu_window_size_request, menu, |$_1_$|signal::"
"destroy|$_1_$|, gtk_widget_destroyed, &amp;menu-&gt;toplevel, NULL); ]|"
msgstr ""

# #used by: g_object_connect: (skip)
#: gobject.c:2081:1
msgid "Returns: (transfer none): @object"
msgstr ""

# #used by: g_object_disconnect: (skip)
#: gobject.c:2160:1
msgid "A convenience function to disconnect multiple signals at once."
msgstr ""

# #used by: g_object_disconnect: (skip)
#: gobject.c:2162:4
msgid ""
"The signal specs expected by this function have the form |$_1_$|any_signal|"
"$_1_$|, which means to disconnect any signal with matching callback and "
"data, or |$_1_$|any_signal::signal_name|$_1_$|, which only disconnects the "
"signal named |$_1_$|signal_name|$_1_$|."
msgstr ""

# used by: g_object_weak_ref: (skip)
#: gobject.c:2237:1
msgid "@object: #GObject to reference weakly"
msgstr ""

# used by: g_object_weak_ref: (skip)
#: gobject.c:2238:1
msgid "@notify: callback to invoke before the object is freed"
msgstr ""

# used by: g_object_weak_ref: (skip)
#: gobject.c:2239:1
msgid "@data: extra data to pass to notify"
msgstr ""

# #used by: g_object_weak_ref: (skip)
#: gobject.c:2241:5
msgid ""
"Adds a weak reference callback to an object. Weak references are used for "
"notification when an object is finalized. They are called |$_1_$|weak "
"references|$_1_$| because they allow you to safely hold a pointer to an "
"object without calling g_object_ref() (g_object_ref() adds a strong "
"reference, that is, forces the object to stay alive)."
msgstr ""

# used by: g_object_weak_unref: (skip)
#: gobject.c:2281:1
msgid "@object: #GObject to remove a weak reference from"
msgstr ""

# used by: g_object_weak_unref: (skip)
#: gobject.c:2282:1
msgid "@notify: callback to search for"
msgstr ""

# used by: g_object_weak_unref: (skip)
#: gobject.c:2283:1
msgid "@data: data to search for"
msgstr ""

# #used by: g_object_weak_unref: (skip)
#: gobject.c:2285:1
msgid "Removes a weak reference callback to an object."
msgstr ""

# used by: g_object_add_weak_pointer: (skip)
#: gobject.c:2323:1
msgid "@object: The object that should be weak referenced."
msgstr ""

# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_add_weak_pointer: (skip)
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_remove_weak_pointer: (skip)
#: gobject.c:2324:1 gobject.c:2346:1
msgid "@weak_pointer_location: (inout): The memory address of a pointer."
msgstr ""

# #used by: g_object_add_weak_pointer: (skip)
#: gobject.c:2326:4
msgid ""
"Adds a weak reference from weak_pointer to @object to indicate that the "
"pointer located at @weak_pointer_location is only valid during the lifetime "
"of @object. When the @object is finalized, @weak_pointer will be set to "
"%NULL."
msgstr ""

# used by: g_object_remove_weak_pointer: (skip)
#: gobject.c:2345:1
msgid "@object: The object that is weak referenced."
msgstr ""

# #used by: g_object_remove_weak_pointer: (skip)
#: gobject.c:2348:3
msgid ""
"Removes a weak reference from @object that was previously added using "
"g_object_add_weak_pointer(). The @weak_pointer_location has to match the one "
"used with g_object_add_weak_pointer()."
msgstr ""

# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_is_floating:
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_ref_sink:
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_ref:
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_unref:
#: gobject.c:2390:1 gobject.c:2409:1 gobject.c:2624:1 gobject.c:2657:1
msgid "@object: (type GObject.Object): a #GObject"
msgstr ""

# #used by: g_object_is_floating:
#: gobject.c:2392:2
msgid ""
"Checks whether @object has a <link linkend=|$_1_$|floating-ref|$_1_$|"
">floating</link> reference."
msgstr ""

# #-#-#-#-#  gobject.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_object_is_floating:
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_object_ref_sink:
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_object_force_floating:
# #-#-#-#-#  gparamspecs.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_gtype: (skip)
#: gobject.c:2395:1 gobject.c:2421:1 gobject.c:2449:1 gparamspecs.c:2325:1
msgid "Since: 2.10"
msgstr ""

# #used by: g_object_is_floating:
#: gobject.c:2397:1
msgid "Returns: %TRUE if @object has a floating reference"
msgstr ""

# #used by: g_object_ref_sink:
#: gobject.c:2411:3
msgid ""
"Increase the reference count of @object, and possibly remove the <link "
"linkend=|$_1_$|floating-ref|$_1_$|>floating</link> reference, if @object has "
"a floating reference."
msgstr ""

# #used by: g_object_ref_sink:
#: gobject.c:2415:5
msgid ""
"In other words, if the object is floating, then this call |$_1_$|assumes "
"ownership|$_1_$| of the floating reference, converting it to a normal "
"reference by clearing the floating flag while leaving the reference count "
"unchanged.  If the object is not floating, then this call adds a new normal "
"reference increasing the reference count by one."
msgstr ""

# #used by: g_object_ref_sink:
#: gobject.c:2423:1
msgid "Returns: (type GObject.Object) (transfer none): @object"
msgstr ""

# #used by: g_object_force_floating:
#: gobject.c:2443:5
msgid ""
"This function is intended for #GObject implementations to re-enforce a <link "
"linkend=|$_1_$|floating-ref|$_1_$|>floating</link> object reference. Doing "
"this is seldomly required: all #GInitiallyUnowned<!-- -->s are created with "
"a floating reference which usually just needs to be sunken by calling "
"g_object_ref_sink()."
msgstr ""

# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_add_toggle_ref: (skip)
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_remove_toggle_ref: (skip)
#: gobject.c:2491:3 gobject.c:2572:3
msgid ""
"@notify: a function to call when this reference is the last reference to the "
"object, or is no longer the last reference."
msgstr ""

# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_add_toggle_ref: (skip)
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_remove_toggle_ref: (skip)
#: gobject.c:2494:1 gobject.c:2575:1
msgid "@data: data to pass to @notify"
msgstr ""

# #used by: g_object_add_toggle_ref: (skip)
#: gobject.c:2496:4
msgid ""
"Increases the reference count of the object by one and sets a callback to be "
"called when all other references to the object are dropped, or when this is "
"already the last reference to the object and another reference is "
"established."
msgstr ""

# #used by: g_object_add_toggle_ref: (skip)
#: gobject.c:2501:5
msgid ""
"This functionality is intended for binding @object to a proxy object managed "
"by another memory manager. This is done with two paired references: the "
"strong reference added by g_object_add_toggle_ref() and a reverse reference "
"to the proxy object which is either a strong reference or weak reference."
msgstr ""

# #used by: g_object_add_toggle_ref: (skip)
#: gobject.c:2507:7
msgid ""
"The setup is that when there are no other references to @object, only a weak "
"reference is held in the reverse direction from @object to the proxy object, "
"but when there are other references held to @object, a strong reference is "
"held. The @notify callback is called when the reference from @object to the "
"proxy object should be <firstterm>toggled</firstterm> from strong to weak "
"(@is_last_ref true) or weak to strong (@is_last_ref false)."
msgstr ""

# #used by: g_object_add_toggle_ref: (skip)
#: gobject.c:2515:3
msgid ""
"Since a (normal) reference must be held to the object before calling "
"g_object_toggle_ref(), the initial state of the reverse link is always "
"strong."
msgstr ""

# #used by: g_object_add_toggle_ref: (skip)
#: gobject.c:2519:5
msgid ""
"Multiple toggle references may be added to the same gobject, however if "
"there are multiple toggle references to an object, none of them will ever be "
"notified until all but one are removed.  For this reason, you should only "
"ever use a toggle reference if there is important state in the proxy object."
msgstr ""

# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_object_add_toggle_ref: (skip)
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_object_remove_toggle_ref: (skip)
#: gobject.c:2525:1 gobject.c:2580:1
msgid "Since: 2.8"
msgstr ""

# #used by: g_object_remove_toggle_ref: (skip)
#: gobject.c:2577:2
msgid ""
"Removes a reference added with g_object_add_toggle_ref(). The reference "
"count of the object is decreased by one."
msgstr ""

# #used by: g_object_ref:
#: gobject.c:2626:1
msgid "Increases the reference count of @object."
msgstr ""

# #used by: g_object_ref:
#: gobject.c:2628:1
msgid "Returns: (type GObject.Object) (transfer none): the same @object"
msgstr ""

# #used by: g_object_unref:
#: gobject.c:2659:2
msgid ""
"Decreases the reference count of @object. When its reference count drops to "
"0, the object is finalized (i.e. its memory is freed)."
msgstr ""

# used by: g_clear_object: (skip)
#: gobject.c:2754:1
msgid "@object_ptr: a pointer to a #GObject reference"
msgstr ""

# #used by: g_clear_object: (skip)
#: gobject.c:2756:1
msgid "Clears a reference to a #GObject."
msgstr ""

# #used by: g_clear_object: (skip)
#: gobject.c:2758:1
msgid "@object_ptr must not be %NULL."
msgstr ""

# #used by: g_clear_object: (skip)
#: gobject.c:2760:3
msgid ""
"If the reference is %NULL then this function does nothing. Otherwise, the "
"reference count of the object is decreased and the pointer is set to %NULL."
msgstr ""

# #used by: g_clear_object: (skip)
#: gobject.c:2764:2
msgid ""
"This function is threadsafe and modifies the pointer atomically, using "
"memory barriers where needed."
msgstr ""

# #used by: g_clear_object: (skip)
#: gobject.c:2767:2
msgid ""
"A macro is also included that allows this function to be used without "
"pointer casts."
msgstr ""

# #-#-#-#-#  gobject.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_clear_object: (skip)
# #-#-#-#-#  gsignal.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_accumulator_first_wins:
#: gobject.c:2770:1 gsignal.c:3462:1
msgid "Since: 2.28"
msgstr ""

# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_get_qdata:
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_steal_qdata:
#: gobject.c:2792:1 gobject.c:2864:1
msgid "@object: The GObject to get a stored user data pointer from"
msgstr ""

# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_get_qdata:
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_set_qdata: (skip)
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_set_qdata_full: (skip)
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_steal_qdata:
#: gobject.c:2793:1 gobject.c:2812:1 gobject.c:2838:1 gobject.c:2865:1
msgid "@quark: A #GQuark, naming the user data pointer"
msgstr ""

# #used by: g_object_get_qdata:
#: gobject.c:2795:2
msgid ""
"This function gets back user data pointers stored via g_object_set_qdata()."
msgstr ""

# #used by: g_object_get_qdata:
#: gobject.c:2798:1
msgid "Returns: (transfer none): The user data pointer set, or %NULL"
msgstr ""

# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_set_qdata: (skip)
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_set_qdata_full: (skip)
#: gobject.c:2811:1 gobject.c:2837:1
msgid "@object: The GObject to set store a user data pointer"
msgstr ""

# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_set_qdata: (skip)
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_set_qdata_full: (skip)
#: gobject.c:2813:1 gobject.c:2839:1
msgid "@data: An opaque user data pointer"
msgstr ""

# #used by: g_object_set_qdata: (skip)
#: gobject.c:2815:8
msgid ""
"This sets an opaque, named pointer on an object. The name is specified "
"through a #GQuark (retrived e.g. via g_quark_from_static_string()), and the "
"pointer can be gotten back from the @object with g_object_get_qdata() until "
"the @object is finalized. Setting a previously set user data pointer, "
"overrides (frees) the old pointer set, using #NULL as pointer essentially "
"removes the data stored."
msgstr ""

# used by: g_object_set_qdata_full: (skip)
#: gobject.c:2840:2
msgid ""
"@destroy: Function to invoke with @data as argument, when @data needs to be "
"freed"
msgstr ""

# #used by: g_object_set_qdata_full: (skip)
#: gobject.c:2843:5
msgid ""
"This function works like g_object_set_qdata(), but in addition, a void "
"(*destroy) (gpointer) function may be specified which is called with @data "
"as argument when the @object is finalized, or the data is being overwritten "
"by a call to g_object_set_qdata() with the same @quark."
msgstr ""

# #used by: g_object_steal_qdata:
#: gobject.c:2867:15
msgid ""
"This function gets back user data pointers stored via g_object_set_qdata() "
"and removes the @data from object without invoking its destroy() function "
"(if any was set). Usually, calling this function is only required to update "
"user data pointers with a destroy notifier, for example: |[ void "
"object_add_to_user_list (GObject     *object, const gchar *new_string) { // "
"the quark, naming the object data GQuark quark_string_list = "
"g_quark_from_static_string (|$_1_$|my-string-list|$_1_$|); // retrive the "
"old string list GList *list = g_object_steal_qdata (object, "
"quark_string_list);"
msgstr ""

# #used by: g_object_steal_qdata:
#: gobject.c:2883:9
msgid ""
"// prepend new string list = g_list_prepend (list, g_strdup "
"(new_string)); // this changed 'list', so we need to set it again "
"g_object_set_qdata_full (object, quark_string_list, list, "
"free_string_list); } static void free_string_list (gpointer data) { GList "
"*node, *list = data;"
msgstr ""

# #used by: g_object_steal_qdata:
#: gobject.c:2893:9
msgid ""
"for (node = list; node; node = node->next) g_free (node->data); g_list_free "
"(list); } ]| Using g_object_get_qdata() in the above example, instead of "
"g_object_steal_qdata() would have left the destroy function set, and thus "
"the partial string list would have been freed upon g_object_set_qdata_full()."
msgstr ""

# #used by: g_object_steal_qdata:
#: gobject.c:2903:1
msgid "Returns: (transfer full): The user data pointer set, or %NULL"
msgstr ""

# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_get_data:
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_set_data_full: (skip)
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_steal_data:
#: gobject.c:2917:1 gobject.c:2963:1 gobject.c:2989:1
msgid "@object: #GObject containing the associations"
msgstr ""

# used by: g_object_get_data:
#: gobject.c:2918:1
msgid "@key: name of the key for that association"
msgstr ""

# #used by: g_object_get_data:
#: gobject.c:2920:1
msgid ""
"Gets a named field from the objects table of associations (see "
"g_object_set_data())."
msgstr ""

# #used by: g_object_get_data:
#: gobject.c:2922:1
msgid ""
"Returns: (transfer none): the data if found, or %NULL if no such data exists."
msgstr ""

# used by: g_object_set_data:
#: gobject.c:2940:1
msgid "@object: #GObject containing the associations."
msgstr ""

# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_set_data:
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_set_data_full: (skip)
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_steal_data:
#: gobject.c:2941:1 gobject.c:2964:1 gobject.c:2990:1
msgid "@key: name of the key"
msgstr ""

# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_set_data:
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_object_set_data_full: (skip)
#: gobject.c:2942:1 gobject.c:2965:1
msgid "@data: data to associate with that key"
msgstr ""

# #used by: g_object_set_data:
#: gobject.c:2944:2
msgid ""
"Each object carries around a table of associations from strings to "
"pointers.  This function lets you set an association."
msgstr ""

# #used by: g_object_set_data:
#: gobject.c:2947:2
msgid ""
"If the object already had an association with that name, the old association "
"will be destroyed."
msgstr ""

# used by: g_object_set_data_full: (skip)
#: gobject.c:2966:1
msgid "@destroy: function to call when the association is destroyed"
msgstr ""

# #used by: g_object_set_data_full: (skip)
#: gobject.c:2968:3
msgid ""
"Like g_object_set_data() except it adds notification for when the "
"association is destroyed, either by setting it to a different value or when "
"the object is destroyed."
msgstr ""

# #used by: g_object_set_data_full: (skip)
#: gobject.c:2972:1
msgid "Note that the @destroy callback is not called if @data is %NULL."
msgstr ""

# #used by: g_object_steal_data:
#: gobject.c:2992:2
msgid ""
"Remove a specified datum from the object's data associations, without "
"invoking the association's destroy handler."
msgstr ""

# #used by: g_object_steal_data:
#: gobject.c:2995:1
msgid ""
"Returns: (transfer full): the data if found, or %NULL if no such data exists."
msgstr ""

# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_set_object:
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_set_object_take_ownership: (skip)
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_take_object: (skip)
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_get_object:
#: gobject.c:3104:1 gobject.c:3146:1 gobject.c:3162:1 gobject.c:3198:1
msgid "@value: a valid #GValue of %G_TYPE_OBJECT derived type"
msgstr ""

# used by: g_value_set_object:
#: gobject.c:3105:1
msgid "@v_object: (type GObject.Object): object value to be set"
msgstr ""

# #used by: g_value_set_object:
#: gobject.c:3107:1
msgid "Set the contents of a %G_TYPE_OBJECT derived #GValue to @v_object."
msgstr ""

# #used by: g_value_set_object:
#: gobject.c:3109:5
msgid ""
"g_value_set_object() increases the reference count of @v_object (the #GValue "
"holds a reference to @v_object).  If you do not wish to increase the "
"reference count of the object (i.e. you wish to pass your current reference "
"to the #GValue because you no longer need it), use g_value_take_object() "
"instead."
msgstr ""

# #used by: g_value_set_object:
#: gobject.c:3115:3
msgid ""
"It is important that your #GValue holds a reference to @v_object (either its "
"own, or one it has taken) to ensure that the object won't be destroyed while "
"the #GValue still exists)."
msgstr ""

# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_set_object_take_ownership: (skip)
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_take_object: (skip)
#: gobject.c:3147:1 gobject.c:3163:1
msgid "@v_object: object value to be set"
msgstr ""

# #used by: g_value_set_object_take_ownership: (skip)
#: gobject.c:3151:1
msgid "Deprecated: 2.4: Use g_value_take_object() instead."
msgstr ""

# #used by: g_value_take_object: (skip)
#: gobject.c:3165:4
msgid ""
"Sets the contents of a %G_TYPE_OBJECT derived #GValue to @v_object and takes "
"over the ownership of the callers reference to @v_object; the caller doesn't "
"have to unref it any more (i.e. the reference count of the object is not "
"increased)."
msgstr ""

# #used by: g_value_take_object: (skip)
#: gobject.c:3170:2
msgid ""
"If you want the #GValue to hold its own reference to @v_object, use "
"g_value_set_object() instead."
msgstr ""

# #used by: g_value_get_object:
#: gobject.c:3200:1
msgid "Get the contents of a %G_TYPE_OBJECT derived #GValue."
msgstr ""

# #used by: g_value_get_object:
#: gobject.c:3202:1
msgid ""
"Returns: (type GObject.Object) (transfer none): object contents of @value"
msgstr ""

# used by: g_value_dup_object:
#: gobject.c:3214:1
msgid "@value: a valid #GValue whose type is derived from %G_TYPE_OBJECT"
msgstr ""

# #used by: g_value_dup_object:
#: gobject.c:3216:3
msgid ""
"Get the contents of a %G_TYPE_OBJECT derived #GValue, increasing its "
"reference count. If the contents of the #GValue are %NULL, then %NULL will "
"be returned."
msgstr ""

# #used by: g_value_dup_object:
#: gobject.c:3220:2
msgid ""
"Returns: (type GObject.Object) (transfer full): object content of @value, "
"should be unreferenced when no longer needed."
msgstr ""

# #-#-#-#-#  gobject.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_connect_object: (skip)
# #-#-#-#-#  gsignal.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_connect_closure_by_id:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_connect_closure:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_connect_data:
#: gobject.c:3233:1 gsignal.c:2101:1 gsignal.c:2156:1 gsignal.c:2214:1
msgid "@instance: the instance to connect to."
msgstr ""

# #-#-#-#-#  gobject.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_connect_object: (skip)
# #-#-#-#-#  gsignal.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_parse_name:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_stop_emission_by_name:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_connect_closure:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_connect_data:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_emit_by_name:
#: gobject.c:3234:1 gsignal.c:1018:1 gsignal.c:1063:1 gsignal.c:2157:1
#: gsignal.c:2215:1 gsignal.c:3047:1
msgid ""
"@detailed_signal: a string of the form |$_1_$|signal-name::detail|$_1_$|."
msgstr ""

# #-#-#-#-#  gobject.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_connect_object: (skip)
# #-#-#-#-#  gsignal.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_connect_data:
#: gobject.c:3235:1 gsignal.c:2216:1
msgid "@c_handler: the #GCallback to connect."
msgstr ""

# used by: g_signal_connect_object: (skip)
#: gobject.c:3236:1
msgid "@gobject: the object to pass as data to @c_handler."
msgstr ""

# used by: g_signal_connect_object: (skip)
#: gobject.c:3237:1
msgid "@connect_flags: a combination of #GConnnectFlags."
msgstr ""

# #used by: g_signal_connect_object: (skip)
#: gobject.c:3239:3
msgid ""
"This is similar to g_signal_connect_data(), but uses a closure which ensures "
"that the @gobject stays alive during the call to @c_handler by temporarily "
"adding a reference count to @gobject."
msgstr ""

# #used by: g_signal_connect_object: (skip)
#: gobject.c:3243:10
msgid ""
"Note that there is a bug in GObject that makes this function much less "
"useful than it might seem otherwise. Once @gobject is disposed, the callback "
"will no longer be called, but, the signal handler is <emphasis>not</"
"emphasis> currently disconnected. If the @instance is itself being freed at "
"the same time than this doesn't matter, since the signal will automatically "
"be removed, but if @instance persists, then the signal handler will leak. "
"You should not remove the signal yourself because in a future versions of "
"GObject, the handler <emphasis>will</emphasis> automatically be disconnected."
msgstr ""

# #used by: g_signal_connect_object: (skip)
#: gobject.c:3254:3
msgid ""
"It's possible to work around this problem in a way that will continue to "
"work with future versions of GObject by checking that the signal handler is "
"still connected before disconnected it:"
msgstr ""

# #used by: g_signal_connect_object: (skip)
#: gobject.c:3262:1
msgid "Returns: the handler id."
msgstr ""

# used by: g_object_watch_closure:
#: gobject.c:3358:1
msgid "@object: GObject restricting lifetime of @closure"
msgstr ""

# used by: g_object_watch_closure:
#: gobject.c:3359:1
msgid "@closure: GClosure to watch"
msgstr ""

# #used by: g_object_watch_closure:
#: gobject.c:3361:9
msgid ""
"This function essentially limits the life time of the @closure to the life "
"time of the object. That is, when the object is finalized, the @closure is "
"invalidated by calling g_closure_invalidate() on it, in order to prevent "
"invocations of the closure with a finalized (nonexisting) object. Also, "
"g_object_ref() and g_object_unref() are added as marshal guards to the "
"@closure, to ensure that an extra reference count is held on @object during "
"invocation of the @closure.  Usually, this function will be called on "
"closures that use this @object as closure data."
msgstr ""

# used by: g_closure_new_object:
#: gobject.c:3411:2
msgid ""
"@object: a #GObject pointer to store in the @data field of the newly "
"allocated #GClosure"
msgstr ""

# #used by: g_closure_new_object:
#: gobject.c:3414:4
msgid ""
"A variant of g_closure_new_simple() which stores @object in the @data field "
"of the closure and calls g_object_watch_closure() on @object and the created "
"closure. This function is mainly useful when implementing new types of "
"closures."
msgstr ""

# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_new_object: (skip)
# #-#-#-#-#  gobject.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_cclosure_new_object_swap: (skip)
#: gobject.c:3439:1 gobject.c:3468:1
msgid "@object: a #GObject pointer to pass to @callback_func"
msgstr ""

# #used by: g_cclosure_new_object: (skip)
#: gobject.c:3441:5
msgid ""
"A variant of g_cclosure_new() which uses @object as @user_data and calls "
"g_object_watch_closure() on @object and the created closure. This function "
"is useful when you have a callback closely associated with a #GObject, and "
"want the callback to no longer run after the object is is freed."
msgstr ""

# #used by: g_cclosure_new_object_swap: (skip)
#: gobject.c:3470:5
msgid ""
"A variant of g_cclosure_new_swap() which uses @object as @user_data and "
"calls g_object_watch_closure() on @object and the created closure. This "
"function is useful when you have a callback closely associated with a "
"#GObject, and want the callback to no longer run after the object is is "
"freed."
msgstr ""

# used by: SECTION:gparamspec
#: gparam.c:35:1
msgid "@short_description: Metadata for parameter specifications"
msgstr ""

# used by: SECTION:gparamspec
#: gparam.c:36:3
msgid ""
"@see_also: g_object_class_install_property(), g_object_set(), g_object_get"
"(), g_object_set_property(), g_object_get_property(), "
"g_value_register_transform_func()"
msgstr ""

# used by: SECTION:gparamspec
#: gparam.c:39:1
msgid "@title: GParamSpec"
msgstr ""

# #used by: SECTION:gparamspec
#: gparam.c:41:2
msgid ""
"#GParamSpec is an object structure that encapsulates the metadata required "
"to specify parameters, such as e.g. #GObject properties."
msgstr ""

# #used by: SECTION:gparamspec
#: gparam.c:44:7
msgid ""
"<para id=|$_1_$|canonical-parameter-name|$_1_$|> Parameter names need to "
"start with a letter (a-z or A-Z). Subsequent characters can be letters, "
"numbers or a '-'. All other characters are replaced by a '-' during "
"construction. The result of this replacement is called the canonical name of "
"the parameter. </para>"
msgstr ""

# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_ref: (skip)
# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_unref: (skip)
# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_sink:
# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_ref_sink: (skip)
# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_get_name:
# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_get_nick:
# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_get_blurb:
# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_get_qdata:
# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_value_set_default:
# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_value_defaults:
# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_value_validate:
# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_value_convert:
#: gparam.c:191:1 gparam.c:210:1 gparam.c:232:1 gparam.c:259:1 gparam.c:279:1
#: gparam.c:295:1 gparam.c:322:1 gparam.c:457:1 gparam.c:579:1 gparam.c:598:1
#: gparam.c:626:1 gparam.c:660:1
msgid "@pspec: a valid #GParamSpec"
msgstr ""

# #used by: g_param_spec_ref: (skip)
#: gparam.c:193:1
msgid "Increments the reference count of @pspec."
msgstr ""

# #used by: g_param_spec_ref: (skip)
#: gparam.c:195:1
msgid "Returns: the #GParamSpec that was passed into this function"
msgstr ""

# #used by: g_param_spec_unref: (skip)
#: gparam.c:212:1
msgid "Decrements the reference count of a @pspec."
msgstr ""

# #used by: g_param_spec_sink:
#: gparam.c:234:7
msgid ""
"The initial reference count of a newly created #GParamSpec is 1, even though "
"no one has explicitly called g_param_spec_ref() on it yet. So the initial "
"reference count is flagged as |$_1_$|floating|$_1_$|, until someone calls "
"<literal>g_param_spec_ref (pspec); g_param_spec_sink (pspec);</literal> in "
"sequence on it, taking over the initial reference count (thus ending up with "
"a @pspec that has a reference count of 1 still, but is not flagged |$_1_$|"
"floating|$_1_$| anymore)."
msgstr ""

# #used by: g_param_spec_ref_sink: (skip)
#: gparam.c:261:1
msgid "Convenience function to ref and sink a #GParamSpec."
msgstr ""

# #used by: g_param_spec_ref_sink: (skip)
#: gparam.c:263:2
msgid "Since: 2.10 Returns: the #GParamSpec that was passed into this function"
msgstr ""

# #used by: g_param_spec_get_name:
#: gparam.c:281:1
msgid "Get the name of a #GParamSpec."
msgstr ""

# #used by: g_param_spec_get_name:
#: gparam.c:283:1
msgid "Returns: the name of @pspec."
msgstr ""

# #used by: g_param_spec_get_nick:
#: gparam.c:297:1
msgid "Get the nickname of a #GParamSpec."
msgstr ""

# #used by: g_param_spec_get_nick:
#: gparam.c:299:1
msgid "Returns: the nickname of @pspec."
msgstr ""

# #used by: g_param_spec_get_blurb:
#: gparam.c:324:1
msgid "Get the short description of a #GParamSpec."
msgstr ""

# #used by: g_param_spec_get_blurb:
#: gparam.c:326:1
msgid "Returns: the short description of @pspec."
msgstr ""

# used by: g_param_spec_internal: (skip)
#: gparam.c:385:1
msgid ""
"@param_type: the #GType for the property; must be derived from #G_TYPE_PARAM"
msgstr ""

# used by: g_param_spec_internal: (skip)
#: gparam.c:386:1
msgid "@name: the canonical name of the property"
msgstr ""

# used by: g_param_spec_internal: (skip)
#: gparam.c:387:1
msgid "@nick: the nickname of the property"
msgstr ""

# used by: g_param_spec_internal: (skip)
#: gparam.c:388:1
msgid "@blurb: a short description of the property"
msgstr ""

# used by: g_param_spec_internal: (skip)
#: gparam.c:389:1
msgid "@flags: a combination of #GParamFlags"
msgstr ""

# #used by: g_param_spec_internal: (skip)
#: gparam.c:391:1
msgid "Creates a new #GParamSpec instance."
msgstr ""

# #used by: g_param_spec_internal: (skip)
#: gparam.c:393:4
msgid ""
"A property name consists of segments consisting of ASCII letters and digits, "
"separated by either the '-' or '_' character. The first character of a "
"property name must be a letter. Names which violate these rules lead to "
"undefined behaviour."
msgstr ""

# #used by: g_param_spec_internal: (skip)
#: gparam.c:398:4
msgid ""
"When creating and looking up a #GParamSpec, either separator can be used, "
"but they cannot be mixed. Using '-' is considerably more efficient and in "
"fact required when using property names as detail strings for signals."
msgstr ""

# #used by: g_param_spec_internal: (skip)
#: gparam.c:403:5
msgid ""
"Beyond the name, #GParamSpec<!-- -->s have two more descriptive strings "
"associated with them, the @nick, which should be suitable for use as a label "
"for the property in a property editor, and the @blurb, which should be a "
"somewhat longer description, suitable for e.g. a tooltip. The @nick and "
"@blurb should ideally be localized."
msgstr ""

# #used by: g_param_spec_internal: (skip)
#: gparam.c:409:1
msgid "Returns: a newly allocated #GParamSpec instance"
msgstr ""

# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_get_qdata:
# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_set_qdata:
# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_set_qdata_full: (skip)
# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_steal_qdata:
#: gparam.c:458:1 gparam.c:476:1 gparam.c:500:1 gparam.c:526:1
msgid "@quark: a #GQuark, naming the user data pointer"
msgstr ""

# #used by: g_param_spec_get_qdata:
#: gparam.c:460:1
msgid "Gets back user data pointers stored via g_param_spec_set_qdata()."
msgstr ""

# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_get_qdata:
# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_steal_qdata:
#: gparam.c:462:1 gparam.c:533:1
msgid "Returns: (transfer none): the user data pointer set, or %NULL"
msgstr ""

# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_set_qdata:
# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_set_qdata_full: (skip)
#: gparam.c:475:1 gparam.c:499:1
msgid "@pspec: the #GParamSpec to set store a user data pointer"
msgstr ""

# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_set_qdata:
# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_set_qdata_full: (skip)
#: gparam.c:477:1 gparam.c:501:1
msgid "@data: an opaque user data pointer"
msgstr ""

# #used by: g_param_spec_set_qdata:
#: gparam.c:479:6
msgid ""
"Sets an opaque, named pointer on a #GParamSpec. The name is specified "
"through a #GQuark (retrieved e.g. via g_quark_from_static_string()), and the "
"pointer can be gotten back from the @pspec with g_param_spec_get_qdata().  "
"Setting a previously set user data pointer, overrides (frees) the old "
"pointer set, using %NULL as pointer essentially removes the data stored."
msgstr ""

# used by: g_param_spec_set_qdata_full: (skip)
#: gparam.c:502:2
msgid ""
"@destroy: function to invoke with @data as argument, when @data needs to be "
"freed"
msgstr ""

# #used by: g_param_spec_set_qdata_full: (skip)
#: gparam.c:505:5
msgid ""
"This function works like g_param_spec_set_qdata(), but in addition, a "
"<literal>void (*destroy) (gpointer)</literal> function may be specified "
"which is called with @data as argument when the @pspec is finalized, or the "
"data is being overwritten by a call to g_param_spec_set_qdata() with the "
"same @quark."
msgstr ""

# used by: g_param_spec_steal_qdata:
#: gparam.c:525:1
msgid "@pspec: the #GParamSpec to get a stored user data pointer from"
msgstr ""

# #used by: g_param_spec_steal_qdata:
#: gparam.c:528:4
msgid ""
"Gets back user data pointers stored via g_param_spec_set_qdata() and removes "
"the @data from @pspec without invoking its destroy() function (if any was "
"set).  Usually, calling this function is only required to update user data "
"pointers with a destroy notifier."
msgstr ""

# used by: g_param_spec_get_redirect_target:
#: gparam.c:547:1
msgid "@pspec: a #GParamSpec"
msgstr ""

# #used by: g_param_spec_get_redirect_target:
#: gparam.c:549:7
msgid ""
"If the paramspec redirects operations to another paramspec, returns that "
"paramspec. Redirect is used typically for providing a new implementation of "
"a property in a derived type while preserving all the properties from the "
"parent type. Redirection is established by creating a property of type "
"#GParamSpecOverride. See g_object_class_override_property() for an example "
"of the use of this capability."
msgstr ""

# #used by: g_param_spec_get_redirect_target:
#: gparam.c:559:2
msgid ""
"Returns: (transfer none): paramspec to which requests on this paramspec "
"should be redirected, or %NULL if none."
msgstr ""

# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_value_set_default:
# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_value_defaults:
# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_value_validate:
#: gparam.c:580:1 gparam.c:599:1 gparam.c:627:1
msgid "@value: a #GValue of correct type for @pspec"
msgstr ""

# #used by: g_param_value_set_default:
#: gparam.c:582:1
msgid "Sets @value to its default value as specified in @pspec."
msgstr ""

# #used by: g_param_value_defaults:
#: gparam.c:601:1
msgid ""
"Checks whether @value contains the default value as specified in @pspec."
msgstr ""

# #used by: g_param_value_defaults:
#: gparam.c:603:1
msgid "Returns: whether @value contains the canonical default for this @pspec"
msgstr ""

# #used by: g_param_value_validate:
#: gparam.c:629:6
msgid ""
"Ensures that the contents of @value comply with the specifications set out "
"by @pspec. For example, a #GParamSpecInt might require that integers stored "
"in @value may not be smaller than -42 and not be greater than +42. If @value "
"contains an integer outside of this range, it is modified accordingly, so "
"the resulting value will fit into the range -42 .. +42."
msgstr ""

# #used by: g_param_value_validate:
#: gparam.c:636:1
msgid "Returns: whether modifying @value was necessary to ensure validity"
msgstr ""

# used by: g_param_value_convert:
#: gparam.c:661:1
msgid "@src_value: souce #GValue"
msgstr ""

# used by: g_param_value_convert:
#: gparam.c:662:1
msgid "@dest_value: destination #GValue of correct type for @pspec"
msgstr ""

# used by: g_param_value_convert:
#: gparam.c:663:2
msgid ""
"@strict_validation: %TRUE requires @dest_value to conform to @pspec without "
"modifications"
msgstr ""

# #used by: g_param_value_convert:
#: gparam.c:666:4
msgid ""
"Transforms @src_value into @dest_value if possible, and then validates "
"@dest_value, in order for it to conform to @pspec.  If @strict_validation is "
"%TRUE this function will only succeed if the transformed @dest_value "
"complied to @pspec without modifications."
msgstr ""

# #used by: g_param_value_convert:
#: gparam.c:671:2
msgid ""
"See also g_value_type_transformable(), g_value_transform() and "
"g_param_value_validate()."
msgstr ""

# #used by: g_param_value_convert:
#: gparam.c:674:2
msgid ""
"Returns: %TRUE if transformation and validation were successful, %FALSE "
"otherwise and @dest_value is left untouched."
msgstr ""

# used by: g_param_values_cmp:
#: gparam.c:713:3
msgid ""
"@pspec: a valid #GParamSpec @value1: a #GValue of correct type for @pspec "
"@value2: a #GValue of correct type for @pspec"
msgstr ""

# #used by: g_param_values_cmp:
#: gparam.c:717:3
msgid ""
"Compares @value1 with @value2 according to @pspec, and return -1, 0 or +1, "
"if @value1 is found to be less than, equal to or greater than @value2, "
"respectively."
msgstr ""

# #used by: g_param_values_cmp:
#: gparam.c:721:1
msgid "Returns: -1, 0 or +1, for a less than, equal to or greater than result"
msgstr ""

# #used by: GParamSpecPool:
#: gparam.c:843:4
msgid ""
"A #GParamSpecPool maintains a collection of #GParamSpec<!-- -->s which can "
"be quickly accessed by owner and name. The implementation of the #GObject "
"property system uses such a pool to store the #GParamSpecs of the properties "
"all object types."
msgstr ""

# used by: g_param_spec_pool_new:
#: gparam.c:881:1
msgid ""
"@type_prefixing: Whether the pool will support type-prefixed property names."
msgstr ""

# #used by: g_param_spec_pool_new:
#: gparam.c:883:1
msgid "Creates a new #GParamSpecPool."
msgstr ""

# #used by: g_param_spec_pool_new:
#: gparam.c:885:4
msgid ""
"If @type_prefixing is %TRUE, lookups in the newly created pool will allow to "
"specify the owner as a colon-separated prefix of the property name, like |"
"$_1_$|GtkContainer:border-width|$_1_$|. This feature is deprecated, so you "
"should always set @type_prefixing to %FALSE."
msgstr ""

# #used by: g_param_spec_pool_new:
#: gparam.c:890:1
msgid "Returns: (transfer none): a newly allocated #GParamSpecPool."
msgstr ""

# used by: g_param_spec_pool_insert:
#: gparam.c:907:1
msgid "@pool: a #GParamSpecPool."
msgstr ""

# used by: g_param_spec_pool_insert:
#: gparam.c:908:1
msgid "@pspec: the #GParamSpec to insert"
msgstr ""

# used by: g_param_spec_pool_insert:
#: gparam.c:909:1
msgid "@owner_type: a #GType identifying the owner of @pspec"
msgstr ""

# #used by: g_param_spec_pool_insert:
#: gparam.c:911:1
msgid "Inserts a #GParamSpec in the pool."
msgstr ""

# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_pool_remove:
# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_pool_lookup:
# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_pool_list_owned:
# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_pool_list:
#: gparam.c:949:1 gparam.c:1025:1 gparam.c:1115:1 gparam.c:1256:1
msgid "@pool: a #GParamSpecPool"
msgstr ""

# used by: g_param_spec_pool_remove:
#: gparam.c:950:1
msgid "@pspec: the #GParamSpec to remove"
msgstr ""

# #used by: g_param_spec_pool_remove:
#: gparam.c:952:1
msgid "Removes a #GParamSpec from the pool."
msgstr ""

# used by: g_param_spec_pool_lookup:
#: gparam.c:1026:1
msgid "@param_name: the name to look for"
msgstr ""

# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_pool_lookup:
# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_pool_list_owned:
# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_pool_list:
#: gparam.c:1027:1 gparam.c:1116:1 gparam.c:1257:1
msgid "@owner_type: the owner to look for"
msgstr ""

# used by: g_param_spec_pool_lookup:
#: gparam.c:1028:2
msgid ""
"@walk_ancestors: If %TRUE, also try to find a #GParamSpec with @param_name "
"owned by an ancestor of @owner_type."
msgstr ""

# #used by: g_param_spec_pool_lookup:
#: gparam.c:1031:1
msgid "Looks up a #GParamSpec in the pool."
msgstr ""

# #used by: g_param_spec_pool_lookup:
#: gparam.c:1033:2
msgid ""
"Returns: (transfer none): The found #GParamSpec, or %NULL if no matching "
"#GParamSpec was found."
msgstr ""

# #used by: g_param_spec_pool_list_owned:
#: gparam.c:1118:2
msgid ""
"Gets an #GList of all #GParamSpec<!-- -->s owned by @owner_type in the pool."
msgstr ""

# #used by: g_param_spec_pool_list_owned:
#: gparam.c:1121:3
msgid ""
"Returns: (transfer container) (element-type GObject.ParamSpec): a #GList of "
"all #GParamSpec<!-- -->s owned by @owner_type in the pool#GParamSpec<!-- --"
">s."
msgstr ""

# used by: g_param_spec_pool_list:
#: gparam.c:1258:1
msgid ""
"@n_pspecs_p: (out): return location for the length of the returned array"
msgstr ""

# #used by: g_param_spec_pool_list:
#: gparam.c:1260:2
msgid ""
"Gets an array of all #GParamSpec<!-- -->s owned by @owner_type in the pool."
msgstr ""

# #used by: g_param_spec_pool_list:
#: gparam.c:1263:3
msgid ""
"Returns: (array length=n_pspecs_p) (transfer container): a newly allocated "
"array containing pointers to all #GParamSpecs owned by @owner_type in the "
"pool"
msgstr ""

# used by: g_param_type_register_static:
#: gparam.c:1362:1
msgid ""
"@name: 0-terminated string used as the name of the new #GParamSpec type."
msgstr ""

# used by: g_param_type_register_static:
#: gparam.c:1363:1
msgid "@pspec_info: The #GParamSpecTypeInfo for this #GParamSpec type."
msgstr ""

# #used by: g_param_type_register_static:
#: gparam.c:1365:4
msgid ""
"Registers @name as the name of a new static type derived from #G_TYPE_PARAM. "
"The type system uses the information contained in the #GParamSpecTypeInfo "
"structure pointed to by @info to manage the #GParamSpec type and its "
"instances."
msgstr ""

# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_set_param:
# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_set_param_take_ownership: (skip)
# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_take_param: (skip)
#: gparam.c:1414:1 gparam.c:1436:1 gparam.c:1452:1
msgid "@value: a valid #GValue of type %G_TYPE_PARAM"
msgstr ""

# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_set_param:
# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_set_param_take_ownership: (skip)
# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_take_param: (skip)
#: gparam.c:1415:1 gparam.c:1437:1 gparam.c:1453:1
msgid "@param: the #GParamSpec to be set"
msgstr ""

# #used by: g_value_set_param:
#: gparam.c:1417:1
msgid "Set the contents of a %G_TYPE_PARAM #GValue to @param."
msgstr ""

# #used by: g_value_set_param_take_ownership: (skip)
#: gparam.c:1441:1
msgid "Deprecated: 2.4: Use g_value_take_param() instead."
msgstr ""

# #used by: g_value_take_param: (skip)
#: gparam.c:1455:3
msgid ""
"Sets the contents of a %G_TYPE_PARAM #GValue to @param and takes over the "
"ownership of the callers reference to @param; the caller doesn't have to "
"unref it any more."
msgstr ""

# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_get_param:
# #-#-#-#-#  gparam.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_dup_param: (skip)
#: gparam.c:1476:1 gparam.c:1492:1
msgid "@value: a valid #GValue whose type is derived from %G_TYPE_PARAM"
msgstr ""

# #used by: g_value_get_param:
#: gparam.c:1478:1
msgid "Get the contents of a %G_TYPE_PARAM #GValue."
msgstr ""

# #used by: g_value_get_param:
#: gparam.c:1480:1
msgid "Returns: (transfer none): #GParamSpec content of @value"
msgstr ""

# #used by: g_value_dup_param: (skip)
#: gparam.c:1494:2
msgid ""
"Get the contents of a %G_TYPE_PARAM #GValue, increasing its reference count."
msgstr ""

# #used by: g_value_dup_param: (skip)
#: gparam.c:1497:2
msgid ""
"Returns: #GParamSpec content of @value, should be unreferenced when no "
"longer needed."
msgstr ""

# used by: SECTION:param_value_types
#: gparamspecs.c:36:1
msgid "@short_description: Standard Parameter and Value Types"
msgstr ""

# used by: SECTION:param_value_types
#: gparamspecs.c:37:1
msgid "@see_also: #GParamSpec, #GValue, g_object_class_install_property()."
msgstr ""

# used by: SECTION:param_value_types
#: gparamspecs.c:38:1
msgid "@title: Parameters and Values"
msgstr ""

# #used by: SECTION:param_value_types
#: gparamspecs.c:40:7
msgid ""
"#GValue provides an abstract container structure which can be copied, "
"transformed and compared while holding a value of any (derived) type, which "
"is registered as a #GType with a #GTypeValueTable in its #GTypeInfo "
"structure.  Parameter specifications for most value types can be created as "
"#GParamSpec derived instances, to implement e.g. #GObject properties which "
"operate on #GValue containers."
msgstr ""

# #used by: SECTION:param_value_types
#: gparamspecs.c:48:3
msgid ""
"Parameter names need to start with a letter (a-z or A-Z). Subsequent "
"characters can be letters, numbers or a '-'. All other characters are "
"replaced by a '-' during construction."
msgstr ""

# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_char: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_uchar: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_boolean: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_int: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_uint: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_long: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_ulong: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_int64: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_uint64: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_unichar: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_enum: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_flags: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_float: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_double: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_string: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_param: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_boxed: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_pointer: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_gtype: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_value_array: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_object: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_variant: (skip)
#: gparamspecs.c:1595:1 gparamspecs.c:1635:1 gparamspecs.c:1675:1
#: gparamspecs.c:1712:1 gparamspecs.c:1754:1 gparamspecs.c:1796:1
#: gparamspecs.c:1838:1 gparamspecs.c:1881:1 gparamspecs.c:1923:1
#: gparamspecs.c:1966:1 gparamspecs.c:2002:1 gparamspecs.c:2048:1
#: gparamspecs.c:2094:1 gparamspecs.c:2136:1 gparamspecs.c:2179:1
#: gparamspecs.c:2211:1 gparamspecs.c:2247:1 gparamspecs.c:2284:1
#: gparamspecs.c:2313:1 gparamspecs.c:2351:1 gparamspecs.c:2395:1
#: gparamspecs.c:2474:1
msgid "@name: canonical name of the property specified"
msgstr ""

# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_char: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_uchar: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_boolean: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_int: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_uint: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_long: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_ulong: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_int64: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_uint64: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_unichar: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_enum: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_flags: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_float: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_double: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_string: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_param: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_boxed: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_pointer: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_gtype: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_value_array: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_object: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_variant: (skip)
#: gparamspecs.c:1596:1 gparamspecs.c:1636:1 gparamspecs.c:1676:1
#: gparamspecs.c:1713:1 gparamspecs.c:1755:1 gparamspecs.c:1797:1
#: gparamspecs.c:1839:1 gparamspecs.c:1882:1 gparamspecs.c:1924:1
#: gparamspecs.c:1967:1 gparamspecs.c:2003:1 gparamspecs.c:2049:1
#: gparamspecs.c:2095:1 gparamspecs.c:2137:1 gparamspecs.c:2180:1
#: gparamspecs.c:2212:1 gparamspecs.c:2248:1 gparamspecs.c:2285:1
#: gparamspecs.c:2314:1 gparamspecs.c:2352:1 gparamspecs.c:2396:1
#: gparamspecs.c:2475:1
msgid "@nick: nick name for the property specified"
msgstr ""

# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_char: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_uchar: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_boolean: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_int: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_uint: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_long: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_ulong: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_int64: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_uint64: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_unichar: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_enum: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_flags: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_float: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_double: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_string: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_param: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_boxed: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_pointer: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_gtype: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_value_array: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_object: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_variant: (skip)
#: gparamspecs.c:1597:1 gparamspecs.c:1637:1 gparamspecs.c:1677:1
#: gparamspecs.c:1714:1 gparamspecs.c:1756:1 gparamspecs.c:1798:1
#: gparamspecs.c:1840:1 gparamspecs.c:1883:1 gparamspecs.c:1925:1
#: gparamspecs.c:1968:1 gparamspecs.c:2004:1 gparamspecs.c:2050:1
#: gparamspecs.c:2096:1 gparamspecs.c:2138:1 gparamspecs.c:2181:1
#: gparamspecs.c:2213:1 gparamspecs.c:2249:1 gparamspecs.c:2286:1
#: gparamspecs.c:2315:1 gparamspecs.c:2353:1 gparamspecs.c:2397:1
#: gparamspecs.c:2476:1
msgid "@blurb: description of the property specified"
msgstr ""

# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_char: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_uchar: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_int: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_uint: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_long: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_ulong: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_int64: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_uint64: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_float: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_double: (skip)
#: gparamspecs.c:1598:1 gparamspecs.c:1638:1 gparamspecs.c:1715:1
#: gparamspecs.c:1757:1 gparamspecs.c:1799:1 gparamspecs.c:1841:1
#: gparamspecs.c:1884:1 gparamspecs.c:1926:1 gparamspecs.c:2097:1
#: gparamspecs.c:2139:1
msgid "@minimum: minimum value for the property specified"
msgstr ""

# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_char: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_uchar: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_int: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_uint: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_long: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_ulong: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_int64: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_uint64: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_float: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_double: (skip)
#: gparamspecs.c:1599:1 gparamspecs.c:1639:1 gparamspecs.c:1716:1
#: gparamspecs.c:1758:1 gparamspecs.c:1800:1 gparamspecs.c:1842:1
#: gparamspecs.c:1885:1 gparamspecs.c:1927:1 gparamspecs.c:2098:1
#: gparamspecs.c:2140:1
msgid "@maximum: maximum value for the property specified"
msgstr ""

# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_char: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_uchar: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_boolean: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_int: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_uint: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_long: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_ulong: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_int64: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_uint64: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_unichar: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_enum: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_flags: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_float: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_double: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_string: (skip)
#: gparamspecs.c:1600:1 gparamspecs.c:1640:1 gparamspecs.c:1678:1
#: gparamspecs.c:1717:1 gparamspecs.c:1759:1 gparamspecs.c:1801:1
#: gparamspecs.c:1843:1 gparamspecs.c:1886:1 gparamspecs.c:1928:1
#: gparamspecs.c:1969:1 gparamspecs.c:2006:1 gparamspecs.c:2052:1
#: gparamspecs.c:2099:1 gparamspecs.c:2141:1 gparamspecs.c:2182:1
msgid "@default_value: default value for the property specified"
msgstr ""

# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_char: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_uchar: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_boolean: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_int: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_uint: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_long: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_ulong: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_int64: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_uint64: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_unichar: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_enum: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_flags: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_float: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_double: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_string: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_param: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_boxed: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_pointer: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_gtype: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_value_array: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_object: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_param_spec_variant: (skip)
#: gparamspecs.c:1601:1 gparamspecs.c:1641:1 gparamspecs.c:1679:1
#: gparamspecs.c:1718:1 gparamspecs.c:1760:1 gparamspecs.c:1802:1
#: gparamspecs.c:1844:1 gparamspecs.c:1887:1 gparamspecs.c:1929:1
#: gparamspecs.c:1970:1 gparamspecs.c:2007:1 gparamspecs.c:2053:1
#: gparamspecs.c:2100:1 gparamspecs.c:2142:1 gparamspecs.c:2183:1
#: gparamspecs.c:2215:1 gparamspecs.c:2251:1 gparamspecs.c:2287:1
#: gparamspecs.c:2318:1 gparamspecs.c:2356:1 gparamspecs.c:2399:1
#: gparamspecs.c:2480:1
msgid "@flags: flags for the property specified"
msgstr ""

# #used by: g_param_spec_char: (skip)
#: gparamspecs.c:1603:1
msgid ""
"Creates a new #GParamSpecChar instance specifying a %G_TYPE_CHAR property."
msgstr ""

# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_char: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_uchar: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_boolean: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_int: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_uint: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_long: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_ulong: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_int64: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_uint64: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_unichar: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_enum: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_flags: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_float: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_double: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_string: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_param: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_boxed: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_pointer: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_gtype: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_value_array: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_object: (skip)
#: gparamspecs.c:1605:1 gparamspecs.c:1645:1 gparamspecs.c:1686:1
#: gparamspecs.c:1724:1 gparamspecs.c:1766:1 gparamspecs.c:1808:1
#: gparamspecs.c:1851:1 gparamspecs.c:1893:1 gparamspecs.c:1936:1
#: gparamspecs.c:1978:1 gparamspecs.c:2014:1 gparamspecs.c:2060:1
#: gparamspecs.c:2106:1 gparamspecs.c:2149:1 gparamspecs.c:2189:1
#: gparamspecs.c:2222:1 gparamspecs.c:2258:1 gparamspecs.c:2293:1
#: gparamspecs.c:2327:1 gparamspecs.c:2365:1 gparamspecs.c:2406:1
msgid "Returns: a newly created parameter specification"
msgstr ""

# #used by: g_param_spec_uchar: (skip)
#: gparamspecs.c:1643:1
msgid ""
"Creates a new #GParamSpecUChar instance specifying a %G_TYPE_UCHAR property."
msgstr ""

# #used by: g_param_spec_boolean: (skip)
#: gparamspecs.c:1681:2
msgid ""
"Creates a new #GParamSpecBoolean instance specifying a %G_TYPE_BOOLEAN "
"property."
msgstr ""

# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_boolean: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_int: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_uint: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_long: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_ulong: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_int64: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_uint64: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_unichar: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_enum: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_flags: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_float: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_double: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_string: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_param: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_boxed: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_pointer: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_gtype: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_value_array: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_object: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_variant: (skip)
#: gparamspecs.c:1684:1 gparamspecs.c:1722:1 gparamspecs.c:1764:1
#: gparamspecs.c:1806:1 gparamspecs.c:1849:1 gparamspecs.c:1891:1
#: gparamspecs.c:1934:1 gparamspecs.c:1976:1 gparamspecs.c:2012:1
#: gparamspecs.c:2058:1 gparamspecs.c:2104:1 gparamspecs.c:2147:1
#: gparamspecs.c:2187:1 gparamspecs.c:2220:1 gparamspecs.c:2256:1
#: gparamspecs.c:2291:1 gparamspecs.c:2323:1 gparamspecs.c:2363:1
#: gparamspecs.c:2404:1 gparamspecs.c:2487:1
msgid "See g_param_spec_internal() for details on property names."
msgstr ""

# #used by: g_param_spec_int: (skip)
#: gparamspecs.c:1720:1
msgid ""
"Creates a new #GParamSpecInt instance specifying a %G_TYPE_INT property."
msgstr ""

# #used by: g_param_spec_uint: (skip)
#: gparamspecs.c:1762:1
msgid ""
"Creates a new #GParamSpecUInt instance specifying a %G_TYPE_UINT property."
msgstr ""

# #used by: g_param_spec_long: (skip)
#: gparamspecs.c:1804:1
msgid ""
"Creates a new #GParamSpecLong instance specifying a %G_TYPE_LONG property."
msgstr ""

# #used by: g_param_spec_ulong: (skip)
#: gparamspecs.c:1846:2
msgid ""
"Creates a new #GParamSpecULong instance specifying a %G_TYPE_ULONG property."
msgstr ""

# #used by: g_param_spec_int64: (skip)
#: gparamspecs.c:1889:1
msgid ""
"Creates a new #GParamSpecInt64 instance specifying a %G_TYPE_INT64 property."
msgstr ""

# #used by: g_param_spec_uint64: (skip)
#: gparamspecs.c:1931:2
msgid ""
"Creates a new #GParamSpecUInt64 instance specifying a %G_TYPE_UINT64 "
"property."
msgstr ""

# #used by: g_param_spec_unichar: (skip)
#: gparamspecs.c:1972:3
msgid ""
"Creates a new #GParamSpecUnichar instance specifying a %G_TYPE_UINT "
"property. #GValue structures for this property can be accessed with "
"g_value_set_uint() and g_value_get_uint()."
msgstr ""

# used by: g_param_spec_enum: (skip)
#: gparamspecs.c:2005:1
msgid "@enum_type: a #GType derived from %G_TYPE_ENUM"
msgstr ""

# #used by: g_param_spec_enum: (skip)
#: gparamspecs.c:2009:2
msgid ""
"Creates a new #GParamSpecEnum instance specifying a %G_TYPE_ENUM property."
msgstr ""

# used by: g_param_spec_flags: (skip)
#: gparamspecs.c:2051:1
msgid "@flags_type: a #GType derived from %G_TYPE_FLAGS"
msgstr ""

# #used by: g_param_spec_flags: (skip)
#: gparamspecs.c:2055:2
msgid ""
"Creates a new #GParamSpecFlags instance specifying a %G_TYPE_FLAGS property."
msgstr ""

# #used by: g_param_spec_float: (skip)
#: gparamspecs.c:2102:1
msgid ""
"Creates a new #GParamSpecFloat instance specifying a %G_TYPE_FLOAT property."
msgstr ""

# #used by: g_param_spec_double: (skip)
#: gparamspecs.c:2144:2
msgid ""
"Creates a new #GParamSpecDouble instance specifying a %G_TYPE_DOUBLE "
"property."
msgstr ""

# #used by: g_param_spec_string: (skip)
#: gparamspecs.c:2185:1
msgid "Creates a new #GParamSpecString instance."
msgstr ""

# used by: g_param_spec_param: (skip)
#: gparamspecs.c:2214:1
msgid "@param_type: a #GType derived from %G_TYPE_PARAM"
msgstr ""

# #used by: g_param_spec_param: (skip)
#: gparamspecs.c:2217:2
msgid ""
"Creates a new #GParamSpecParam instance specifying a %G_TYPE_PARAM property."
msgstr ""

# used by: g_param_spec_boxed: (skip)
#: gparamspecs.c:2250:1
msgid "@boxed_type: %G_TYPE_BOXED derived type of this property"
msgstr ""

# #used by: g_param_spec_boxed: (skip)
#: gparamspecs.c:2253:2
msgid ""
"Creates a new #GParamSpecBoxed instance specifying a %G_TYPE_BOXED derived "
"property."
msgstr ""

# #used by: g_param_spec_pointer: (skip)
#: gparamspecs.c:2289:1
msgid "Creates a new #GParamSpecPoiner instance specifying a pointer property."
msgstr ""

# used by: g_param_spec_gtype: (skip)
#: gparamspecs.c:2316:2
msgid ""
"@is_a_type: a #GType whose subtypes are allowed as values of the property "
"(use %G_TYPE_NONE for any type)"
msgstr ""

# #used by: g_param_spec_gtype: (skip)
#: gparamspecs.c:2320:2
msgid ""
"Creates a new #GParamSpecGType instance specifying a %G_TYPE_GTYPE property."
msgstr ""

# used by: g_param_spec_value_array: (skip)
#: gparamspecs.c:2354:2
msgid ""
"@element_spec: a #GParamSpec describing the elements contained in arrays of "
"this property, may be %NULL"
msgstr ""

# #used by: g_param_spec_value_array: (skip)
#: gparamspecs.c:2358:4
msgid ""
"Creates a new #GParamSpecValueArray instance specifying a "
"%G_TYPE_VALUE_ARRAY property. %G_TYPE_VALUE_ARRAY is a %G_TYPE_BOXED type, "
"as such, #GValue structures for this property can be accessed with "
"g_value_set_boxed() and g_value_get_boxed()."
msgstr ""

# used by: g_param_spec_object: (skip)
#: gparamspecs.c:2398:1
msgid "@object_type: %G_TYPE_OBJECT derived type of this property"
msgstr ""

# #used by: g_param_spec_object: (skip)
#: gparamspecs.c:2401:2
msgid ""
"Creates a new #GParamSpecBoxed instance specifying a %G_TYPE_OBJECT derived "
"property."
msgstr ""

# used by: g_param_spec_override: (skip)
#: gparamspecs.c:2431:1
msgid "@name: the name of the property."
msgstr ""

# used by: g_param_spec_override: (skip)
#: gparamspecs.c:2432:1
msgid "@overridden: The property that is being overridden"
msgstr ""

# #used by: g_param_spec_override: (skip)
#: gparamspecs.c:2434:3
msgid ""
"Creates a new property of type #GParamSpecOverride. This is used to direct "
"operations to another paramspec, and will not be directly useful unless you "
"are implementing a new base type similar to GObject."
msgstr ""

# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_override: (skip)
# #-#-#-#-#  gparamspecs.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_param_spec_variant: (skip)
#: gparamspecs.c:2440:1 gparamspecs.c:2489:1
msgid "Returns: the newly created #GParamSpec"
msgstr ""

# used by: g_param_spec_variant: (skip)
#: gparamspecs.c:2477:1
msgid "@type: a #GVariantType"
msgstr ""

# used by: g_param_spec_variant: (skip)
#: gparamspecs.c:2478:2
msgid ""
"@default_value: (allow-none): a #GVariant of type @type to use as the "
"default value, or %NULL"
msgstr ""

# #used by: g_param_spec_variant: (skip)
#: gparamspecs.c:2482:2
msgid ""
"Creates a new #GParamSpecVariant instance specifying a #GVariant property."
msgstr ""

# #used by: g_param_spec_variant: (skip)
#: gparamspecs.c:2485:1
msgid "If @default_value is floating, it is consumed."
msgstr ""

# used by: SECTION:signals
#: gsignal.c:44:2
msgid ""
"@short_description: A means for customization of object behaviour and a "
"general purpose notification mechanism"
msgstr ""

# used by: SECTION:signals
#: gsignal.c:46:1
msgid "@title: Signals"
msgstr ""

# #used by: SECTION:signals
#: gsignal.c:48:20
msgid ""
"The basic concept of the signal system is that of the <emphasis>emission</"
"emphasis> of a signal. Signals are introduced per-type and are identified "
"through strings.  Signals introduced for a parent type are available in "
"derived types as well, so basically they are a per-type facility that is "
"inherited.  A signal emission mainly involves invocation of a certain set of "
"callbacks in precisely defined manner. There are two main categories of such "
"callbacks, per-object <footnote><para>Although signals can deal with any "
"kind of instantiatable type, i'm referring to those types as |$_1_$|object "
"types|$_1_$| in the following, simply because that is the context most users "
"will encounter signals in. </para></footnote> ones and user provided ones. "
"The per-object callbacks are most often referred to as |$_1_$|object method "
"handler|$_1_$| or |$_1_$|default (signal) handler|$_1_$|, while user "
"provided callbacks are usually just called |$_1_$|signal handler|$_1_$|. The "
"object method handler is provided at signal creation time (this most "
"frequently happens at the end of an object class' creation), while user "
"provided handlers are frequently connected and disconnected to/from a "
"certain signal on certain object instances."
msgstr ""

# #used by: SECTION:signals
#: gsignal.c:69:35
msgid ""
"A signal emission consists of five stages, unless prematurely stopped: "
"<variablelist> <varlistentry><term></term><listitem><para> 1 - Invocation of "
"the object method handler for %G_SIGNAL_RUN_FIRST signals </para></"
"listitem></varlistentry> <varlistentry><term></term><listitem><para> 2 - "
"Invocation of normal user-provided signal handlers (<emphasis>after</"
"emphasis> flag %FALSE) </para></listitem></varlistentry> "
"<varlistentry><term></term><listitem><para> 3 - Invocation of the object "
"method handler for %G_SIGNAL_RUN_LAST signals </para></listitem></"
"varlistentry> <varlistentry><term></term><listitem><para> 4 - Invocation of "
"user provided signal handlers, connected with an <emphasis>after</emphasis> "
"flag of %TRUE </para></listitem></varlistentry> <varlistentry><term></"
"term><listitem><para> 5 - Invocation of the object method handler for "
"%G_SIGNAL_RUN_CLEANUP signals </para></listitem></varlistentry> </"
"variablelist> The user-provided signal handlers are called in the order they "
"were connected in. All handlers may prematurely stop a signal emission, and "
"any number of handlers may be connected, disconnected, blocked or unblocked "
"during a signal emission. There are certain criteria for skipping user "
"handlers in stages 2 and 4 of a signal emission. First, user handlers may be "
"<emphasis>blocked</emphasis>, blocked handlers are omitted during callback "
"invocation, to return from the |$_1_$|blocked|$_1_$| state, a handler has to "
"get unblocked exactly the same amount of times it has been blocked before. "
"Second, upon emission of a %G_SIGNAL_DETAILED signal, an additional |$_1_$|"
"detail|$_1_$| argument passed in to g_signal_emit() has to match the detail "
"argument of the signal handler currently subject to invocation. "
"Specification of no detail argument for signal handlers (omission of the "
"detail part of the signal specification upon connection) serves as a "
"wildcard and matches any detail argument passed in to emission."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_stop_emission:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_stop_emission_by_name:
#: gsignal.c:810:1 gsignal.c:1062:1
msgid "@instance: the object whose signal handlers you wish to stop."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_stop_emission:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_add_emission_hook:
#: gsignal.c:811:1 gsignal.c:879:1
msgid "@signal_id: the signal identifier, as returned by g_signal_lookup()."
msgstr ""

# used by: g_signal_stop_emission:
#: gsignal.c:812:1
msgid "@detail: the detail which the signal was emitted with."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_stop_emission:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_stop_emission_by_name:
#: gsignal.c:814:1 gsignal.c:1065:1
msgid "Stops a signal's current emission."
msgstr ""

# #used by: g_signal_stop_emission:
#: gsignal.c:816:3
msgid ""
"This will prevent the default method from running, if the signal was "
"%G_SIGNAL_RUN_LAST and you connected normally (i.e. without the |$_1_$|after|"
"$_1_$| flag)."
msgstr ""

# #used by: g_signal_stop_emission:
#: gsignal.c:820:1
msgid "Prints a warning if used on a signal which isn't being emitted."
msgstr ""

# used by: g_signal_add_emission_hook:
#: gsignal.c:880:1
msgid "@detail: the detail on which to call the hook."
msgstr ""

# used by: g_signal_add_emission_hook:
#: gsignal.c:881:1
msgid "@hook_func: a #GSignalEmissionHook function."
msgstr ""

# used by: g_signal_add_emission_hook:
#: gsignal.c:882:1
msgid "@hook_data: user data for @hook_func."
msgstr ""

# used by: g_signal_add_emission_hook:
#: gsignal.c:883:1
msgid "@data_destroy: a #GDestroyNotify for @hook_data."
msgstr ""

# #used by: g_signal_add_emission_hook:
#: gsignal.c:885:3
msgid ""
"Adds an emission hook for a signal, which will get called for any emission "
"of that signal, independent of the instance. This is possible only for "
"signals which don't have #G_SIGNAL_NO_HOOKS flag set."
msgstr ""

# #used by: g_signal_add_emission_hook:
#: gsignal.c:889:1
msgid ""
"Returns: the hook id, for later use with g_signal_remove_emission_hook()."
msgstr ""

# used by: g_signal_remove_emission_hook:
#: gsignal.c:948:1
msgid "@signal_id: the id of the signal"
msgstr ""

# used by: g_signal_remove_emission_hook:
#: gsignal.c:949:2
msgid ""
"@hook_id: the id of the emission hook, as returned by "
"g_signal_add_emission_hook()"
msgstr ""

# #used by: g_signal_remove_emission_hook:
#: gsignal.c:952:1
msgid "Deletes an emission hook."
msgstr ""

# used by: g_signal_parse_name:
#: gsignal.c:1019:1
msgid ""
"@itype: The interface/instance type that introduced |$_1_$|signal-name|$_1_"
"$|."
msgstr ""

# used by: g_signal_parse_name:
#: gsignal.c:1020:1
msgid "@signal_id_p: Location to store the signal id."
msgstr ""

# used by: g_signal_parse_name:
#: gsignal.c:1021:1
msgid "@detail_p: Location to store the detail quark."
msgstr ""

# used by: g_signal_parse_name:
#: gsignal.c:1022:1
msgid "@force_detail_quark: %TRUE forces creation of a #GQuark for the detail."
msgstr ""

# #used by: g_signal_parse_name:
#: gsignal.c:1024:2
msgid ""
"Internal function to parse a signal name into its @signal_id and @detail "
"quark."
msgstr ""

# #used by: g_signal_parse_name:
#: gsignal.c:1027:1
msgid ""
"Returns: Whether the signal name could successfully be parsed and "
"@signal_id_p and @detail_p contain valid return values."
msgstr ""

# #used by: g_signal_stop_emission_by_name:
#: gsignal.c:1067:2
msgid ""
"This is just like g_signal_stop_emission() except it will look up the signal "
"id for you."
msgstr ""

# used by: g_signal_lookup:
#: gsignal.c:1117:1
msgid "@name: the signal's name."
msgstr ""

# used by: g_signal_lookup:
#: gsignal.c:1118:1
msgid "@itype: the type that the signal operates on."
msgstr ""

# #used by: g_signal_lookup:
#: gsignal.c:1120:3
msgid ""
"Given the name of the signal and the type of object it connects to, gets the "
"signal's identifying integer. Emitting the signal by number is somewhat "
"faster than using the name each time."
msgstr ""

# #used by: g_signal_lookup:
#: gsignal.c:1124:1
msgid "Also tries the ancestors of the given type."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_lookup:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_newv:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_new_valist:
#: gsignal.c:1126:1 gsignal.c:1507:1 gsignal.c:1667:1
msgid "See g_signal_new() for details on allowed signal names."
msgstr ""

# #used by: g_signal_lookup:
#: gsignal.c:1128:1
msgid "Returns: the signal's identifying number, or 0 if no signal was found."
msgstr ""

# used by: g_signal_list_ids:
#: gsignal.c:1160:1
msgid "@itype: Instance or interface type."
msgstr ""

# used by: g_signal_list_ids:
#: gsignal.c:1161:1
msgid "@n_ids: Location to store the number of signal ids for @itype."
msgstr ""

# #used by: g_signal_list_ids:
#: gsignal.c:1163:3
msgid ""
"Lists the signals by id that a certain instance or interface type created. "
"Further information about the signals can be acquired through g_signal_query"
"()."
msgstr ""

# #used by: g_signal_list_ids:
#: gsignal.c:1167:1
msgid "Returns: Newly allocated array of signal IDs."
msgstr ""

# used by: g_signal_name:
#: gsignal.c:1218:1
msgid "@signal_id: the signal's identifying number."
msgstr ""

# #used by: g_signal_name:
#: gsignal.c:1220:1
msgid "Given the signal's identifier, finds its name."
msgstr ""

# #used by: g_signal_name:
#: gsignal.c:1222:1
msgid ""
"Two different signals may have the same name, if they have differing types."
msgstr ""

# #used by: g_signal_name:
#: gsignal.c:1224:1
msgid "Returns: the signal name, or %NULL if the signal number was invalid."
msgstr ""

# used by: g_signal_query:
#: gsignal.c:1242:1
msgid "@signal_id: The signal id of the signal to query information for."
msgstr ""

# used by: g_signal_query:
#: gsignal.c:1243:2
msgid ""
"@query: A user provided structure that is filled in with constant values "
"upon success."
msgstr ""

# #used by: g_signal_query:
#: gsignal.c:1246:6
msgid ""
"Queries the signal system for in-depth information about a specific signal. "
"This function will fill in a user-provided structure to hold signal-specific "
"information. If an invalid signal id is passed in, the @signal_id member of "
"the #GSignalQuery is 0. All members filled into the #GSignalQuery structure "
"should be considered constant and have to be left untouched."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_new:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_new_class_handler:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_newv:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_new_valist:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_override_class_handler:
#: gsignal.c:1280:1 gsignal.c:1358:1 gsignal.c:1489:1 gsignal.c:1649:1
#: gsignal.c:1803:1
msgid "@signal_name: the name for the signal"
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_new:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_new_class_handler:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_new_valist:
#: gsignal.c:1281:2 gsignal.c:1359:2 gsignal.c:1650:2
msgid ""
"@itype: the type this signal pertains to. It will also pertain to types "
"which are derived from this type."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_new:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_new_class_handler:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_new_valist:
#: gsignal.c:1283:3 gsignal.c:1361:3 gsignal.c:1652:3
msgid ""
"@signal_flags: a combination of #GSignalFlags specifying detail of when the "
"default handler is to be invoked. You should at least specify "
"%G_SIGNAL_RUN_FIRST or %G_SIGNAL_RUN_LAST."
msgstr ""

# used by: g_signal_new:
#: gsignal.c:1286:3
msgid ""
"@class_offset: The offset of the function pointer in the class structure for "
"this type. Used to invoke a class method generically. Pass 0 to not "
"associate a class method slot with this signal."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_new:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_new_class_handler:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_new_valist:
#: gsignal.c:1289:1 gsignal.c:1367:1 gsignal.c:1656:1
msgid "@accumulator: the accumulator for this signal; may be %NULL."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_new:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_new_class_handler:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_new_valist:
#: gsignal.c:1290:1 gsignal.c:1368:1 gsignal.c:1657:1
msgid "@accu_data: user data for the @accumulator."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_new:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_new_class_handler:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_new_valist:
#: gsignal.c:1291:2 gsignal.c:1369:2 gsignal.c:1658:2
msgid ""
"@c_marshaller: the function to translate arrays of parameter values to "
"signal emissions into C language callback invocations."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_new:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_new_class_handler:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_new_valist:
#: gsignal.c:1293:2 gsignal.c:1371:2 gsignal.c:1660:2
msgid ""
"@return_type: the type of return value, or #G_TYPE_NONE for a signal without "
"a return value."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_new:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_new_class_handler:
#: gsignal.c:1295:1 gsignal.c:1373:1
msgid "@n_params: the number of parameter types to follow."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_new:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_new_class_handler:
#: gsignal.c:1296:1 gsignal.c:1374:1
msgid "@...: a list of types, one for each parameter."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_new:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_new_class_handler:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_newv:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_new_valist:
#: gsignal.c:1298:1 gsignal.c:1376:1 gsignal.c:1505:1 gsignal.c:1665:1
msgid "Creates a new signal. (This is usually done in the class initializer.)"
msgstr ""

# #used by: g_signal_new:
#: gsignal.c:1300:4
msgid ""
"A signal name consists of segments consisting of ASCII letters and digits, "
"separated by either the '-' or '_' character. The first character of a "
"signal name must be a letter. Names which violate these rules lead to "
"undefined behaviour of the GSignal system."
msgstr ""

# #used by: g_signal_new:
#: gsignal.c:1305:2
msgid ""
"When registering a signal and looking up a signal, either separator can be "
"used, but they cannot be mixed."
msgstr ""

# #used by: g_signal_new:
#: gsignal.c:1308:4
msgid ""
"If 0 is used for @class_offset subclasses cannot override the class handler "
"in their <code>class_init</code> method by doing <code>super_class-"
">signal_handler = my_signal_handler</code>. Instead they will have to use "
"g_signal_override_class_handler()."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_new:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_new_class_handler:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_newv:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_new_valist:
#: gsignal.c:1313:1 gsignal.c:1390:1 gsignal.c:1509:1 gsignal.c:1669:1
msgid "Returns: the signal id"
msgstr ""

# used by: g_signal_new_class_handler:
#: gsignal.c:1364:3
msgid ""
"@class_handler: a #GCallback which acts as class implementation of this "
"signal. Used to invoke a class method generically. Pass %NULL to not "
"associate a class method with this signal."
msgstr ""

# #used by: g_signal_new_class_handler:
#: gsignal.c:1378:9
msgid ""
"This is a variant of g_signal_new() that takes a C callback instead off a "
"class offset for the signal's class handler. This function doesn't need a "
"function pointer exposed in the class structure of an object definition, "
"instead the function pointer is passed directly and can be overriden by "
"derived classes with g_signal_override_class_closure() or "
"g_signal_override_class_handler()and chained to with "
"g_signal_chain_from_overridden() or g_signal_chain_from_overridden_handler()."
msgstr ""

# #used by: g_signal_new_class_handler:
#: gsignal.c:1388:1
msgid "See g_signal_new() for information about signal names."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_new_class_handler:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_override_class_handler:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_chain_from_overridden_handler:
#: gsignal.c:1392:1 gsignal.c:1817:1 gsignal.c:1925:1
msgid "Since: 2.18"
msgstr ""

# used by: g_signal_newv:
#: gsignal.c:1490:2
msgid ""
"@itype: the type this signal pertains to. It will also pertain to types "
"which are derived from this type"
msgstr ""

# used by: g_signal_newv:
#: gsignal.c:1492:3
msgid ""
"@signal_flags: a combination of #GSignalFlags specifying detail of when the "
"default handler is to be invoked. You should at least specify "
"%G_SIGNAL_RUN_FIRST or %G_SIGNAL_RUN_LAST"
msgstr ""

# used by: g_signal_newv:
#: gsignal.c:1495:1
msgid "@class_closure: The closure to invoke on signal emission; may be %NULL"
msgstr ""

# used by: g_signal_newv:
#: gsignal.c:1496:1
msgid "@accumulator: the accumulator for this signal; may be %NULL"
msgstr ""

# used by: g_signal_newv:
#: gsignal.c:1497:1
msgid "@accu_data: user data for the @accumulator"
msgstr ""

# used by: g_signal_newv:
#: gsignal.c:1498:2
msgid ""
"@c_marshaller: the function to translate arrays of parameter values to "
"signal emissions into C language callback invocations"
msgstr ""

# used by: g_signal_newv:
#: gsignal.c:1500:2
msgid ""
"@return_type: the type of return value, or #G_TYPE_NONE for a signal without "
"a return value"
msgstr ""

# used by: g_signal_newv:
#: gsignal.c:1502:1
msgid "@n_params: the length of @param_types"
msgstr ""

# used by: g_signal_newv:
#: gsignal.c:1503:1
msgid "@param_types: an array of types, one for each parameter"
msgstr ""

# used by: g_signal_new_valist:
#: gsignal.c:1655:1
msgid "@class_closure: The closure to invoke on signal emission; may be %NULL."
msgstr ""

# used by: g_signal_new_valist:
#: gsignal.c:1662:1
msgid "@n_params: the number of parameter types in @args."
msgstr ""

# used by: g_signal_new_valist:
#: gsignal.c:1663:1
msgid "@args: va_list of #GType, one for each parameter."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_override_class_closure:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_emitv:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_emit_valist:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_emit:
#: gsignal.c:1762:1 gsignal.c:2794:1 gsignal.c:2894:1 gsignal.c:3020:1
msgid "@signal_id: the signal id"
msgstr ""

# used by: g_signal_override_class_closure:
#: gsignal.c:1763:2
msgid ""
"@instance_type: the instance type on which to override the class closure for "
"the signal."
msgstr ""

# used by: g_signal_override_class_closure:
#: gsignal.c:1765:1
msgid "@class_closure: the closure."
msgstr ""

# #used by: g_signal_override_class_closure:
#: gsignal.c:1767:3
msgid ""
"Overrides the class closure (i.e. the default handler) for the given signal "
"for emissions on instances of @instance_type. @instance_type must be derived "
"from the type to which the signal belongs."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_override_class_closure:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_override_class_handler:
#: gsignal.c:1771:3 gsignal.c:1813:3
msgid ""
"See g_signal_chain_from_overridden() and "
"g_signal_chain_from_overridden_handler() for how to chain up to the parent "
"class closure from inside the overridden one."
msgstr ""

# used by: g_signal_override_class_handler:
#: gsignal.c:1804:2
msgid ""
"@instance_type: the instance type on which to override the class handler for "
"the signal."
msgstr ""

# used by: g_signal_override_class_handler:
#: gsignal.c:1806:1
msgid "@class_handler: the handler."
msgstr ""

# #used by: g_signal_override_class_handler:
#: gsignal.c:1808:4
msgid ""
"Overrides the class closure (i.e. the default handler) for the given signal "
"for emissions on instances of @instance_type with callabck @class_handler. "
"@instance_type must be derived from the type to which the signal belongs."
msgstr ""

# used by: g_signal_chain_from_overridden:
#: gsignal.c:1843:3
msgid ""
"@instance_and_params: the argument list of the signal emission. The first "
"element in the array is a #GValue for the instance the signal is being "
"emitted on. The rest are any arguments to be passed to the signal."
msgstr ""

# used by: g_signal_chain_from_overridden:
#: gsignal.c:1846:1
msgid "@return_value: Location for the return value."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_chain_from_overridden:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_chain_from_overridden_handler:
#: gsignal.c:1848:4 gsignal.c:1920:4
msgid ""
"Calls the original class closure of a signal. This function should only be "
"called from an overridden class closure; see g_signal_override_class_closure"
"() and g_signal_override_class_handler()."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_chain_from_overridden_handler:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_emit_valist:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_emit:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_emit_by_name:
#: gsignal.c:1915:1 gsignal.c:2893:1 gsignal.c:3019:1 gsignal.c:3046:1
msgid "@instance: the instance the signal is being emitted on."
msgstr ""

# used by: g_signal_chain_from_overridden_handler:
#: gsignal.c:1916:3
msgid ""
"@...: parameters to be passed to the parent class closure, followed by a "
"location for the return value. If the return type of the signal is "
"#G_TYPE_NONE, the return value location can be omitted."
msgstr ""

# used by: g_signal_get_invocation_hint:
#: gsignal.c:2079:1
msgid "@instance: the instance to query"
msgstr ""

# #used by: g_signal_get_invocation_hint:
#: gsignal.c:2081:1
msgid ""
"Returns the invocation hint of the innermost signal emission of instance."
msgstr ""

# #used by: g_signal_get_invocation_hint:
#: gsignal.c:2083:1
msgid "Returns: the invocation hint of the innermost signal emission."
msgstr ""

# used by: g_signal_connect_closure_by_id:
#: gsignal.c:2102:1
msgid "@signal_id: the id of the signal."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_connect_closure_by_id:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_has_handler_pending:
#: gsignal.c:2103:1 gsignal.c:2691:1
msgid "@detail: the detail."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_connect_closure_by_id:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_connect_closure:
#: gsignal.c:2104:1 gsignal.c:2158:1
msgid "@closure: the closure to connect."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_connect_closure_by_id:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_connect_closure:
#: gsignal.c:2105:2 gsignal.c:2159:2
msgid ""
"@after: whether the handler should be called before or after the default "
"handler of the signal."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_connect_closure_by_id:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_connect_closure:
#: gsignal.c:2108:1 gsignal.c:2162:1
msgid "Connects a closure to a signal for a particular object."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_connect_closure_by_id:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_connect_closure:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_connect_data:
#: gsignal.c:2110:1 gsignal.c:2164:1 gsignal.c:2227:1
msgid "Returns: the handler id"
msgstr ""

# used by: g_signal_connect_data:
#: gsignal.c:2217:1
msgid "@data: data to pass to @c_handler calls."
msgstr ""

# used by: g_signal_connect_data:
#: gsignal.c:2218:1
msgid "@destroy_data: a #GClosureNotify for @data."
msgstr ""

# used by: g_signal_connect_data:
#: gsignal.c:2219:1
msgid "@connect_flags: a combination of #GConnectFlags."
msgstr ""

# #used by: g_signal_connect_data:
#: gsignal.c:2221:5
msgid ""
"Connects a #GCallback function to a signal for a particular object. Similar "
"to g_signal_connect(), but allows to provide a #GClosureNotify for the data "
"which will be called when the signal handler is disconnected and no longer "
"used. Specify @connect_flags if you need <literal>..._after()</literal> or "
"<literal>..._swapped()</literal> variants of this function."
msgstr ""

# used by: g_signal_handler_block:
#: gsignal.c:2283:1
msgid "@instance: The instance to block the signal handler of."
msgstr ""

# used by: g_signal_handler_block:
#: gsignal.c:2284:1
msgid "@handler_id: Handler id of the handler to be blocked."
msgstr ""

# #used by: g_signal_handler_block:
#: gsignal.c:2286:5
msgid ""
"Blocks a handler of an instance so it will not be called during any signal "
"emissions unless it is unblocked again. Thus |$_1_$|blocking|$_1_$| a signal "
"handler means to temporarily deactive it, a signal handler has to be "
"unblocked exactly the same amount of times it has been blocked before to "
"become active again."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_handler_block:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_handler_disconnect:
#: gsignal.c:2292:2 gsignal.c:2370:2
msgid ""
"The @handler_id has to be a valid signal handler id, connected to a signal "
"of @instance."
msgstr ""

# used by: g_signal_handler_unblock:
#: gsignal.c:2321:1
msgid "@instance: The instance to unblock the signal handler of."
msgstr ""

# used by: g_signal_handler_unblock:
#: gsignal.c:2322:1
msgid "@handler_id: Handler id of the handler to be unblocked."
msgstr ""

# #used by: g_signal_handler_unblock:
#: gsignal.c:2324:10
msgid ""
"Undoes the effect of a previous g_signal_handler_block() call.  A blocked "
"handler is skipped during signal emissions and will not be invoked, "
"unblocking it (for exactly the amount of times it has been blocked before) "
"reverts its |$_1_$|blocked|$_1_$| state, so the handler will be recognized "
"by the signal system and is called upon future or currently ongoing signal "
"emissions (since the order in which handlers are called during signal "
"emissions is deterministic, whether the unblocked handler in question is "
"called as part of a currently ongoing emission depends on how far that "
"emission has proceeded yet)."
msgstr ""

# #used by: g_signal_handler_unblock:
#: gsignal.c:2335:2
msgid ""
"The @handler_id has to be a valid id of a signal handler that is connected "
"to a signal of @instance and is currently blocked."
msgstr ""

# used by: g_signal_handler_disconnect:
#: gsignal.c:2363:1
msgid "@instance: The instance to remove the signal handler from."
msgstr ""

# used by: g_signal_handler_disconnect:
#: gsignal.c:2364:1
msgid "@handler_id: Handler id of the handler to be disconnected."
msgstr ""

# #used by: g_signal_handler_disconnect:
#: gsignal.c:2366:3
msgid ""
"Disconnects a handler from an instance so it will not be called during any "
"future or currently ongoing emissions of the signal it has been connected "
"to. The @handler_id becomes invalid and may be reused."
msgstr ""

# used by: g_signal_handler_is_connected:
#: gsignal.c:2398:1
msgid "@instance: The instance where a signal handler is sought."
msgstr ""

# used by: g_signal_handler_is_connected:
#: gsignal.c:2399:1
msgid "@handler_id: the handler id."
msgstr ""

# #used by: g_signal_handler_is_connected:
#: gsignal.c:2401:1
msgid ""
"Returns whether @handler_id is the id of a handler connected to @instance."
msgstr ""

# #used by: g_signal_handler_is_connected:
#: gsignal.c:2403:1
msgid ""
"Returns: whether @handler_id identifies a handler connected to @instance."
msgstr ""

# used by: g_signal_handler_find:
#: gsignal.c:2466:1
msgid "@instance: The instance owning the signal handler to be found."
msgstr ""

# used by: g_signal_handler_find:
#: gsignal.c:2467:2
msgid ""
"@mask: Mask indicating which of @signal_id, @detail, @closure, @func and/or "
"@data the handler has to match."
msgstr ""

# used by: g_signal_handler_find:
#: gsignal.c:2469:1
msgid "@signal_id: Signal the handler has to be connected to."
msgstr ""

# used by: g_signal_handler_find:
#: gsignal.c:2470:1
msgid "@detail: Signal detail the handler has to be connected to."
msgstr ""

# used by: g_signal_handler_find:
#: gsignal.c:2471:1
msgid "@closure: The closure the handler will invoke."
msgstr ""

# used by: g_signal_handler_find:
#: gsignal.c:2472:1
msgid ""
"@func: The C closure callback of the handler (useless for non-C closures)."
msgstr ""

# used by: g_signal_handler_find:
#: gsignal.c:2473:1
msgid "@data: The closure data of the handler's closure."
msgstr ""

# #used by: g_signal_handler_find:
#: gsignal.c:2475:5
msgid ""
"Finds the first signal handler that matches certain selection criteria. The "
"criteria mask is passed as an OR-ed combination of #GSignalMatchType flags, "
"and the criteria values are passed as arguments. The match @mask has to be "
"non-0 for successful matches. If no handler was found, 0 is returned."
msgstr ""

# #used by: g_signal_handler_find:
#: gsignal.c:2481:1
msgid "Returns: A valid non-0 signal handler id for a successful match."
msgstr ""

# used by: g_signal_handlers_block_matched:
#: gsignal.c:2546:1
msgid "@instance: The instance to block handlers from."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_handlers_block_matched:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_handlers_unblock_matched:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_handlers_disconnect_matched:
#: gsignal.c:2547:2 gsignal.c:2594:2 gsignal.c:2642:2
msgid ""
"@mask: Mask indicating which of @signal_id, @detail, @closure, @func and/or "
"@data the handlers have to match."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_handlers_block_matched:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_handlers_unblock_matched:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_handlers_disconnect_matched:
#: gsignal.c:2549:1 gsignal.c:2596:1 gsignal.c:2644:1
msgid "@signal_id: Signal the handlers have to be connected to."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_handlers_block_matched:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_handlers_unblock_matched:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_handlers_disconnect_matched:
#: gsignal.c:2550:1 gsignal.c:2597:1 gsignal.c:2645:1
msgid "@detail: Signal detail the handlers have to be connected to."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_handlers_block_matched:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_handlers_unblock_matched:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_handlers_disconnect_matched:
#: gsignal.c:2551:1 gsignal.c:2598:1 gsignal.c:2646:1
msgid "@closure: The closure the handlers will invoke."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_handlers_block_matched:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_handlers_unblock_matched:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_handlers_disconnect_matched:
#: gsignal.c:2552:1 gsignal.c:2599:1 gsignal.c:2647:1
msgid ""
"@func: The C closure callback of the handlers (useless for non-C closures)."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_handlers_block_matched:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_handlers_unblock_matched:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_handlers_disconnect_matched:
#: gsignal.c:2553:1 gsignal.c:2600:1 gsignal.c:2648:1
msgid "@data: The closure data of the handlers' closures."
msgstr ""

# #used by: g_signal_handlers_block_matched:
#: gsignal.c:2555:7
msgid ""
"Blocks all handlers on an instance that match a certain selection criteria. "
"The criteria mask is passed as an OR-ed combination of #GSignalMatchType "
"flags, and the criteria values are passed as arguments. Passing at least one "
"of the %G_SIGNAL_MATCH_CLOSURE, %G_SIGNAL_MATCH_FUNC or %G_SIGNAL_MATCH_DATA "
"match flags is required for successful matches. If no handlers were found, 0 "
"is returned, the number of blocked handlers otherwise."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_handlers_block_matched:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_handlers_unblock_matched:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_handlers_disconnect_matched:
#: gsignal.c:2563:1 gsignal.c:2611:1 gsignal.c:2659:1
msgid "Returns: The number of handlers that matched."
msgstr ""

# used by: g_signal_handlers_unblock_matched:
#: gsignal.c:2593:1
msgid "@instance: The instance to unblock handlers from."
msgstr ""

# #used by: g_signal_handlers_unblock_matched:
#: gsignal.c:2602:8
msgid ""
"Unblocks all handlers on an instance that match a certain selection "
"criteria. The criteria mask is passed as an OR-ed combination of "
"#GSignalMatchType flags, and the criteria values are passed as arguments. "
"Passing at least one of the %G_SIGNAL_MATCH_CLOSURE, %G_SIGNAL_MATCH_FUNC or "
"%G_SIGNAL_MATCH_DATA match flags is required for successful matches. If no "
"handlers were found, 0 is returned, the number of unblocked handlers "
"otherwise. The match criteria should not apply to any handlers that are not "
"currently blocked."
msgstr ""

# used by: g_signal_handlers_disconnect_matched:
#: gsignal.c:2641:1
msgid "@instance: The instance to remove handlers from."
msgstr ""

# #used by: g_signal_handlers_disconnect_matched:
#: gsignal.c:2650:8
msgid ""
"Disconnects all handlers on an instance that match a certain selection "
"criteria. The criteria mask is passed as an OR-ed combination of "
"#GSignalMatchType flags, and the criteria values are passed as arguments.  "
"Passing at least one of the %G_SIGNAL_MATCH_CLOSURE, %G_SIGNAL_MATCH_FUNC or "
"%G_SIGNAL_MATCH_DATA match flags is required for successful matches.  If no "
"handlers were found, 0 is returned, the number of disconnected handlers "
"otherwise."
msgstr ""

# used by: g_signal_has_handler_pending:
#: gsignal.c:2689:1
msgid "@instance: the object whose signal handlers are sought."
msgstr ""

# used by: g_signal_has_handler_pending:
#: gsignal.c:2690:1
msgid "@signal_id: the signal id."
msgstr ""

# used by: g_signal_has_handler_pending:
#: gsignal.c:2692:1
msgid "@may_be_blocked: whether blocked handlers should count as match."
msgstr ""

# #used by: g_signal_has_handler_pending:
#: gsignal.c:2694:2
msgid ""
"Returns whether there are any handlers connected to @instance for the given "
"signal id and detail."
msgstr ""

# #used by: g_signal_has_handler_pending:
#: gsignal.c:2697:4
msgid ""
"One example of when you might use this is when the arguments to the signal "
"are difficult to compute. A class implementor may opt to not emit the signal "
"if no one is attached anyway, thus saving the cost of building the arguments."
msgstr ""

# #used by: g_signal_has_handler_pending:
#: gsignal.c:2702:2
msgid ""
"Returns: %TRUE if a handler is connected to the signal, %FALSE otherwise."
msgstr ""

# used by: g_signal_emitv:
#: gsignal.c:2790:4
msgid ""
"@instance_and_params: argument list for the signal emission. The first "
"element in the array is a #GValue for the instance the signal is being "
"emitted on. The rest are any arguments to be passed to the signal."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_emitv:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_emit_valist:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_emit:
#: gsignal.c:2795:1 gsignal.c:2895:1 gsignal.c:3021:1
msgid "@detail: the detail"
msgstr ""

# used by: g_signal_emitv:
#: gsignal.c:2796:1
msgid ""
"@return_value: Location to store the return value of the signal emission."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_emitv:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_emit_valist:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_emit:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_emit_by_name:
#: gsignal.c:2798:1 gsignal.c:2900:1 gsignal.c:3026:1 gsignal.c:3052:1
msgid "Emits a signal."
msgstr ""

# #used by: g_signal_emitv:
#: gsignal.c:2800:2
msgid ""
"Note that g_signal_emitv() doesn't change @return_value if no handlers are "
"connected, in contrast to g_signal_emit() and g_signal_emit_valist()."
msgstr ""

# used by: g_signal_emit_valist:
#: gsignal.c:2896:3
msgid ""
"@var_args: a list of parameters to be passed to the signal, followed by a "
"location for the return value. If the return type of the signal is "
"#G_TYPE_NONE, the return value location can be omitted."
msgstr ""

# #used by: g_signal_emit_valist:
#: gsignal.c:2902:2
msgid ""
"Note that g_signal_emit_valist() resets the return value to the default if "
"no handlers are connected, in contrast to g_signal_emitv()."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_emit:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_emit_by_name:
#: gsignal.c:3022:3 gsignal.c:3048:3
msgid ""
"@...: parameters to be passed to the signal, followed by a location for the "
"return value. If the return type of the signal is #G_TYPE_NONE, the return "
"value location can be omitted."
msgstr ""

# #used by: g_signal_emit:
#: gsignal.c:3028:2
msgid ""
"Note that g_signal_emit() resets the return value to the default if no "
"handlers are connected, in contrast to g_signal_emitv()."
msgstr ""

# #used by: g_signal_emit_by_name:
#: gsignal.c:3054:2
msgid ""
"Note that g_signal_emit_by_name() resets the return value to the default if "
"no handlers are connected, in contrast to g_signal_emitv()."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_accumulator_true_handled:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_accumulator_first_wins:
#: gsignal.c:3409:1 gsignal.c:3444:1
msgid "@ihint: standard #GSignalAccumulator parameter"
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_accumulator_true_handled:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_accumulator_first_wins:
#: gsignal.c:3410:1 gsignal.c:3445:1
msgid "@return_accu: standard #GSignalAccumulator parameter"
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_accumulator_true_handled:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_accumulator_first_wins:
#: gsignal.c:3411:1 gsignal.c:3446:1
msgid "@handler_return: standard #GSignalAccumulator parameter"
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_accumulator_true_handled:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_signal_accumulator_first_wins:
#: gsignal.c:3412:1 gsignal.c:3447:1
msgid "@dummy: standard #GSignalAccumulator parameter"
msgstr ""

# #used by: g_signal_accumulator_true_handled:
#: gsignal.c:3414:7
msgid ""
"A predefined #GSignalAccumulator for signals that return a boolean values. "
"The behavior that this accumulator gives is that a return of %TRUE stops the "
"signal emission: no further callbacks will be invoked, while a return of "
"%FALSE allows the emission to continue. The idea here is that a %TRUE return "
"indicates that the callback <emphasis>handled</emphasis> the signal, and no "
"further handling is needed."
msgstr ""

# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_accumulator_true_handled:
# #-#-#-#-#  gsignal.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_signal_accumulator_first_wins:
#: gsignal.c:3424:1 gsignal.c:3460:1
msgid "Returns: standard #GSignalAccumulator result"
msgstr ""

# #used by: g_signal_accumulator_first_wins:
#: gsignal.c:3449:6
msgid ""
"A predefined #GSignalAccumulator for signals intended to be used as a hook "
"for application code to provide a particular value.  Usually only one such "
"value is desired and multiple handlers for the same signal don't make much "
"sense (except for the case of the default handler defined in the class "
"structure, in which case you will usually want the signal connection to "
"override the class handler)."
msgstr ""

# #used by: g_signal_accumulator_first_wins:
#: gsignal.c:3456:3
msgid ""
"This accumulator will use the return value from the first signal handler "
"that is run as the return value for the signal and not run any further "
"handlers (ie: the first handler |$_1_$|wins|$_1_$|)."
msgstr ""

# #-#-#-#-#  gsourceclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_source_set_closure:
# #-#-#-#-#  gsourceclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_source_set_dummy_callback:
#: gsourceclosure.c:150:1 gsourceclosure.c:209:1
msgid "@source: the source"
msgstr ""

# #used by: g_source_set_closure:
#: gsourceclosure.c:153:1
msgid "Set the callback for a source as a #GClosure."
msgstr ""

# #-#-#-#-#  gsourceclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_source_set_closure:
# #-#-#-#-#  gsourceclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_source_set_dummy_callback:
#: gsourceclosure.c:155:3 gsourceclosure.c:217:4
msgid ""
"If the source is not one of the standard GLib types, the @closure_callback "
"and @closure_marshal fields of the #GSourceFuncs structure must have been "
"filled in with pointers to appropriate functions."
msgstr ""

# #used by: g_source_set_dummy_callback:
#: gsourceclosure.c:211:5
msgid ""
"Sets a dummy callback for @source. The callback will do nothing, and if the "
"source expects a #gboolean return value, it will return %TRUE. (If the "
"source expects any other type of return value, it will return a 0/%NULL "
"value; whatever g_value_init() initializes a #GValue to for that type.)"
msgstr ""

# used by: SECTION:gtypemodule
#: gtypemodule.c:30:1
msgid "@short_description: Type loading modules"
msgstr ""

# used by: SECTION:gtypemodule
#: gtypemodule.c:31:10
msgid ""
"@see_also:<variablelist> <varlistentry> <term>#GTypePlugin</term> "
"<listitem><para>The abstract type loader interface.</para></listitem> </"
"varlistentry> <varlistentry> <term>#GModule</term> <listitem><para>Portable "
"mechanism for dynamically loaded modules.</para></listitem> </varlistentry> "
"</variablelist>"
msgstr ""

# used by: SECTION:gtypemodule
#: gtypemodule.c:41:1
msgid "@title: GTypeModule"
msgstr ""

# #used by: SECTION:gtypemodule
#: gtypemodule.c:43:12
msgid ""
"#GTypeModule provides a simple implementation of the #GTypePlugin interface. "
"The model of #GTypeModule is a dynamically loaded module which implements "
"some number of types and interface implementations. When the module is "
"loaded, it registers its types and interfaces using "
"g_type_module_register_type() and g_type_module_add_interface().  As long as "
"any instances of these types and interface implementations are in use, the "
"module is kept loaded. When the types and interfaces are gone, the module "
"may be unloaded. If the types and interfaces become used again, the module "
"will be reloaded. Note that the last unref can not happen in module code, "
"since that would lead to the caller's code being unloaded before "
"g_object_unref() returns to it."
msgstr ""

# #used by: SECTION:gtypemodule
#: gtypemodule.c:56:9
msgid ""
"Keeping track of whether the module should be loaded or not is done by using "
"a use count - it starts at zero, and whenever it is greater than zero, the "
"module is loaded. The use count is maintained internally by the type system, "
"but also can be explicitly controlled by g_type_module_use() and "
"g_type_module_unuse(). Typically, when loading a module for the first type, "
"g_type_module_use() will be used to load it so that it can initialize its "
"types. At some later point, when the module no longer needs to be loaded "
"except for the type implementations it contains, g_type_module_unuse() is "
"called."
msgstr ""

# #used by: SECTION:gtypemodule
#: gtypemodule.c:66:4
msgid ""
"#GTypeModule does not actually provide any implementation of module loading "
"and unloading. To create a particular module type you must derive from "
"#GTypeModule and implement the load and unload functions in "
"#GTypeModuleClass."
msgstr ""

# used by: g_type_module_set_name:
#: gtypemodule.c:183:1
msgid "@module: a #GTypeModule."
msgstr ""

# used by: g_type_module_set_name:
#: gtypemodule.c:184:1
msgid "@name: a human-readable name to use in error messages."
msgstr ""

# #used by: g_type_module_set_name:
#: gtypemodule.c:186:1
msgid "Sets the name for a #GTypeModule"
msgstr ""

# #-#-#-#-#  gtypemodule.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_module_use:
# #-#-#-#-#  gtypemodule.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_module_unuse:
# #-#-#-#-#  gtypemodule.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_module_register_type:
# #-#-#-#-#  gtypemodule.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_module_add_interface:
# #-#-#-#-#  gtypemodule.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_module_register_enum:
# #-#-#-#-#  gtypemodule.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_module_register_flags:
#: gtypemodule.c:236:1 gtypemodule.c:284:1 gtypemodule.c:359:1
#: gtypemodule.c:444:1 gtypemodule.c:507:1 gtypemodule.c:546:1
msgid "@module: a #GTypeModule"
msgstr ""

# #used by: g_type_module_use:
#: gtypemodule.c:238:4
msgid ""
"Increases the use count of a #GTypeModule by one. If the use count was zero "
"before, the plugin will be loaded. If loading the plugin fails, the use "
"count is reset to its prior value."
msgstr ""

# #used by: g_type_module_use:
#: gtypemodule.c:243:2
msgid ""
"Returns: %FALSE if the plugin needed to be loaded and loading the plugin "
"failed."
msgstr ""

# #used by: g_type_module_unuse:
#: gtypemodule.c:286:5
msgid ""
"Decreases the use count of a #GTypeModule by one. If the result is zero, the "
"module will be unloaded. (However, the #GTypeModule will not be freed, and "
"types associated with the #GTypeModule are not unregistered. Once a "
"#GTypeModule is initialized, it must exist forever.)"
msgstr ""

# used by: g_type_module_register_type:
#: gtypemodule.c:360:1
msgid "@parent_type: the type for the parent class"
msgstr ""

# used by: g_type_module_register_type:
#: gtypemodule.c:361:1
msgid "@type_name: name for the type"
msgstr ""

# used by: g_type_module_register_type:
#: gtypemodule.c:362:1
msgid "@type_info: type information structure"
msgstr ""

# used by: g_type_module_register_type:
#: gtypemodule.c:363:1
msgid "@flags: flags field providing details about the type"
msgstr ""

# #used by: g_type_module_register_type:
#: gtypemodule.c:365:4
msgid ""
"Looks up or registers a type that is implemented with a particular type "
"plugin. If a type with name @type_name was previously registered, the #GType "
"identifier for the type is returned, otherwise the type is newly registered, "
"and the resulting #GType identifier returned."
msgstr ""

# #used by: g_type_module_register_type:
#: gtypemodule.c:370:3
msgid ""
"When reregistering a type (typically because a module is unloaded then "
"reloaded, and reinitialized), @module and @parent_type must be the same as "
"they were previously."
msgstr ""

# #-#-#-#-#  gtypemodule.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_type_module_register_type:
# #-#-#-#-#  gtypemodule.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_type_module_add_interface:
# #-#-#-#-#  gtypemodule.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_type_module_register_enum:
# #-#-#-#-#  gtypemodule.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_type_module_register_flags:
#: gtypemodule.c:374:2 gtypemodule.c:453:2 gtypemodule.c:519:2
#: gtypemodule.c:558:2
msgid ""
"As long as any instances of the type exist, the type plugin will not be "
"unloaded."
msgstr ""

# #-#-#-#-#  gtypemodule.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_type_module_register_type:
# #-#-#-#-#  gtypemodule.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_type_module_register_enum:
# #-#-#-#-#  gtypemodule.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_type_module_register_flags:
#: gtypemodule.c:377:1 gtypemodule.c:524:1 gtypemodule.c:563:1
msgid "Returns: the new or existing type ID"
msgstr ""

# used by: g_type_module_add_interface:
#: gtypemodule.c:445:1
msgid "@instance_type: type to which to add the interface."
msgstr ""

# used by: g_type_module_add_interface:
#: gtypemodule.c:446:1
msgid "@interface_type: interface type to add"
msgstr ""

# used by: g_type_module_add_interface:
#: gtypemodule.c:447:1
msgid "@interface_info: type information structure"
msgstr ""

# #used by: g_type_module_add_interface:
#: gtypemodule.c:449:3
msgid ""
"Registers an additional interface for a type, whose interface lives in the "
"given type plugin. If the interface was already registered for the type in "
"this plugin, nothing will be done."
msgstr ""

# #-#-#-#-#  gtypemodule.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_module_register_enum:
# #-#-#-#-#  gtypemodule.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_module_register_flags:
#: gtypemodule.c:508:1 gtypemodule.c:547:1
msgid "@name: name for the type"
msgstr ""

# used by: g_type_module_register_enum:
#: gtypemodule.c:509:4
msgid ""
"@const_static_values: an array of #GEnumValue structs for the possible "
"enumeration values. The array is terminated by a struct with all members "
"being 0."
msgstr ""

# #used by: g_type_module_register_enum:
#: gtypemodule.c:514:4
msgid ""
"Looks up or registers an enumeration that is implemented with a particular "
"type plugin. If a type with name @type_name was previously registered, the "
"#GType identifier for the type is returned, otherwise the type is newly "
"registered, and the resulting #GType identifier returned."
msgstr ""

# #-#-#-#-#  gtypemodule.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_type_module_register_enum:
# #-#-#-#-#  gtypemodule.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_type_module_register_flags:
#: gtypemodule.c:522:1 gtypemodule.c:561:1
msgid "Since: 2.6"
msgstr ""

# used by: g_type_module_register_flags:
#: gtypemodule.c:548:4
msgid ""
"@const_static_values: an array of #GFlagsValue structs for the possible "
"flags values. The array is terminated by a struct with all members being 0."
msgstr ""

# #used by: g_type_module_register_flags:
#: gtypemodule.c:553:4
msgid ""
"Looks up or registers a flags type that is implemented with a particular "
"type plugin. If a type with name @type_name was previously registered, the "
"#GType identifier for the type is returned, otherwise the type is newly "
"registered, and the resulting #GType identifier returned."
msgstr ""

# used by: SECTION:gtypeplugin
#: gtypeplugin.c:27:1
msgid "@short_description: An interface for dynamically loadable types"
msgstr ""

# used by: SECTION:gtypeplugin
#: gtypeplugin.c:28:1
msgid "@see_also: #GTypeModule and g_type_register_dynamic()."
msgstr ""

# used by: SECTION:gtypeplugin
#: gtypeplugin.c:29:1
msgid "@title: GTypePlugin"
msgstr ""

# #used by: SECTION:gtypeplugin
#: gtypeplugin.c:31:3
msgid ""
"The GObject type system supports dynamic loading of types. The #GTypePlugin "
"interface is used to handle the lifecycle of dynamically loaded types.  It "
"goes as follows:"
msgstr ""

# #used by: SECTION:gtypeplugin
#: gtypeplugin.c:35:39
msgid ""
"<orderedlist> <listitem><para> The type is initially introduced (usually "
"upon loading the module the first time, or by your main application that "
"knows what modules introduces what types), like this: |[ new_type_id = "
"g_type_register_dynamic (parent_type_id, |$_1_$|TypeName|$_1_$|, "
"new_type_plugin, type_flags); ]| where <literal>new_type_plugin</literal> is "
"an implementation of the #GTypePlugin interface. </para></listitem> "
"<listitem><para> The type's implementation is referenced, e.g. through "
"g_type_class_ref() or through g_type_create_instance() (this is being called "
"by g_object_new()) or through one of the above done on a type derived from "
"<literal>new_type_id</literal>. </para></listitem> <listitem><para> This "
"causes the type system to load the type's implementation by calling "
"g_type_plugin_use() and g_type_plugin_complete_type_info() on "
"<literal>new_type_plugin</literal>. </para></listitem> <listitem><para> At "
"some point the type's implementation isn't required anymore, e.g. after "
"g_type_class_unref() or g_type_free_instance() (called when the reference "
"count of an instance drops to zero). </para></listitem> <listitem><para> "
"This causes the type system to throw away the information retrieved from "
"g_type_plugin_complete_type_info() and then it calls g_type_plugin_unuse() "
"on <literal>new_type_plugin</literal>. </para></listitem> <listitem><para> "
"Things may repeat from the second step. </para></listitem> </orderedlist>"
msgstr ""

# #used by: SECTION:gtypeplugin
#: gtypeplugin.c:75:8
msgid ""
"So basically, you need to implement a #GTypePlugin type that carries a "
"use_count, once use_count goes from zero to one, you need to load the "
"implementation to successfully handle the upcoming "
"g_type_plugin_complete_type_info() call. Later, maybe after succeeding use/"
"unuse calls, once use_count drops to zero, you can unload the implementation "
"again. The type system makes sure to call g_type_plugin_use() and "
"g_type_plugin_complete_type_info() again when the type is needed again."
msgstr ""

# #used by: SECTION:gtypeplugin
#: gtypeplugin.c:84:3
msgid ""
"#GTypeModule is an implementation of #GTypePlugin that already implements "
"most of this except for the actual module loading and unloading. It even "
"handles multiple registered types per module."
msgstr ""

# #-#-#-#-#  gtypeplugin.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_plugin_use:
# #-#-#-#-#  gtypeplugin.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_plugin_unuse:
# #-#-#-#-#  gtypeplugin.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_plugin_complete_type_info:
#: gtypeplugin.c:112:1 gtypeplugin.c:131:1 gtypeplugin.c:150:1
msgid "@plugin: a #GTypePlugin"
msgstr ""

# #used by: g_type_plugin_use:
#: gtypeplugin.c:114:3
msgid ""
"Calls the @use_plugin function from the #GTypePluginClass of @plugin.  There "
"should be no need to use this function outside of the GObject type system "
"itself."
msgstr ""

# #used by: g_type_plugin_unuse:
#: gtypeplugin.c:133:3
msgid ""
"Calls the @unuse_plugin function from the #GTypePluginClass of @plugin.  "
"There should be no need to use this function outside of the GObject type "
"system itself."
msgstr ""

# used by: g_type_plugin_complete_type_info:
#: gtypeplugin.c:151:1
msgid "@g_type: the #GType whose info is completed"
msgstr ""

# used by: g_type_plugin_complete_type_info:
#: gtypeplugin.c:152:1
msgid "@info: the #GTypeInfo struct to fill in"
msgstr ""

# used by: g_type_plugin_complete_type_info:
#: gtypeplugin.c:153:1
msgid "@value_table: the #GTypeValueTable to fill in"
msgstr ""

# #used by: g_type_plugin_complete_type_info:
#: gtypeplugin.c:155:3
msgid ""
"Calls the @complete_type_info function from the #GTypePluginClass of "
"@plugin. There should be no need to use this function outside of the GObject "
"type system itself."
msgstr ""

# used by: g_type_plugin_complete_interface_info:
#: gtypeplugin.c:180:1
msgid "@plugin: the #GTypePlugin"
msgstr ""

# used by: g_type_plugin_complete_interface_info:
#: gtypeplugin.c:181:2
msgid ""
"@instance_type: the #GType of an instantiable type to which the interface is "
"added"
msgstr ""

# used by: g_type_plugin_complete_interface_info:
#: gtypeplugin.c:183:1
msgid "@interface_type: the #GType of the interface whose info is completed"
msgstr ""

# used by: g_type_plugin_complete_interface_info:
#: gtypeplugin.c:184:1
msgid "@info: the #GInterfaceInfo to fill in"
msgstr ""

# #used by: g_type_plugin_complete_interface_info:
#: gtypeplugin.c:186:3
msgid ""
"Calls the @complete_interface_info function from the #GTypePluginClass of "
"@plugin. There should be no need to use this function outside of the GObject "
"type system itself."
msgstr ""

# used by: SECTION:gtype
#: gtype.c:39:2
msgid ""
"@short_description: The GLib Runtime type identification and management "
"system"
msgstr ""

# used by: SECTION:gtype
#: gtype.c:41:1
msgid "@title:Type Information"
msgstr ""

# #used by: SECTION:gtype
#: gtype.c:43:5
msgid ""
"The GType API is the foundation of the GObject system.  It provides the "
"facilities for registering and managing all fundamental data types, user-"
"defined object and interface types.  Before using any GType or GObject "
"functions, g_type_init() must be called to initialize the type system."
msgstr ""

# #used by: SECTION:gtype
#: gtype.c:49:18
msgid ""
"For type creation and registration purposes, all types fall into one of two "
"categories: static or dynamic.  Static types are never loaded or unloaded at "
"run-time as dynamic types may be.  Static types are created with "
"g_type_register_static() that gets type specific information passed in via a "
"#GTypeInfo structure. Dynamic types are created with g_type_register_dynamic"
"() which takes a #GTypePlugin structure instead. The remaining type "
"information (the #GTypeInfo structure) is retrieved during runtime through "
"#GTypePlugin and the g_type_plugin_*() API. These registration functions are "
"usually called only once from a function whose only purpose is to return the "
"type identifier for a specific class.  Once the type (or class or interface) "
"is registered, it may be instantiated, inherited, or implemented depending "
"on exactly what sort of type it is. There is also a third registration "
"function for registering fundamental types called g_type_register_fundamental"
"() which requires both a #GTypeInfo structure and a #GTypeFundamentalInfo "
"structure but it is seldom used since most fundamental types are predefined "
"rather than user-defined."
msgstr ""

# #used by: SECTION:gtype
#: gtype.c:68:5
msgid ""
"A final word about type names. Such an identifier needs to be at least three "
"characters long. There is no upper length limit. The first character needs "
"to be a letter (a-z or A-Z) or an underscore '_'. Subsequent characters can "
"be letters, numbers or any of '-_+'."
msgstr ""

# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_interface_add_prerequisite:
# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_add_interface_static:
#: gtype.c:1522:1 gtype.c:2790:1
msgid "@interface_type: #GType value of an interface type."
msgstr ""

# used by: g_type_interface_add_prerequisite:
#: gtype.c:1523:1
msgid ""
"@prerequisite_type: #GType value of an interface or instantiatable type."
msgstr ""

# #used by: g_type_interface_add_prerequisite:
#: gtype.c:1525:5
msgid ""
"Adds @prerequisite_type to the list of prerequisites of @interface_type. "
"This means that any type implementing @interface_type must also implement "
"@prerequisite_type. Prerequisites can be thought of as an alternative to "
"interface derivation (which GType doesn't support). An interface can have at "
"most one instantiatable prerequisite type."
msgstr ""

# used by: g_type_interface_prerequisites:
#: gtype.c:1608:1
msgid "@interface_type: an interface type"
msgstr ""

# used by: g_type_interface_prerequisites:
#: gtype.c:1609:2
msgid ""
"@n_prerequisites: (out) (allow-none): location to return the number of "
"prerequisites, or %NULL"
msgstr ""

# #used by: g_type_interface_prerequisites:
#: gtype.c:1612:1
msgid "Returns the prerequisites of an interfaces type."
msgstr ""

# #used by: g_type_interface_prerequisites:
#: gtype.c:1614:1
msgid "Since: 2.2"
msgstr ""

# #used by: g_type_interface_prerequisites:
#: gtype.c:1616:3
msgid ""
"Returns: (array length=n_prerequisites) (transfer full): a newly-allocated "
"zero-terminated array of #GType containing the prerequisites of "
"@interface_type"
msgstr ""

# used by: g_type_create_instance: (skip)
#: gtype.c:1824:1
msgid "@type: An instantiatable type to create an instance for."
msgstr ""

# #used by: g_type_create_instance: (skip)
#: gtype.c:1826:13
msgid ""
"Creates and initializes an instance of @type if @type is valid and can be "
"instantiated. The type system only performs basic allocation and structure "
"setups for instances: actual instance creation should happen through "
"functions supplied by the type's fundamental type implementation.  So use of "
"g_type_create_instance() is reserved for implementators of fundamental types "
"only. E.g. instances of the #GObject hierarchy should be created via "
"g_object_new() and <emphasis>never</emphasis> directly through "
"g_type_create_instance() which doesn't handle things like singleton objects "
"or object construction.  Note: Do <emphasis>not</emphasis> use this "
"function, unless you're implementing a fundamental type. Also language "
"bindings should <emphasis>not</emphasis> use this function but g_object_new"
"() instead."
msgstr ""

# #used by: g_type_create_instance: (skip)
#: gtype.c:1840:2
msgid ""
"Returns: An allocated and initialized instance, subject to further treatment "
"by the fundamental type implementation."
msgstr ""

# used by: g_type_free_instance:
#: gtype.c:1898:1
msgid "@instance: an instance of a type."
msgstr ""

# #used by: g_type_free_instance:
#: gtype.c:1900:2
msgid ""
"Frees an instance of a type, returning it to the instance pool for the type, "
"if there is one."
msgstr ""

# #used by: g_type_free_instance:
#: gtype.c:1903:2
msgid ""
"Like g_type_create_instance(), this function is reserved for implementors of "
"fundamental types."
msgstr ""

# used by: g_type_add_class_cache_func: (skip)
#: gtype.c:2435:1
msgid "@cache_data: data to be passed to @cache_func"
msgstr ""

# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_add_class_cache_func: (skip)
# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_remove_class_cache_func: (skip)
#: gtype.c:2436:1 gtype.c:2465:1
msgid "@cache_func: a #GTypeClassCacheFunc"
msgstr ""

# #used by: g_type_add_class_cache_func: (skip)
#: gtype.c:2438:7
msgid ""
"Adds a #GTypeClassCacheFunc to be called before the reference count of a "
"class goes from one to zero. This can be used to prevent premature class "
"destruction. All installed #GTypeClassCacheFunc functions will be chained "
"until one of them returns %TRUE. The functions have to check the class id "
"passed in to figure whether they actually want to cache the class of this "
"type, since all classes are routed through the same #GTypeClassCacheFunc "
"chain."
msgstr ""

# used by: g_type_remove_class_cache_func: (skip)
#: gtype.c:2464:1
msgid "@cache_data: data that was given when adding @cache_func"
msgstr ""

# #used by: g_type_remove_class_cache_func: (skip)
#: gtype.c:2467:3
msgid ""
"Removes a previously installed #GTypeClassCacheFunc. The cache maintained by "
"@cache_func has to be empty when calling g_type_remove_class_cache_func() to "
"avoid leaks."
msgstr ""

# used by: g_type_add_interface_check: (skip)
#: gtype.c:2503:1
msgid "@check_data: data to pass to @check_func"
msgstr ""

# used by: g_type_add_interface_check: (skip)
#: gtype.c:2504:2
msgid "@check_func: function to be called after each interface is initialized."
msgstr ""

# #used by: g_type_add_interface_check: (skip)
#: gtype.c:2507:3
msgid ""
"Adds a function to be called after an interface vtable is initialized for "
"any class (i.e. after the @interface_init member of #GInterfaceInfo has been "
"called)."
msgstr ""

# #used by: g_type_add_interface_check: (skip)
#: gtype.c:2511:5
msgid ""
"This function is useful when you want to check an invariant that depends on "
"the interfaces of a class. For instance, the implementation of #GObject uses "
"this facility to check that an object implements all of the properties that "
"are defined on its interfaces."
msgstr ""

# used by: g_type_remove_interface_check: (skip)
#: gtype.c:2537:1
msgid "@check_data: callback data passed to g_type_add_interface_check()"
msgstr ""

# used by: g_type_remove_interface_check: (skip)
#: gtype.c:2538:1
msgid "@check_func: callback function passed to g_type_add_interface_check()"
msgstr ""

# #used by: g_type_remove_interface_check: (skip)
#: gtype.c:2540:2
msgid ""
"Removes an interface check function added with g_type_add_interface_check()."
msgstr ""

# used by: g_type_register_fundamental:
#: gtype.c:2577:1
msgid "@type_id: A predefined type identifier."
msgstr ""

# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_register_fundamental:
# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_register_static_simple: (skip)
# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_register_static:
# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_register_dynamic:
#: gtype.c:2578:1 gtype.c:2647:1 gtype.c:2691:1 gtype.c:2746:1
msgid "@type_name: 0-terminated string used as the name of the new type."
msgstr ""

# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_register_fundamental:
# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_register_static:
#: gtype.c:2579:1 gtype.c:2692:1
msgid "@info: The #GTypeInfo structure for this type."
msgstr ""

# used by: g_type_register_fundamental:
#: gtype.c:2580:1
msgid "@finfo: The #GTypeFundamentalInfo structure for this type."
msgstr ""

# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_register_fundamental:
# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_register_static_simple: (skip)
# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_register_static:
# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_register_dynamic:
#: gtype.c:2581:1 gtype.c:2652:1 gtype.c:2693:1 gtype.c:2748:1
msgid "@flags: Bitwise combination of #GTypeFlags values."
msgstr ""

# #used by: g_type_register_fundamental:
#: gtype.c:2583:6
msgid ""
"Registers @type_id as the predefined identifier and @type_name as the name "
"of a fundamental type.  The type system uses the information contained in "
"the #GTypeInfo structure pointed to by @info and the #GTypeFundamentalInfo "
"structure pointed to by @finfo to manage the type and its instances.  The "
"value of @flags determines additional characteristics of the fundamental "
"type."
msgstr ""

# #used by: g_type_register_fundamental:
#: gtype.c:2590:1
msgid "Returns: The predefined type identifier."
msgstr ""

# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_register_static_simple: (skip)
# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_register_static:
# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_register_dynamic:
#: gtype.c:2646:1 gtype.c:2690:1 gtype.c:2745:1
msgid "@parent_type: Type from which this type will be derived."
msgstr ""

# used by: g_type_register_static_simple: (skip)
#: gtype.c:2648:1
msgid "@class_size: Size of the class structure (see #GTypeInfo)"
msgstr ""

# used by: g_type_register_static_simple: (skip)
#: gtype.c:2649:1
msgid ""
"@class_init: Location of the class initialization function (see #GTypeInfo)"
msgstr ""

# used by: g_type_register_static_simple: (skip)
#: gtype.c:2650:1
msgid "@instance_size: Size of the instance structure (see #GTypeInfo)"
msgstr ""

# used by: g_type_register_static_simple: (skip)
#: gtype.c:2651:1
msgid ""
"@instance_init: Location of the instance initialization function (see "
"#GTypeInfo)"
msgstr ""

# #used by: g_type_register_static_simple: (skip)
#: gtype.c:2654:4
msgid ""
"Registers @type_name as the name of a new static type derived from "
"@parent_type.  The value of @flags determines the nature (e.g. abstract or "
"not) of the type. It works by filling a #GTypeInfo struct and calling "
"g_type_register_static()."
msgstr ""

# #-#-#-#-#  gtype.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_type_register_static_simple: (skip)
# #-#-#-#-#  gvaluetypes.pot (PACKAGE VERSION)  #-#-#-#-#
# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_value_set_gtype:
# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_value_get_gtype:
#: gtype.c:2659:1 gvaluetypes.c:1141:1 gvaluetypes.c:1159:1
msgid "Since: 2.12"
msgstr ""

# #used by: g_type_register_static:
#: gtype.c:2695:5
msgid ""
"Registers @type_name as the name of a new static type derived from "
"@parent_type.  The type system uses the information contained in the "
"#GTypeInfo structure pointed to by @info to manage the type and its "
"instances (if not abstract).  The value of @flags determines the nature (e."
"g. abstract or not) of the type."
msgstr ""

# used by: g_type_register_dynamic:
#: gtype.c:2747:1
msgid "@plugin: The #GTypePlugin structure to retrieve the #GTypeInfo from."
msgstr ""

# #used by: g_type_register_dynamic:
#: gtype.c:2750:5
msgid ""
"Registers @type_name as the name of a new dynamic type derived from "
"@parent_type.  The type system uses the information contained in the "
"#GTypePlugin structure pointed to by @plugin to manage the type and its "
"instances (if not abstract).  The value of @flags determines the nature (e."
"g. abstract or not) of the type."
msgstr ""

# #used by: g_type_register_dynamic:
#: gtype.c:2756:1
msgid ""
"Returns: The new type identifier or #G_TYPE_INVALID if registration failed."
msgstr ""

# used by: g_type_add_interface_static:
#: gtype.c:2789:1
msgid "@instance_type: #GType value of an instantiable type."
msgstr ""

# used by: g_type_add_interface_static:
#: gtype.c:2791:2
msgid ""
"@info: The #GInterfaceInfo structure for this (@instance_type, "
"@interface_type) combination."
msgstr ""

# #used by: g_type_add_interface_static:
#: gtype.c:2794:3
msgid ""
"Adds the static @interface_type to @instantiable_type.  The information "
"contained in the #GTypeInterfaceInfo structure pointed to by @info is used "
"to manage the relationship."
msgstr ""

# used by: g_type_add_interface_dynamic:
#: gtype.c:2826:1
msgid "@instance_type: the #GType value of an instantiable type."
msgstr ""

# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_add_interface_dynamic:
# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_interface_get_plugin:
#: gtype.c:2827:1 gtype.c:3863:1
msgid "@interface_type: the #GType value of an interface type."
msgstr ""

# used by: g_type_add_interface_dynamic:
#: gtype.c:2828:1
msgid ""
"@plugin: the #GTypePlugin structure to retrieve the #GInterfaceInfo from."
msgstr ""

# #used by: g_type_add_interface_dynamic:
#: gtype.c:2830:3
msgid ""
"Adds the dynamic @interface_type to @instantiable_type. The information "
"contained in the #GTypePlugin structure pointed to by @plugin is used to "
"manage the relationship."
msgstr ""

# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_class_ref:
# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_class_peek:
# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_class_peek_static:
#: gtype.c:2864:1 gtype.c:2982:1 gtype.c:3012:1
msgid "@type: Type ID of a classed type."
msgstr ""

# #used by: g_type_class_ref:
#: gtype.c:2866:3
msgid ""
"Increments the reference count of the class structure belonging to @type. "
"This function will demand-create the class if it doesn't exist already."
msgstr ""

# #used by: g_type_class_ref:
#: gtype.c:2870:2
msgid ""
"Returns: (type GObject.TypeClass) (transfer none): The #GTypeClass structure "
"for the given type ID."
msgstr ""

# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_class_unref:
# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_class_unref_uncached: (skip)
#: gtype.c:2930:2 gtype.c:2956:2
msgid ""
"@g_class: (type GObject.TypeClass): The #GTypeClass structure to unreference."
msgstr ""

# #used by: g_type_class_unref:
#: gtype.c:2933:4
msgid ""
"Decrements the reference count of the class structure being passed in. Once "
"the last reference count of a class has been released, classes may be "
"finalized by the type system, so further dereferencing of a class pointer "
"after g_type_class_unref() are invalid."
msgstr ""

# #used by: g_type_class_unref_uncached: (skip)
#: gtype.c:2959:4
msgid ""
"A variant of g_type_class_unref() for use in #GTypeClassCacheFunc "
"implementations. It unreferences a class without consulting the chain of "
"#GTypeClassCacheFunc<!-- -->s, avoiding the recursion which would occur "
"otherwise."
msgstr ""

# #used by: g_type_class_peek:
#: gtype.c:2984:4
msgid ""
"This function is essentially the same as g_type_class_ref(), except that the "
"classes reference count isn't incremented. As a consequence, this function "
"may return %NULL if the class of the type passed in does not currently exist "
"(hasn't been referenced before)."
msgstr ""

# #used by: g_type_class_peek:
#: gtype.c:2989:3
msgid ""
"Returns: (type GObject.TypeClass) (transfer none): The #GTypeClass structure "
"for the given type ID or %NULL if the class does not currently exist."
msgstr ""

# #used by: g_type_class_peek_static:
#: gtype.c:3014:2
msgid ""
"A more efficient version of g_type_class_peek() which works only for static "
"types."
msgstr ""

# #used by: g_type_class_peek_static:
#: gtype.c:3017:4
msgid ""
"Since: 2.4 Returns: (type GObject.TypeClass) (transfer none): The "
"#GTypeClass structure for the given type ID or %NULL if the class does not "
"currently exist or is dynamically loaded."
msgstr ""

# used by: g_type_class_peek_parent:
#: gtype.c:3042:2
msgid ""
"@g_class: (type GObject.TypeClass): The #GTypeClass structure to retrieve "
"the parent class for."
msgstr ""

# #used by: g_type_class_peek_parent:
#: gtype.c:3045:6
msgid ""
"This is a convenience function often needed in class initializers. It "
"returns the class structure of the immediate parent type of the class passed "
"in.  Since derived classes hold a reference count on their parent classes as "
"long as they are instantiated, the returned class will always exist. This "
"function is essentially equivalent to:"
msgstr ""

# #used by: g_type_class_peek_parent:
#: gtype.c:3056:2
msgid ""
"Returns: (type GObject.TypeClass) (transfer none): The parent class of "
"@g_class."
msgstr ""

# used by: g_type_interface_peek:
#: gtype.c:3085:1
msgid "@instance_class: (type GObject.TypeClass): A #GTypeClass structure."
msgstr ""

# used by: g_type_interface_peek:
#: gtype.c:3086:1
msgid "@iface_type: An interface ID which this class conforms to."
msgstr ""

# #used by: g_type_interface_peek:
#: gtype.c:3088:2
msgid ""
"Returns the #GTypeInterface structure of an interface to which the passed in "
"class conforms."
msgstr ""

# #used by: g_type_interface_peek:
#: gtype.c:3091:3
msgid ""
"Returns: (type GObject.TypeInterface) (transfer none): The GTypeInterface "
"structure of iface_type if implemented by @instance_class, %NULL otherwise"
msgstr ""

# used by: g_type_interface_peek_parent:
#: gtype.c:3118:1
msgid "@g_iface: (type GObject.TypeInterface): A #GTypeInterface structure."
msgstr ""

# #used by: g_type_interface_peek_parent:
#: gtype.c:3120:4
msgid ""
"Returns the corresponding #GTypeInterface structure of the parent type of "
"the instance type to which @g_iface belongs. This is useful when deriving "
"the implementation of an interface from the parent type and then possibly "
"overriding some methods."
msgstr ""

# #used by: g_type_interface_peek_parent:
#: gtype.c:3125:4
msgid ""
"Returns: (transfer none) (type GObject.TypeInterface): The corresponding "
"#GTypeInterface structure of the parent type of the instance type to which "
"@g_iface belongs, or %NULL if the parent type doesn't conform to the "
"interface."
msgstr ""

# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_default_interface_ref:
# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_default_interface_peek:
#: gtype.c:3154:1 gtype.c:3213:1
msgid "@g_type: an interface type"
msgstr ""

# #used by: g_type_default_interface_ref:
#: gtype.c:3156:2
msgid ""
"Increments the reference count for the interface type @g_type, and returns "
"the default interface vtable for the type."
msgstr ""

# #used by: g_type_default_interface_ref:
#: gtype.c:3159:8
msgid ""
"If the type is not currently in use, then the default vtable for the type "
"will be created and initalized by calling the base interface init and "
"default vtable init functions for the type (the @<structfield>base_init</"
"structfield> and <structfield>class_init</structfield> members of "
"#GTypeInfo). Calling g_type_default_interface_ref() is useful when you want "
"to make sure that signals and properties for an interface have been "
"installed."
msgstr ""

# #used by: g_type_default_interface_ref:
#: gtype.c:3170:3
msgid ""
"Returns: (type GObject.TypeInterface) (transfer none): the default vtable "
"for the interface; call g_type_default_interface_unref() when you are done "
"using the interface."
msgstr ""

# #used by: g_type_default_interface_peek:
#: gtype.c:3215:2
msgid ""
"If the interface type @g_type is currently in use, returns its default "
"interface vtable."
msgstr ""

# #used by: g_type_default_interface_peek:
#: gtype.c:3220:3
msgid ""
"Returns: (type GObject.TypeInterface) (transfer none): the default vtable "
"for the interface, or %NULL if the type is not currently in use."
msgstr ""

# used by: g_type_default_interface_unref:
#: gtype.c:3241:3
msgid ""
"@g_iface: (type GObject.TypeInterface): the default vtable structure for a "
"interface, as returned by g_type_default_interface_ref()"
msgstr ""

# #used by: g_type_default_interface_unref:
#: gtype.c:3245:6
msgid ""
"Decrements the reference count for the type corresponding to the interface "
"default vtable @g_iface. If the type is dynamic, then when no one is using "
"the interface and all references have been released, the finalize function "
"for the interface's default vtable (the <structfield>class_finalize</"
"structfield> member of #GTypeInfo) will be called."
msgstr ""

# used by: g_type_name:
#: gtype.c:3272:1
msgid "@type: Type to return name for."
msgstr ""

# #used by: g_type_name:
#: gtype.c:3274:5
msgid ""
"Get the unique name that is assigned to a type ID.  Note that this function "
"(like all other GType API) cannot cope with invalid type IDs. "
"%G_TYPE_INVALID may be passed to this function, as may be any other validly "
"registered type ID, but randomized type IDs should not be passed in and will "
"most likely lead to a crash."
msgstr ""

# #used by: g_type_name:
#: gtype.c:3280:1
msgid "Returns: Static type name or %NULL."
msgstr ""

# used by: g_type_qname:
#: gtype.c:3296:1
msgid "@type: Type to return quark of type name for."
msgstr ""

# #used by: g_type_qname:
#: gtype.c:3298:1
msgid "Get the corresponding quark of the type IDs name."
msgstr ""

# #used by: g_type_qname:
#: gtype.c:3300:1
msgid "Returns: The type names quark or 0."
msgstr ""

# used by: g_type_from_name:
#: gtype.c:3314:1
msgid "@name: Type name to lookup."
msgstr ""

# #used by: g_type_from_name:
#: gtype.c:3316:4
msgid ""
"Lookup the type ID from a given type name, returning 0 if no type has been "
"registered under this name (this is the preferred method to find out by name "
"whether a specific type has been registered yet)."
msgstr ""

# #used by: g_type_from_name:
#: gtype.c:3321:1
msgid "Returns: Corresponding type ID or 0."
msgstr ""

# used by: g_type_parent:
#: gtype.c:3344:1
msgid "@type: The derived type."
msgstr ""

# #used by: g_type_parent:
#: gtype.c:3346:2
msgid ""
"Return the direct parent type of the passed in type.  If the passed in type "
"has no parent, i.e. is a fundamental type, 0 is returned."
msgstr ""

# #used by: g_type_parent:
#: gtype.c:3349:1
msgid "Returns: The parent type."
msgstr ""

# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_depth:
# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_value_table_peek: (skip)
#: gtype.c:3363:1 gtype.c:4147:1
msgid "@type: A #GType value."
msgstr ""

# #used by: g_type_depth:
#: gtype.c:3365:2
msgid ""
"Returns the length of the ancestry of the passed in type. This includes the "
"type itself, so that e.g. a fundamental type has depth 1."
msgstr ""

# #used by: g_type_depth:
#: gtype.c:3368:1
msgid "Returns: The depth of @type."
msgstr ""

# used by: g_type_next_base:
#: gtype.c:3382:1
msgid "@leaf_type: Descendant of @root_type and the type to be returned."
msgstr ""

# used by: g_type_next_base:
#: gtype.c:3383:1
msgid "@root_type: Immediate parent of the returned type."
msgstr ""

# #used by: g_type_next_base:
#: gtype.c:3385:7
msgid ""
"Given a @leaf_type and a @root_type which is contained in its anchestry, "
"return the type that @root_type is the immediate parent of.  In other words, "
"this function determines the type that is derived directly from @root_type "
"which is also a base class of @leaf_type.  Given a root type and a leaf "
"type, this function can be used to determine the types and order in which "
"the leaf type is descended from the root type."
msgstr ""

# #used by: g_type_next_base:
#: gtype.c:3393:1
msgid "Returns: Immediate child of @root_type and anchestor of @leaf_type."
msgstr ""

# used by: g_type_is_a:
#: gtype.c:3480:1
msgid "@type: Type to check anchestry for."
msgstr ""

# used by: g_type_is_a:
#: gtype.c:3481:1
msgid ""
"@is_a_type: Possible anchestor of @type or interface @type could conform to."
msgstr ""

# #used by: g_type_is_a:
#: gtype.c:3483:3
msgid ""
"If @is_a_type is a derivable type, check whether @type is a descendant of "
"@is_a_type.  If @is_a_type is an interface, check whether @type conforms to "
"it."
msgstr ""

# #used by: g_type_is_a:
#: gtype.c:3487:1
msgid "Returns: %TRUE if @type is_a @is_a_type holds true."
msgstr ""

# used by: g_type_children:
#: gtype.c:3505:1
msgid "@type: The parent type."
msgstr ""

# used by: g_type_children:
#: gtype.c:3506:2
msgid ""
"@n_children: (out) (allow-none): Optional #guint pointer to contain the "
"number of child types."
msgstr ""

# #used by: g_type_children:
#: gtype.c:3509:2
msgid ""
"Return a newly allocated and 0-terminated array of type IDs, listing the "
"child types of @type. The return value has to be g_free()ed after use."
msgstr ""

# #used by: g_type_children:
#: gtype.c:3512:2
msgid ""
"Returns: (array length=n_children) (transfer full): Newly allocated and 0-"
"terminated array of child types."
msgstr ""

# used by: g_type_interfaces:
#: gtype.c:3548:1
msgid "@type: The type to list interface types for."
msgstr ""

# used by: g_type_interfaces:
#: gtype.c:3549:2
msgid ""
"@n_interfaces: (out) (allow-none): Optional #guint pointer to contain the "
"number of interface types."
msgstr ""

# #used by: g_type_interfaces:
#: gtype.c:3552:3
msgid ""
"Return a newly allocated and 0-terminated array of type IDs, listing the "
"interface types that @type conforms to. The return value has to be g_free()"
"ed after use."
msgstr ""

# #used by: g_type_interfaces:
#: gtype.c:3556:2
msgid ""
"Returns: (array length=n_interfaces) (transfer full): Newly allocated and 0-"
"terminated array of interface types."
msgstr ""

# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_get_qdata:
# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_set_qdata:
#: gtype.c:3649:1 gtype.c:3720:1
msgid "@type: a #GType"
msgstr ""

# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_get_qdata:
# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_set_qdata:
#: gtype.c:3650:1 gtype.c:3721:1
msgid "@quark: a #GQuark id to identify the data"
msgstr ""

# #used by: g_type_get_qdata:
#: gtype.c:3652:2
msgid ""
"Obtains data which has previously been attached to @type with "
"g_type_set_qdata()."
msgstr ""

# #used by: g_type_get_qdata:
#: gtype.c:3655:3
msgid ""
"Note that this does not take subtyping into account; data attached to one "
"type with g_type_set_qdata() cannot be retrieved from a subtype using "
"g_type_get_qdata()."
msgstr ""

# #used by: g_type_get_qdata:
#: gtype.c:3659:1
msgid "Returns: (transfer none): the data, or %NULL if no data was found"
msgstr ""

# used by: g_type_set_qdata:
#: gtype.c:3722:1
msgid "@data: the data"
msgstr ""

# #used by: g_type_set_qdata:
#: gtype.c:3724:1
msgid "Attaches arbitrary data to a type."
msgstr ""

# used by: g_type_query:
#: gtype.c:3764:1
msgid "@type: the #GType value of a static, classed type."
msgstr ""

# used by: g_type_query:
#: gtype.c:3765:2
msgid ""
"@query: (out caller-allocates): A user provided structure that is filled in "
"with constant values upon success."
msgstr ""

# #used by: g_type_query:
#: gtype.c:3768:6
msgid ""
"Queries the type system for information about a specific type. This function "
"will fill in a user-provided structure to hold type-specific information. If "
"an invalid #GType is passed in, the @type member of the #GTypeQuery is 0. "
"All members filled into the #GTypeQuery structure should be considered "
"constant and have to be left untouched."
msgstr ""

# used by: g_type_get_plugin:
#: gtype.c:3842:1
msgid "@type: The #GType to retrieve the plugin for."
msgstr ""

# #used by: g_type_get_plugin:
#: gtype.c:3844:2
msgid ""
"Returns the #GTypePlugin structure for @type or %NULL if @type does not have "
"a #GTypePlugin structure."
msgstr ""

# #used by: g_type_get_plugin:
#: gtype.c:3847:2
msgid ""
"Returns: (transfer none): The corresponding plugin if @type is a dynamic "
"type, %NULL otherwise."
msgstr ""

# used by: g_type_interface_get_plugin:
#: gtype.c:3862:1
msgid "@instance_type: the #GType value of an instantiatable type."
msgstr ""

# #used by: g_type_interface_get_plugin:
#: gtype.c:3865:4
msgid ""
"Returns the #GTypePlugin structure for the dynamic interface @interface_type "
"which has been added to @instance_type, or %NULL if @interface_type has not "
"been added to @instance_type or does not have a #GTypePlugin structure. See "
"g_type_add_interface_dynamic()."
msgstr ""

# #used by: g_type_interface_get_plugin:
#: gtype.c:3870:2
msgid ""
"Returns: (transfer none): the #GTypePlugin for the dynamic interface "
"@interface_type of @instance_type."
msgstr ""

# #used by: g_type_fundamental_next:
#: gtype.c:3912:4
msgid ""
"Returns the next free fundamental type id which can be used to register a "
"new fundamental type with g_type_register_fundamental(). The returned type "
"ID represents the highest currently registered fundamental type identifier."
msgstr ""

# #used by: g_type_fundamental_next:
#: gtype.c:3917:2
msgid ""
"Returns: The nextmost fundamental type ID to be registered, or 0 if the type "
"system ran out of fundamental type IDs."
msgstr ""

# used by: g_type_fundamental:
#: gtype.c:3934:1
msgid "@type_id: valid type ID"
msgstr ""

# #used by: g_type_fundamental:
#: gtype.c:3936:2
msgid ""
"Internal function, used to extract the fundamental type ID portion. use "
"G_TYPE_FUNDAMENTAL() instead."
msgstr ""

# #used by: g_type_fundamental:
#: gtype.c:3939:1
msgid "Returns: fundamental type ID"
msgstr ""

# used by: g_type_check_instance:
#: gtype.c:4051:1
msgid "@instance: A valid #GTypeInstance structure."
msgstr ""

# #used by: g_type_check_instance:
#: gtype.c:4053:2
msgid ""
"Private helper function to aid implementation of the G_TYPE_CHECK_INSTANCE() "
"macro."
msgstr ""

# used by: g_type_check_instance:
#: gtype.c:4056:1
msgid "@Returns:  #TRUE if @instance is valid, #FALSE otherwise."
msgstr ""

# #used by: g_type_value_table_peek: (skip)
#: gtype.c:4149:4
msgid ""
"Returns the location of the #GTypeValueTable associated with @type. "
"<emphasis>Note that this function should only be used from source code that "
"implements or has internal knowledge of the implementation of @type.</"
"emphasis>"
msgstr ""

# #used by: g_type_value_table_peek: (skip)
#: gtype.c:4154:2
msgid ""
"Returns: Location of the #GTypeValueTable associated with @type or %NULL if "
"there is no #GTypeValueTable associated with @type."
msgstr ""

# used by: g_type_init_with_debug_flags:
#: gtype.c:4259:2
msgid ""
"@debug_flags: Bitwise combination of #GTypeDebugFlags values for debugging "
"purposes."
msgstr ""

# #used by: g_type_init_with_debug_flags:
#: gtype.c:4262:1
msgid "Similar to g_type_init(), but additionally sets debug flags."
msgstr ""

# #used by: g_type_init:
#: gtype.c:4377:4
msgid ""
"Prior to any use of the type system, g_type_init() has to be called to "
"initialize the type system and assorted other code portions (such as the "
"various fundamental type implementations or the signal system)."
msgstr ""

# #used by: g_type_init:
#: gtype.c:4382:1
msgid "Since version 2.24 this also initializes the thread system"
msgstr ""

# used by: g_type_class_add_private:
#: gtype.c:4392:1
msgid "@g_class: class structure for an instantiatable type"
msgstr ""

# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_class_add_private:
# #-#-#-#-#  gtype.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_type_add_class_private:
#: gtype.c:4393:1 gtype.c:4557:1
msgid "@private_size: size of private structure."
msgstr ""

# #used by: g_type_class_add_private:
#: gtype.c:4395:1
msgid "Registers a private structure for an instantiatable type."
msgstr ""

# #used by: g_type_class_add_private:
#: gtype.c:4397:4
msgid ""
"When an object is allocated, the private structures for the type and all of "
"its parent types are allocated sequentially in the same memory block as the "
"public structures."
msgstr ""

# #used by: g_type_class_add_private:
#: gtype.c:4402:2
msgid ""
"Note that the accumulated size of the private structures of a type and all "
"its parent types cannot excced 64kB."
msgstr ""

# #used by: g_type_class_add_private:
#: gtype.c:4405:3
msgid ""
"This function should be called in the type's class_init() function. The "
"private structure can be retrieved using the G_TYPE_INSTANCE_GET_PRIVATE() "
"macro."
msgstr ""

# #used by: g_type_class_add_private:
#: gtype.c:4409:5
msgid ""
"The following example shows attaching a private structure "
"<structname>MyObjectPrivate</structname> to an object <structname>MyObject</"
"structname> defined in the standard GObject fashion. type's class_init() "
"function."
msgstr ""

# #used by: g_type_class_add_private:
#: gtype.c:4415:3
msgid ""
"|[ typedef struct _MyObject        MyObject; typedef struct _MyObjectPrivate "
"MyObjectPrivate;"
msgstr ""

# #used by: g_type_class_add_private:
#: gtype.c:4419:2
msgid "struct _MyObject { GObject parent;"
msgstr ""

# #used by: g_type_class_add_private:
#: gtype.c:4422:2
msgid "MyObjectPrivate *priv; };"
msgstr ""

# #used by: g_type_class_add_private:
#: gtype.c:4425:3
msgid "struct _MyObjectPrivate { int some_field; };"
msgstr ""

# #used by: g_type_class_add_private:
#: gtype.c:4429:5
msgid ""
"static void my_object_class_init (MyObjectClass *klass) "
"{ g_type_class_add_private (klass, sizeof (MyObjectPrivate)); }"
msgstr ""

# #used by: g_type_class_add_private:
#: gtype.c:4435:7
msgid ""
"static void my_object_init (MyObject *my_object) { my_object->priv = "
"G_TYPE_INSTANCE_GET_PRIVATE (my_object, MY_TYPE_OBJECT, MyObjectPrivate); }"
msgstr ""

# #used by: g_type_class_add_private:
#: gtype.c:4443:4
msgid ""
"static int my_object_get_some_field (MyObject *my_object) { MyObjectPrivate "
"*priv = my_object->priv;"
msgstr ""

# #used by: g_type_class_add_private:
#: gtype.c:4448:3
msgid "return priv->some_field; } ]|"
msgstr ""

# used by: g_type_add_class_private:
#: gtype.c:4556:1
msgid "@class_type: GType of an classed type."
msgstr ""

# #used by: g_type_add_class_private:
#: gtype.c:4559:8
msgid ""
"Registers a private class structure for a classed type; when the class is "
"allocated, the private structures for the class and all of its parent types "
"are allocated sequentially in the same memory block as the public "
"structures. This function should be called in the type's get_type() function "
"after the type is registered. The private structure can be retrieved using "
"the G_TYPE_CLASS_GET_PRIVATE() macro."
msgstr ""

# #used by: g_type_add_class_private:
#: gtype.c:4568:1
msgid "Since: 2.24"
msgstr ""

# used by: SECTION:value_arrays
#: gvaluearray.c:34:2
msgid ""
"@short_description: A container structure to maintain an array of generic "
"values"
msgstr ""

# used by: SECTION:value_arrays
#: gvaluearray.c:36:1
msgid "@see_also: #GValue, #GParamSpecValueArray, g_param_spec_value_array()"
msgstr ""

# used by: SECTION:value_arrays
#: gvaluearray.c:37:1
msgid "@title: Value arrays"
msgstr ""

# #used by: SECTION:value_arrays
#: gvaluearray.c:39:4
msgid ""
"The prime purpose of a #GValueArray is for it to be used as an object "
"property that holds an array of values. A #GValueArray wraps an array of "
"#GValue elements in order for it to be used as a boxed type through "
"%G_TYPE_VALUE_ARRAY."
msgstr ""

# used by: g_value_array_get_nth:
#: gvaluearray.c:56:1
msgid "@value_array: #GValueArray to get a value from"
msgstr ""

# used by: g_value_array_get_nth:
#: gvaluearray.c:57:1
msgid "@index_: index of the value of interest"
msgstr ""

# #used by: g_value_array_get_nth:
#: gvaluearray.c:59:1
msgid "Return a pointer to the value at @index_ containd in @value_array."
msgstr ""

# #used by: g_value_array_get_nth:
#: gvaluearray.c:61:1
msgid "Returns: (transfer none): pointer to a value at @index_ in @value_array"
msgstr ""

# used by: g_value_array_new:
#: gvaluearray.c:108:1
msgid "@n_prealloced: number of values to preallocate space for"
msgstr ""

# #used by: g_value_array_new:
#: gvaluearray.c:110:3
msgid ""
"Allocate and initialize a new #GValueArray, optionally preserve space for "
"@n_prealloced elements. New arrays always contain 0 elements, regardless of "
"the value of @n_prealloced."
msgstr ""

# #used by: g_value_array_new:
#: gvaluearray.c:114:1
msgid "Returns: a newly allocated #GValueArray with 0 values"
msgstr ""

# used by: g_value_array_free:
#: gvaluearray.c:132:1
msgid "@value_array: #GValueArray to free"
msgstr ""

# #used by: g_value_array_free:
#: gvaluearray.c:134:1
msgid "Free a #GValueArray including its contents."
msgstr ""

# used by: g_value_array_copy:
#: gvaluearray.c:156:1
msgid "@value_array: #GValueArray to copy"
msgstr ""

# #used by: g_value_array_copy:
#: gvaluearray.c:158:2
msgid ""
"Construct an exact copy of a #GValueArray by duplicating all its contents."
msgstr ""

# #used by: g_value_array_copy:
#: gvaluearray.c:161:1
msgid "Returns: (transfer full): Newly allocated copy of #GValueArray"
msgstr ""

# #-#-#-#-#  gvaluearray.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_array_prepend:
# #-#-#-#-#  gvaluearray.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_array_append:
# #-#-#-#-#  gvaluearray.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_array_insert:
#: gvaluearray.c:189:1 gvaluearray.c:209:1 gvaluearray.c:228:1
msgid "@value_array: #GValueArray to add an element to"
msgstr ""

# #-#-#-#-#  gvaluearray.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_array_prepend:
# #-#-#-#-#  gvaluearray.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_array_append:
# #-#-#-#-#  gvaluearray.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_array_insert:
#: gvaluearray.c:190:1 gvaluearray.c:210:1 gvaluearray.c:230:1
msgid "@value: (allow-none): #GValue to copy into #GValueArray, or %NULL"
msgstr ""

# #used by: g_value_array_prepend:
#: gvaluearray.c:192:2
msgid ""
"Insert a copy of @value as first element of @value_array. If @value is "
"%NULL, an uninitialized value is prepended."
msgstr ""

# #-#-#-#-#  gvaluearray.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_value_array_prepend:
# #-#-#-#-#  gvaluearray.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_value_array_append:
# #-#-#-#-#  gvaluearray.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_value_array_insert:
# #-#-#-#-#  gvaluearray.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_value_array_remove:
# #-#-#-#-#  gvaluearray.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_value_array_sort:
#: gvaluearray.c:196:1 gvaluearray.c:215:1 gvaluearray.c:235:1
#: gvaluearray.c:270:1 gvaluearray.c:302:1
msgid "Returns: (transfer none): the #GValueArray passed in as @value_array"
msgstr ""

# #used by: g_value_array_append:
#: gvaluearray.c:212:2
msgid ""
"Insert a copy of @value as last element of @value_array. If @value is %NULL, "
"an uninitialized value is appended."
msgstr ""

# used by: g_value_array_insert:
#: gvaluearray.c:229:1
msgid "@index_: insertion position, must be &lt;= value_array-&gt;n_values"
msgstr ""

# #used by: g_value_array_insert:
#: gvaluearray.c:232:2
msgid ""
"Insert a copy of @value at specified position into @value_array. If @value "
"is %NULL, an uninitialized value is inserted."
msgstr ""

# used by: g_value_array_remove:
#: gvaluearray.c:263:1
msgid "@value_array: #GValueArray to remove an element from"
msgstr ""

# used by: g_value_array_remove:
#: gvaluearray.c:264:3
msgid ""
"@index_: position of value to remove, which must be less than "
"<code>value_array-><link linkend=|$_1_$|GValueArray.n-values|$_1_$|"
">n_values</link></code>"
msgstr ""

# #used by: g_value_array_remove:
#: gvaluearray.c:268:1
msgid "Remove the value at position @index_ from @value_array."
msgstr ""

# #-#-#-#-#  gvaluearray.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_array_sort:
# #-#-#-#-#  gvaluearray.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_array_sort_with_data:
#: gvaluearray.c:294:1 gvaluearray.c:320:1
msgid "@value_array: #GValueArray to sort"
msgstr ""

# #-#-#-#-#  gvaluearray.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_array_sort:
# #-#-#-#-#  gvaluearray.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_array_sort_with_data:
#: gvaluearray.c:295:1 gvaluearray.c:321:1
msgid "@compare_func: (scope call): function to compare elements"
msgstr ""

# #used by: g_value_array_sort:
#: gvaluearray.c:297:2
msgid ""
"Sort @value_array using @compare_func to compare the elements accoring to "
"the semantics of #GCompareFunc."
msgstr ""

# #-#-#-#-#  gvaluearray.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_value_array_sort:
# #-#-#-#-#  gvaluearray.pot~ (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_value_array_sort_with_data:
#: gvaluearray.c:300:1 gvaluearray.c:327:1
msgid "The current implementation uses Quick-Sort as sorting algorithm."
msgstr ""

# used by: g_value_array_sort_with_data:
#: gvaluearray.c:322:1
msgid "@user_data: (closure): extra data argument provided for @compare_func"
msgstr ""

# #used by: g_value_array_sort_with_data:
#: gvaluearray.c:324:2
msgid ""
"Sort @value_array using @compare_func to compare the elements accoring to "
"the semantics of #GCompareDataFunc."
msgstr ""

# #used by: g_value_array_sort_with_data:
#: gvaluearray.c:329:2
msgid ""
"Rename to: g_value_array_sort Returns: (transfer none): the #GValueArray "
"passed in as @value_array"
msgstr ""

# used by: SECTION:generic_values
#: gvalue.c:35:2
msgid ""
"@short_description: A polymorphic type that can hold values of any other type"
msgstr ""

# used by: SECTION:generic_values
#: gvalue.c:37:5
msgid ""
"@see_also: The fundamental types which all support #GValue operations and "
"thus can be used as a type initializer for g_value_init() are defined by a "
"separate interface.  See the <link linkend=|$_1_$|gobject-Standard-Parameter-"
"and-Value-Types|$_1_$|>Standard Values API</link> for details."
msgstr ""

# used by: SECTION:generic_values
#: gvalue.c:42:1
msgid "@title: Generic values"
msgstr ""

# #used by: SECTION:generic_values
#: gvalue.c:44:11
msgid ""
"The #GValue structure is basically a variable container that consists of a "
"type identifier and a specific value of that type. The type identifier "
"within a #GValue structure always determines the type of the associated "
"value. To create a undefined #GValue structure, simply create a zero-filled "
"#GValue structure. To initialize the #GValue, use the g_value_init() "
"function. A #GValue cannot be used until it is initialized. The basic type "
"operations (such as freeing and copying) are determined by the "
"#GTypeValueTable associated with the type ID stored in the #GValue. Other "
"#GValue operations (such as converting values between types) are provided by "
"this interface."
msgstr ""

# #used by: SECTION:generic_values
#: gvalue.c:56:2
msgid "The code in the example program below demonstrates #GValue's features."
msgstr ""

# #used by: SECTION:generic_values
#: gvalue.c:59:2
msgid "|[ #include &lt;glib-object.h&gt;"
msgstr ""

# #used by: SECTION:generic_values
#: gvalue.c:62:9
msgid ""
"static void int2string (const GValue *src_value, GValue       *dest_value) "
"{ if (g_value_get_int (src_value) == 42) g_value_set_static_string "
"(dest_value, |$_1_$|An important number|$_1_$|); else "
"g_value_set_static_string (dest_value, |$_1_$|What's that?|$_1_$|); }"
msgstr ""

# #used by: SECTION:generic_values
#: gvalue.c:72:8
msgid ""
"int main (int   argc, char *argv[]) { /&ast; GValues must start zero-filled "
"&ast;/ GValue a = {0}; GValue b = {0}; const gchar *message;"
msgstr ""

# #used by: SECTION:generic_values
#: gvalue.c:81:1
msgid "g_type_init ();"
msgstr ""

# #used by: SECTION:generic_values
#: gvalue.c:83:2
msgid ""
"/&ast; The GValue starts empty &ast;/ g_assert (!G_VALUE_HOLDS_STRING (&amp;"
"a));"
msgstr ""

# #used by: SECTION:generic_values
#: gvalue.c:86:5
msgid ""
"/&ast; Put a string in it &ast;/ g_value_init (&amp;a, G_TYPE_STRING); "
"g_assert (G_VALUE_HOLDS_STRING (&amp;a)); g_value_set_static_string (&amp;a, "
"|$_1_$|Hello, world!|$_1_$|); g_printf (|$_1_$|%s|$_2_$|n|$_1_$|, "
"g_value_get_string (&amp;a));"
msgstr ""

# #used by: SECTION:generic_values
#: gvalue.c:92:2
msgid "/&ast; Reset it to its pristine state &ast;/ g_value_unset (&amp;a);"
msgstr ""

# #used by: SECTION:generic_values
#: gvalue.c:95:3
msgid ""
"/&ast; It can then be reused for another type &ast;/ g_value_init (&amp;a, "
"G_TYPE_INT); g_value_set_int (&amp;a, 42);"
msgstr ""

# #used by: SECTION:generic_values
#: gvalue.c:99:2
msgid ""
"/&ast; Attempt to transform it into a GValue of type STRING &ast;/ "
"g_value_init (&amp;b, G_TYPE_STRING);"
msgstr ""

# #used by: SECTION:generic_values
#: gvalue.c:102:2
msgid ""
"/&ast; An INT is transformable to a STRING &ast;/ g_assert "
"(g_value_type_transformable (G_TYPE_INT, G_TYPE_STRING));"
msgstr ""

# #used by: SECTION:generic_values
#: gvalue.c:105:2
msgid ""
"g_value_transform (&amp;a, &amp;b); g_printf (|$_1_$|%s|$_2_$|n|$_1_$|, "
"g_value_get_string (&amp;b));"
msgstr ""

# #used by: SECTION:generic_values
#: gvalue.c:108:7
msgid ""
"/&ast; Attempt to transform it again using a custom transform function "
"&ast;/ g_value_register_transform_func (G_TYPE_INT, G_TYPE_STRING, "
"int2string); g_value_transform (&amp;a, &amp;b); g_printf (|$_1_$|%s|$_2_$|n|"
"$_1_$|, g_value_get_string (&amp;b)); return 0; } ]|"
msgstr ""

# used by: g_value_init:
#: gvalue.c:157:1
msgid "@value: A zero-filled (uninitialized) #GValue structure."
msgstr ""

# used by: g_value_init:
#: gvalue.c:158:1
msgid "@g_type: Type the #GValue should hold values of."
msgstr ""

# #used by: g_value_init:
#: gvalue.c:160:1
msgid "Initializes @value with the default value of @type."
msgstr ""

# #used by: g_value_init:
#: gvalue.c:162:1
msgid "Returns: (transfer none): the #GValue structure that has been passed in"
msgstr ""

# used by: g_value_copy:
#: gvalue.c:197:1
msgid "@src_value: An initialized #GValue structure."
msgstr ""

# used by: g_value_copy:
#: gvalue.c:198:1
msgid ""
"@dest_value: An initialized #GValue structure of the same type as @src_value."
msgstr ""

# #used by: g_value_copy:
#: gvalue.c:200:1
msgid "Copies the value of @src_value into @dest_value."
msgstr ""

# #-#-#-#-#  gvalue.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_reset:
# #-#-#-#-#  gvalue.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_unset:
# #-#-#-#-#  gvalue.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_fits_pointer:
# #-#-#-#-#  gvalue.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_peek_pointer:
# #-#-#-#-#  gvalue.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_set_instance:
#: gvalue.c:227:1 gvalue.c:258:1 gvalue.c:281:1 gvalue.c:302:1 gvalue.c:328:1
msgid "@value: An initialized #GValue structure."
msgstr ""

# #used by: g_value_reset:
#: gvalue.c:229:2
msgid ""
"Clears the current value in @value and resets it to the default value (as if "
"the value had just been initialized)."
msgstr ""

# #used by: g_value_reset:
#: gvalue.c:232:1
msgid "Returns: the #GValue structure that has been passed in"
msgstr ""

# #used by: g_value_unset:
#: gvalue.c:260:4
msgid ""
"Clears the current value in @value and |$_1_$|unsets|$_1_$| the type, this "
"releases all resources associated with this GValue. An unset value is the "
"same as an uninitialized (zero-filled) #GValue structure."
msgstr ""

# #used by: g_value_fits_pointer:
#: gvalue.c:283:2
msgid ""
"Determines if @value will fit inside the size of a pointer value. This is an "
"internal function introduced mainly for C marshallers."
msgstr ""

# #used by: g_value_fits_pointer:
#: gvalue.c:286:1
msgid "Returns: %TRUE if @value will fit inside a pointer value."
msgstr ""

# #used by: g_value_peek_pointer:
#: gvalue.c:304:4
msgid ""
"Returns: (transfer none): the value contents as pointer. This function "
"asserts that g_value_fits_pointer() returned %TRUE for the passed in value.  "
"This is an internal function introduced mainly for C marshallers."
msgstr ""

# used by: g_value_set_instance:
#: gvalue.c:329:1
msgid "@instance: the instance"
msgstr ""

# #used by: g_value_set_instance:
#: gvalue.c:331:2
msgid ""
"Sets @value from an instantiatable type via the value_table's collect_value"
"() function."
msgstr ""

# #-#-#-#-#  gvalue.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_register_transform_func: (skip)
# #-#-#-#-#  gvalue.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_type_transformable:
#: gvalue.c:427:1 gvalue.c:466:1
msgid "@src_type: Source type."
msgstr ""

# #-#-#-#-#  gvalue.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_register_transform_func: (skip)
# #-#-#-#-#  gvalue.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_type_transformable:
#: gvalue.c:428:1 gvalue.c:467:1
msgid "@dest_type: Target type."
msgstr ""

# used by: g_value_register_transform_func: (skip)
#: gvalue.c:429:2
msgid ""
"@transform_func: a function which transforms values of type @src_type into "
"value of type @dest_type"
msgstr ""

# #used by: g_value_register_transform_func: (skip)
#: gvalue.c:432:3
msgid ""
"Registers a value transformation function for use in g_value_transform(). A "
"previously registered transformation function for @src_type and @dest_type "
"will be replaced."
msgstr ""

# #used by: g_value_type_transformable:
#: gvalue.c:469:2
msgid ""
"Check whether g_value_transform() is able to transform values of type "
"@src_type into values of type @dest_type."
msgstr ""

# #used by: g_value_type_transformable:
#: gvalue.c:472:1
msgid "Returns: %TRUE if the transformation is possible, %FALSE otherwise."
msgstr ""

# used by: g_value_type_compatible:
#: gvalue.c:487:1
msgid "@src_type: source type to be copied."
msgstr ""

# used by: g_value_type_compatible:
#: gvalue.c:488:1
msgid "@dest_type: destination type for copying."
msgstr ""

# #used by: g_value_type_compatible:
#: gvalue.c:490:2
msgid ""
"Returns whether a #GValue of type @src_type can be copied into a #GValue of "
"type @dest_type."
msgstr ""

# #used by: g_value_type_compatible:
#: gvalue.c:493:1
msgid ""
"Returns: %TRUE if g_value_copy() is possible with @src_type and @dest_type."
msgstr ""

# used by: g_value_transform:
#: gvalue.c:508:1
msgid "@src_value: Source value."
msgstr ""

# used by: g_value_transform:
#: gvalue.c:509:1
msgid "@dest_value: Target value."
msgstr ""

# #used by: g_value_transform:
#: gvalue.c:511:7
msgid ""
"Tries to cast the contents of @src_value into a type appropriate to store in "
"@dest_value, e.g. to transform a %G_TYPE_INT value into a %G_TYPE_FLOAT "
"value. Performing transformations between value types might incur precision "
"lossage. Especially transformations into strings might reveal seemingly "
"arbitrary results and shouldn't be relied upon for production code (such as "
"rcfile value or object property serialization)."
msgstr ""

# #used by: g_value_transform:
#: gvalue.c:519:2
msgid ""
"Returns: Whether a transformation rule was found and could be applied. Upon "
"failing transformations, @dest_value is left untouched."
msgstr ""

# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_set_char:
# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_get_char:
#: gvaluetypes.c:634:1 gvaluetypes.c:650:1
msgid "@value: a valid #GValue of type %G_TYPE_CHAR"
msgstr ""

# used by: g_value_set_char:
#: gvaluetypes.c:635:1
msgid "@v_char: character value to be set"
msgstr ""

# #used by: g_value_set_char:
#: gvaluetypes.c:637:1
msgid "Set the contents of a %G_TYPE_CHAR #GValue to @v_char."
msgstr ""

# #used by: g_value_get_char:
#: gvaluetypes.c:652:1
msgid "Get the contents of a %G_TYPE_CHAR #GValue."
msgstr ""

# #used by: g_value_get_char:
#: gvaluetypes.c:654:1
msgid "Returns: character contents of @value"
msgstr ""

# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_set_uchar:
# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_get_uchar:
#: gvaluetypes.c:666:1 gvaluetypes.c:682:1
msgid "@value: a valid #GValue of type %G_TYPE_UCHAR"
msgstr ""

# used by: g_value_set_uchar:
#: gvaluetypes.c:667:1
msgid "@v_uchar: unsigned character value to be set"
msgstr ""

# #used by: g_value_set_uchar:
#: gvaluetypes.c:669:1
msgid "Set the contents of a %G_TYPE_UCHAR #GValue to @v_uchar."
msgstr ""

# #used by: g_value_get_uchar:
#: gvaluetypes.c:684:1
msgid "Get the contents of a %G_TYPE_UCHAR #GValue."
msgstr ""

# #used by: g_value_get_uchar:
#: gvaluetypes.c:686:1
msgid "Returns: unsigned character contents of @value"
msgstr ""

# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_set_boolean:
# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_get_boolean:
#: gvaluetypes.c:698:1 gvaluetypes.c:714:1
msgid "@value: a valid #GValue of type %G_TYPE_BOOLEAN"
msgstr ""

# used by: g_value_set_boolean:
#: gvaluetypes.c:699:1
msgid "@v_boolean: boolean value to be set"
msgstr ""

# #used by: g_value_set_boolean:
#: gvaluetypes.c:701:1
msgid "Set the contents of a %G_TYPE_BOOLEAN #GValue to @v_boolean."
msgstr ""

# #used by: g_value_get_boolean:
#: gvaluetypes.c:716:1
msgid "Get the contents of a %G_TYPE_BOOLEAN #GValue."
msgstr ""

# #used by: g_value_get_boolean:
#: gvaluetypes.c:718:1
msgid "Returns: boolean contents of @value"
msgstr ""

# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_set_int:
# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_get_int:
#: gvaluetypes.c:730:1 gvaluetypes.c:746:1
msgid "@value: a valid #GValue of type %G_TYPE_INT"
msgstr ""

# used by: g_value_set_int:
#: gvaluetypes.c:731:1
msgid "@v_int: integer value to be set"
msgstr ""

# #used by: g_value_set_int:
#: gvaluetypes.c:733:1
msgid "Set the contents of a %G_TYPE_INT #GValue to @v_int."
msgstr ""

# #used by: g_value_get_int:
#: gvaluetypes.c:748:1
msgid "Get the contents of a %G_TYPE_INT #GValue."
msgstr ""

# #used by: g_value_get_int:
#: gvaluetypes.c:750:1
msgid "Returns: integer contents of @value"
msgstr ""

# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_set_uint:
# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_get_uint:
#: gvaluetypes.c:762:1 gvaluetypes.c:778:1
msgid "@value: a valid #GValue of type %G_TYPE_UINT"
msgstr ""

# used by: g_value_set_uint:
#: gvaluetypes.c:763:1
msgid "@v_uint: unsigned integer value to be set"
msgstr ""

# #used by: g_value_set_uint:
#: gvaluetypes.c:765:1
msgid "Set the contents of a %G_TYPE_UINT #GValue to @v_uint."
msgstr ""

# #used by: g_value_get_uint:
#: gvaluetypes.c:780:1
msgid "Get the contents of a %G_TYPE_UINT #GValue."
msgstr ""

# #used by: g_value_get_uint:
#: gvaluetypes.c:782:1
msgid "Returns: unsigned integer contents of @value"
msgstr ""

# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_set_long:
# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_get_long:
#: gvaluetypes.c:794:1 gvaluetypes.c:810:1
msgid "@value: a valid #GValue of type %G_TYPE_LONG"
msgstr ""

# used by: g_value_set_long:
#: gvaluetypes.c:795:1
msgid "@v_long: long integer value to be set"
msgstr ""

# #used by: g_value_set_long:
#: gvaluetypes.c:797:1
msgid "Set the contents of a %G_TYPE_LONG #GValue to @v_long."
msgstr ""

# #used by: g_value_get_long:
#: gvaluetypes.c:812:1
msgid "Get the contents of a %G_TYPE_LONG #GValue."
msgstr ""

# #used by: g_value_get_long:
#: gvaluetypes.c:814:1
msgid "Returns: long integer contents of @value"
msgstr ""

# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_set_ulong:
# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_get_ulong:
#: gvaluetypes.c:826:1 gvaluetypes.c:842:1
msgid "@value: a valid #GValue of type %G_TYPE_ULONG"
msgstr ""

# used by: g_value_set_ulong:
#: gvaluetypes.c:827:1
msgid "@v_ulong: unsigned long integer value to be set"
msgstr ""

# #used by: g_value_set_ulong:
#: gvaluetypes.c:829:1
msgid "Set the contents of a %G_TYPE_ULONG #GValue to @v_ulong."
msgstr ""

# #used by: g_value_get_ulong:
#: gvaluetypes.c:844:1
msgid "Get the contents of a %G_TYPE_ULONG #GValue."
msgstr ""

# #used by: g_value_get_ulong:
#: gvaluetypes.c:846:1
msgid "Returns: unsigned long integer contents of @value"
msgstr ""

# used by: g_value_get_int64:
#: gvaluetypes.c:858:1
msgid "@value: a valid #GValue of type %G_TYPE_INT64"
msgstr ""

# #used by: g_value_get_int64:
#: gvaluetypes.c:860:1
msgid "Get the contents of a %G_TYPE_INT64 #GValue."
msgstr ""

# #used by: g_value_get_int64:
#: gvaluetypes.c:862:1
msgid "Returns: 64bit integer contents of @value"
msgstr ""

# used by: g_value_set_int64:
#: gvaluetypes.c:875:2
msgid ""
"@value: a valid #GValue of type %G_TYPE_INT64 @v_int64: 64bit integer value "
"to be set"
msgstr ""

# #used by: g_value_set_int64:
#: gvaluetypes.c:878:1
msgid "Set the contents of a %G_TYPE_INT64 #GValue to @v_int64."
msgstr ""

# used by: g_value_set_uint64:
#: gvaluetypes.c:890:2
msgid ""
"@value: a valid #GValue of type %G_TYPE_UINT64 @v_uint64: unsigned 64bit "
"integer value to be set"
msgstr ""

# #used by: g_value_set_uint64:
#: gvaluetypes.c:893:1
msgid "Set the contents of a %G_TYPE_UINT64 #GValue to @v_uint64."
msgstr ""

# used by: g_value_get_uint64:
#: gvaluetypes.c:906:1
msgid "@value: a valid #GValue of type %G_TYPE_UINT64"
msgstr ""

# #used by: g_value_get_uint64:
#: gvaluetypes.c:908:1
msgid "Get the contents of a %G_TYPE_UINT64 #GValue."
msgstr ""

# #used by: g_value_get_uint64:
#: gvaluetypes.c:910:1
msgid "Returns: unsigned 64bit integer contents of @value"
msgstr ""

# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_set_float:
# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_get_float:
#: gvaluetypes.c:922:1 gvaluetypes.c:938:1
msgid "@value: a valid #GValue of type %G_TYPE_FLOAT"
msgstr ""

# used by: g_value_set_float:
#: gvaluetypes.c:923:1
msgid "@v_float: float value to be set"
msgstr ""

# #used by: g_value_set_float:
#: gvaluetypes.c:925:1
msgid "Set the contents of a %G_TYPE_FLOAT #GValue to @v_float."
msgstr ""

# #used by: g_value_get_float:
#: gvaluetypes.c:940:1
msgid "Get the contents of a %G_TYPE_FLOAT #GValue."
msgstr ""

# #used by: g_value_get_float:
#: gvaluetypes.c:942:1
msgid "Returns: float contents of @value"
msgstr ""

# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_set_double:
# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_get_double:
#: gvaluetypes.c:954:1 gvaluetypes.c:970:1
msgid "@value: a valid #GValue of type %G_TYPE_DOUBLE"
msgstr ""

# used by: g_value_set_double:
#: gvaluetypes.c:955:1
msgid "@v_double: double value to be set"
msgstr ""

# #used by: g_value_set_double:
#: gvaluetypes.c:957:1
msgid "Set the contents of a %G_TYPE_DOUBLE #GValue to @v_double."
msgstr ""

# #used by: g_value_get_double:
#: gvaluetypes.c:972:1
msgid "Get the contents of a %G_TYPE_DOUBLE #GValue."
msgstr ""

# #used by: g_value_get_double:
#: gvaluetypes.c:974:1
msgid "Returns: double contents of @value"
msgstr ""

# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_set_string:
# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_set_static_string:
# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_set_string_take_ownership:
# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_take_string:
# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_get_string:
# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_dup_string:
#: gvaluetypes.c:986:1 gvaluetypes.c:1011:1 gvaluetypes.c:1032:1
#: gvaluetypes.c:1048:1 gvaluetypes.c:1070:1 gvaluetypes.c:1086:1
msgid "@value: a valid #GValue of type %G_TYPE_STRING"
msgstr ""

# used by: g_value_set_string:
#: gvaluetypes.c:987:1
msgid "@v_string: caller-owned string to be duplicated for the #GValue"
msgstr ""

# #used by: g_value_set_string:
#: gvaluetypes.c:989:1
msgid "Set the contents of a %G_TYPE_STRING #GValue to @v_string."
msgstr ""

# used by: g_value_set_static_string:
#: gvaluetypes.c:1012:1
msgid "@v_string: static string to be set"
msgstr ""

# #used by: g_value_set_static_string:
#: gvaluetypes.c:1014:3
msgid ""
"Set the contents of a %G_TYPE_STRING #GValue to @v_string. The string is "
"assumed to be static, and is thus not duplicated when setting the #GValue."
msgstr ""

# used by: g_value_set_string_take_ownership:
#: gvaluetypes.c:1033:1
msgid "@v_string: duplicated unowned string to be set"
msgstr ""

# #used by: g_value_set_string_take_ownership:
#: gvaluetypes.c:1037:1
msgid "Deprecated: 2.4: Use g_value_take_string() instead."
msgstr ""

# used by: g_value_take_string:
#: gvaluetypes.c:1049:1
msgid "@v_string: string to take ownership of"
msgstr ""

# #used by: g_value_take_string:
#: gvaluetypes.c:1051:1
msgid "Sets the contents of a %G_TYPE_STRING #GValue to @v_string."
msgstr ""

# #used by: g_value_get_string:
#: gvaluetypes.c:1072:1
msgid "Get the contents of a %G_TYPE_STRING #GValue."
msgstr ""

# #used by: g_value_get_string:
#: gvaluetypes.c:1074:1
msgid "Returns: string content of @value"
msgstr ""

# #used by: g_value_dup_string:
#: gvaluetypes.c:1088:1
msgid "Get a copy the contents of a %G_TYPE_STRING #GValue."
msgstr ""

# #used by: g_value_dup_string:
#: gvaluetypes.c:1090:1
msgid "Returns: a newly allocated copy of the string content of @value"
msgstr ""

# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_set_pointer:
# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_get_pointer:
#: gvaluetypes.c:1102:1 gvaluetypes.c:1118:1
msgid "@value: a valid #GValue of %G_TYPE_POINTER"
msgstr ""

# used by: g_value_set_pointer:
#: gvaluetypes.c:1103:1
msgid "@v_pointer: pointer value to be set"
msgstr ""

# #used by: g_value_set_pointer:
#: gvaluetypes.c:1105:1
msgid "Set the contents of a pointer #GValue to @v_pointer."
msgstr ""

# #used by: g_value_get_pointer:
#: gvaluetypes.c:1120:1
msgid "Get the contents of a pointer #GValue."
msgstr ""

# #used by: g_value_get_pointer:
#: gvaluetypes.c:1122:1
msgid "Returns: (transfer none): pointer contents of @value"
msgstr ""

# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_set_gtype:
# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_get_gtype:
#: gvaluetypes.c:1136:1 gvaluetypes.c:1155:1
msgid "@value: a valid #GValue of type %G_TYPE_GTYPE"
msgstr ""

# used by: g_value_set_gtype:
#: gvaluetypes.c:1137:1
msgid "@v_gtype: #GType to be set"
msgstr ""

# #used by: g_value_set_gtype:
#: gvaluetypes.c:1139:1
msgid "Set the contents of a %G_TYPE_GTYPE #GValue to @v_gtype."
msgstr ""

# #used by: g_value_get_gtype:
#: gvaluetypes.c:1157:1
msgid "Get the contents of a %G_TYPE_GTYPE #GValue."
msgstr ""

# #used by: g_value_get_gtype:
#: gvaluetypes.c:1161:1
msgid "Returns: the #GType stored in @value"
msgstr ""

# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_set_variant:
# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_take_variant:
# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_get_variant:
# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_dup_variant:
#: gvaluetypes.c:1173:1 gvaluetypes.c:1202:1 gvaluetypes.c:1241:1
#: gvaluetypes.c:1259:1
msgid "@value: a valid #GValue of type %G_TYPE_VARIANT"
msgstr ""

# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_set_variant:
# #-#-#-#-#  gvaluetypes.pot~ (PACKAGE VERSION)  #-#-#-#-#
# used by: g_value_take_variant:
#: gvaluetypes.c:1174:1 gvaluetypes.c:1203:1
msgid "@variant: a #GVariant, or %NULL"
msgstr ""

# #used by: g_value_set_variant:
#: gvaluetypes.c:1176:2
msgid ""
"Set the contents of a variant #GValue to @variant. If the variant is "
"floating, it is consumed."
msgstr ""

# #used by: g_value_take_variant:
#: gvaluetypes.c:1205:4
msgid ""
"Set the contents of a variant #GValue to @variant, and takes over the "
"ownership of the caller's reference to @variant; the caller doesn't have to "
"unref it any more (i.e. the reference count of the variant is not increased)."
msgstr ""

# #used by: g_value_take_variant:
#: gvaluetypes.c:1210:4
msgid ""
"It is a programmer error to pass a floating variant to this function. In "
"particular this means that callbacks in closures, and signal handlers for "
"signals of return type %G_TYPE_VARIANT, must never return floating variants."
msgstr ""

# #used by: g_value_take_variant:
#: gvaluetypes.c:1215:2
msgid ""
"If you want the #GValue to hold its own reference to @variant, use "
"g_value_set_variant() instead."
msgstr ""

# #used by: g_value_get_variant:
#: gvaluetypes.c:1243:1
msgid "Get the contents of a variant #GValue."
msgstr ""

# #used by: g_value_get_variant:
#: gvaluetypes.c:1245:1
msgid "Returns: variant contents of @value"
msgstr ""

# #used by: g_value_dup_variant:
#: gvaluetypes.c:1261:1
msgid "Get the contents of a variant #GValue, increasing its refcount."
msgstr ""

# #used by: g_value_dup_variant:
#: gvaluetypes.c:1263:2
msgid ""
"Returns: variant contents of @value, should be unrefed using g_variant_unref"
"() when no longer needed"
msgstr ""

# used by: g_strdup_value_contents:
#: gvaluetypes.c:1284:1
msgid "@value: #GValue which contents are to be described."
msgstr ""

# #used by: g_strdup_value_contents:
#: gvaluetypes.c:1286:4
msgid ""
"Return a newly allocated string, which describes the contents of a #GValue.  "
"The main purpose of this function is to describe #GValue contents for "
"debugging output, the way in which the contents are described may change "
"between different GLib versions."
msgstr ""

# #used by: g_strdup_value_contents:
#: gvaluetypes.c:1291:1
msgid "Returns: Newly allocated string."
msgstr ""

# used by: g_pointer_type_register_static:
#: gvaluetypes.c:1376:1
msgid "@name: the name of the new pointer type."
msgstr ""

# #used by: g_pointer_type_register_static:
#: gvaluetypes.c:1378:2
msgid ""
"Creates a new %G_TYPE_POINTER derived type id for a new pointer type with "
"name @name."
msgstr ""

# #used by: g_pointer_type_register_static:
#: gvaluetypes.c:1381:1
msgid "Returns: a new %G_TYPE_POINTER derived type id for @name."
msgstr ""
