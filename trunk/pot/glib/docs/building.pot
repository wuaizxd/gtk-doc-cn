msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2011-04-23 10:05+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2
#: building.sgml:0(None)
msgid "translator-credits"
msgstr ""

#: building.sgml:107(para)
msgid ""
"If your system has an <function>iconv()</function> implementation but you "
"want to use libiconv instead, you can pass the --with-libiconv option to "
"configure. This forces libiconv to be used."
msgstr ""

#: building.sgml:113(para)
msgid ""
"Note that if you have libiconv installed in your default include search path "
"(for instance, in <filename>/usr/local/</filename>), but don't enable it, "
"you will get an error while compiling GLib because the <filename>iconv.h</"
"filename> that libiconv installs hides the system iconv."
msgstr ""

#: building.sgml:120(para)
msgid ""
"If you are using the native iconv implementation on Solaris instead of "
"libiconv, you'll need to make sure that you have the converters between "
"locale encodings and UTF-8 installed. At a minimum you'll need the SUNWuiu8 "
"package. You probably should also install the SUNWciu8, SUNWhiu8, SUNWjiu8, "
"and SUNWkiu8 packages."
msgstr ""

#: building.sgml:128(para)
msgid ""
"The native iconv on Compaq Tru64 doesn't contain support for UTF-8, so "
"you'll need to use GNU libiconv instead. (When using GNU libiconv for GLib, "
"you'll need to use GNU libiconv for GNU gettext as well.) This probably "
"applies to related operating systems as well."
msgstr ""

#: building.sgml:13(refname)
msgid "Compiling the GLib Package"
msgstr ""

#: building.sgml:137(para)
msgid ""
"The libintl library from the <ulink url=\"http://www.gnu.org/software/gettext"
"\">GNU gettext package</ulink> is needed if your system doesn't have the "
"<function>gettext()</function> functionality for handling message "
"translation databases."
msgstr ""

#: building.sgml:14(refpurpose)
msgid "How to compile GLib itself"
msgstr ""

#: building.sgml:146(para)
msgid ""
"A thread implementation is needed, unless you want to compile GLib without "
"thread support, which is not recommended. The thread support in GLib can be "
"based upon several native thread implementations, e.g. POSIX threads, DCE "
"threads or Solaris threads."
msgstr ""

#: building.sgml:154(para)
msgid ""
"GRegex uses the <ulink url=\"http://www.pcre.org/\">PCRE library</ulink> for "
"regular expression matching. The default is to use the internal version of "
"PCRE that is patched to use GLib for memory management and Unicode handling. "
"If you prefer to use the system-supplied PCRE library you can pass the --"
"with-pcre=system option to configure, but it is not recommended."
msgstr ""

#: building.sgml:164(para)
msgid ""
"The optional extended attribute support in GIO requires the getxattr() "
"family of functions that may be provided by glibc or by the standalone "
"libattr library. To build GLib without extended attribute support, use the "
"<option>--disable-xattr</option> configure option."
msgstr ""

#: building.sgml:173(para)
msgid ""
"The optional SELinux support in GIO requires libselinux. To build GLib "
"without SELinux support, use the <option>--disable-selinux</option> "
"configure option."
msgstr ""

#: building.sgml:180(para)
msgid ""
"The optional support for DTrace requires the <filename>sys/sdt.h</filename> "
"header, which is provided by SystemTap on Linux. To build GLib without "
"DTrace, use the <option>--disable-dtrace</option> configure option."
msgstr ""

#: building.sgml:187(para)
msgid ""
"The optional support for <ulink url=\"http://sourceware.org/systemtap/"
"\">SystemTap</ulink> can be disabled with the <option>--disable-systemtap</"
"option> configure option."
msgstr ""

#: building.sgml:196(title)
msgid "Extra Configuration Options"
msgstr ""

#: building.sgml:198(para)
msgid ""
"In addition to the normal options, the <command>configure</command> script "
"in the GLib library supports these additional arguments: "
"<cmdsynopsis><command>configure</command><group><arg>--enable-debug=[no|"
"minimum|yes]</arg></group><group><arg>--disable-gc-friendly</arg><arg>--"
"enable-gc-friendly</arg></group><group><arg>--disable-mem-pools</arg><arg>--"
"enable-mem-pools</arg></group><group><arg>--disable-threads</arg><arg>--"
"enable-threads</arg></group><group><arg>--with-threads=[none|posix|dce|win32]"
"</arg></group><group><arg>--disable-regex</arg><arg>--enable-regex</arg></"
"group><group><arg>--with-pcre=[internal|system]</arg></group><group><arg>--"
"disable-included-printf</arg><arg>--enable-included-printf</arg></"
"group><group><arg>--disable-Bsymbolic</arg><arg>--enable-Bsymbolic</arg></"
"group><group><arg>--disable-gtk-doc</arg><arg>--enable-gtk-doc</arg></"
"group><group><arg>--disable-man</arg><arg>--enable-man</arg></"
"group><group><arg>--disable-xattr</arg><arg>--enable-xattr</arg></"
"group><group><arg>--disable-selinux</arg><arg>--enable-selinux</arg></"
"group><group><arg>--disable-dtrace</arg><arg>--enable-dtrace</arg></"
"group><group><arg>--disable-systemtap</arg><arg>--enable-systemtap</arg></"
"group><group><arg>--enable-gcov</arg><arg>--disable-gcov</arg></"
"group><group><arg>--with-runtime-libdir=RELPATH</arg></group></cmdsynopsis>"
msgstr ""

#: building.sgml:20(title)
msgid "Building the Library on UNIX"
msgstr ""

#: building.sgml:21(para)
msgid ""
"On UNIX, GLib uses the standard GNU build system, using "
"<application>autoconf</application> for package configuration and resolving "
"portability issues, <application>automake</application> for building "
"makefiles that comply with the GNU Coding Standards, and "
"<application>libtool</application> for building shared libraries on multiple "
"platforms. The normal sequence for compiling and installing the GLib library "
"is thus: <literallayout>\n"
"          <userinput>./configure</userinput>\n"
"          <userinput>make</userinput>\n"
"          <userinput>make install</userinput>\n"
"        </literallayout>"
msgstr ""

#: building.sgml:273(systemitem)
msgid "--enable-debug"
msgstr ""

#: building.sgml:275(para)
msgid ""
"Turns on various amounts of debugging support. Setting this to 'no' disables "
"g_assert(), g_return_if_fail(), g_return_val_if_fail() and all cast checks "
"between different object types. Setting it to 'minimum' disables only cast "
"checks. Setting it to 'yes' enables <link linkend=\"GLIB-Debug-Options"
"\">runtime debugging</link>. The default is 'minimum'. Note that 'no' is "
"fast, but dangerous as it tends to destabilize even mostly bug-free software "
"by changing the effect of many bugs from simple warnings into fatal crashes. "
"Thus <option>--enable-debug=no</option> should <emphasis>not</emphasis> be "
"used for stable releases of GLib."
msgstr ""

#: building.sgml:290(title)
msgid ""
"<systemitem>--disable-gc-friendly</systemitem> and <systemitem>--enable-gc-"
"friendly</systemitem>"
msgstr ""

#: building.sgml:293(para)
msgid ""
"By default, and with <systemitem>--disable-gc-friendly</systemitem> as well, "
"Glib does not clear the memory for certain objects before they are freed. "
"For example, Glib may decide to recycle GList nodes by putting them in a "
"free list. However, memory profiling and debugging tools like <ulink url="
"\"http://www.valgrind.org\">Valgrind</ulink> work better if an application "
"does not keep dangling pointers to freed memory (even though these pointers "
"are no longer dereferenced), or invalid pointers inside uninitialized "
"memory. The <systemitem>--enable-gc-friendly</systemitem> option makes Glib "
"clear memory in these situations:"
msgstr ""

#: building.sgml:309(para)
msgid ""
"When shrinking a GArray, Glib will clear the memory no longer available in "
"the array: shrink an array from 10 bytes to 7, and the last 3 bytes will be "
"cleared. This includes removals of single and multiple elements."
msgstr ""

#: building.sgml:320(para)
msgid ""
"When growing a GArray, Glib will clear the new chunk of memory. Grow an "
"array from 7 bytes to 10 bytes, and the last 3 bytes will be cleared."
msgstr ""

#: building.sgml:326(para)
msgid "The above applies to GPtrArray as well."
msgstr ""

#: building.sgml:331(para)
msgid ""
"When freeing a node from a GHashTable, Glib will first clear the node, which "
"used to have pointers to the key and the value stored at that node."
msgstr ""

#: building.sgml:338(para)
msgid ""
"When destroying or removing a GTree node, Glib will clear the node, which "
"used to have pointers to the node's value, and the left and right subnodes."
msgstr ""

#: building.sgml:345(para)
msgid ""
"Since clearing the memory has a cost, <systemitem>--disable-gc-friendly</"
"systemitem> is the default."
msgstr ""

#: building.sgml:351(title)
msgid ""
"<systemitem>--disable-mem-pools</systemitem> and <systemitem>--enable-mem-"
"pools</systemitem>"
msgstr ""

#: building.sgml:354(para)
msgid ""
"Many small chunks of memory are often allocated via collective pools in GLib "
"and are cached after release to speed up reallocations. For sparse memory "
"systems this behaviour is often inferior, so memory pools can be disabled to "
"avoid excessive caching and force atomic maintenance of chunks through the "
"<function>g_malloc()</function> and <function>g_free()</function> functions. "
"Code currently affected by this: <placeholder-1/>"
msgstr ""

#: building.sgml:364(para)
msgid ""
"<structname>GList</structname>, <structname>GSList</structname>, "
"<structname>GNode</structname>, <structname>GHash</structname> allocations. "
"The functions g_list_push_allocator(), g_list_pop_allocator(), "
"g_slist_push_allocator(), g_slist_pop_allocator(), g_node_push_allocator() "
"and g_node_pop_allocator() are not available"
msgstr ""

#: building.sgml:374(para)
msgid "<structname>GMemChunk</structname>s become basically non-effective"
msgstr ""

#: building.sgml:379(para)
msgid ""
"<structname>GSignal</structname> disables all caching (potentially very slow)"
msgstr ""

#: building.sgml:38(para)
msgid ""
"The standard options provided by <application>GNU autoconf</application> may "
"be passed to the <command>configure</command> script. Please see the "
"<application>autoconf</application> documentation or run <command>./"
"configure --help</command> for information about the standard options."
msgstr ""

#: building.sgml:385(para)
msgid ""
"<structname>GType</structname> doesn't honour the <structname>GTypeInfo</"
"structname><structfield>n_preallocs</structfield> field anymore"
msgstr ""

#: building.sgml:392(para)
msgid ""
"the <structname>GBSearchArray</structname> flag "
"<literal>G_BSEARCH_ALIGN_POWER2</literal> becomes non-functional"
msgstr ""

#: building.sgml:402(title)
msgid ""
"<systemitem>--disable-threads</systemitem> and <systemitem>--enable-threads</"
"systemitem>"
msgstr ""

#: building.sgml:405(para)
msgid ""
"Do not compile GLib to be multi thread safe. GLib will be slightly faster "
"then. This is however not recommended, as many programs rely on GLib being "
"multi thread safe."
msgstr ""

#: building.sgml:414(systemitem)
msgid "--with-threads"
msgstr ""

#: building.sgml:416(para)
msgid "Specify a thread implementation to use. <placeholder-1/>"
msgstr ""

#: building.sgml:419(para)
msgid ""
"'posix' and 'dce' can be used interchangeable to mean the different versions "
"of Posix threads. configure tries to find out, which one is installed."
msgstr ""

#: building.sgml:426(para)
msgid ""
"'none' means that GLib will be thread safe, but does not have a default "
"thread implementation. This has to be supplied to <function>g_thread_init()</"
"function> by the programmer."
msgstr ""

#: building.sgml:438(title)
msgid ""
"<systemitem>--disable-regex</systemitem> and <systemitem>--enable-regex</"
"systemitem>"
msgstr ""

#: building.sgml:441(para)
msgid ""
"Do not compile GLib with regular expression support. GLib will be smaller "
"because it will not need the PCRE library. This is however not recommended, "
"as programs may need GRegex."
msgstr ""

#: building.sgml:450(systemitem)
msgid "--with-pcre"
msgstr ""

#: building.sgml:452(para)
msgid ""
"Specify whether to use the internal or the system-supplied PCRE library. "
"<placeholder-1/> Using the internal PCRE is the preferred solution: "
"<placeholder-2/>"
msgstr ""

#: building.sgml:456(para)
msgid ""
"'internal' means that GRegex will be compiled to use the internal PCRE "
"library."
msgstr ""

#: building.sgml:46(para)
msgid ""
"The GTK+ documentation contains <ulink url=\"../gtk/gtk-building.html"
"\">further details</ulink> about the build process and ways to influence it."
msgstr ""

#: building.sgml:461(para)
msgid ""
"'system' means that GRegex will be compiled to use the system-supplied PCRE "
"library."
msgstr ""

#: building.sgml:469(para)
msgid ""
"System-supplied PCRE has a separated copy of the big tables used for Unicode "
"handling."
msgstr ""

#: building.sgml:475(para)
msgid ""
"Some systems have PCRE libraries compiled without some needed features, such "
"as UTF-8 and Unicode support."
msgstr ""

#: building.sgml:481(para)
msgid ""
"PCRE uses some global variables for memory management and other features. In "
"the rare case of a program using both GRegex and PCRE (maybe indirectly "
"through a library), this variables could lead to problems when they are "
"modified."
msgstr ""

#: building.sgml:493(title)
msgid ""
"<systemitem>--disable-included-printf</systemitem> and <systemitem>--enable-"
"included-printf</systemitem>"
msgstr ""

#: building.sgml:496(para)
msgid ""
"By default the <command>configure</command> script will try to auto-detect "
"whether the C library provides a suitable set of <function>printf()</"
"function> functions. In detail, <command>configure</command> checks that the "
"semantics of <function>snprintf()</function> are as specified by C99 and "
"that positional parameters as specified in the Single Unix Specification are "
"supported. If this not the case, GLib will include an implementation of the "
"<function>printf()</function> family. These options can be used to "
"explicitly control whether an implementation fo the <function>printf()</"
"function> family should be included or not."
msgstr ""

#: building.sgml:513(title)
msgid ""
"<systemitem>--disable-Bsymbolic</systemitem> and <systemitem>--enable-"
"Bsymbolic</systemitem>"
msgstr ""

#: building.sgml:516(para)
msgid ""
"By default, GLib uses the -Bsymbolic-functions linker flag to avoid intra-"
"library PLT jumps. A side-effect of this is that it is no longer possible to "
"override internal uses of GLib functions with <envvar>LD_PRELOAD</envvar>. "
"Therefore, it may make sense to turn this feature off in some situations. "
"The <option>--disable-Bsymbolic</option> option allows to do that."
msgstr ""

#: building.sgml:529(title)
msgid ""
"<systemitem>--disable-gtk-doc</systemitem> and <systemitem>--enable-gtk-doc</"
"systemitem>"
msgstr ""

#: building.sgml:53(title)
msgid "Dependencies"
msgstr ""

#: building.sgml:532(para)
msgid ""
"By default the <command>configure</command> script will try to auto-detect "
"whether the <application>gtk-doc</application> package is installed. If it "
"is, then it will use it to extract and build the documentation for the GLib "
"library. These options can be used to explicitly control whether "
"<application>gtk-doc</application> should be used or not. If it is not used, "
"the distributed, pre-generated HTML files will be installed instead of "
"building them on your machine."
msgstr ""

#: building.sgml:54(para)
msgid ""
"Before you can compile the GLib library, you need to have various other "
"tools and libraries installed on your system. The two tools needed during "
"the build process (as differentiated from the tools used in when creating "
"GLib mentioned above such as <application>autoconf</application>) are "
"<command>pkg-config</command> and GNU make."
msgstr ""

#: building.sgml:547(title)
msgid ""
"<systemitem>--disable-man</systemitem> and <systemitem>--enable-man</"
"systemitem>"
msgstr ""

#: building.sgml:550(para)
msgid ""
"By default the <command>configure</command> script will try to auto-detect "
"whether <application>xsltproc</application> and the necessary Docbook "
"stylesheets are installed. If they are, then it will use them to rebuild the "
"included man pages from the XML sources. These options can be used to "
"explicitly control whether man pages should be rebuilt used or not. The "
"distribution includes pre-generated man pages."
msgstr ""

#: building.sgml:563(title)
msgid ""
"<systemitem>--disable-xattr</systemitem> and <systemitem>--enable-xattr</"
"systemitem>"
msgstr ""

#: building.sgml:566(para)
msgid ""
"By default the <command>configure</command> script will try to auto-detect "
"whether the getxattr() family of functions is available. If it is, then "
"extended attribute support will be included in GIO. These options can be "
"used to explicitly control whether extended attribute support should be "
"included or not. getxattr() and friends can be provided by glibc or by the "
"standalone libattr library."
msgstr ""

#: building.sgml:578(title)
msgid ""
"<systemitem>--disable-selinux</systemitem> and <systemitem>--enable-selinux</"
"systemitem>"
msgstr ""

#: building.sgml:581(para)
msgid ""
"By default the <command>configure</command> script will auto-detect if "
"libselinux is available and include SELinux support in GIO if it is. These "
"options can be used to explicitly control whether SELinux support should be "
"included."
msgstr ""

#: building.sgml:591(title)
msgid ""
"<systemitem>--disable-dtrace</systemitem> and <systemitem>--enable-dtrace</"
"systemitem>"
msgstr ""

#: building.sgml:594(para)
msgid ""
"By default the <command>configure</command> script will detect if DTrace "
"support is available, and use it."
msgstr ""

#: building.sgml:601(title)
msgid ""
"<systemitem>--disable-systemtap</systemitem> and <systemitem>--enable-"
"systemtap</systemitem>"
msgstr ""

#: building.sgml:604(para)
msgid ""
"This option requires DTrace support. If it is available, then the "
"<command>configure</command> script will also check for the presence of "
"SystemTap."
msgstr ""

#: building.sgml:612(title)
msgid ""
"<systemitem>--enable-gcov</systemitem> and <systemitem>--disable-gcov</"
"systemitem>"
msgstr ""

#: building.sgml:615(para)
msgid ""
"Enable the generation of coverage reports for the GLib tests. This requires "
"the lcov frontend to gcov from the <ulink url=\"http://ltp.sourceforge.net"
"\">Linux Test Project</ulink>. To generate a coverage report, use the lcov "
"make target. The report is placed in the <filename>glib-lcov</filename> "
"directory."
msgstr ""

#: building.sgml:625(systemitem)
msgid "--with-runtime-libdir=RELPATH"
msgstr ""

#: building.sgml:627(para)
msgid ""
"Allows specifying a relative path to where to install the runtime libraries "
"(meaning library files used for running, not developing, GLib applications). "
"This can be used in operating system setups where programs using GLib needs "
"to run before e.g. <filename>/usr</filename> is mounted. For example, if "
"LIBDIR is <filename>/usr/lib</filename> and <filename>../../lib</filename> "
"is passed to <systemitem>--with-runtime-libdir</systemitem> then the runtime "
"libraries are installed into <filename>/lib</filename> rather than "
"<filename>/usr/lib</filename>."
msgstr ""

#: building.sgml:64(para)
msgid ""
"<ulink url=\"http://www.freedesktop.org/software/pkgconfig/\">pkg-config</"
"ulink> is a tool for tracking the compilation flags needed for libraries "
"that are used by the GLib library. (For each library, a small <literal>.pc</"
"literal> text file is installed in a standard location that contains the "
"compilation flags needed for that library along with version number "
"information.) The version of <command>pkg-config</command> needed to build "
"GLib is mirrored in the <filename>dependencies</filename> directory on the "
"<ulink url=\"ftp://ftp.gtk.org/pub/gtk/v2.2/\">GTK+ FTP site.</ulink>"
msgstr ""

#: building.sgml:7(refentrytitle)
msgid "Compiling the GLib package"
msgstr ""

#: building.sgml:8(manvolnum)
msgid "3"
msgstr ""

#: building.sgml:80(para)
msgid ""
"The GTK+ makefiles will mostly work with different versions of "
"<command>make</command>, however, there tends to be a few incompatibilities, "
"so the GTK+ team recommends installing <ulink url=\"http://www.gnu.org/"
"software/make\">GNU make</ulink> if you don't already have it on your system "
"and using it. (It may be called <command>gmake</command> rather than "
"<command>make</command>.)"
msgstr ""

#: building.sgml:9(refmiscinfo)
msgid "GLib Library"
msgstr ""

#: building.sgml:91(para)
msgid "GLib depends on a number of other libraries."
msgstr ""

#: building.sgml:96(para)
msgid ""
"The <ulink url=\"http://www.gnu.org/software/libiconv/\">GNU libiconv "
"library</ulink> is needed to build GLib if your system doesn't have the "
"<function>iconv()</function> function for doing conversion between character "
"encodings. Most modern systems should have <function>iconv()</function>, "
"however many older systems lack an <function>iconv()</function> "
"implementation. On such systems, you must install the libiconv library. This "
"can be found at: <ulink url=\"http://www.gnu.org/software/libiconv\">http://"
"www.gnu.org/software/libiconv</ulink>."
msgstr ""
