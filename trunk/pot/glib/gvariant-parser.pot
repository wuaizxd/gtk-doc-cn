# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-04-17 15:16-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"

#. used by: g_variant_parse:
#: gvariant-parser.c:2230:1
msgid "@type: a #GVariantType, or %NULL"
msgstr ""

#. used by: g_variant_parse:
#: gvariant-parser.c:2231:1
msgid "@text: a string containing a GVariant in text form"
msgstr ""

#. used by: g_variant_parse:
#: gvariant-parser.c:2232:1
msgid "@limit: a pointer to the end of @text, or %NULL"
msgstr ""

#. used by: g_variant_parse:
#: gvariant-parser.c:2233:1
msgid "@endptr: a location to store the end pointer, or %NULL"
msgstr ""

#. used by: g_variant_parse:
#: gvariant-parser.c:2234:1
msgid "@error: a pointer to a %NULL #GError pointer, or %NULL"
msgstr ""

#. used by: g_variant_parse:
#: gvariant-parser.c:2235:1
msgid "@Returns: a reference to a #GVariant, or %NULL"
msgstr ""

#. used by: g_variant_parse:
#: gvariant-parser.c:2237:1
msgid "Parses a #GVariant from a text representation."
msgstr ""

#. used by: g_variant_parse:
#: gvariant-parser.c:2239:1
msgid "A single #GVariant is parsed from the content of @text."
msgstr ""

#. used by: g_variant_parse:
#: gvariant-parser.c:2241:3
msgid ""
"The memory at @limit will never be accessed and the parser behaves as if the "
"character at @limit is the nul terminator.  This has the effect of bounding "
"@text."
msgstr ""

#. used by: g_variant_parse:
#: gvariant-parser.c:2245:5
msgid ""
"If @endptr is non-%NULL then @text is permitted to contain data following "
"the value that this function parses and @endptr will be updated to point to "
"the first character past the end of the text parsed by this function.  If "
"@endptr is %NULL and there is extra data then an error is returned."
msgstr ""

#. used by: g_variant_parse:
#: gvariant-parser.c:2251:5
msgid ""
"If @type is non-%NULL then the value will be parsed to have that type.  This "
"may result in additional parse errors (in the case that the parsed value "
"doesn't fit the type) but may also result in fewer errors (in the case that "
"the type would have been ambiguous, such as with empty arrays)."
msgstr ""

#. used by: g_variant_parse:
#: gvariant-parser.c:2257:2
msgid ""
"In the event that the parsing is successful, the resulting #GVariant is "
"returned."
msgstr ""

#. used by: g_variant_parse:
#: gvariant-parser.c:2260:2
msgid ""
"In case of any error, %NULL will be returned.  If @error is non-%NULL then "
"it will be set to reflect the error that occured."
msgstr ""

#. used by: g_variant_parse:
#: gvariant-parser.c:2263:2
msgid ""
"Officially, the language understood by the parser is \"any string produced "
"by g_variant_print()\"."
msgstr ""

#. #-#-#-#-#  gvariant-parser.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_variant_new_parsed_va:
#. #-#-#-#-#  gvariant-parser.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_variant_new_parsed:
#. #-#-#-#-#  gvariant-parser.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_variant_builder_add_parsed:
#: gvariant-parser.c:2325:1 gvariant-parser.c:2380:1 gvariant-parser.c:2428:1
msgid "@format: a text format #GVariant"
msgstr ""

#. used by: g_variant_new_parsed_va:
#: gvariant-parser.c:2326:1
msgid "@app: a pointer to a #va_list"
msgstr ""

#. used by: g_variant_new_parsed_va:
#: gvariant-parser.c:2327:1
msgid "@returns: a new, usually floating, #GVariant"
msgstr ""

#. #-#-#-#-#  gvariant-parser.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_variant_new_parsed_va:
#. #-#-#-#-#  gvariant-parser.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_variant_new_parsed:
#: gvariant-parser.c:2329:1 gvariant-parser.c:2384:1
msgid "Parses @format and returns the result."
msgstr ""

#. used by: g_variant_new_parsed_va:
#: gvariant-parser.c:2331:2
msgid ""
"This is the version of g_variant_new_parsed() intended to be used from "
"libraries."
msgstr ""

#. used by: g_variant_new_parsed_va:
#: gvariant-parser.c:2334:5
msgid ""
"The return value will be floating if it was a newly created GVariant "
"instance.  In the case that @format simply specified the collection of a "
"#GVariant pointer (eg: @format was \"%*\") then the collected #GVariant "
"pointer will be returned unmodified, without adding any additional "
"references."
msgstr ""

#. used by: g_variant_new_parsed_va:
#: gvariant-parser.c:2340:6
msgid ""
"In order to behave correctly in all cases it is necessary for the calling "
"function to g_variant_ref_sink() the return result before returning control "
"to the user that originally provided the pointer. At this point, the caller "
"will have their own full reference to the result.  This can also be done by "
"adding the result to a container, or by passing it to another g_variant_new"
"() call."
msgstr ""

#. #-#-#-#-#  gvariant-parser.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_variant_new_parsed:
#. #-#-#-#-#  gvariant-parser.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_variant_builder_add_parsed:
#: gvariant-parser.c:2381:1 gvariant-parser.c:2429:1
msgid "@...: arguments as per @format"
msgstr ""

#. used by: g_variant_new_parsed:
#: gvariant-parser.c:2382:1
msgid "@returns: a new floating #GVariant instance"
msgstr ""

#. used by: g_variant_new_parsed:
#: gvariant-parser.c:2386:5
msgid ""
"@format must be a text format #GVariant with one extension: at any point "
"that a value may appear in the text, a '%' character followed by a GVariant "
"format string (as per g_variant_new()) may appear.  In that case, the same "
"arguments are collected from the argument list as g_variant_new() would have "
"collected."
msgstr ""

#. used by: g_variant_new_parsed:
#: gvariant-parser.c:2392:1
msgid "Consider this simple example:"
msgstr ""

#. used by: g_variant_new_parsed:
#: gvariant-parser.c:2398:3
msgid ""
"In the example, the variable argument parameters are collected and filled in "
"as if they were part of the original string to produce the result of <code>"
"[('one', 1), ('two', 2), ('three', 3)]</code>."
msgstr ""

#. used by: g_variant_new_parsed:
#: gvariant-parser.c:2402:3
msgid ""
"This function is intended only to be used with @format as a string literal.  "
"Any parse error is fatal to the calling process.  If you want to parse data "
"from untrusted sources, use g_variant_parse()."
msgstr ""

#. used by: g_variant_new_parsed:
#: gvariant-parser.c:2406:4
msgid ""
"You may not use this function to return, unmodified, a single #GVariant "
"pointer from the argument list.  ie: @format may not solely be anything "
"along the lines of \"%*\", \"%?\", \"%r\", or anything starting with \"%@\"."
msgstr ""

#. used by: g_variant_builder_add_parsed:
#: gvariant-parser.c:2427:1
msgid "@builder: a #GVariantBuilder"
msgstr ""

#. used by: g_variant_builder_add_parsed:
#: gvariant-parser.c:2431:1
msgid "Adds to a #GVariantBuilder."
msgstr ""

#. used by: g_variant_builder_add_parsed:
#: gvariant-parser.c:2433:3
msgid ""
"This call is a convenience wrapper that is exactly equivalent to calling "
"g_variant_new_parsed() followed by g_variant_builder_add_value()."
msgstr ""

#. used by: g_variant_builder_add_parsed:
#: gvariant-parser.c:2437:1
msgid "This function might be used as follows:"
msgstr ""

#. used by: g_variant_builder_add_parsed:
#: gvariant-parser.c:2454:1
msgid "Since: 2.26"
msgstr ""

#. used by: G_VARIANT_PARSE_ERROR:
#: gvariant-parser.c:45:3
msgid ""
"Error domain for GVariant text format parsing.  Specific error codes are not "
"currently defined for this domain.  See #GError for information on error "
"domains."
msgstr ""

#. used by: GVariantParseError:
#: gvariant-parser.c:51:1
msgid "@G_VARIANT_PARSE_ERROR_FAILED: generic error"
msgstr ""

#. used by: GVariantParseError:
#: gvariant-parser.c:53:2
msgid ""
"Error codes returned by parsing text-format GVariants.  Currently the parser "
"makes no distinction between different types of error."
msgstr ""
