# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-04-23 20:26-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"

#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkKeymap::direction-changed:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkKeymap::keys-changed:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkKeymap::state-changed:
#: gdkkeys.c:122:1 gdkkeys.c:140:1 gdkkeys.c:159:1
msgid "@keymap: the object on which the signal is emitted"
msgstr ""

#. used by: GdkKeymap::direction-changed:
#: gdkkeys.c:124:2
msgid ""
"The ::direction-changed signal gets emitted when the direction of the keymap "
"changes."
msgstr ""

#. used by: GdkKeymap::direction-changed:
#: gdkkeys.c:127:1
msgid "Since: 2.0"
msgstr ""

#. used by: GdkKeymap::keys-changed:
#: gdkkeys.c:142:2
msgid ""
"The ::keys-changed signal is emitted when the mapping represented by @keymap "
"changes."
msgstr ""

#. used by: GdkKeymap::keys-changed:
#: gdkkeys.c:145:1
msgid "Since: 2.2"
msgstr ""

#. used by: GdkKeymap::state-changed:
#: gdkkeys.c:161:3
msgid ""
"The ::state-changed signal is emitted when the state of the keyboard "
"changes, e.g when Caps Lock is turned on or off. See "
"gdk_keymap_get_caps_lock_state()."
msgstr ""

#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GdkKeymap::state-changed:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_get_caps_lock_state:
#: gdkkeys.c:165:1 gdkkeys.c:341:1
msgid "Since: 2.16"
msgstr ""

#. used by: gdk_keyval_convert_case:
#: gdkkeys.c:188:1
msgid "@symbol: a keyval"
msgstr ""

#. used by: gdk_keyval_convert_case:
#: gdkkeys.c:189:1
msgid "@lower: (out): return location for lowercase version of @symbol"
msgstr ""

#. used by: gdk_keyval_convert_case:
#: gdkkeys.c:190:1
msgid "@upper: (out): return location for uppercase version of @symbol"
msgstr ""

#. used by: gdk_keyval_convert_case:
#: gdkkeys.c:192:2
msgid ""
"Obtains the upper- and lower-case versions of the keyval @symbol. Examples "
"of keyvals are #GDK_KEY_a, #GDK_KEY_Enter, #GDK_KEY_F1, etc."
msgstr ""

#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keyval_to_upper:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keyval_to_lower:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keyval_is_upper:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keyval_is_lower:
#: gdkkeys.c:207:1 gdkkeys.c:226:1 gdkkeys.c:245:1 gdkkeys.c:267:1
msgid "@keyval: a key value."
msgstr ""

#. used by: gdk_keyval_to_upper:
#: gdkkeys.c:209:1
msgid "Converts a key value to upper case, if applicable."
msgstr ""

#. used by: gdk_keyval_to_upper:
#: gdkkeys.c:211:2
msgid ""
"Returns: the upper case form of @keyval, or @keyval itself if it is already "
"in upper case or it is not subject to case conversion."
msgstr ""

#. used by: gdk_keyval_to_lower:
#: gdkkeys.c:228:1
msgid "Converts a key value to lower case, if applicable."
msgstr ""

#. used by: gdk_keyval_to_lower:
#: gdkkeys.c:230:2
msgid ""
"Returns: the lower case form of @keyval, or @keyval itself if it is already "
"in lower case or it is not subject to case conversion."
msgstr ""

#. used by: gdk_keyval_is_upper:
#: gdkkeys.c:247:1
msgid "Returns %TRUE if the given key value is in upper case."
msgstr ""

#. used by: gdk_keyval_is_upper:
#: gdkkeys.c:249:2
msgid ""
"Returns: %TRUE if @keyval is in upper case, or if @keyval is not subject to "
"case conversion."
msgstr ""

#. used by: gdk_keyval_is_lower:
#: gdkkeys.c:269:1
msgid "Returns %TRUE if the given key value is in lower case."
msgstr ""

#. used by: gdk_keyval_is_lower:
#: gdkkeys.c:271:2
msgid ""
"Returns: %TRUE if @keyval is in lower case, or if @keyval is not subject to "
"case conversion."
msgstr ""

#. used by: gdk_keymap_get_default:
#: gdkkeys.c:290:1
msgid "Returns the #GdkKeymap attached to the default display."
msgstr ""

#. used by: gdk_keymap_get_default:
#: gdkkeys.c:292:1
msgid ""
"Returns: (transfer none): the #GdkKeymap attached to the default display."
msgstr ""

#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_get_direction:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_have_bidi_layouts:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_get_caps_lock_state:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_get_num_lock_state:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_get_entries_for_keyval:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_get_entries_for_keycode:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_lookup_key:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_translate_keyboard_state:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_add_virtual_modifiers:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_map_virtual_modifiers:
#: gdkkeys.c:302:1 gdkkeys.c:318:1 gdkkeys.c:335:1 gdkkeys.c:351:1
#: gdkkeys.c:367:1 gdkkeys.c:398:1 gdkkeys.c:427:1 gdkkeys.c:447:1
#: gdkkeys.c:536:1 gdkkeys.c:562:1
msgid "@keymap: a #GdkKeymap"
msgstr ""

#. used by: gdk_keymap_get_direction:
#: gdkkeys.c:304:1
msgid "Returns the direction of effective layout of the keymap."
msgstr ""

#. used by: gdk_keymap_get_direction:
#: gdkkeys.c:306:3
msgid ""
"Returns: %PANGO_DIRECTION_LTR or %PANGO_DIRECTION_RTL if it can determine "
"the direction. %PANGO_DIRECTION_NEUTRAL otherwise."
msgstr ""

#. used by: gdk_keymap_have_bidi_layouts:
#: gdkkeys.c:320:2
msgid ""
"Determines if keyboard layouts for both right-to-left and left-to-right "
"languages are in use."
msgstr ""

#. used by: gdk_keymap_have_bidi_layouts:
#: gdkkeys.c:323:1
msgid ""
"Returns: %TRUE if there are layouts in both directions, %FALSE otherwise"
msgstr ""

#. used by: gdk_keymap_have_bidi_layouts:
#: gdkkeys.c:325:1
msgid "Since: 2.12"
msgstr ""

#. used by: gdk_keymap_get_caps_lock_state:
#: gdkkeys.c:337:1
msgid "Returns whether the Caps Lock modifer is locked."
msgstr ""

#. used by: gdk_keymap_get_caps_lock_state:
#: gdkkeys.c:339:1
msgid "Returns: %TRUE if Caps Lock is on"
msgstr ""

#. used by: gdk_keymap_get_num_lock_state:
#: gdkkeys.c:353:1
msgid "Returns whether the Num Lock modifer is locked."
msgstr ""

#. used by: gdk_keymap_get_num_lock_state:
#: gdkkeys.c:355:1
msgid "Returns: %TRUE if Num Lock is on"
msgstr ""

#. used by: gdk_keymap_get_num_lock_state:
#: gdkkeys.c:357:1
msgid "Since: 3.0"
msgstr ""

#. used by: SECTION:keys
#: gdkkeys.c:36:1
msgid "@Short_description: Functions for manipulating keyboard codes"
msgstr ""

#. used by: gdk_keymap_get_entries_for_keyval:
#: gdkkeys.c:368:1
msgid "@keyval: a keyval, such as %GDK_a, %GDK_Up, %GDK_Return, etc."
msgstr ""

#. used by: gdk_keymap_get_entries_for_keyval:
#: gdkkeys.c:369:2
msgid ""
"@keys: (out) (array length=n_keys) (transfer full): return location for an "
"array of #GdkKeymapKey"
msgstr ""

#. used by: SECTION:keys
#: gdkkeys.c:37:1
msgid "@Title: Key Values"
msgstr ""

#. used by: gdk_keymap_get_entries_for_keyval:
#: gdkkeys.c:371:1
msgid "@n_keys: return location for number of elements in returned array"
msgstr ""

#. used by: gdk_keymap_get_entries_for_keyval:
#: gdkkeys.c:373:11
msgid ""
"Obtains a list of keycode/group/level combinations that will generate "
"@keyval. Groups and levels are two kinds of keyboard mode; in general, the "
"level determines whether the top or bottom symbol on a key is used, and the "
"group determines whether the left or right symbol is used. On US keyboards, "
"the shift key changes the keyboard level, and there are no groups. A group "
"switch key might convert a keyboard between Hebrew to English modes, for "
"example. #GdkEventKey contains a %group field that indicates the active "
"keyboard group. The level is computed from the modifier mask. The returned "
"array should be freed with g_free()."
msgstr ""

#. used by: gdk_keymap_get_entries_for_keyval:
#: gdkkeys.c:385:1
msgid "Return value: %TRUE if keys were found and returned"
msgstr ""

#. used by: SECTION:keys
#: gdkkeys.c:39:6
msgid ""
"Key values are the codes which are sent whenever a key is pressed or "
"released. They appear in the #GdkEventKey.keyval field of the #GdkEventKey "
"structure, which is passed to signal handlers for the #GtkWidget::key-press-"
"event and #GtkWidget::key-release-event signals. The complete list of key "
"values can be found in the <filename>&lt;gdk/gdkkeysyms.h&gt;</filename> "
"header file."
msgstr ""

#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_get_entries_for_keycode:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_translate_keyboard_state:
#: gdkkeys.c:399:1 gdkkeys.c:448:1
msgid "@hardware_keycode: a keycode"
msgstr ""

#. used by: gdk_keymap_get_entries_for_keycode:
#: gdkkeys.c:400:2
msgid ""
"@keys: (out) (array length=n_entries) (transfer full): return location for "
"array of #GdkKeymapKey, or %NULL"
msgstr ""

#. used by: gdk_keymap_get_entries_for_keycode:
#: gdkkeys.c:402:2
msgid ""
"@keyvals: (out) (array length=n_entries) (transfer full): return location "
"for array of keyvals, or %NULL"
msgstr ""

#. used by: gdk_keymap_get_entries_for_keycode:
#: gdkkeys.c:404:1
msgid "@n_entries: length of @keys and @keyvals"
msgstr ""

#. used by: gdk_keymap_get_entries_for_keycode:
#: gdkkeys.c:406:6
msgid ""
"Returns the keyvals bound to @hardware_keycode. The Nth #GdkKeymapKey in "
"@keys is bound to the Nth keyval in @keyvals. Free the returned arrays with "
"g_free(). When a keycode is pressed by the user, the keyval from this list "
"of entries is selected by considering the effective keyboard group and "
"level. See gdk_keymap_translate_keyboard_state()."
msgstr ""

#. used by: gdk_keymap_get_entries_for_keycode:
#: gdkkeys.c:413:1
msgid "Returns: %TRUE if there were any entries"
msgstr ""

#. used by: gdk_keymap_lookup_key:
#: gdkkeys.c:428:1
msgid "@key: a #GdkKeymapKey with keycode, group, and level initialized"
msgstr ""

#. used by: gdk_keymap_lookup_key:
#: gdkkeys.c:430:5
msgid ""
"Looks up the keyval mapped to a keycode/group/level triplet. If no keyval is "
"bound to @key, returns 0. For normal user input, you want to use "
"gdk_keymap_translate_keyboard_state() instead of this function, since the "
"effective group/level may not be the same as the current keyboard state."
msgstr ""

#. used by: gdk_keymap_lookup_key:
#: gdkkeys.c:436:1
msgid "Return value: a keyval, or 0 if none was mapped to the given @key"
msgstr ""

#. used by: gdk_keymap_translate_keyboard_state:
#: gdkkeys.c:449:1
msgid "@state: a modifier state"
msgstr ""

#. used by: gdk_keymap_translate_keyboard_state:
#: gdkkeys.c:450:1
msgid "@group: active keyboard group"
msgstr ""

#. used by: gdk_keymap_translate_keyboard_state:
#: gdkkeys.c:451:1
msgid "@keyval: (out) (allow-none): return location for keyval, or %NULL"
msgstr ""

#. used by: gdk_keymap_translate_keyboard_state:
#: gdkkeys.c:452:2
msgid ""
"@effective_group: (out) (allow-none): return location for effective group, "
"or %NULL"
msgstr ""

#. used by: gdk_keymap_translate_keyboard_state:
#: gdkkeys.c:454:1
msgid "@level: (out) (allow-none): return location for level, or %NULL"
msgstr ""

#. used by: gdk_keymap_translate_keyboard_state:
#: gdkkeys.c:455:2
msgid ""
"@consumed_modifiers: (out) (allow-none): return location for modifiers that "
"were used to determine the group or level, or %NULL"
msgstr ""

#. used by: gdk_keymap_translate_keyboard_state:
#: gdkkeys.c:458:10
msgid ""
"Translates the contents of a #GdkEventKey into a keyval, effective group, "
"and level. Modifiers that affected the translation and are thus unavailable "
"for application use are returned in @consumed_modifiers. See <xref linkend="
"\"key-group-explanation\"/> for an explanation of groups and levels. The "
"@effective_group is the group that was actually used for the translation; "
"some keys such as Enter are not affected by the active keyboard group. The "
"@level is derived from @state. For convenience, #GdkEventKey already "
"contains the translated keyval, so this function isn't as useful as you "
"might think."
msgstr ""

#. used by: SECTION:keys
#: gdkkeys.c:46:3
msgid ""
"Key values are regularly updated from the upstream X.org X11 implementation, "
"so new values are added regularly. They will be prefixed with GDK_KEY_ "
"rather than XF86XK_ or XK_ (for older symbols)."
msgstr ""

#. used by: gdk_keymap_translate_keyboard_state:
#: gdkkeys.c:469:8
msgid ""
"<note><para> @consumed_modifiers gives modifiers that should be masked out "
"from @state when comparing this key press to a hot key. For instance, on a "
"US keyboard, the <literal>plus</literal> symbol is shifted, so when "
"comparing a key press to a <literal>&lt;Control&gt;plus</literal> "
"accelerator &lt;Shift&gt; should be masked out. </para>"
msgstr ""

#. used by: gdk_keymap_translate_keyboard_state:
#: gdkkeys.c:487:5
msgid ""
"<para> An older interpretation @consumed_modifiers was that it contained all "
"modifiers that might affect the translation of the key; this allowed "
"accelerators to be stored with irrelevant consumed modifiers, by doing:</"
"para>"
msgstr ""

#. used by: gdk_keymap_translate_keyboard_state:
#: gdkkeys.c:498:13
msgid ""
"<para> However, this did not work if multi-modifier combinations were used "
"in the keymap, since, for instance, <literal>&lt;Control&gt;</literal> would "
"be masked out even if only <literal>&lt;Control&gt;&lt;Alt&gt;</literal> was "
"used in the keymap. To support this usage as well as well as possible, all "
"<emphasis>single modifier</emphasis> combinations that could affect the key "
"for any combination of modifiers will be returned in @consumed_modifiers; "
"multi-modifier combinations are returned only when actually found in @state. "
"When you store accelerators, you should always store them with consumed "
"modifiers removed. Store <literal>&lt;Control&gt;plus</literal>, not "
"<literal>&lt;Control&gt;&lt;Shift&gt;plus</literal>, </para></note>"
msgstr ""

#. used by: SECTION:keys
#: gdkkeys.c:50:3
msgid ""
"Key values can be converted into a string representation using "
"gdk_keyval_name(). The reverse function, converting a string to a key value, "
"is provided by gdk_keyval_from_name()."
msgstr ""

#. used by: gdk_keymap_translate_keyboard_state:
#: gdkkeys.c:512:1
msgid ""
"Return value: %TRUE if there was a keyval bound to the keycode/state/group"
msgstr ""

#. used by: gdk_keymap_add_virtual_modifiers:
#: gdkkeys.c:537:1
msgid "@state: (out): pointer to the modifier mask to change"
msgstr ""

#. used by: gdk_keymap_add_virtual_modifiers:
#: gdkkeys.c:539:4
msgid ""
"Adds virtual modifiers (i.e. Super, Hyper and Meta) which correspond to the "
"real modifiers (i.e Mod2, Mod3, ...) in @modifiers. are set in @state to "
"their non-virtual counterparts (i.e. Mod2, Mod3,...) and set the "
"corresponding bits in @state."
msgstr ""

#. used by: SECTION:keys
#: gdkkeys.c:54:3
msgid ""
"The case of key values can be determined using gdk_keyval_is_upper() and "
"gdk_keyval_is_lower(). Key values can be converted to upper or lower case "
"using gdk_keyval_to_upper() and gdk_keyval_to_lower()."
msgstr ""

#. used by: gdk_keymap_add_virtual_modifiers:
#: gdkkeys.c:544:3
msgid ""
"GDK already does this before delivering key events, but for compatibility "
"reasons, it only sets the first virtual modifier it finds, whereas this "
"function sets all matching virtual modifiers."
msgstr ""

#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_add_virtual_modifiers:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_map_virtual_modifiers:
#: gdkkeys.c:548:2 gdkkeys.c:569:2
msgid "This function is useful when matching key events against accelerators."
msgstr ""

#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_add_virtual_modifiers:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keymap_map_virtual_modifiers:
#: gdkkeys.c:551:1 gdkkeys.c:577:1
msgid "Since: 2.20"
msgstr ""

#. used by: gdk_keymap_map_virtual_modifiers:
#: gdkkeys.c:563:1
msgid "@state: (out): pointer to the modifier state to map"
msgstr ""

#. used by: gdk_keymap_map_virtual_modifiers:
#: gdkkeys.c:565:3
msgid ""
"Maps the virtual modifiers (i.e. Super, Hyper and Meta) which are set in "
"@state to their non-virtual counterparts (i.e. Mod2, Mod3,...) and set the "
"corresponding bits in @state."
msgstr ""

#. used by: gdk_keymap_map_virtual_modifiers:
#: gdkkeys.c:572:4
msgid ""
"Returns: %TRUE if no virtual modifiers were mapped to the same non-virtual "
"modifier. Note that %FALSE is also returned if a virtual modifier is mapped "
"to a non-virtual modifier that was already set in @state."
msgstr ""

#. used by: SECTION:keys
#: gdkkeys.c:58:2
msgid ""
"When it makes sense, key values can be converted to and from Unicode "
"characters with gdk_keyval_to_unicode() and gdk_unicode_to_keyval()."
msgstr ""

#. used by: gdk_keyval_name:
#: gdkkeys.c:588:1
msgid "@keyval: a key value"
msgstr ""

#. used by: gdk_keyval_name:
#: gdkkeys.c:590:1
msgid "Converts a key value into a symbolic name."
msgstr ""

#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keyval_name:
#. #-#-#-#-#  gdkkeys.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: gdk_keyval_from_name:
#: gdkkeys.c:592:3 gdkkeys.c:614:3
msgid ""
"The names are the same as those in the <filename>&lt;gdk/gdkkeysyms.h&gt;</"
"filename> header file but without the leading \"GDK_KEY_\"."
msgstr ""

#. used by: gdk_keyval_name:
#: gdkkeys.c:596:3
msgid ""
"Return value: (transfer none): a string containing the name of the key, or "
"%NULL if @keyval is not a valid key. The string should not be modified."
msgstr ""

#. used by: SECTION:keys
#: gdkkeys.c:61:22
msgid ""
"<para id=\"key-group-explanation\"> One #GdkKeymap object exists for each "
"user display. gdk_keymap_get_default() returns the #GdkKeymap for the "
"default display; to obtain keymaps for other displays, use "
"gdk_keymap_get_for_display(). A keymap is a mapping from #GdkKeymapKey to "
"key values. You can think of a #GdkKeymapKey as a representation of a symbol "
"printed on a physical keyboard key. That is, it contains three pieces of "
"information. First, it contains the hardware keycode; this is an identifying "
"number for a physical key. Second, it contains the <firstterm>level</"
"firstterm> of the key. The level indicates which symbol on the key will be "
"used, in a vertical direction. So on a standard US keyboard, the key with "
"the number \"1\" on it also has the exclamation point (\"!\") character on "
"it. The level indicates whether to use the \"1\" or the \"!\" symbol.  The "
"letter keys are considered to have a lowercase letter at level 0, and an "
"uppercase letter at level 1, though only the uppercase letter is printed.  "
"Third, the #GdkKeymapKey contains a group; groups are not used on standard "
"US keyboards, but are used in many other countries. On a keyboard with "
"groups, there can be 3 or 4 symbols printed on a single key. The group "
"indicates movement in a horizontal direction. Usually groups are used for "
"two different languages.  In group 0, a key might have two English "
"characters, and in group 1 it might have two Hebrew characters. The Hebrew "
"characters will be printed on the key next to the English characters. </para>"
msgstr ""

#. used by: gdk_keyval_from_name:
#: gdkkeys.c:610:1
msgid "@keyval_name: a key name"
msgstr ""

#. used by: gdk_keyval_from_name:
#: gdkkeys.c:612:1 gdkkeys.h:135:1
msgid "Converts a key name to a key value."
msgstr ""

#. used by: gdk_keyval_from_name:
#: gdkkeys.c:618:2
msgid ""
"Returns: the corresponding key value, or %GDK_KEY_VoidSymbol if the key name "
"is not a valid key"
msgstr ""

#. used by: SECTION:keys
#: gdkkeys.c:84:11
msgid ""
"In order to use a keymap to interpret a key event, it's necessary to first "
"convert the keyboard state into an effective group and level. This is done "
"via a set of rules that varies widely according to type of keyboard and user "
"configuration. The function gdk_keymap_translate_keyboard_state() accepts a "
"keyboard state -- consisting of hardware keycode pressed, active modifiers, "
"and active group -- applies the appropriate rules, and returns the group/"
"level to be used to index the keymap, along with the modifiers which did not "
"affect the group and level. i.e. it returns \"unconsumed modifiers.\" The "
"keyboard group may differ from the effective group used for keymap lookups "
"because some keys don't have multiple groups - e.g. the Enter key is always "
"in group 0 regardless of keyboard state."
msgstr ""

#. used by: SECTION:keys
#: gdkkeys.c:96:5
msgid ""
"Note that gdk_keymap_translate_keyboard_state() also returns the keyval, i."
"e. it goes ahead and performs the keymap lookup in addition to telling you "
"which effective group/level values were used for the lookup. #GdkEventKey "
"already contains this keyval, however, so you don't normally need to call "
"gdk_keymap_translate_keyboard_state() just to get the keyval."
msgstr ""

#. used by: gdk_keymap_get_direction:
#: gdkkeys.h:111:1
msgid "@keymap: a #GdkKeymap or %NULL to use the default keymap."
msgstr ""

#. used by: gdk_keymap_get_direction:
#: gdkkeys.h:113:1
msgid "Returns the direction of the keymap."
msgstr ""

#. used by: gdk_keymap_get_direction:
#: gdkkeys.h:115:2
msgid ""
"Returns: the direction of the keymap, %PANGO_DIRECTION_LTR or "
"%PANGO_DIRECTION_RTL."
msgstr ""

#. used by: gdk_keyval_from_name:
#: gdkkeys.h:133:1
msgid "@keyval_name: a key name."
msgstr ""

#. used by: gdk_keyval_from_name:
#: gdkkeys.h:137:2
msgid ""
"Returns: the corresponding key value, or %GDK_VoidSymbol if the key name is "
"not a valid key."
msgstr ""

#. used by: GdkKeymapKey:
#: gdkkeys.h:43:2
msgid ""
"@keycode: the hardware keycode. This is an identifying number for a physical "
"key."
msgstr ""

#. used by: GdkKeymapKey:
#: gdkkeys.h:45:4
msgid ""
"@group: indicates movement in a horizontal direction. Usually groups are "
"used for two different languages. In group 0, a key might have two English "
"characters, and in group 1 it might have two Hebrew characters. The Hebrew "
"characters will be printed on the key next to the English characters."
msgstr ""

#. used by: GdkKeymapKey:
#: gdkkeys.h:49:6
msgid ""
"@level: indicates which symbol on the key will be used, in a vertical "
"direction. So on a standard US keyboard, the key with the number \"1\" on it "
"also has the exclamation point (\"!\") character on it. The level indicates "
"whether to use the \"1\" or the \"!\" symbol. The letter keys are considered "
"to have a lowercase letter at level 0, and an uppercase letter at level 1, "
"though only the uppercase letter is printed."
msgstr ""

#. used by: GdkKeymapKey:
#: gdkkeys.h:56:1
msgid "A #GdkKeymapKey is a hardware key that can be mapped to a keyval."
msgstr ""

#. used by: GdkKeymap:
#: gdkkeys.h:73:6
msgid ""
"A #GdkKeymap defines the translation from keyboard state (including a "
"hardware key, a modifier mask, and active keyboard group) to a keyval. This "
"translation has two phases. The first phase is to determine the effective "
"keyboard group and level for the keyboard state; the second phase is to look "
"up the keycode/group/level triplet in the keymap and see what keyval it "
"corresponds to."
msgstr ""
