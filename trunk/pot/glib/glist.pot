# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-04-23 10:05-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"

#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_previous:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_next:
#: glist.c:100:1 glist.c:109:1
msgid "@list: an element in a #GList."
msgstr ""

#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_insert_sorted:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_insert_sorted_with_data:
#: glist.c:1003:2 glist.c:1025:2
msgid ""
"Inserts a new element into the list, using the given comparison function to "
"determine its position."
msgstr ""

#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_append:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_prepend:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_insert:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_insert_before:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_remove:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_insert_sorted:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_insert_sorted_with_data:
#: glist.c:1006:1 glist.c:1028:1 glist.c:253:1 glist.c:301:1 glist.c:336:1
#: glist.c:378:1 glist.c:467:1
msgid "Returns: the new start of the #GList"
msgstr ""

#. used by: g_list_previous:
#: glist.c:101:2
msgid ""
"@Returns: the previous element, or %NULL if there are no previous elements."
msgstr ""

#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_free_full:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_append:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_prepend:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_insert:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_insert_before:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_insert_sorted:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_insert_sorted_with_data:
#: glist.c:1018:1 glist.c:205:1 glist.c:223:1 glist.c:284:1 glist.c:328:1
#: glist.c:371:1 glist.c:997:1
msgid "@list: a pointer to a #GList"
msgstr ""

#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_append:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_prepend:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_insert:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_insert_before:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_insert_sorted:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_insert_sorted_with_data:
#: glist.c:1019:1 glist.c:224:1 glist.c:285:1 glist.c:329:1 glist.c:374:1
#: glist.c:998:1
msgid "@data: the data for the new element"
msgstr ""

#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_insert_sorted:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_insert_sorted_with_data:
#: glist.c:1020:3 glist.c:999:3
msgid ""
"@func: the function to compare elements in the list. It should return a "
"number > 0 if the first parameter comes after the second parameter in the "
"sort order."
msgstr ""

#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_insert_sorted_with_data:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GCompareDataFunc:
#: glist.c:1023:1 glist.c:1155:1
msgid "@user_data: user data to pass to comparison function."
msgstr ""

#. used by: g_list_insert_sorted_with_data:
#: glist.c:1030:1
msgid "Since: 2.10"
msgstr ""

#. used by: g_list_previous:
#: glist.c:104:1
msgid "A convenience macro to get the previous element in a #GList."
msgstr ""

#. used by: g_list_next:
#: glist.c:110:1
msgid "@Returns: the next element, or %NULL if there are no more elements."
msgstr ""

#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_free:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_remove:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_remove_all:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_remove_link:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_delete_link:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_copy:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_reverse:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_nth:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_nth_prev:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_nth_data:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_find:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_find_custom:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_position:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_index:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_last:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_first:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_length:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_foreach:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_sort:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_sort_with_data:
#: glist.c:1109:1 glist.c:1142:1 glist.c:168:1 glist.c:460:1 glist.c:500:1
#: glist.c:561:1 glist.c:579:1 glist.c:600:1 glist.c:642:1 glist.c:668:1
#: glist.c:688:1 glist.c:708:1 glist.c:728:1 glist.c:753:1 glist.c:787:1
#: glist.c:816:1 glist.c:845:1 glist.c:866:1 glist.c:887:1 glist.c:915:1
msgid "@list: a #GList"
msgstr ""

#. used by: g_list_sort:
#: glist.c:1110:5
msgid ""
"@compare_func: the comparison function used to sort the #GList. This "
"function is passed the data from 2 elements of the #GList and should return "
"0 if they are equal, a negative value if the first element comes before the "
"second, or a positive value if the first element comes after the second."
msgstr ""

#. used by: g_list_sort:
#: glist.c:1116:1
msgid "Sorts a #GList using the given comparison function."
msgstr ""

#. used by: g_list_sort:
#: glist.c:1118:1
msgid "Returns: the start of the sorted #GList"
msgstr ""

#. used by: g_list_next:
#: glist.c:112:1
msgid "A convenience macro to get the next element in a #GList."
msgstr ""

#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GCompareFunc:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GCompareDataFunc:
#: glist.c:1122:1 glist.c:1153:1
msgid "@a: a value."
msgstr ""

#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GCompareFunc:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GCompareDataFunc:
#: glist.c:1123:1 glist.c:1154:1
msgid "@b: a value to compare with."
msgstr ""

#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GCompareFunc:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GCompareDataFunc:
#: glist.c:1124:2 glist.c:1156:2
msgid ""
"@Returns: negative value if @a &lt; @b; zero if @a = @b; positive value if "
"@a > @b."
msgstr ""

#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GCompareFunc:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GCompareDataFunc:
#: glist.c:1127:4 glist.c:1159:4
msgid ""
"Specifies the type of a comparison function used to compare two values.  The "
"function should return a negative integer if the first value comes before "
"the second, 0 if they are equal, or a positive integer if the first value "
"comes after the second."
msgstr ""

#. used by: g_list_sort_with_data:
#: glist.c:1143:1
msgid "@compare_func: comparison function"
msgstr ""

#. used by: g_list_sort_with_data:
#: glist.c:1144:1
msgid "@user_data: user data to pass to comparison function"
msgstr ""

#. used by: g_list_sort_with_data:
#: glist.c:1146:2
msgid ""
"Like g_list_sort(), but the comparison function accepts a user data argument."
msgstr ""

#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_delete_link:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_sort_with_data:
#: glist.c:1149:1 glist.c:586:1
msgid "Returns: the new head of @list"
msgstr ""

#. used by: g_list_push_allocator:
#: glist.c:119:1
msgid "@allocator: the #GAllocator to use when allocating #GList elements."
msgstr ""

#. used by: g_list_push_allocator:
#: glist.c:121:2
msgid ""
"Sets the allocator to use to allocate #GList elements. Use "
"g_list_pop_allocator() to restore the previous allocator."
msgstr ""

#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_push_allocator:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_pop_allocator:
#: glist.c:124:2 glist.c:139:2
msgid ""
"Note that this function is not available if GLib has been compiled with "
"<option>--disable-mem-pools</option>"
msgstr ""

#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_push_allocator:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_pop_allocator:
#: glist.c:127:3 glist.c:142:3
msgid ""
"Deprecated:2.10: It does nothing, since #GList has been converted to the "
"<link linkend=\"glib-Memory-Slices\">slice allocator</link>"
msgstr ""

#. used by: g_list_pop_allocator:
#: glist.c:136:2
msgid ""
"Restores the previous #GAllocator, used when allocating #GList elements."
msgstr ""

#. used by: g_list_alloc:
#: glist.c:154:1
msgid "@Returns: a pointer to the newly-allocated #GList element."
msgstr ""

#. used by: g_list_alloc:
#: glist.c:156:3
msgid ""
"Allocates space for one #GList element. It is called by g_list_append(), "
"g_list_prepend(), g_list_insert() and g_list_insert_sorted() and so is "
"rarely used on its own."
msgstr ""

#. used by: g_list_free:
#: glist.c:170:2
msgid ""
"Frees all of the memory used by a #GList. The freed elements are returned to "
"the slice allocator."
msgstr ""

#. used by: g_list_free:
#: glist.c:173:5
msgid ""
"<note><para> If list elements contain dynamically-allocated memory, you "
"should either use g_list_free_full() or free them manually first. </para></"
"note>"
msgstr ""

#. used by: g_list_free_1:
#: glist.c:187:1
msgid "@list: a #GList element"
msgstr ""

#. used by: g_list_free_1:
#: glist.c:189:2
msgid ""
"Frees one #GList element. It is usually used after g_list_remove_link()."
msgstr ""

#. used by: g_list_free1:
#: glist.c:195:1
msgid "Another name for g_list_free_1()."
msgstr ""

#. used by: g_list_free_full:
#: glist.c:206:1
msgid "@free_func: the function to be called to free each element's data"
msgstr ""

#. used by: g_list_free_full:
#: glist.c:208:2
msgid ""
"Convenience method, which frees all the memory used by a #GList, and calls "
"the specified destroy function on every element's data."
msgstr ""

#. used by: g_list_free_full:
#: glist.c:211:1
msgid "Since: 2.28"
msgstr ""

#. used by: g_list_append:
#: glist.c:226:1
msgid "Adds a new element on to the end of the list."
msgstr ""

#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_append:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_prepend:
#: glist.c:228:4 glist.c:289:4
msgid ""
"<note><para> The return value is the new start of the list, which may have "
"changed, so make sure you store the new value. </para></note>"
msgstr ""

#. used by: g_list_append:
#: glist.c:233:6
msgid ""
"<note><para> Note that g_list_append() has to traverse the entire list to "
"find the end, which is inefficient when adding multiple elements. A common "
"idiom to avoid the inefficiency is to prepend the elements and reverse the "
"list when all elements have been added. </para></note>"
msgstr ""

#. used by: g_list_append:
#: glist.c:240:3
msgid ""
"|[ /&ast; Notice that these are initialized to the empty list. &ast;/ GList "
"*list = NULL, *number_list = NULL;"
msgstr ""

#. used by: g_list_append:
#: glist.c:244:3
msgid ""
"/&ast; This is a list of strings. &ast;/ list = g_list_append (list, \"first"
"\"); list = g_list_append (list, \"second\");"
msgstr ""

#. used by: g_list_append:
#: glist.c:248:4
msgid ""
"/&ast; This is a list of integers. &ast;/ number_list = g_list_append "
"(number_list, GINT_TO_POINTER (27)); number_list = g_list_append "
"(number_list, GINT_TO_POINTER (14)); ]|"
msgstr ""

#. used by: g_list_prepend:
#: glist.c:287:1
msgid "Adds a new element on to the start of the list."
msgstr ""

#. used by: g_list_prepend:
#: glist.c:294:6
msgid ""
"|[ /&ast; Notice that it is initialized to the empty list. &ast;/ GList "
"*list = NULL; list = g_list_prepend (list, \"last\"); list = g_list_prepend "
"(list, \"first\"); ]|"
msgstr ""

#. used by: g_list_insert:
#: glist.c:330:3
msgid ""
"@position: the position to insert the element. If this is negative, or is "
"larger than the number of elements in the list, the new element is added on "
"to the end of the list."
msgstr ""

#. used by: g_list_insert:
#: glist.c:334:1
msgid "Inserts a new element into the list at the given position."
msgstr ""

#. used by: g_list_insert_before:
#: glist.c:372:2
msgid ""
"@sibling: the list element before which the new element is inserted or %NULL "
"to insert at the end of the list"
msgstr ""

#. used by: g_list_insert_before:
#: glist.c:376:1
msgid "Inserts a new element into the list before the given position."
msgstr ""

#. used by: SECTION:linked_lists_double
#: glist.c:39:1
msgid "@title: Doubly-Linked Lists"
msgstr ""

#. used by: SECTION:linked_lists_double
#: glist.c:40:3
msgid ""
"@short_description: linked lists containing integer values or pointers to "
"data, with the ability to iterate over the list in both directions"
msgstr ""

#. used by: g_list_concat:
#: glist.c:431:2
msgid ""
"@list1: a #GList @list2: the #GList to add to the end of the first #GList"
msgstr ""

#. used by: g_list_concat:
#: glist.c:434:3
msgid ""
"Adds the second #GList onto the end of the first #GList. Note that the "
"elements of the second #GList are not copied. They are used directly."
msgstr ""

#. used by: g_list_concat:
#: glist.c:438:1
msgid "Returns: the start of the new #GList"
msgstr ""

#. used by: SECTION:linked_lists_double
#: glist.c:44:2
msgid ""
"The #GList structure and its associated functions provide a standard doubly-"
"linked list data structure."
msgstr ""

#. used by: g_list_remove:
#: glist.c:461:1
msgid "@data: the data of the element to remove"
msgstr ""

#. used by: g_list_remove:
#: glist.c:463:3
msgid ""
"Removes an element from a #GList. If two elements contain the same data, "
"only the first is removed. If none of the elements contain the data, the "
"#GList is unchanged."
msgstr ""

#. used by: SECTION:linked_lists_double
#: glist.c:47:6
msgid ""
"Each element in the list contains a piece of data, together with pointers "
"which link to the previous and next elements in the list. Using these "
"pointers it is possible to move through the list in both directions (unlike "
"the <link linkend=\"glib-Singly-Linked-lists\">Singly-Linked Lists</link> "
"which only allows movement through the list in the forward direction)."
msgstr ""

#. used by: g_list_remove_all:
#: glist.c:501:1
msgid "@data: data to remove"
msgstr ""

#. used by: g_list_remove_all:
#: glist.c:503:4
msgid ""
"Removes all list nodes with data equal to @data. Returns the new head of the "
"list. Contrast with g_list_remove() which removes only the first node "
"matching the given data."
msgstr ""

#. used by: g_list_remove_all:
#: glist.c:508:1
msgid "Returns: new head of @list"
msgstr ""

#. used by: SECTION:linked_lists_double
#: glist.c:54:3
msgid ""
"The data contained in each element can be either integer values, by using "
"one of the <link linkend=\"glib-Type-Conversion-Macros\">Type Conversion "
"Macros</link>, or simply pointers to any type of data."
msgstr ""

#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_remove_link:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_position:
#: glist.c:562:1 glist.c:788:1
msgid "@llink: an element in the #GList"
msgstr ""

#. used by: g_list_remove_link:
#: glist.c:564:3
msgid ""
"Removes an element from a #GList, without freeing the element. The removed "
"element's prev and next links are set to %NULL, so that it becomes a self-"
"contained list with one element."
msgstr ""

#. used by: g_list_remove_link:
#: glist.c:568:1
msgid "Returns: the new start of the #GList, without the element"
msgstr ""

#. used by: SECTION:linked_lists_double
#: glist.c:58:3
msgid ""
"List elements are allocated from the <link linkend=\"glib-Memory-Slices"
"\">slice allocator</link>, which is more efficient than allocating elements "
"individually."
msgstr ""

#. used by: g_list_delete_link:
#: glist.c:580:1
msgid "@link_: node to delete from @list"
msgstr ""

#. used by: g_list_delete_link:
#: glist.c:582:3
msgid ""
"Removes the node link_ from the list and frees it. Compare this to "
"g_list_remove_link() which removes the node without freeing it."
msgstr ""

#. used by: g_list_copy:
#: glist.c:602:1
msgid "Copies a #GList."
msgstr ""

#. used by: g_list_copy:
#: glist.c:604:5
msgid ""
"<note><para> Note that this is a \"shallow\" copy. If the list elements "
"consist of pointers to data, the pointers are copied but the actual data is "
"not. </para></note>"
msgstr ""

#. used by: g_list_copy:
#: glist.c:610:1
msgid "Returns: a copy of @list"
msgstr ""

#. used by: SECTION:linked_lists_double
#: glist.c:62:3
msgid ""
"Note that most of the #GList functions expect to be passed a pointer to the "
"first element in the list. The functions which insert elements return the "
"new start of the list, which may have changed."
msgstr ""

#. used by: g_list_reverse:
#: glist.c:644:2
msgid ""
"Reverses a #GList. It simply switches the next and prev pointers of each "
"element."
msgstr ""

#. used by: g_list_reverse:
#: glist.c:647:1
msgid "Returns: the start of the reversed #GList"
msgstr ""

#. used by: SECTION:linked_lists_double
#: glist.c:66:2
msgid ""
"There is no function to create a #GList. %NULL is considered to be the empty "
"list so you simply set a #GList* to %NULL."
msgstr ""

#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_nth:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_nth_prev:
#: glist.c:669:1 glist.c:689:1
msgid "@n: the position of the element, counting from 0"
msgstr ""

#. used by: g_list_nth:
#: glist.c:671:1
msgid "Gets the element at the given position in a #GList."
msgstr ""

#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_nth:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_nth_prev:
#: glist.c:673:2 glist.c:693:2
msgid ""
"Returns: the element, or %NULL if the position is off the end of the #GList"
msgstr ""

#. used by: SECTION:linked_lists_double
#: glist.c:69:2
msgid ""
"To add elements, use g_list_append(), g_list_prepend(), g_list_insert() and "
"g_list_insert_sorted()."
msgstr ""

#. used by: g_list_nth_prev:
#: glist.c:691:1
msgid "Gets the element @n places before @list."
msgstr ""

#. used by: g_list_nth_data:
#: glist.c:709:1
msgid "@n: the position of the element"
msgstr ""

#. used by: g_list_nth_data:
#: glist.c:711:1
msgid "Gets the data of the element at the given position."
msgstr ""

#. used by: g_list_nth_data:
#: glist.c:713:2
msgid ""
"Returns: the element's data, or %NULL if the position is off the end of the "
"#GList"
msgstr ""

#. used by: SECTION:linked_lists_double
#: glist.c:72:1
msgid "To remove elements, use g_list_remove()."
msgstr ""

#. used by: g_list_find:
#: glist.c:729:1
msgid "@data: the element data to find"
msgstr ""

#. used by: g_list_find:
#: glist.c:731:2
msgid "Finds the element in a #GList which contains the given data."
msgstr ""

#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_find:
#. #-#-#-#-#  glist.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_list_find_custom:
#: glist.c:734:2 glist.c:765:1
msgid "Returns: the found #GList element, or %NULL if it is not found"
msgstr ""

#. used by: SECTION:linked_lists_double
#: glist.c:74:3
msgid ""
"To find elements in the list use g_list_first(), g_list_last(), g_list_next"
"(), g_list_previous(), g_list_nth(), g_list_nth_data(), g_list_find() and "
"g_list_find_custom()."
msgstr ""

#. used by: g_list_find_custom:
#: glist.c:754:1
msgid "@data: user data passed to the function"
msgstr ""

#. used by: g_list_find_custom:
#: glist.c:755:2
msgid ""
"@func: the function to call for each element. It should return 0 when the "
"desired element is found"
msgstr ""

#. used by: g_list_find_custom:
#: glist.c:758:6
msgid ""
"Finds an element in a #GList, using a supplied function to find the desired "
"element. It iterates over the list, calling the given function which should "
"return 0 when the desired element is found. The function takes two "
"#gconstpointer arguments, the #GList element's data as the first argument "
"and the given user data."
msgstr ""

#. used by: SECTION:linked_lists_double
#: glist.c:78:2
msgid ""
"To find the index of an element use g_list_position() and g_list_index()."
msgstr ""

#. used by: g_list_position:
#: glist.c:790:2
msgid "Gets the position of the given element in the #GList (starting from 0)."
msgstr ""

#. used by: g_list_position:
#: glist.c:793:2
msgid ""
"Returns: the position of the element in the #GList, or -1 if the element is "
"not found"
msgstr ""

#. used by: SECTION:linked_lists_double
#: glist.c:81:1
msgid "To call a function for each element in the list use g_list_foreach()."
msgstr ""

#. used by: g_list_index:
#: glist.c:817:1
msgid "@data: the data to find"
msgstr ""

#. used by: g_list_index:
#: glist.c:819:2
msgid ""
"Gets the position of the element containing the given data (starting from 0)."
msgstr ""

#. used by: g_list_index:
#: glist.c:822:2
msgid ""
"Returns: the index of the element containing the data, or -1 if the data is "
"not found"
msgstr ""

#. used by: SECTION:linked_lists_double
#: glist.c:83:1
msgid "To free the entire list, use g_list_free()."
msgstr ""

#. used by: g_list_last:
#: glist.c:847:1
msgid "Gets the last element in a #GList."
msgstr ""

#. used by: g_list_last:
#: glist.c:849:2
msgid ""
"Returns: the last element in the #GList, or %NULL if the #GList has no "
"elements"
msgstr ""

#. used by: g_list_first:
#: glist.c:868:1
msgid "Gets the first element in a #GList."
msgstr ""

#. used by: g_list_first:
#: glist.c:870:2
msgid ""
"Returns: the first element in the #GList, or %NULL if the #GList has no "
"elements"
msgstr ""

#. used by: GList:
#: glist.c:88:4
msgid ""
"@data: holds the element's data, which can be a pointer to any kind of data, "
"or any integer value using the <link linkend=\"glib-Type-Conversion-Macros"
"\">Type Conversion Macros</link>."
msgstr ""

#. used by: g_list_length:
#: glist.c:889:1
msgid "Gets the number of elements in a #GList."
msgstr ""

#. used by: g_list_length:
#: glist.c:891:4
msgid ""
"<note><para> This function iterates over the whole list to count its "
"elements. </para></note>"
msgstr ""

#. used by: g_list_length:
#: glist.c:896:1
msgid "Returns: the number of elements in the #GList"
msgstr ""

#. used by: g_list_foreach:
#: glist.c:916:1
msgid "@func: the function to call with each element's data"
msgstr ""

#. used by: g_list_foreach:
#: glist.c:917:1
msgid "@user_data: user data to pass to the function"
msgstr ""

#. used by: g_list_foreach:
#: glist.c:919:1
msgid "Calls a function for each element of a #GList."
msgstr ""

#. used by: GList:
#: glist.c:92:1
msgid "@next: contains the link to the next element in the list."
msgstr ""

#. used by: GFunc:
#: glist.c:923:1
msgid "@data: the element's data."
msgstr ""

#. used by: GFunc:
#: glist.c:924:2
msgid "@user_data: user data passed to g_list_foreach() or g_slist_foreach()."
msgstr ""

#. used by: GFunc:
#: glist.c:927:2
msgid ""
"Specifies the type of functions passed to g_list_foreach() and "
"g_slist_foreach()."
msgstr ""

#. used by: GList:
#: glist.c:93:1
msgid "@prev: contains the link to the previous element in the list."
msgstr ""

#. used by: GList:
#: glist.c:95:1
msgid "The #GList struct is used for each element in a doubly-linked list."
msgstr ""
