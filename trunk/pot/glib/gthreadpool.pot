# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-04-14 21:52-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"

# used by: SECTION: thread_pools
#: gthreadpool.c:38:1
msgid "@title: Thread Pools"
msgstr ""

# used by: SECTION: thread_pools
#: gthreadpool.c:39:1
msgid "@short_description: pools of threads to execute work concurrently"
msgstr ""

# used by: SECTION: thread_pools
#: gthreadpool.c:40:4
msgid ""
"@see_also: <para> <variablelist> <varlistentry> <term>#GThread</term> "
"<listitem><para>GLib thread system.</para></listitem> </varlistentry> </"
"variablelist> </para>"
msgstr ""

# used by: g_thread_pool_new:
#: gthreadpool.c:437:1
msgid "@func: a function to execute in the threads of the new thread pool"
msgstr ""

# used by: g_thread_pool_new:
#: gthreadpool.c:438:2
msgid ""
"@user_data: user data that is handed over to @func every time it is called"
msgstr ""

# used by: g_thread_pool_new:
#: gthreadpool.c:440:2
msgid ""
"@max_threads: the maximal number of threads to execute concurrently in the "
"new thread pool, -1 means no limit"
msgstr ""

# used by: g_thread_pool_new:
#: gthreadpool.c:442:1
msgid "@exclusive: should this thread pool be exclusive?"
msgstr ""

# #-#-#-#-#  gthreadpool.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_thread_pool_new:
# #-#-#-#-#  gthreadpool.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_thread_pool_push:
# #-#-#-#-#  gthreadpool.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_thread_pool_set_max_threads:
#: gthreadpool.c:443:1 gthreadpool.c:528:1 gthreadpool.c:568:1
msgid "@error: return location for error"
msgstr ""

# #used by: g_thread_pool_new:
#: gthreadpool.c:445:1
msgid "This function creates a new thread pool."
msgstr ""

# #used by: g_thread_pool_new:
#: gthreadpool.c:447:7
msgid ""
"Whenever you call g_thread_pool_push(), either a new thread is created or an "
"unused one is reused. At most @max_threads threads are running concurrently "
"for this thread pool. @max_threads = -1 allows unlimited threads to be "
"created for this thread pool. The newly created or reused thread now "
"executes the function @func with the two arguments. The first one is the "
"parameter to g_thread_pool_push() and the second one is @user_data."
msgstr ""

# #used by: SECTION: thread_pools
#: gthreadpool.c:45:6
msgid ""
"Sometimes you wish to asynchronously fork out the execution of work and "
"continue working in your own thread. If that will happen often, the overhead "
"of starting and destroying a thread each time might be too high. In such "
"cases reusing already started threads seems like a good idea. And it indeed "
"is, but implementing this can be tedious and error-prone."
msgstr ""

# #used by: g_thread_pool_new:
#: gthreadpool.c:455:8
msgid ""
"The parameter @exclusive determines, whether the thread pool owns all "
"threads exclusive or whether the threads are shared globally. If @exclusive "
"is %TRUE, @max_threads threads are started immediately and they will run "
"exclusively for this thread pool until it is destroyed by g_thread_pool_free"
"(). If @exclusive is %FALSE, threads are created, when needed and shared "
"between all non-exclusive thread pools. This implies that @max_threads may "
"not be -1 for exclusive thread pools."
msgstr ""

# #used by: g_thread_pool_new:
#: gthreadpool.c:464:3
msgid ""
"@error can be %NULL to ignore errors, or non-%NULL to report errors. An "
"error can only occur when @exclusive is set to %TRUE and not all "
"@max_threads threads could be created."
msgstr ""

# #used by: g_thread_pool_new:
#: gthreadpool.c:468:1
msgid "Return value: the new #GThreadPool"
msgstr ""

# #used by: SECTION: thread_pools
#: gthreadpool.c:52:3
msgid ""
"Therefore GLib provides thread pools for your convenience. An added "
"advantage is, that the threads can be shared between the different "
"subsystems of your program, when they are using GLib."
msgstr ""

# #-#-#-#-#  gthreadpool.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_thread_pool_push:
# #-#-#-#-#  gthreadpool.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_thread_pool_set_max_threads:
# #-#-#-#-#  gthreadpool.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_thread_pool_get_max_threads:
# #-#-#-#-#  gthreadpool.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_thread_pool_get_num_threads:
# #-#-#-#-#  gthreadpool.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_thread_pool_unprocessed:
# #-#-#-#-#  gthreadpool.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_thread_pool_free:
# #-#-#-#-#  gthreadpool.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_thread_pool_set_sort_function:
#: gthreadpool.c:526:1 gthreadpool.c:566:1 gthreadpool.c:628:1
#: gthreadpool.c:654:1 gthreadpool.c:680:1 gthreadpool.c:704:1
#: gthreadpool.c:890:1
msgid "@pool: a #GThreadPool"
msgstr ""

# used by: g_thread_pool_push:
#: gthreadpool.c:527:1
msgid "@data: a new task for @pool"
msgstr ""

# #used by: g_thread_pool_push:
#: gthreadpool.c:530:6
msgid ""
"Inserts @data into the list of tasks to be executed by @pool. When the "
"number of currently running threads is lower than the maximal allowed number "
"of threads, a new thread is started (or reused) with the properties given to "
"g_thread_pool_new (). Otherwise @data stays in the queue until a thread in "
"this pool finishes its previous task and processes @data."
msgstr ""

# #used by: g_thread_pool_push:
#: gthreadpool.c:537:4
msgid ""
"@error can be %NULL to ignore errors, or non-%NULL to report errors. An "
"error can only occur when a new thread couldn't be created. In that case "
"@data is simply appended to the queue of work to do."
msgstr ""

# #used by: SECTION: thread_pools
#: gthreadpool.c:56:2
msgid ""
"To create a new thread pool, you use g_thread_pool_new(). It is destroyed by "
"g_thread_pool_free()."
msgstr ""

# used by: g_thread_pool_set_max_threads:
#: gthreadpool.c:567:1
msgid "@max_threads: a new maximal number of threads for @pool"
msgstr ""

# #used by: g_thread_pool_set_max_threads:
#: gthreadpool.c:570:2
msgid ""
"Sets the maximal allowed number of threads for @pool. A value of -1 means, "
"that the maximal number of threads is unlimited."
msgstr ""

# #used by: g_thread_pool_set_max_threads:
#: gthreadpool.c:573:3
msgid ""
"Setting @max_threads to 0 means stopping all work for @pool. It is "
"effectively frozen until @max_threads is set to a non-zero value again."
msgstr ""

# #used by: g_thread_pool_set_max_threads:
#: gthreadpool.c:577:5
msgid ""
"A thread is never terminated while calling @func, as supplied by "
"g_thread_pool_new (). Instead the maximal number of threads only has effect "
"for the allocation of new threads in g_thread_pool_push(). A new thread is "
"allocated, whenever the number of currently running threads in @pool is "
"smaller than the maximal number."
msgstr ""

# #used by: g_thread_pool_set_max_threads:
#: gthreadpool.c:583:3
msgid ""
"@error can be %NULL to ignore errors, or non-%NULL to report errors. An "
"error can only occur when a new thread couldn't be created."
msgstr ""

# #used by: SECTION: thread_pools
#: gthreadpool.c:59:2
msgid ""
"If you want to execute a certain task within a thread pool, you call "
"g_thread_pool_push()."
msgstr ""

# #used by: SECTION: thread_pools
#: gthreadpool.c:62:5
msgid ""
"To get the current number of running threads you call "
"g_thread_pool_get_num_threads(). To get the number of still unprocessed "
"tasks you call g_thread_pool_unprocessed(). To control the maximal number of "
"threads for a thread pool, you use g_thread_pool_get_max_threads() and "
"g_thread_pool_set_max_threads()."
msgstr ""

# #used by: g_thread_pool_get_max_threads:
#: gthreadpool.c:630:1
msgid "Returns the maximal number of threads for @pool."
msgstr ""

# #used by: g_thread_pool_get_max_threads:
#: gthreadpool.c:632:1
msgid "Return value: the maximal number of threads"
msgstr ""

# #used by: g_thread_pool_get_num_threads:
#: gthreadpool.c:656:1
msgid "Returns the number of threads currently running in @pool."
msgstr ""

# #used by: g_thread_pool_get_num_threads:
#: gthreadpool.c:658:1
msgid "Return value: the number of threads currently running"
msgstr ""

# #used by: SECTION: thread_pools
#: gthreadpool.c:68:6
msgid ""
"Finally you can control the number of unused threads, that are kept alive by "
"GLib for future use. The current number can be fetched with "
"g_thread_pool_get_num_unused_threads(). The maximal number can be controlled "
"by g_thread_pool_get_max_unused_threads() and "
"g_thread_pool_set_max_unused_threads(). All currently unused threads can be "
"stopped by calling g_thread_pool_stop_unused_threads()."
msgstr ""

# #used by: g_thread_pool_unprocessed:
#: gthreadpool.c:682:1
msgid "Returns the number of tasks still unprocessed in @pool."
msgstr ""

# #used by: g_thread_pool_unprocessed:
#: gthreadpool.c:684:1
msgid "Return value: the number of unprocessed tasks"
msgstr ""

# used by: g_thread_pool_free:
#: gthreadpool.c:705:1
msgid "@immediate: should @pool shut down immediately?"
msgstr ""

# used by: g_thread_pool_free:
#: gthreadpool.c:706:1
msgid "@wait_: should the function wait for all tasks to be finished?"
msgstr ""

# #used by: g_thread_pool_free:
#: gthreadpool.c:708:1
msgid "Frees all resources allocated for @pool."
msgstr ""

# #used by: g_thread_pool_free:
#: gthreadpool.c:710:5
msgid ""
"If @immediate is %TRUE, no new task is processed for @pool. Otherwise @pool "
"is not freed before the last task is processed. Note however, that no thread "
"of this pool is interrupted, while processing a task. Instead at least all "
"still running threads can finish their tasks before the @pool is freed."
msgstr ""

# #used by: g_thread_pool_free:
#: gthreadpool.c:716:3
msgid ""
"If @wait_ is %TRUE, the functions does not return before all tasks to be "
"processed (dependent on @immediate, whether all or only the currently "
"running) are ready. Otherwise the function returns immediately."
msgstr ""

# #used by: g_thread_pool_free:
#: gthreadpool.c:720:1
msgid "After calling this function @pool must not be used anymore."
msgstr ""

# used by: g_thread_pool_set_max_unused_threads:
#: gthreadpool.c:809:1
msgid "@max_threads: maximal number of unused threads"
msgstr ""

# #used by: g_thread_pool_set_max_unused_threads:
#: gthreadpool.c:811:3
msgid ""
"Sets the maximal number of unused threads to @max_threads. If @max_threads "
"is -1, no limit is imposed on the number of unused threads."
msgstr ""

# used by: GThreadPool:
#: gthreadpool.c:83:1
msgid "@func: the function to execute in the threads of this pool"
msgstr ""

# used by: GThreadPool:
#: gthreadpool.c:84:1
msgid "@user_data: the user data for the threads of this pool"
msgstr ""

# #used by: g_thread_pool_get_max_unused_threads:
#: gthreadpool.c:847:1
msgid "Returns the maximal allowed number of unused threads."
msgstr ""

# #used by: g_thread_pool_get_max_unused_threads:
#: gthreadpool.c:849:1
msgid "Return value: the maximal number of unused threads"
msgstr ""

# used by: GThreadPool:
#: gthreadpool.c:85:1
msgid "@exclusive: are all threads exclusive to this pool"
msgstr ""

# #used by: g_thread_pool_get_num_unused_threads:
#: gthreadpool.c:860:1
msgid "Returns the number of currently unused threads."
msgstr ""

# #used by: g_thread_pool_get_num_unused_threads:
#: gthreadpool.c:862:1
msgid "Return value: the number of currently unused threads"
msgstr ""

# #used by: GThreadPool:
#: gthreadpool.c:87:3
msgid ""
"The #GThreadPool struct represents a thread pool. It has three public read-"
"only members, but the underlying struct is bigger, so you must not copy this "
"struct."
msgstr ""

# #used by: g_thread_pool_stop_unused_threads:
#: gthreadpool.c:873:3
msgid ""
"Stops all currently unused threads. This does not change the maximal number "
"of unused threads. This function can be used to regularly stop all unused "
"threads e.g. from g_timeout_add()."
msgstr ""

# used by: g_thread_pool_set_sort_function:
#: gthreadpool.c:891:6
msgid ""
"@func: the #GCompareDataFunc used to sort the list of tasks. This function "
"is passed two tasks. It should return 0 if the order in which they are "
"handled does not matter, a negative value if the first task should be "
"processed before the second or a positive value if the second task should be "
"processed first."
msgstr ""

# used by: g_thread_pool_set_sort_function:
#: gthreadpool.c:897:1
msgid "@user_data: user data passed to @func."
msgstr ""

# #used by: g_thread_pool_set_sort_function:
#: gthreadpool.c:899:3
msgid ""
"Sets the function used to sort the list of tasks. This allows the tasks to "
"be processed by a priority determined by @func, and not just in the order in "
"which they were added to the pool."
msgstr ""

# #used by: g_thread_pool_set_sort_function:
#: gthreadpool.c:903:5
msgid ""
"Note, if the maximum number of threads is more than 1, the order that "
"threads are executed can not be guranteed 100%. Threads are scheduled by the "
"operating system and are executed at random. It cannot be assumed that "
"threads are executed in the order they are created."
msgstr ""

# #-#-#-#-#  gthreadpool.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_thread_pool_set_sort_function:
# #-#-#-#-#  gthreadpool.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_thread_pool_set_max_idle_time:
# #-#-#-#-#  gthreadpool.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_thread_pool_get_max_idle_time:
#: gthreadpool.c:909:1 gthreadpool.c:952:1 gthreadpool.c:990:1
msgid "Since: 2.10"
msgstr ""

# used by: g_thread_pool_set_max_idle_time:
#: gthreadpool.c:938:2
msgid ""
"@interval: the maximum @interval (1/1000ths of a second) a thread can be "
"idle."
msgstr ""

# #used by: g_thread_pool_set_max_idle_time:
#: gthreadpool.c:941:5
msgid ""
"This function will set the maximum @interval that a thread waiting in the "
"pool for new tasks can be idle for before being stopped. This function is "
"similar to calling g_thread_pool_stop_unused_threads() on a regular timeout, "
"except, this is done on a per thread basis."
msgstr ""

# #used by: g_thread_pool_set_max_idle_time:
#: gthreadpool.c:947:1
msgid "By setting @interval to 0, idle threads will not be stopped."
msgstr ""

# #used by: g_thread_pool_set_max_idle_time:
#: gthreadpool.c:949:2
msgid "This function makes use of g_async_queue_timed_pop () using @interval."
msgstr ""

# #used by: g_thread_pool_get_max_idle_time:
#: gthreadpool.c:981:2
msgid ""
"This function will return the maximum @interval that a thread will wait in "
"the thread pool for new tasks before being stopped."
msgstr ""

# #used by: g_thread_pool_get_max_idle_time:
#: gthreadpool.c:984:2
msgid ""
"If this function returns 0, threads waiting in the thread pool for new work "
"are not stopped."
msgstr ""

# #used by: g_thread_pool_get_max_idle_time:
#: gthreadpool.c:987:2
msgid ""
"Return value: the maximum @interval to wait for new tasks in the thread pool "
"before stopping the thread (1/1000ths of a second)."
msgstr ""
