# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-04-23 20:51-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"

#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_free:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_set_help_enabled:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_get_help_enabled:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_set_ignore_unknown_options:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_get_ignore_unknown_options:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_add_group:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_set_main_group:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_get_main_group:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_add_main_entries:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_get_help:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_parse:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_set_translate_func:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_set_translation_domain:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_set_summary:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_get_summary:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_set_description:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_get_description:
#: goption.c:1662:1 goption.c:2255:1 goption.c:2292:1 goption.c:2314:1
#: goption.c:2341:1 goption.c:2359:1 goption.c:2385:1 goption.c:345:1
#: goption.c:381:1 goption.c:404:1 goption.c:423:1 goption.c:448:1
#: goption.c:467:1 goption.c:505:1 goption.c:534:1 goption.c:554:1
#: goption.c:711:1
msgid "@context: a #GOptionContext"
msgstr ""

#. used by: g_option_context_parse:
#: goption.c:1663:1
msgid "@argc: a pointer to the number of command line arguments"
msgstr ""

#. used by: g_option_context_parse:
#: goption.c:1664:1
msgid "@argv: a pointer to the array of command line arguments"
msgstr ""

#. used by: g_option_context_parse:
#: goption.c:1665:1
msgid "@error: a return location for errors"
msgstr ""

#. used by: g_option_context_parse:
#: goption.c:1667:4
msgid ""
"Parses the command line arguments, recognizing options which have been added "
"to @context. A side-effect of calling this function is that g_set_prgname() "
"will be called."
msgstr ""

#. used by: g_option_context_parse:
#: goption.c:1672:6
msgid ""
"If the parsing is successful, any parsed arguments are removed from the "
"array and @argc and @argv are updated accordingly. A '--' option is stripped "
"from @argv unless there are unparsed options before and after it, or some of "
"the options after it start with '-'. In case of an error, @argc and @argv "
"are left unmodified."
msgstr ""

#. used by: g_option_context_parse:
#: goption.c:1679:5
msgid ""
"If automatic <option>--help</option> support is enabled (see "
"g_option_context_set_help_enabled()), and the @argv array contains one of "
"the recognized help options, this function will produce help output to "
"stdout and call <literal>exit (0)</literal>."
msgstr ""

#. used by: g_option_context_parse:
#: goption.c:1685:4
msgid ""
"Note that function depends on the <link linkend=\"setlocale\">current "
"locale</link> for automatic character set conversion of string and filename "
"arguments."
msgstr ""

#. used by: g_option_context_parse:
#: goption.c:1690:2
msgid ""
"Return value: %TRUE if the parsing was successful, %FALSE if an error "
"occurred"
msgstr ""

#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_new:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_free:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_set_help_enabled:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_get_help_enabled:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_set_ignore_unknown_options:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_get_ignore_unknown_options:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_add_group:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_set_main_group:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_get_main_group:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_add_main_entries:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_parse:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_group_new:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_group_free:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_group_add_entries:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_group_set_parse_hooks:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_group_set_error_hook:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_group_set_translate_func:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_group_set_translation_domain:
#. #-#-#-#-#  goption.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: G_OPTION_REMAINING:
#: goption.c:1693:1 goption.c:2035:1 goption.c:2065:1 goption.c:2095:1
#: goption.c:2155:1 goption.c:2179:1 goption.c:2206:1 goption.c:2239:1
#: goption.c:326:1 goption.c:353:1 goption.c:391:1 goption.c:411:1
#: goption.c:435:1 goption.c:455:1 goption.c:476:1 goption.c:513:1
#: goption.c:542:1 goption.c:563:1 goption.h:306:1
msgid "Since: 2.6"
msgstr ""

#. used by: g_option_group_new:
#: goption.c:2018:2
msgid ""
"@name: the name for the option group, this is used to provide help for the "
"options in this group with <option>--help-</option>@name"
msgstr ""

#. used by: g_option_group_new:
#: goption.c:2020:3
msgid ""
"@description: a description for this group to be shown in <option>--help</"
"option>. This string is translated using the translation domain or "
"translation function of the group"
msgstr ""

#. used by: g_option_group_new:
#: goption.c:2023:3
msgid ""
"@help_description: a description for the <option>--help-</option>@name "
"option. This string is translated using the translation domain or "
"translation function of the group"
msgstr ""

#. used by: g_option_group_new:
#: goption.c:2026:2
msgid ""
"@user_data: user data that will be passed to the pre- and post-parse hooks, "
"the error hook and to callbacks of %G_OPTION_ARG_CALLBACK options, or %NULL"
msgstr ""

#. used by: g_option_group_new:
#: goption.c:2028:1
msgid "@destroy: a function that will be called to free @user_data, or %NULL"
msgstr ""

#. used by: g_option_group_new:
#: goption.c:2030:1
msgid "Creates a new #GOptionGroup."
msgstr ""

#. used by: g_option_group_new:
#: goption.c:2032:2
msgid ""
"Return value: a newly created option group. It should be added to a "
"#GOptionContext or freed with g_option_group_free()."
msgstr ""

#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_group_free:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_group_add_entries:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_group_set_parse_hooks:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_group_set_error_hook:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_group_set_translate_func:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_group_set_translation_domain:
#: goption.c:2060:1 goption.c:2090:1 goption.c:2143:1 goption.c:2170:1
#: goption.c:2193:1 goption.c:2233:1
msgid "@group: a #GOptionGroup"
msgstr ""

#. used by: g_option_group_free:
#: goption.c:2062:2
msgid ""
"Frees a #GOptionGroup. Note that you must <emphasis>not</emphasis> free "
"groups which have been added to a #GOptionContext."
msgstr ""

#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_add_main_entries:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_group_add_entries:
#: goption.c:2091:1 goption.c:555:1
msgid "@entries: a %NULL-terminated array of #GOptionEntry<!-- -->s"
msgstr ""

#. used by: g_option_group_add_entries:
#: goption.c:2093:1
msgid "Adds the options specified in @entries to @group."
msgstr ""

#. used by: g_option_group_set_parse_hooks:
#: goption.c:2144:1
msgid "@pre_parse_func: a function to call before parsing, or %NULL"
msgstr ""

#. used by: g_option_group_set_parse_hooks:
#: goption.c:2145:1
msgid "@post_parse_func: a function to call after parsing, or %NULL"
msgstr ""

#. used by: g_option_group_set_parse_hooks:
#: goption.c:2147:3
msgid ""
"Associates two functions with @group which will be called from "
"g_option_context_parse() before the first option is parsed and after the "
"last option has been parsed, respectively."
msgstr ""

#. used by: g_option_group_set_parse_hooks:
#: goption.c:2151:3
msgid ""
"Note that the user data to be passed to @pre_parse_func and @post_parse_func "
"can be specified when constructing the group with g_option_group_new()."
msgstr ""

#. used by: g_option_group_set_error_hook:
#: goption.c:2171:1
msgid "@error_func: a function to call when an error occurs"
msgstr ""

#. used by: g_option_group_set_error_hook:
#: goption.c:2173:2
msgid ""
"Associates a function with @group which will be called from "
"g_option_context_parse() when an error occurs."
msgstr ""

#. used by: g_option_group_set_error_hook:
#: goption.c:2176:2
msgid ""
"Note that the user data to be passed to @error_func can be specified when "
"constructing the group with g_option_group_new()."
msgstr ""

#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_group_set_translate_func:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_set_translate_func:
#: goption.c:2194:1 goption.c:2256:1
msgid "@func: the #GTranslateFunc, or %NULL"
msgstr ""

#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_group_set_translate_func:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_set_translate_func:
#: goption.c:2195:1 goption.c:2257:1
msgid "@data: user data to pass to @func, or %NULL"
msgstr ""

#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_group_set_translate_func:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_set_translate_func:
#: goption.c:2196:1 goption.c:2258:1
msgid "@destroy_notify: a function which gets called to free @data, or %NULL"
msgstr ""

#. used by: g_option_group_set_translate_func:
#: goption.c:2198:4
msgid ""
"Sets the function which is used to translate user-visible strings, for "
"<option>--help</option> output. Different groups can use different "
"#GTranslateFunc<!-- -->s. If @func is %NULL, strings are not translated."
msgstr ""

#. used by: g_option_group_set_translate_func:
#: goption.c:2203:2
msgid ""
"If you are using gettext(), you only need to set the translation domain, see "
"g_option_group_set_translation_domain()."
msgstr ""

#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_group_set_translation_domain:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_set_translation_domain:
#: goption.c:2234:1 goption.c:2293:1
msgid "@domain: the domain to use"
msgstr ""

#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_group_set_translation_domain:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_set_translation_domain:
#: goption.c:2236:2 goption.c:2295:2
msgid ""
"A convenience function to use gettext() for translating user-visible strings."
msgstr ""

#. used by: g_option_context_set_translate_func:
#: goption.c:2260:3
msgid ""
"Sets the function which is used to translate the contexts user-visible "
"strings, for <option>--help</option> output. If @func is %NULL, strings are "
"not translated."
msgstr ""

#. used by: g_option_context_set_translate_func:
#: goption.c:2264:4
msgid ""
"Note that option groups have their own translation functions, this function "
"only affects the @parameter_string (see g_option_context_new()), the summary "
"(see g_option_context_set_summary()) and the description (see "
"g_option_context_set_description())."
msgstr ""

#. used by: g_option_context_set_translate_func:
#: goption.c:2269:2
msgid ""
"If you are using gettext(), you only need to set the translation domain, see "
"g_option_context_set_translation_domain()."
msgstr ""

#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_set_translate_func:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_set_translation_domain:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_set_summary:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_get_summary:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_set_description:
#. #-#-#-#-#  goption.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_option_context_get_description:
#: goption.c:2272:1 goption.c:2298:1 goption.c:2326:1 goption.c:2347:1
#: goption.c:2370:1 goption.c:2391:1
msgid "Since: 2.12"
msgstr ""

#. used by: g_option_context_set_summary:
#: goption.c:2315:2
msgid ""
"@summary: a string to be shown in <option>--help</option> output before the "
"list of options, or %NULL"
msgstr ""

#. used by: g_option_context_set_summary:
#: goption.c:2318:3
msgid ""
"Adds a string to be displayed in <option>--help</option> output before the "
"list of options. This is typically a summary of the program functionality."
msgstr ""

#. used by: g_option_context_set_summary:
#: goption.c:2322:3
msgid ""
"Note that the summary is translated (see g_option_context_set_translate_func"
"() and g_option_context_set_translation_domain())."
msgstr ""

#. used by: g_option_context_get_summary:
#: goption.c:2343:1
msgid "Returns the summary. See g_option_context_set_summary()."
msgstr ""

#. used by: g_option_context_get_summary:
#: goption.c:2345:1
msgid "Returns: the summary"
msgstr ""

#. used by: g_option_context_set_description:
#: goption.c:2360:2
msgid ""
"@description: a string to be shown in <option>--help</option> output after "
"the list of options, or %NULL"
msgstr ""

#. used by: g_option_context_set_description:
#: goption.c:2363:3
msgid ""
"Adds a string to be displayed in <option>--help</option> output after the "
"list of options. This text often includes a bug reporting address."
msgstr ""

#. used by: g_option_context_set_description:
#: goption.c:2367:2
msgid ""
"Note that the summary is translated (see g_option_context_set_translate_func"
"())."
msgstr ""

#. used by: g_option_context_get_description:
#: goption.c:2387:1
msgid "Returns the description. See g_option_context_set_description()."
msgstr ""

#. used by: g_option_context_get_description:
#: goption.c:2389:1
msgid "Returns: the description"
msgstr ""

#. used by: SECTION:option
#: goption.c:24:1
msgid "@Short_description: parses commandline options"
msgstr ""

#. used by: SECTION:option
#: goption.c:25:1
msgid "@Title: Commandline option parser"
msgstr ""

#. used by: SECTION:option
#: goption.c:27:3
msgid ""
"The GOption commandline parser is intended to be a simpler replacement for "
"the popt library. It supports short and long commandline options, as shown "
"in the following example:"
msgstr ""

#. used by: g_option_context_new:
#: goption.c:298:4
msgid ""
"@parameter_string: a string which is displayed in the first line of "
"<option>--help</option> output, after the usage summary "
"<literal><replaceable>programname</replaceable> [OPTION...]</literal>"
msgstr ""

#. used by: g_option_context_new:
#: goption.c:303:1
msgid "Creates a new option context."
msgstr ""

#. used by: g_option_context_new:
#: goption.c:305:7
msgid ""
"The @parameter_string can serve multiple purposes. It can be used to add "
"descriptions for \"rest\" arguments, which are not parsed by the "
"#GOptionContext, typically something like \"FILES\" or \"FILE1 FILE2...\". "
"If you are using #G_OPTION_REMAINING for collecting \"rest\" arguments, GLib "
"handles this automatically by using the @arg_description of the "
"corresponding #GOptionEntry in the usage summary."
msgstr ""

#. used by: SECTION:option
#: goption.c:31:1
msgid ""
"<literal>testtreemodel -r 1 --max-size 20 --rand --display=:1.0 -vb -- file1 "
"file2</literal>"
msgstr ""

#. used by: g_option_context_new:
#: goption.c:313:5
msgid ""
"Another usage is to give a short summary of the program functionality, like "
"\" - frob the strings\", which will be displayed in the same line as the "
"usage. For a longer description of the program functionality that should be "
"displayed as a paragraph below the usage line, use "
"g_option_context_set_summary()."
msgstr ""

#. used by: g_option_context_new:
#: goption.c:319:3
msgid ""
"Note that the @parameter_string is translated using the function set with "
"g_option_context_set_translate_func(), so it should normally be passed "
"untranslated."
msgstr ""

#. used by: g_option_context_new:
#: goption.c:323:2
msgid ""
"Returns: a newly created #GOptionContext, which must be freed with "
"g_option_context_free() after use."
msgstr ""

#. used by: SECTION:option
#: goption.c:33:20
msgid ""
"The example demonstrates a number of features of the GOption commandline "
"parser <itemizedlist><listitem><para> Options can be single letters, "
"prefixed by a single dash. Multiple short options can be grouped behind a "
"single dash. </para></listitem><listitem><para> Long options are prefixed by "
"two consecutive dashes. </para></listitem><listitem><para> Options can have "
"an extra argument, which can be a number, a string or a filename. For long "
"options, the extra argument can be appended with an equals sign after the "
"option name, which is useful if the extra argument starts with a dash, which "
"would otherwise cause it to be interpreted as another option. </para></"
"listitem><listitem><para> Non-option arguments are returned to the "
"application as rest arguments. </para></listitem><listitem><para> An "
"argument consisting solely of two dashes turns off further parsing, any "
"remaining arguments (even those starting with a dash) are returned to the "
"application as rest arguments. </para></listitem></itemizedlist>"
msgstr ""

#. used by: g_option_context_free:
#: goption.c:347:2
msgid "Frees context and all the groups which have been added to it."
msgstr ""

#. used by: g_option_context_free:
#: goption.c:350:2
msgid ""
"Please note that parsed arguments need to be freed separately (see "
"#GOptionEntry)."
msgstr ""

#. used by: g_option_context_set_help_enabled:
#: goption.c:382:1
msgid ""
"@help_enabled: %TRUE to enable <option>--help</option>, %FALSE to disable it"
msgstr ""

#. used by: g_option_context_set_help_enabled:
#: goption.c:384:6
msgid ""
"Enables or disables automatic generation of <option>--help</option> output. "
"By default, g_option_context_parse() recognizes <option>--help</option>, "
"<option>-h</option>, <option>-?</option>, <option>--help-all</option> and "
"<option>--help-</option><replaceable>groupname</replaceable> and creates "
"suitable output to stdout."
msgstr ""

#. used by: g_option_context_get_help_enabled:
#: goption.c:406:2
msgid ""
"Returns whether automatic <option>--help</option> generation is turned on "
"for @context. See g_option_context_set_help_enabled()."
msgstr ""

#. used by: g_option_context_get_help_enabled:
#: goption.c:409:1
msgid "Returns: %TRUE if automatic help generation is turned on."
msgstr ""

#. used by: g_option_context_set_ignore_unknown_options:
#: goption.c:424:2
msgid ""
"@ignore_unknown: %TRUE to ignore unknown options, %FALSE to produce an error "
"when unknown options are met"
msgstr ""

#. used by: g_option_context_set_ignore_unknown_options:
#: goption.c:427:3
msgid ""
"Sets whether to ignore unknown options or not. If an argument is ignored, it "
"is left in the @argv array after parsing. By default, g_option_context_parse"
"() treats unknown options as error."
msgstr ""

#. used by: g_option_context_set_ignore_unknown_options:
#: goption.c:431:3
msgid ""
"This setting does not affect non-option arguments (i.e. arguments which "
"don't start with a dash). But note that GOption cannot reliably determine "
"whether a non-option belongs to a preceding unknown option."
msgstr ""

#. used by: g_option_context_get_ignore_unknown_options:
#: goption.c:450:2
msgid ""
"Returns whether unknown options are ignored or not. See "
"g_option_context_set_ignore_unknown_options()."
msgstr ""

#. used by: g_option_context_get_ignore_unknown_options:
#: goption.c:453:1
msgid "Returns: %TRUE if unknown options are ignored."
msgstr ""

#. used by: g_option_context_add_group:
#: goption.c:468:1
msgid "@group: the group to add"
msgstr ""

#. used by: g_option_context_add_group:
#: goption.c:470:5
msgid ""
"Adds a #GOptionGroup to the @context, so that parsing with @context will "
"recognize the options in the group. Note that the group will be freed "
"together with the context when g_option_context_free() is called, so you "
"must not free the group yourself after adding it to a context."
msgstr ""

#. used by: g_option_context_set_main_group:
#: goption.c:506:1
msgid "@group: the group to set as main group"
msgstr ""

#. used by: g_option_context_set_main_group:
#: goption.c:508:4
msgid ""
"Sets a #GOptionGroup as main group of the @context. This has the same effect "
"as calling g_option_context_add_group(), the only difference is that the "
"options in the main group are treated differently when generating <option>--"
"help</option> output."
msgstr ""

#. used by: g_option_context_get_main_group:
#: goption.c:536:1
msgid "Returns a pointer to the main group of @context."
msgstr ""

#. used by: g_option_context_get_main_group:
#: goption.c:538:3
msgid ""
"Return value: the main group of @context, or %NULL if @context doesn't have "
"a main group. Note that group belongs to @context and should not be modified "
"or freed."
msgstr ""

#. used by: SECTION:option
#: goption.c:54:9
msgid ""
"Another important feature of GOption is that it can automatically generate "
"nicely formatted help output. Unless it is explicitly turned off with "
"g_option_context_set_help_enabled(), GOption will recognize the <option>--"
"help</option>, <option>-?</option>, <option>--help-all</option> and "
"<option>--help-</option><replaceable>groupname</replaceable> options (where "
"<replaceable>groupname</replaceable> is the name of a #GOptionGroup) and "
"write a text similar to the one shown in the following example to stdout."
msgstr ""

#. used by: g_option_context_add_main_entries:
#: goption.c:556:3
msgid ""
"@translation_domain: a translation domain to use for translating the "
"<option>--help</option> output for the options in @entries with gettext(), "
"or %NULL"
msgstr ""

#. used by: g_option_context_add_main_entries:
#: goption.c:560:2
msgid ""
"A convenience function which creates a main group if it doesn't exist, adds "
"the @entries to it and sets the translation domain."
msgstr ""

#. used by: SECTION:option
#: goption.c:64:3
msgid ""
"<informalexample><screen> Usage: testtreemodel [OPTION...] - test tree model "
"performance"
msgstr ""

#. used by: SECTION:option
#: goption.c:68:4
msgid ""
"Help Options: -h, --help               Show help options --help-"
"all               Show all help options --help-gtk               Show GTK+ "
"Options"
msgstr ""

#. used by: g_option_context_get_help:
#: goption.c:712:1
msgid "@main_help: if %TRUE, only include the main group"
msgstr ""

#. used by: g_option_context_get_help:
#: goption.c:713:1
msgid "@group: the #GOptionGroup to create help for, or %NULL"
msgstr ""

#. used by: g_option_context_get_help:
#: goption.c:715:7
msgid ""
"Returns a formatted, translated help text for the given context. To obtain "
"the text produced by <option>--help</option>, call "
"<literal>g_option_context_get_help (context, TRUE, NULL)</literal>. To "
"obtain the text produced by <option>--help-all</option>, call "
"<literal>g_option_context_get_help (context, FALSE, NULL)</literal>. To "
"obtain the help text for an option group, call "
"<literal>g_option_context_get_help (context, FALSE, group)</literal>."
msgstr ""

#. used by: g_option_context_get_help:
#: goption.c:723:1
msgid "Returns: A newly allocated string containing the help text"
msgstr ""

#. used by: g_option_context_get_help:
#: goption.c:725:1
msgid "Since: 2.14"
msgstr ""

#. used by: SECTION:option
#: goption.c:73:8
msgid ""
"Application Options: -r, --repeats=N          Average over N repetitions -m, "
"--max-size=M         Test up to 2^M items --display=DISPLAY        X display "
"to use -v, --verbose            Be verbose -b, --beep               Beep "
"when done --rand                   Randomize the data </screen></"
"informalexample>"
msgstr ""

#. used by: SECTION:option
#: goption.c:82:5
msgid ""
"GOption groups options in #GOptionGroup<!-- -->s, which makes it easy to "
"incorporate options from multiple sources. The intended use for this is to "
"let applications collect option groups from the libraries it uses, add them "
"to their #GOptionContext, and parse all options by a single call to "
"g_option_context_parse(). See gtk_get_option_group() for an example."
msgstr ""

#. used by: SECTION:option
#: goption.c:88:5
msgid ""
"If an option is declared to be of type string or filename, GOption takes "
"care of converting it to the right encoding; strings are returned in UTF-8, "
"filenames are returned in the GLib filename encoding. Note that this only "
"works if setlocale() has been called before g_option_context_parse()."
msgstr ""

#. used by: SECTION:option
#: goption.c:94:2
msgid ""
"Here is a complete example of setting up GOption to parse the example "
"commandline above and produce the example help output."
msgstr ""

#. used by: GOptionArg:
#: goption.h:100:1
msgid "@G_OPTION_ARG_FILENAME: The option takes a filename as argument."
msgstr ""

#. used by: GOptionArg:
#: goption.h:101:2
msgid ""
"@G_OPTION_ARG_STRING_ARRAY: The option takes a string argument, multiple "
"uses of the option are collected into an array of strings."
msgstr ""

#. used by: GOptionArg:
#: goption.h:103:2
msgid ""
"@G_OPTION_ARG_FILENAME_ARRAY: The option takes a filename as argument, "
"multiple uses of the option are collected into an array of strings."
msgstr ""

#. used by: GOptionArg:
#: goption.h:105:6
msgid ""
"@G_OPTION_ARG_DOUBLE: The option takes a double argument. The argument can "
"be formatted either for the user's locale or for the \"C\" locale. Since "
"2.12 @G_OPTION_ARG_INT64: The option takes a 64-bit integer. Like "
"%G_OPTION_ARG_INT but for larger numbers. The number can be in decimal base, "
"or in hexadecimal (when prefixed with <literal>0x</literal>, for example, "
"<literal>0xffffffff</literal>). Since 2.12"
msgstr ""

#. used by: GOptionArg:
#: goption.h:112:5
msgid ""
"The #GOptionArg enum values determine which type of extra argument the "
"options expect to find. If an option expects an extra argument, it can be "
"specified in several ways; with a short option: <option>-x arg</option>, "
"with a long option: <option>--name arg</option> or combined in a single "
"argument: <option>--name=arg</option>."
msgstr ""

#. used by: GOptionArgFunc:
#: goption.h:133:3
msgid ""
"@option_name: The name of the option being parsed. This will be either a "
"single dash followed by a single letter (for a short name) or two dashes "
"followed by a long option name."
msgstr ""

#. used by: GOptionArgFunc:
#: goption.h:136:1
msgid "@value: The value to be parsed."
msgstr ""

#. #-#-#-#-#  goption.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GOptionArgFunc:
#. #-#-#-#-#  goption.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GOptionParseFunc:
#. #-#-#-#-#  goption.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GOptionErrorFunc:
#: goption.h:137:2 goption.h:157:2 goption.h:175:2
msgid ""
"@data: User data added to the #GOptionGroup containing the option when it "
"was created with g_option_group_new()"
msgstr ""

#. used by: GOptionArgFunc:
#: goption.h:139:2
msgid ""
"@error: A return location for errors. The error code %G_OPTION_ERROR_FAILED "
"is intended to be used for errors in #GOptionArgFunc callbacks."
msgstr ""

#. used by: GOptionArgFunc:
#: goption.h:142:2
msgid ""
"The type of function to be passed as callback for %G_OPTION_ARG_CALLBACK "
"options."
msgstr ""

#. used by: GOptionArgFunc:
#: goption.h:145:2
msgid ""
"Returns: %TRUE if the option was successfully parsed, %FALSE if an error "
"occurred, in which case @error should be set with g_set_error()"
msgstr ""

#. #-#-#-#-#  goption.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GOptionParseFunc:
#. #-#-#-#-#  goption.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GOptionErrorFunc:
#: goption.h:155:1 goption.h:173:1
msgid "@context: The active #GOptionContext"
msgstr ""

#. #-#-#-#-#  goption.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GOptionParseFunc:
#. #-#-#-#-#  goption.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GOptionErrorFunc:
#: goption.h:156:1 goption.h:174:1
msgid "@group: The group to which the function belongs"
msgstr ""

#. used by: GOptionParseFunc:
#: goption.h:159:1
msgid "@error: A return location for error details"
msgstr ""

#. used by: GOptionParseFunc:
#: goption.h:161:1
msgid "The type of function that can be called before and after parsing."
msgstr ""

#. used by: GOptionParseFunc:
#: goption.h:163:2
msgid ""
"Returns: %TRUE if the function completed successfully, %FALSE if an error "
"occurred, in which case @error should be set with g_set_error()"
msgstr ""

#. used by: GOptionErrorFunc:
#: goption.h:177:1
msgid "@error: The #GError containing details about the parse error"
msgstr ""

#. used by: GOptionErrorFunc:
#: goption.h:179:1
msgid "The type of function to be used as callback when a parse error occurs."
msgstr ""

#. used by: G_OPTION_ERROR:
#: goption.h:189:3
msgid ""
"Error domain for option parsing. Errors in this domain will be from the "
"#GOptionError enumeration. See #GError for information on error domains."
msgstr ""

#. used by: GOptionError:
#: goption.h:197:3
msgid ""
"@G_OPTION_ERROR_UNKNOWN_OPTION: An option was not known to the parser. This "
"error will only be reported, if the parser hasn't been instructed to ignore "
"unknown options, see g_option_context_set_ignore_unknown_options()."
msgstr ""

#. used by: GOptionError:
#: goption.h:200:1
msgid "@G_OPTION_ERROR_BAD_VALUE: A value couldn't be parsed."
msgstr ""

#. used by: GOptionError:
#: goption.h:201:1
msgid "@G_OPTION_ERROR_FAILED: A #GOptionArgFunc callback failed."
msgstr ""

#. used by: GOptionError:
#: goption.h:203:1
msgid "Error codes returned by option parsing."
msgstr ""

#. used by: GOptionEntry:
#: goption.h:216:6
msgid ""
"@long_name: The long name of an option can be used to specify it in a "
"commandline as --<replaceable>long_name</replaceable>. Every option must "
"have a long name. To resolve conflicts if multiple option groups contain the "
"same long name, it is also possible to specify the option as --"
"<replaceable>groupname</replaceable>-<replaceable>long_name</replaceable>."
msgstr ""

#. used by: GOptionEntry:
#: goption.h:222:4
msgid ""
"@short_name: If an option has a short name, it can be specified -"
"<replaceable>short_name</replaceable> in a commandline. @short_name must be "
"a printable ASCII character different from '-', or zero if the option has no "
"short name."
msgstr ""

#. used by: GOptionEntry:
#: goption.h:226:1
msgid "@flags: Flags from #GOptionFlags."
msgstr ""

#. used by: GOptionEntry:
#: goption.h:227:1
msgid "@arg: The type of the option, as a #GOptionArg."
msgstr ""

#. used by: GOptionEntry:
#: goption.h:228:39
msgid ""
"@arg_data: If the @arg type is %G_OPTION_ARG_CALLBACK, then @arg_data must "
"point to a #GOptionArgFunc callback function, which will be called to handle "
"the extra argument. Otherwise, @arg_data is a pointer to a location to store "
"the value, the required type of the location depends on the @arg type: "
"<variablelist> <varlistentry> <term>%G_OPTION_ARG_NONE</term> "
"<listitem><para>%gboolean</para></listitem> </varlistentry> <varlistentry> "
"<term>%G_OPTION_ARG_STRING</term> <listitem><para>%gchar*</para></listitem> "
"</varlistentry> <varlistentry> <term>%G_OPTION_ARG_INT</term> "
"<listitem><para>%gint</para></listitem> </varlistentry> <varlistentry> <term>"
"%G_OPTION_ARG_FILENAME</term> <listitem><para>%gchar*</para></listitem> </"
"varlistentry> <varlistentry> <term>%G_OPTION_ARG_STRING_ARRAY</term> "
"<listitem><para>%gchar**</para></listitem> </varlistentry> <varlistentry> "
"<term>%G_OPTION_ARG_FILENAME_ARRAY</term> <listitem><para>%gchar**</para></"
"listitem> </varlistentry> <varlistentry> <term>%G_OPTION_ARG_DOUBLE</term> "
"<listitem><para>%gdouble</para></listitem> </varlistentry> </variablelist> "
"If @arg type is %G_OPTION_ARG_STRING or %G_OPTION_ARG_FILENAME the location "
"will contain a newly allocated string if the option was given. That string "
"needs to be freed by the callee using g_free(). Likewise if @arg type is "
"%G_OPTION_ARG_STRING_ARRAY or %G_OPTION_ARG_FILENAME_ARRAY, the data should "
"be freed using g_strfreev()."
msgstr ""

#. used by: GOptionEntry:
#: goption.h:267:3
msgid ""
"@description: the description for the option in <option>--help</option> "
"output. The @description is translated using the @translate_func of the "
"group, see g_option_group_set_translation_domain()."
msgstr ""

#. used by: GOptionEntry:
#: goption.h:270:4
msgid ""
"@arg_description: The placeholder to use for the extra argument parsed by "
"the option in <option>--help</option> output. The @arg_description is "
"translated using the @translate_func of the group, see "
"g_option_group_set_translation_domain()."
msgstr ""

#. used by: GOptionEntry:
#: goption.h:275:3
msgid ""
"A <structname>GOptionEntry</structname> defines a single option. To have an "
"effect, they must be added to a #GOptionGroup with "
"g_option_context_add_main_entries() or g_option_group_add_entries()."
msgstr ""

#. used by: G_OPTION_REMAINING:
#: goption.h:295:5
msgid ""
"If a long option in the main group has this name, it is not treated as a "
"regular option. Instead it collects all non-option arguments which would "
"otherwise be left in <literal>argv</literal>. The option must be of type "
"%G_OPTION_ARG_CALLBACK, %G_OPTION_ARG_STRING_ARRAY or "
"%G_OPTION_ARG_FILENAME_ARRAY."
msgstr ""

#. used by: G_OPTION_REMAINING:
#: goption.h:302:3
msgid ""
"Using #G_OPTION_REMAINING instead of simply scanning <literal>argv</literal> "
"for leftover arguments has the advantage that GOption takes care of "
"necessary encoding conversions for strings or filenames."
msgstr ""

#. used by: GOptionContext:
#: goption.h:36:3
msgid ""
"A <structname>GOptionContext</structname> struct defines which options are "
"accepted by the commandline option parser. The struct has only private "
"fields and should not be directly accessed."
msgstr ""

#. used by: GOptionGroup:
#: goption.h:45:2
msgid ""
"A <structname>GOptionGroup</structname> struct defines the options in a "
"single group. The struct has only private fields and should not be directly "
"accessed."
msgstr ""

#. used by: GOptionGroup:
#: goption.h:48:4
msgid ""
"All options in a group share the same translation function. Libraries which "
"need to parse commandline options are expected to provide a function for "
"getting a <structname>GOptionGroup</structname> holding their options, which "
"the application can then add to its #GOptionContext."
msgstr ""

#. used by: GOptionFlags:
#: goption.h:58:2
msgid ""
"@G_OPTION_FLAG_HIDDEN: The option doesn't appear in <option>--help</option> "
"output."
msgstr ""

#. used by: GOptionFlags:
#: goption.h:60:2
msgid ""
"@G_OPTION_FLAG_IN_MAIN: The option appears in the main section of the "
"<option>--help</option> output, even if it is defined in a group."
msgstr ""

#. used by: GOptionFlags:
#: goption.h:62:2
msgid ""
"@G_OPTION_FLAG_REVERSE: For options of the %G_OPTION_ARG_NONE kind, this "
"flag indicates that the sense of the option is reversed."
msgstr ""

#. used by: GOptionFlags:
#: goption.h:64:3
msgid ""
"@G_OPTION_FLAG_NO_ARG: For options of the %G_OPTION_ARG_CALLBACK kind, this "
"flag indicates that the callback does not take any argument (like a "
"%G_OPTION_ARG_NONE option). Since 2.8"
msgstr ""

#. used by: GOptionFlags:
#: goption.h:67:3
msgid ""
"@G_OPTION_FLAG_FILENAME: For options of the %G_OPTION_ARG_CALLBACK kind, "
"this flag indicates that the argument should be passed to the callback in "
"the GLib filename encoding rather than UTF-8. Since 2.8"
msgstr ""

#. used by: GOptionFlags:
#: goption.h:70:3
msgid ""
"@G_OPTION_FLAG_OPTIONAL_ARG: For options of the %G_OPTION_ARG_CALLBACK kind, "
"this flag indicates that the argument supply is optional. If no argument is "
"given then data of %GOptionParseFunc will be set to NULL. Since 2.8"
msgstr ""

#. used by: GOptionFlags:
#: goption.h:73:6
msgid ""
"@G_OPTION_FLAG_NOALIAS: This flag turns off the automatic conflict "
"resolution which prefixes long option names with <literal>groupname-</"
"literal> if there is a conflict. This option should only be used in "
"situations where aliasing is necessary to model some legacy commandline "
"interface. It is not safe to use this option, unless all option groups are "
"under your direct control. Since 2.8."
msgstr ""

#. used by: GOptionFlags:
#: goption.h:80:1
msgid "Flags which modify individual options."
msgstr ""

#. used by: GOptionArg:
#: goption.h:95:1
msgid "@G_OPTION_ARG_NONE: No extra argument. This is useful for simple flags."
msgstr ""

#. used by: GOptionArg:
#: goption.h:96:1
msgid "@G_OPTION_ARG_STRING: The option takes a string argument."
msgstr ""

#. used by: GOptionArg:
#: goption.h:97:1
msgid "@G_OPTION_ARG_INT: The option takes an integer argument."
msgstr ""

#. used by: GOptionArg:
#: goption.h:98:2
msgid ""
"@G_OPTION_ARG_CALLBACK: The option provides a callback to parse the extra "
"argument."
msgstr ""
