# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-04-23 10:05-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"

#. #-#-#-#-#  gtree.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_tree_ref:
#. #-#-#-#-#  gtree.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_tree_unref:
#. #-#-#-#-#  gtree.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_tree_destroy:
#. #-#-#-#-#  gtree.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_tree_insert:
#. #-#-#-#-#  gtree.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_tree_replace:
#. #-#-#-#-#  gtree.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_tree_remove:
#. #-#-#-#-#  gtree.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_tree_steal:
#. #-#-#-#-#  gtree.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_tree_lookup:
#. #-#-#-#-#  gtree.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_tree_lookup_extended:
#. #-#-#-#-#  gtree.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_tree_foreach:
#. #-#-#-#-#  gtree.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_tree_traverse:
#. #-#-#-#-#  gtree.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_tree_search:
#. #-#-#-#-#  gtree.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_tree_height:
#. #-#-#-#-#  gtree.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_tree_nnodes:
#: gtree.c:1006:1 gtree.c:1038:1 gtree.c:1075:1 gtree.c:304:1 gtree.c:325:1
#: gtree.c:350:1 gtree.c:370:1 gtree.c:399:1 gtree.c:558:1 gtree.c:590:1
#: gtree.c:826:1 gtree.c:851:1 gtree.c:889:1 gtree.c:928:1
msgid "@tree: a #GTree."
msgstr ""

#. used by: g_tree_search:
#: gtree.c:1007:1
msgid "@search_func: a function used to search the #GTree."
msgstr ""

#. used by: g_tree_search:
#: gtree.c:1008:2
msgid ""
"@user_data: the data passed as the second argument to the @search_func "
"function."
msgstr ""

#. used by: g_tree_search:
#: gtree.c:1011:1
msgid "Searches a #GTree using @search_func."
msgstr ""

#. used by: g_tree_search:
#: gtree.c:1013:6
msgid ""
"The @search_func is called with a pointer to the key of a key/value pair in "
"the tree, and the passed in @user_data. If @search_func returns 0 for a key/"
"value pair, then g_tree_search_func() will return the value of that pair. If "
"@search_func returns -1,  searching will proceed among the key/value pairs "
"that have a smaller key; if @search_func returns 1, searching will proceed "
"among the key/value pairs that have a larger key."
msgstr ""

#. used by: g_tree_search:
#: gtree.c:1020:2
msgid ""
"Return value: the value corresponding to the found key, or %NULL if the key "
"was not found."
msgstr ""

#. used by: g_tree_height:
#: gtree.c:1040:1
msgid "Gets the height of a #GTree."
msgstr ""

#. used by: g_tree_height:
#: gtree.c:1042:3
msgid ""
"If the #GTree contains no nodes, the height is 0. If the #GTree contains "
"only one root node the height is 1. If the root node has children the height "
"is 2, etc."
msgstr ""

#. used by: g_tree_height:
#: gtree.c:1046:1
msgid "Return value: the height of the #GTree."
msgstr ""

#. used by: g_tree_nnodes:
#: gtree.c:1077:1
msgid "Gets the number of nodes in a #GTree."
msgstr ""

#. used by: g_tree_nnodes:
#: gtree.c:1079:1
msgid "Return value: the number of nodes in the #GTree."
msgstr ""

#. used by: g_tree_new:
#: gtree.c:153:5
msgid ""
"@key_compare_func: the function used to order the nodes in the #GTree. It "
"should return values similar to the standard strcmp() function - 0 if the "
"two arguments are equal, a negative value if the first argument comes before "
"the second, or a positive value if the first argument comes after the second."
msgstr ""

#. used by: g_tree_new:
#: gtree.c:159:1
msgid "Creates a new #GTree."
msgstr ""

#. #-#-#-#-#  gtree.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_tree_new:
#. #-#-#-#-#  gtree.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_tree_new_with_data:
#. #-#-#-#-#  gtree.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_tree_new_full:
#: gtree.c:161:1 gtree.c:180:1 gtree.c:207:1
msgid "Return value: a new #GTree."
msgstr ""

#. #-#-#-#-#  gtree.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_tree_new_with_data:
#. #-#-#-#-#  gtree.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_tree_new_full:
#: gtree.c:174:1 gtree.c:194:1
msgid "@key_compare_func: qsort()-style comparison function."
msgstr ""

#. #-#-#-#-#  gtree.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_tree_new_with_data:
#. #-#-#-#-#  gtree.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_tree_new_full:
#: gtree.c:175:1 gtree.c:195:1
msgid "@key_compare_data: data to pass to comparison function."
msgstr ""

#. used by: g_tree_new_with_data:
#: gtree.c:177:2
msgid ""
"Creates a new #GTree with a comparison function that accepts user data. See "
"g_tree_new() for more details."
msgstr ""

#. used by: g_tree_new_full:
#: gtree.c:196:3
msgid ""
"@key_destroy_func: a function to free the memory allocated for the key used "
"when removing the entry from the #GTree or %NULL if you don't want to supply "
"such a function."
msgstr ""

#. used by: g_tree_new_full:
#: gtree.c:199:3
msgid ""
"@value_destroy_func: a function to free the memory allocated for the value "
"used when removing the entry from the #GTree or %NULL if you don't want to "
"supply such a function."
msgstr ""

#. used by: g_tree_new_full:
#: gtree.c:203:3
msgid ""
"Creates a new #GTree like g_tree_new() and allows to specify functions to "
"free the memory allocated for the key and value that get called when "
"removing the entry from the #GTree."
msgstr ""

#. used by: g_tree_ref:
#: gtree.c:306:2
msgid ""
"Increments the reference count of @tree by one.  It is safe to call this "
"function from any thread."
msgstr ""

#. used by: g_tree_ref:
#: gtree.c:309:1
msgid "Return value: the passed in #GTree."
msgstr ""

#. #-#-#-#-#  gtree.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_tree_ref:
#. #-#-#-#-#  gtree.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_tree_unref:
#: gtree.c:311:1 gtree.c:334:1
msgid "Since: 2.22"
msgstr ""

#. used by: g_tree_unref:
#: gtree.c:327:4
msgid ""
"Decrements the reference count of @tree by one.  If the reference count "
"drops to 0, all keys and values will be destroyed (if destroy functions were "
"specified) and all memory allocated by @tree will be released."
msgstr ""

#. used by: g_tree_unref:
#: gtree.c:332:1
msgid "It is safe to call this function from any thread."
msgstr ""

#. used by: g_tree_destroy:
#: gtree.c:352:6
msgid ""
"Removes all keys and values from the #GTree and decreases its reference "
"count by one. If keys and/or values are dynamically allocated, you should "
"either free them first or create the #GTree using g_tree_new_full().  In the "
"latter case the destroy functions you supplied will be called on all keys "
"and values before destroying the #GTree."
msgstr ""

#. #-#-#-#-#  gtree.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_tree_insert:
#. #-#-#-#-#  gtree.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_tree_replace:
#: gtree.c:371:1 gtree.c:400:1
msgid "@key: the key to insert."
msgstr ""

#. #-#-#-#-#  gtree.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_tree_insert:
#. #-#-#-#-#  gtree.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_tree_replace:
#. #-#-#-#-#  gtree.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GTraverseFunc:
#: gtree.c:372:1 gtree.c:401:1 gtree.c:945:1
msgid "@value: the value corresponding to the key."
msgstr ""

#. used by: g_tree_insert:
#: gtree.c:374:5
msgid ""
"Inserts a key/value pair into a #GTree. If the given key already exists in "
"the #GTree its corresponding value is set to the new value. If you supplied "
"a value_destroy_func when creating the #GTree, the old value is freed using "
"that function. If you supplied a @key_destroy_func when creating the #GTree, "
"the passed key is freed using that function."
msgstr ""

#. #-#-#-#-#  gtree.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_tree_insert:
#. #-#-#-#-#  gtree.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_tree_replace:
#: gtree.c:380:2 gtree.c:410:2
msgid ""
"The tree is automatically 'balanced' as new key/value pairs are added, so "
"that the distance from the root to every leaf is as small as possible."
msgstr ""

#. used by: SECTION:trees-binary
#: gtree.c:40:1
msgid "@title: Balanced Binary Trees"
msgstr ""

#. used by: g_tree_replace:
#: gtree.c:403:6
msgid ""
"Inserts a new key and value into a #GTree similar to g_tree_insert(). The "
"difference is that if the key already exists in the #GTree, it gets replaced "
"by the new key. If you supplied a @value_destroy_func when creating the "
"#GTree, the old value is freed using that function. If you supplied a "
"@key_destroy_func when creating the #GTree, the old key is freed using that "
"function."
msgstr ""

#. used by: SECTION:trees-binary
#: gtree.c:41:2
msgid ""
"@short_description: a sorted collection of key/value pairs optimized for "
"searching and traversing in order"
msgstr ""

#. used by: SECTION:trees-binary
#: gtree.c:44:3
msgid ""
"The #GTree structure and its associated functions provide a sorted "
"collection of key/value pairs optimized for searching and traversing in "
"order."
msgstr ""

#. used by: SECTION:trees-binary
#: gtree.c:48:1
msgid "To create a new #GTree use g_tree_new()."
msgstr ""

#. used by: SECTION:trees-binary
#: gtree.c:50:1
msgid "To insert a key/value pair into a #GTree use g_tree_insert()."
msgstr ""

#. used by: SECTION:trees-binary
#: gtree.c:52:2
msgid ""
"To lookup the value corresponding to a given key, use g_tree_lookup() and "
"g_tree_lookup_extended()."
msgstr ""

#. used by: SECTION:trees-binary
#: gtree.c:55:2
msgid ""
"To find out the number of nodes in a #GTree, use g_tree_nnodes(). To get the "
"height of a #GTree, use g_tree_height()."
msgstr ""

#. #-#-#-#-#  gtree.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_tree_remove:
#. #-#-#-#-#  gtree.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_tree_steal:
#: gtree.c:559:1 gtree.c:591:1
msgid "@key: the key to remove."
msgstr ""

#. used by: g_tree_remove:
#: gtree.c:561:1
msgid "Removes a key/value pair from a #GTree."
msgstr ""

#. used by: g_tree_remove:
#: gtree.c:563:4
msgid ""
"If the #GTree was created using g_tree_new_full(), the key and value are "
"freed using the supplied destroy functions, otherwise you have to make sure "
"that any dynamically allocated values are freed yourself. If the key does "
"not exist in the #GTree, the function does nothing."
msgstr ""

#. #-#-#-#-#  gtree.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_tree_remove:
#. #-#-#-#-#  gtree.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_tree_steal:
#: gtree.c:568:2 gtree.c:598:2
msgid ""
"Returns: %TRUE if the key was found (prior to 2.8, this function returned "
"nothing)"
msgstr ""

#. used by: SECTION:trees-binary
#: gtree.c:58:2
msgid ""
"To traverse a #GTree, calling a function for each node visited in the "
"traversal, use g_tree_foreach()."
msgstr ""

#. used by: g_tree_steal:
#: gtree.c:593:2
msgid ""
"Removes a key and its associated value from a #GTree without calling the key "
"and value destroy functions."
msgstr ""

#. used by: g_tree_steal:
#: gtree.c:596:1
msgid "If the key does not exist in the #GTree, the function does nothing."
msgstr ""

#. used by: SECTION:trees-binary
#: gtree.c:61:1
msgid "To remove a key/value pair use g_tree_remove()."
msgstr ""

#. used by: SECTION:trees-binary
#: gtree.c:63:1
msgid "To destroy a #GTree, use g_tree_destroy()."
msgstr ""

#. used by: GTree:
#: gtree.c:75:4
msgid ""
"The <structname>GTree</structname> struct is an opaque data structure "
"representing a <link linkend=\"glib-Balanced-Binary-Trees\">Balanced Binary "
"Tree</link>. It should be accessed only by using the following functions."
msgstr ""

#. used by: g_tree_lookup:
#: gtree.c:827:1
msgid "@key: the key to look up."
msgstr ""

#. used by: g_tree_lookup:
#: gtree.c:829:3
msgid ""
"Gets the value corresponding to the given key. Since a #GTree is "
"automatically balanced as key/value pairs are added, key lookup is very fast."
msgstr ""

#. used by: g_tree_lookup:
#: gtree.c:833:2
msgid ""
"Return value: the value corresponding to the key, or %NULL if the key was "
"not found."
msgstr ""

#. used by: g_tree_lookup_extended:
#: gtree.c:852:1
msgid "@lookup_key: the key to look up."
msgstr ""

#. used by: g_tree_lookup_extended:
#: gtree.c:853:1
msgid "@orig_key: returns the original key."
msgstr ""

#. used by: g_tree_lookup_extended:
#: gtree.c:854:1
msgid "@value: returns the value associated with the key."
msgstr ""

#. used by: g_tree_lookup_extended:
#: gtree.c:856:4
msgid ""
"Looks up a key in the #GTree, returning the original key and the associated "
"value and a #gboolean which is %TRUE if the key was found. This is useful if "
"you need to free the memory allocated for the original key, for example "
"before calling g_tree_remove()."
msgstr ""

#. used by: g_tree_lookup_extended:
#: gtree.c:861:1
msgid "Return value: %TRUE if the key was found in the #GTree."
msgstr ""

#. used by: g_tree_foreach:
#: gtree.c:890:2
msgid ""
"@func: the function to call for each node visited. If this function returns "
"%TRUE, the traversal is stopped."
msgstr ""

#. #-#-#-#-#  gtree.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_tree_foreach:
#. #-#-#-#-#  gtree.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_tree_traverse:
#: gtree.c:892:1 gtree.c:933:1
msgid "@user_data: user data to pass to the function."
msgstr ""

#. used by: g_tree_foreach:
#: gtree.c:894:3
msgid ""
"Calls the given function for each of the key/value pairs in the #GTree. The "
"function is passed the key and value of each pair, and the given @data "
"parameter. The tree is traversed in sorted order."
msgstr ""

#. used by: g_tree_foreach:
#: gtree.c:898:4
msgid ""
"The tree may not be modified while iterating over it (you can't add/remove "
"items). To remove all items matching a predicate, you need to add each item "
"to a list in your #GTraverseFunc as you walk over the tree, then walk the "
"list and remove each item."
msgstr ""

#. used by: g_tree_traverse:
#: gtree.c:929:2
msgid ""
"@traverse_func: the function to call for each node visited. If this function "
"returns %TRUE, the traversal is stopped."
msgstr ""

#. used by: g_tree_traverse:
#: gtree.c:931:2
msgid ""
"@traverse_type: the order in which nodes are visited, one of %G_IN_ORDER, "
"%G_PRE_ORDER and %G_POST_ORDER."
msgstr ""

#. used by: g_tree_traverse:
#: gtree.c:935:1
msgid "Calls the given function for each node in the #GTree."
msgstr ""

#. used by: g_tree_traverse:
#: gtree.c:937:4
msgid ""
"Deprecated:2.2: The order of a balanced tree is somewhat arbitrary. If you "
"just want to visit all nodes in sorted order, use g_tree_foreach() instead. "
"If you really need to visit nodes in a different order, consider using an "
"<link linkend=\"glib-N-ary-Trees\">N-ary Tree</link>."
msgstr ""

#. used by: GTraverseFunc:
#: gtree.c:944:1
msgid "@key: a key of a #GTree node."
msgstr ""

#. used by: GTraverseFunc:
#: gtree.c:946:1
msgid "@data: user data passed to g_tree_traverse()."
msgstr ""

#. used by: GTraverseFunc:
#: gtree.c:947:1
msgid "@Returns: %TRUE to stop the traversal."
msgstr ""

#. used by: GTraverseFunc:
#: gtree.c:949:4
msgid ""
"Specifies the type of function passed to g_tree_traverse(). It is passed the "
"key and value of each node, together with the @user_data parameter passed to "
"g_tree_traverse(). If the function returns %TRUE, the traversal is stopped."
msgstr ""

#. used by: GTraverseType:
#: gtree.c:956:4
msgid ""
"@G_IN_ORDER: vists a node's left child first, then the node itself, then its "
"right child. This is the one to use if you want the output sorted according "
"to the compare function."
msgstr ""

#. used by: GTraverseType:
#: gtree.c:960:1
msgid "@G_PRE_ORDER: visits a node, then its children."
msgstr ""

#. used by: GTraverseType:
#: gtree.c:961:1
msgid "@G_POST_ORDER: visits the node's children, then the node itself."
msgstr ""

#. used by: GTraverseType:
#: gtree.c:962:7
msgid ""
"@G_LEVEL_ORDER: is not implemented for <link linkend=\"glib-Balanced-Binary-"
"Trees\">Balanced Binary Trees</link>.  For <link linkend=\"glib-N-ary-Trees"
"\">N-ary Trees</link>, it vists the root node first, then its children, then "
"its grandchildren, and so on. Note that this is less efficient than the "
"other orders."
msgstr ""

#. used by: GTraverseType:
#: gtree.c:970:2
msgid ""
"Specifies the type of traveral performed by g_tree_traverse(), "
"g_node_traverse() and g_node_find()."
msgstr ""
