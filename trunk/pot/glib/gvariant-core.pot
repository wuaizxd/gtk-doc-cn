# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-04-17 15:16-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"

#. used by: GVariant:
#: gvariant-core.c:49:2
msgid ""
"#GVariant is an opaque data structure and can only be accessed using the "
"following functions."
msgstr ""

#. #-#-#-#-#  gvariant-core.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GVariant:
#. #-#-#-#-#  gvariant-core.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_variant_unref:
#. #-#-#-#-#  gvariant-core.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_variant_ref:
#. #-#-#-#-#  gvariant-core.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_variant_ref_sink:
#. #-#-#-#-#  gvariant-core.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_variant_get_size:
#. #-#-#-#-#  gvariant-core.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_variant_get_data:
#. #-#-#-#-#  gvariant-core.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_variant_n_children:
#. #-#-#-#-#  gvariant-core.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_variant_get_child_value:
#. #-#-#-#-#  gvariant-core.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_variant_store:
#. #-#-#-#-#  gvariant-core.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_variant_is_normal_form:
#: gvariant-core.c:52:1 gvariant-core.c:612:1 gvariant-core.c:643:1
#: gvariant-core.c:681:1 gvariant-core.c:739:1 gvariant-core.c:772:1
#: gvariant-core.c:801:1 gvariant-core.c:844:1 gvariant-core.c:901:1
#: gvariant-core.c:938:1
msgid "Since: 2.24"
msgstr ""

#. #-#-#-#-#  gvariant-core.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_variant_unref:
#. #-#-#-#-#  gvariant-core.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_variant_ref:
#. #-#-#-#-#  gvariant-core.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_variant_ref_sink:
#. #-#-#-#-#  gvariant-core.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_variant_is_floating:
#: gvariant-core.c:607:1 gvariant-core.c:638:1 gvariant-core.c:655:1
#: gvariant-core.c:700:1
msgid "@value: a #GVariant"
msgstr ""

#. used by: g_variant_unref:
#: gvariant-core.c:609:2
msgid ""
"Decreases the reference count of @value.  When its reference count drops to "
"0, the memory used by the variant is freed."
msgstr ""

#. #-#-#-#-#  gvariant-core.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_variant_ref:
#. #-#-#-#-#  gvariant-core.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_variant_ref_sink:
#: gvariant-core.c:639:1 gvariant-core.c:656:1
msgid "@returns: the same @value"
msgstr ""

#. used by: g_variant_ref:
#: gvariant-core.c:641:1
msgid "Increases the reference count of @value."
msgstr ""

#. used by: g_variant_ref_sink:
#: gvariant-core.c:658:3
msgid ""
"#GVariant uses a floating reference count system.  All functions with names "
"starting with <literal>g_variant_new_</literal> return floating references."
msgstr ""

#. used by: g_variant_ref_sink:
#: gvariant-core.c:662:4
msgid ""
"Calling g_variant_ref_sink() on a #GVariant with a floating reference will "
"convert the floating reference into a full reference.  Calling "
"g_variant_ref_sink() on a non-floating #GVariant results in an additional "
"normal reference being added."
msgstr ""

#. used by: g_variant_ref_sink:
#: gvariant-core.c:667:4
msgid ""
"In other words, if the @value is floating, then this call \"assumes ownership"
"\" of the floating reference, converting it to a normal reference.  If the "
"@value is not floating, then this call adds a new normal reference "
"increasing the reference count by one."
msgstr ""

#. used by: g_variant_ref_sink:
#: gvariant-core.c:672:8
msgid ""
"All calls that result in a #GVariant instance being inserted into a "
"container will call g_variant_ref_sink() on the instance.  This means that "
"if the value was just created (and has only its floating reference) then the "
"container will assume sole ownership of the value at that point and the "
"caller will not need to unreference it.  This makes certain common styles of "
"programming much easier while still maintaining normal refcounting semantics "
"in situations where values are not floating."
msgstr ""

#. used by: g_variant_is_floating:
#: gvariant-core.c:701:1
msgid "@returns: whether @value is floating"
msgstr ""

#. used by: g_variant_is_floating:
#: gvariant-core.c:703:1
msgid "Checks whether @value has a floating reference count."
msgstr ""

#. used by: g_variant_is_floating:
#: gvariant-core.c:705:3
msgid ""
"This function should only ever be used to assert that a given variant is or "
"is not floating, or for debug purposes. To acquire a reference to a variant "
"that might be floating, always use g_variant_ref_sink()."
msgstr ""

#. used by: g_variant_is_floating:
#: gvariant-core.c:709:2
msgid ""
"See g_variant_ref_sink() for more information about floating reference "
"counts."
msgstr ""

#. used by: g_variant_is_floating:
#: gvariant-core.c:712:1
msgid "Since: 2.26"
msgstr ""

#. #-#-#-#-#  gvariant-core.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_variant_get_size:
#. #-#-#-#-#  gvariant-core.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_variant_get_data:
#. #-#-#-#-#  gvariant-core.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_variant_is_normal_form:
#: gvariant-core.c:724:1 gvariant-core.c:753:1 gvariant-core.c:924:1
msgid "@value: a #GVariant instance"
msgstr ""

#. used by: g_variant_get_size:
#: gvariant-core.c:725:1
msgid "@returns: the serialised size of @value"
msgstr ""

#. used by: g_variant_get_size:
#: gvariant-core.c:727:2
msgid ""
"Determines the number of bytes that would be required to store @value with "
"g_variant_store()."
msgstr ""

#. used by: g_variant_get_size:
#: gvariant-core.c:730:2
msgid ""
"If @value has a fixed-sized type then this function always returned that "
"fixed size."
msgstr ""

#. used by: g_variant_get_size:
#: gvariant-core.c:733:5
msgid ""
"In the case that @value is already in serialised form or the size has "
"already been calculated (ie: this function has been called before) then this "
"function is O(1).  Otherwise, the size is calculated, an operation which is "
"approximately O(n) in the number of values involved."
msgstr ""

#. used by: g_variant_get_data:
#: gvariant-core.c:754:1
msgid "@returns: the serialised form of @value, or %NULL"
msgstr ""

#. used by: g_variant_get_data:
#: gvariant-core.c:756:4
msgid ""
"Returns a pointer to the serialised form of a #GVariant instance. The "
"returned data may not be in fully-normalised form if read from an untrusted "
"source.  The returned data must not be freed; it remains valid for as long "
"as @value exists."
msgstr ""

#. used by: g_variant_get_data:
#: gvariant-core.c:761:5
msgid ""
"If @value is a fixed-sized value that was deserialised from a corrupted "
"serialised container then %NULL may be returned.  In this case, the proper "
"thing to do is typically to use the appropriate number of nul bytes in place "
"of @value.  If @value is not fixed-sized then %NULL is never returned."
msgstr ""

#. used by: g_variant_get_data:
#: gvariant-core.c:767:4
msgid ""
"In the case that @value is already in serialised form, this function is O"
"(1).  If the value is not already in serialised form, serialisation occurs "
"implicitly and is approximately O(n) in the size of the result."
msgstr ""

#. #-#-#-#-#  gvariant-core.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_variant_n_children:
#. #-#-#-#-#  gvariant-core.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_variant_get_child_value:
#: gvariant-core.c:786:1 gvariant-core.c:830:1
msgid "@value: a container #GVariant"
msgstr ""

#. used by: g_variant_n_children:
#: gvariant-core.c:787:1
msgid "@returns: the number of children in the container"
msgstr ""

#. used by: g_variant_n_children:
#: gvariant-core.c:789:4
msgid ""
"Determines the number of children in a container #GVariant instance. This "
"includes variants, maybes, arrays, tuples and dictionary entries.  It is an "
"error to call this function on any other type of #GVariant."
msgstr ""

#. used by: g_variant_n_children:
#: gvariant-core.c:794:4
msgid ""
"For variants, the return value is always 1.  For values with maybe types, it "
"is always zero or one.  For arrays, it is the length of the array.  For "
"tuples it is the number of tuple items (which depends only on the type).  "
"For dictionary entries, it is always 2"
msgstr ""

#. #-#-#-#-#  gvariant-core.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_variant_n_children:
#. #-#-#-#-#  gvariant-core.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_variant_get_child_value:
#: gvariant-core.c:799:1 gvariant-core.c:842:1
msgid "This function is O(1)."
msgstr ""

#. used by: g_variant_get_child_value:
#: gvariant-core.c:831:1
msgid "@index_: the index of the child to fetch"
msgstr ""

#. used by: g_variant_get_child_value:
#: gvariant-core.c:832:1
msgid "@returns: the child at the specified index"
msgstr ""

#. used by: g_variant_get_child_value:
#: gvariant-core.c:834:4
msgid ""
"Reads a child item out of a container #GVariant instance.  This includes "
"variants, maybes, arrays, tuples and dictionary entries.  It is an error to "
"call this function on any other type of #GVariant."
msgstr ""

#. used by: g_variant_get_child_value:
#: gvariant-core.c:839:2
msgid ""
"It is an error if @index_ is greater than the number of child items in the "
"container.  See g_variant_n_children()."
msgstr ""

#. used by: g_variant_store:
#: gvariant-core.c:889:1
msgid "@value: the #GVariant to store"
msgstr ""

#. used by: g_variant_store:
#: gvariant-core.c:890:1
msgid "@data: the location to store the serialised data at"
msgstr ""

#. used by: g_variant_store:
#: gvariant-core.c:892:2
msgid ""
"Stores the serialised form of @value at @data.  @data should be large "
"enough.  See g_variant_get_size()."
msgstr ""

#. used by: g_variant_store:
#: gvariant-core.c:895:3
msgid ""
"The stored data is in machine native byte order but may not be in fully-"
"normalised form if read from an untrusted source.  See g_variant_normalise() "
"for a solution."
msgstr ""

#. used by: g_variant_store:
#: gvariant-core.c:899:1
msgid "This function is approximately O(n) in the size of @data."
msgstr ""

#. used by: g_variant_is_normal_form:
#: gvariant-core.c:925:1
msgid "@returns: %TRUE if @value is in normal form"
msgstr ""

#. used by: g_variant_is_normal_form:
#: gvariant-core.c:927:1
msgid "Checks if @value is in normal form."
msgstr ""

#. used by: g_variant_is_normal_form:
#: gvariant-core.c:929:4
msgid ""
"The main reason to do this is to detect if a given chunk of serialised data "
"is in normal form: load the data into a #GVariant using "
"g_variant_create_from_data() and then use this function to check."
msgstr ""

#. used by: g_variant_is_normal_form:
#: gvariant-core.c:934:3
msgid ""
"If @value is found to be in normal form then it will be marked as being "
"trusted.  If the value was already marked as being trusted then this "
"function will immediately return %TRUE."
msgstr ""
