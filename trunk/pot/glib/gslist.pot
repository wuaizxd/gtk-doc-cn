# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-04-14 21:51-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"

# used by: g_slist_next:
#: gslist.c:100:1
msgid "@slist: an element in a #GSList."
msgstr ""

# used by: g_slist_next:
#: gslist.c:101:1
msgid "@Returns: the next element, or %NULL if there are no more elements."
msgstr ""

# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_slist_free:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_slist_append:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_slist_prepend:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_slist_insert:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_slist_remove:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_slist_remove_all:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_slist_remove_link:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_slist_delete_link:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_slist_copy:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_slist_reverse:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_slist_nth:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_slist_nth_data:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_slist_find:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_slist_find_custom:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_slist_position:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_slist_index:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_slist_last:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_slist_length:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_slist_foreach:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_slist_insert_sorted:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_slist_insert_sorted_with_data:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_slist_sort:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_slist_sort_with_data:
#: gslist.c:1024:1 gslist.c:1044:1 gslist.c:158:1 gslist.c:191:1
#: gslist.c:248:1 gslist.c:282:1 gslist.c:416:1 gslist.c:453:1 gslist.c:526:1
#: gslist.c:545:1 gslist.c:566:1 gslist.c:606:1 gslist.c:632:1 gslist.c:652:1
#: gslist.c:672:1 gslist.c:698:1 gslist.c:731:1 gslist.c:760:1 gslist.c:789:1
#: gslist.c:814:1 gslist.c:842:1 gslist.c:917:1 gslist.c:938:1
msgid "@list: a #GSList"
msgstr ""

# used by: g_slist_sort:
#: gslist.c:1025:5
msgid ""
"@compare_func: the comparison function used to sort the #GSList. This "
"function is passed the data from 2 elements of the #GSList and should return "
"0 if they are equal, a negative value if the first element comes before the "
"second, or a positive value if the first element comes after the second."
msgstr ""

# #used by: g_slist_next:
#: gslist.c:103:1
msgid "A convenience macro to get the next element in a #GSList."
msgstr ""

# #used by: g_slist_sort:
#: gslist.c:1031:1
msgid "Sorts a #GSList using the given comparison function."
msgstr ""

# #used by: g_slist_sort:
#: gslist.c:1033:1
msgid "Returns: the start of the sorted #GSList"
msgstr ""

# used by: g_slist_sort_with_data:
#: gslist.c:1045:1
msgid "@compare_func: comparison function"
msgstr ""

# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_slist_insert_sorted_with_data:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_slist_sort_with_data:
#: gslist.c:1046:1 gslist.c:943:1
msgid "@user_data: data to pass to comparison function"
msgstr ""

# #used by: g_slist_sort_with_data:
#: gslist.c:1048:1
msgid ""
"Like g_slist_sort(), but the sort function accepts a user data argument."
msgstr ""

# #used by: g_slist_sort_with_data:
#: gslist.c:1050:1
msgid "Returns: new head of the list"
msgstr ""

# used by: g_slist_push_allocator:
#: gslist.c:109:1
msgid "@dummy: the #GAllocator to use when allocating #GSList elements."
msgstr ""

# #used by: g_slist_push_allocator:
#: gslist.c:111:2
msgid ""
"Sets the allocator to use to allocate #GSList elements. Use "
"g_slist_pop_allocator() to restore the previous allocator."
msgstr ""

# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_slist_push_allocator:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_slist_pop_allocator:
#: gslist.c:114:2 gslist.c:129:2
msgid ""
"Note that this function is not available if GLib has been compiled with "
"<option>--disable-mem-pools</option>"
msgstr ""

# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_slist_push_allocator:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_slist_pop_allocator:
#: gslist.c:117:3 gslist.c:132:3
msgid ""
"Deprecated: 2.10: It does nothing, since #GSList has been converted to the "
"<link linkend=|$_1_$|glib-Memory-Slices|$_1_$|>slice allocator</link>"
msgstr ""

# #used by: g_slist_pop_allocator:
#: gslist.c:126:2
msgid ""
"Restores the previous #GAllocator, used when allocating #GSList elements."
msgstr ""

# used by: g_slist_alloc:
#: gslist.c:144:1
msgid "@Returns: a pointer to the newly-allocated #GSList element."
msgstr ""

# #used by: g_slist_alloc:
#: gslist.c:146:3
msgid ""
"Allocates space for one #GSList element. It is called by the g_slist_append"
"(), g_slist_prepend(), g_slist_insert() and g_slist_insert_sorted() "
"functions and so is rarely used on its own."
msgstr ""

# #used by: g_slist_free:
#: gslist.c:160:2
msgid ""
"Frees all of the memory used by a #GSList. The freed elements are returned "
"to the slice allocator."
msgstr ""

# used by: g_slist_free_1:
#: gslist.c:171:1
msgid "@list: a #GSList element"
msgstr ""

# #used by: g_slist_free_1:
#: gslist.c:173:2
msgid ""
"Frees one #GSList element. It is usually used after g_slist_remove_link()."
msgstr ""

# #used by: g_slist_free1:
#: gslist.c:179:1
msgid "A macro which does the same as g_slist_free_1()."
msgstr ""

# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_slist_free1:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_slist_insert_sorted_with_data:
#: gslist.c:181:1 gslist.c:950:1
msgid "Since: 2.10"
msgstr ""

# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_slist_append:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_slist_prepend:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_slist_insert:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_slist_insert_sorted:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_slist_insert_sorted_with_data:
#: gslist.c:192:1 gslist.c:249:1 gslist.c:283:1 gslist.c:918:1 gslist.c:939:1
msgid "@data: the data for the new element"
msgstr ""

# #used by: g_slist_append:
#: gslist.c:194:1
msgid "Adds a new element on to the end of the list."
msgstr ""

# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_slist_append:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_slist_prepend:
#: gslist.c:196:4 gslist.c:253:4
msgid ""
"<note><para> The return value is the new start of the list, which may have "
"changed, so make sure you store the new value. </para></note>"
msgstr ""

# #used by: g_slist_append:
#: gslist.c:201:6
msgid ""
"<note><para> Note that g_slist_append() has to traverse the entire list to "
"find the end, which is inefficient when adding multiple elements. A common "
"idiom to avoid the inefficiency is to prepend the elements and reverse the "
"list when all elements have been added. </para></note>"
msgstr ""

# #used by: g_slist_append:
#: gslist.c:208:3
msgid ""
"|[ /&ast; Notice that these are initialized to the empty list. &ast;/ GSList "
"*list = NULL, *number_list = NULL;"
msgstr ""

# #used by: g_slist_append:
#: gslist.c:212:3
msgid ""
"/&ast; This is a list of strings. &ast;/ list = g_slist_append (list, |$_1_$|"
"first|$_1_$|); list = g_slist_append (list, |$_1_$|second|$_1_$|);"
msgstr ""

# #used by: g_slist_append:
#: gslist.c:216:4
msgid ""
"/&ast; This is a list of integers. &ast;/ number_list = g_slist_append "
"(number_list, GINT_TO_POINTER (27)); number_list = g_slist_append "
"(number_list, GINT_TO_POINTER (14)); ]|"
msgstr ""

# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_slist_append:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_slist_prepend:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_slist_insert:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_slist_remove:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_slist_insert_sorted:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_slist_insert_sorted_with_data:
#: gslist.c:221:1 gslist.c:265:1 gslist.c:291:1 gslist.c:423:1 gslist.c:926:1
#: gslist.c:948:1
msgid "Returns: the new start of the #GSList"
msgstr ""

# #used by: g_slist_prepend:
#: gslist.c:251:1
msgid "Adds a new element on to the start of the list."
msgstr ""

# #used by: g_slist_prepend:
#: gslist.c:258:6
msgid ""
"|[ /&ast; Notice that it is initialized to the empty list. &ast;/ GSList "
"*list = NULL; list = g_slist_prepend (list, |$_1_$|last|$_1_$|); list = "
"g_slist_prepend (list, |$_1_$|first|$_1_$|); ]|"
msgstr ""

# used by: g_slist_insert:
#: gslist.c:284:4
msgid ""
"@position: the position to insert the element. If this is negative, or is "
"larger than the number of elements in the list, the new element is added on "
"to the end of the list."
msgstr ""

# #used by: g_slist_insert:
#: gslist.c:289:1
msgid "Inserts a new element into the list at the given position."
msgstr ""

# used by: g_slist_insert_before:
#: gslist.c:341:1
msgid "@slist: a #GSList"
msgstr ""

# used by: g_slist_insert_before:
#: gslist.c:342:1
msgid "@sibling: node to insert @data before"
msgstr ""

# used by: g_slist_insert_before:
#: gslist.c:343:1
msgid "@data: data to put in the newly-inserted node"
msgstr ""

# #used by: g_slist_insert_before:
#: gslist.c:345:1
msgid "Inserts a node before @sibling containing @data."
msgstr ""

# #used by: g_slist_insert_before:
#: gslist.c:347:1
msgid "Returns: the new head of the list."
msgstr ""

# used by: SECTION: linked_lists_single
#: gslist.c:38:1
msgid "@title: Singly-Linked Lists"
msgstr ""

# used by: SECTION: linked_lists_single
#: gslist.c:39:3
msgid ""
"@short_description: linked lists containing integer values or pointers to "
"data, limited to iterating over the list in one direction"
msgstr ""

# #used by: g_slist_concat:
#: gslist.c:391:2
msgid ""
"@list1: a #GSList @list2: the #GSList to add to the end of the first #GSList"
msgstr ""

# #used by: g_slist_concat:
#: gslist.c:394:3
msgid ""
"Adds the second #GSList onto the end of the first #GSList. Note that the "
"elements of the second #GSList are not copied. They are used directly."
msgstr ""

# #used by: g_slist_concat:
#: gslist.c:398:1
msgid "Returns: the start of the new #GSList"
msgstr ""

# used by: g_slist_remove:
#: gslist.c:417:1
msgid "@data: the data of the element to remove"
msgstr ""

# #used by: g_slist_remove:
#: gslist.c:419:3
msgid ""
"Removes an element from a #GSList. If two elements contain the same data, "
"only the first is removed. If none of the elements contain the data, the "
"#GSList is unchanged."
msgstr ""

# #used by: SECTION: linked_lists_single
#: gslist.c:43:2
msgid ""
"The #GSList structure and its associated functions provide a standard singly-"
"linked list data structure."
msgstr ""

# used by: g_slist_remove_all:
#: gslist.c:454:1
msgid "@data: data to remove"
msgstr ""

# #used by: g_slist_remove_all:
#: gslist.c:456:4
msgid ""
"Removes all list nodes with data equal to @data. Returns the new head of the "
"list. Contrast with g_slist_remove() which removes only the first node "
"matching the given data."
msgstr ""

# #used by: SECTION: linked_lists_single
#: gslist.c:46:6
msgid ""
"Each element in the list contains a piece of data, together with a pointer "
"which links to the next element in the list. Using this pointer it is "
"possible to move through the list in one direction only (unlike the <link "
"linkend=|$_1_$|glib-Doubly-Linked-lists|$_1_$|>Doubly-Linked Lists</link> "
"which allow movement in both directions)."
msgstr ""

# #used by: g_slist_remove_all:
#: gslist.c:461:1
msgid "Returns: new head of @list"
msgstr ""

# used by: g_slist_remove_link:
#: gslist.c:527:1
msgid "@link_: an element in the #GSList"
msgstr ""

# #used by: g_slist_remove_link:
#: gslist.c:529:4
msgid ""
"Removes an element from a #GSList, without freeing the element. The removed "
"element's next link is set to %NULL, so that it becomes a self-contained "
"list with one element."
msgstr ""

# #used by: SECTION: linked_lists_single
#: gslist.c:53:3
msgid ""
"The data contained in each element can be either integer values, by using "
"one of the <link linkend=|$_1_$|glib-Type-Conversion-Macros|$_1_$|>Type "
"Conversion Macros</link>, or simply pointers to any type of data."
msgstr ""

# #used by: g_slist_remove_link:
#: gslist.c:534:1
msgid "Returns: the new start of the #GSList, without the element"
msgstr ""

# used by: g_slist_delete_link:
#: gslist.c:546:1
msgid "@link_: node to delete"
msgstr ""

# #used by: g_slist_delete_link:
#: gslist.c:548:3
msgid ""
"Removes the node link_ from the list and frees it. Compare this to "
"g_slist_remove_link() which removes the node without freeing it."
msgstr ""

# #used by: g_slist_delete_link:
#: gslist.c:552:1
msgid "Returns: the new head of @list"
msgstr ""

# #used by: g_slist_copy:
#: gslist.c:568:1
msgid "Copies a #GSList."
msgstr ""

# #used by: SECTION: linked_lists_single
#: gslist.c:57:3
msgid ""
"List elements are allocated from the <link linkend=|$_1_$|glib-Memory-Slices|"
"$_1_$|>slice allocator</link>, which is more efficient than allocating "
"elements individually."
msgstr ""

# #used by: g_slist_copy:
#: gslist.c:570:5
msgid ""
"<note><para> Note that this is a |$_1_$|shallow|$_1_$| copy. If the list "
"elements consist of pointers to data, the pointers are copied but the actual "
"data isn't. </para></note>"
msgstr ""

# #used by: g_slist_copy:
#: gslist.c:576:1
msgid "Returns: a copy of @list"
msgstr ""

# #used by: g_slist_reverse:
#: gslist.c:608:1
msgid "Reverses a #GSList."
msgstr ""

# #used by: SECTION: linked_lists_single
#: gslist.c:61:3
msgid ""
"Note that most of the #GSList functions expect to be passed a pointer to the "
"first element in the list. The functions which insert elements return the "
"new start of the list, which may have changed."
msgstr ""

# #used by: g_slist_reverse:
#: gslist.c:610:1
msgid "Returns: the start of the reversed #GSList"
msgstr ""

# used by: g_slist_nth:
#: gslist.c:633:1
msgid "@n: the position of the element, counting from 0"
msgstr ""

# #used by: g_slist_nth:
#: gslist.c:635:1
msgid "Gets the element at the given position in a #GSList."
msgstr ""

# #used by: g_slist_nth:
#: gslist.c:637:2
msgid ""
"Returns: the element, or %NULL if the position is off the end of the #GSList"
msgstr ""

# #used by: SECTION: linked_lists_single
#: gslist.c:65:2
msgid ""
"There is no function to create a #GSList. %NULL is considered to be the "
"empty list so you simply set a #GSList* to %NULL."
msgstr ""

# used by: g_slist_nth_data:
#: gslist.c:653:1
msgid "@n: the position of the element"
msgstr ""

# #used by: g_slist_nth_data:
#: gslist.c:655:1
msgid "Gets the data of the element at the given position."
msgstr ""

# #used by: g_slist_nth_data:
#: gslist.c:657:2
msgid ""
"Returns: the element's data, or %NULL if the position is off the end of the "
"#GSList"
msgstr ""

# used by: g_slist_find:
#: gslist.c:673:1
msgid "@data: the element data to find"
msgstr ""

# #used by: g_slist_find:
#: gslist.c:675:2
msgid "Finds the element in a #GSList which contains the given data."
msgstr ""

# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_slist_find:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_slist_find_custom:
#: gslist.c:678:2 gslist.c:710:1
msgid "Returns: the found #GSList element, or %NULL if it is not found"
msgstr ""

# #used by: SECTION: linked_lists_single
#: gslist.c:68:2
msgid ""
"To add elements, use g_slist_append(), g_slist_prepend(), g_slist_insert() "
"and g_slist_insert_sorted()."
msgstr ""

# used by: g_slist_find_custom:
#: gslist.c:699:1
msgid "@data: user data passed to the function"
msgstr ""

# used by: g_slist_find_custom:
#: gslist.c:700:2
msgid ""
"@func: the function to call for each element. It should return 0 when the "
"desired element is found"
msgstr ""

# #used by: g_slist_find_custom:
#: gslist.c:703:6
msgid ""
"Finds an element in a #GSList, using a supplied function to find the desired "
"element. It iterates over the list, calling the given function which should "
"return 0 when the desired element is found. The function takes two "
"#gconstpointer arguments, the #GSList element's data as the first argument "
"and the given user data."
msgstr ""

# #used by: SECTION: linked_lists_single
#: gslist.c:71:1
msgid "To remove elements, use g_slist_remove()."
msgstr ""

# #used by: SECTION: linked_lists_single
#: gslist.c:73:3
msgid ""
"To find elements in the list use g_slist_last(), g_slist_next(), g_slist_nth"
"(), g_slist_nth_data(), g_slist_find() and g_slist_find_custom()."
msgstr ""

# used by: g_slist_position:
#: gslist.c:732:1
msgid "@llink: an element in the #GSList"
msgstr ""

# #used by: g_slist_position:
#: gslist.c:734:2
msgid ""
"Gets the position of the given element in the #GSList (starting from 0)."
msgstr ""

# #used by: g_slist_position:
#: gslist.c:737:2
msgid ""
"Returns: the position of the element in the #GSList, or -1 if the element is "
"not found"
msgstr ""

# used by: g_slist_index:
#: gslist.c:761:1
msgid "@data: the data to find"
msgstr ""

# #used by: g_slist_index:
#: gslist.c:763:2
msgid ""
"Gets the position of the element containing the given data (starting from 0)."
msgstr ""

# #used by: g_slist_index:
#: gslist.c:766:2
msgid ""
"Returns: the index of the element containing the data, or -1 if the data is "
"not found"
msgstr ""

# #used by: SECTION: linked_lists_single
#: gslist.c:77:2
msgid ""
"To find the index of an element use g_slist_position() and g_slist_index()."
msgstr ""

# #used by: g_slist_last:
#: gslist.c:791:1
msgid "Gets the last element in a #GSList."
msgstr ""

# #used by: g_slist_last:
#: gslist.c:793:3
msgid "<note><para> This function iterates over the whole list. </para></note>"
msgstr ""

# #used by: g_slist_last:
#: gslist.c:797:2
msgid ""
"Returns: the last element in the #GSList, or %NULL if the #GSList has no "
"elements"
msgstr ""

# #used by: SECTION: linked_lists_single
#: gslist.c:80:2
msgid "To call a function for each element in the list use g_slist_foreach()."
msgstr ""

# #used by: g_slist_length:
#: gslist.c:816:1
msgid "Gets the number of elements in a #GSList."
msgstr ""

# #used by: g_slist_length:
#: gslist.c:818:4
msgid ""
"<note><para> This function iterates over the whole list to count its "
"elements. </para></note>"
msgstr ""

# #used by: g_slist_length:
#: gslist.c:823:1
msgid "Returns: the number of elements in the #GSList"
msgstr ""

# #used by: SECTION: linked_lists_single
#: gslist.c:83:1
msgid "To free the entire list, use g_slist_free()."
msgstr ""

# used by: g_slist_foreach:
#: gslist.c:843:1
msgid "@func: the function to call with each element's data"
msgstr ""

# used by: g_slist_foreach:
#: gslist.c:844:1
msgid "@user_data: user data to pass to the function"
msgstr ""

# #used by: g_slist_foreach:
#: gslist.c:846:1
msgid "Calls a function for each element of a #GSList."
msgstr ""

# used by: GSList:
#: gslist.c:88:4
msgid ""
"@data: holds the element's data, which can be a pointer to any kind of data, "
"or any integer value using the <link linkend=|$_1_$|glib-Type-Conversion-"
"Macros|$_1_$|>Type Conversion Macros</link>."
msgstr ""

# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_slist_insert_sorted:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# used by: g_slist_insert_sorted_with_data:
#: gslist.c:919:3 gslist.c:940:3
msgid ""
"@func: the function to compare elements in the list. It should return a "
"number > 0 if the first parameter comes after the second parameter in the "
"sort order."
msgstr ""

# used by: GSList:
#: gslist.c:92:1
msgid "@next: contains the link to the next element in the list."
msgstr ""

# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_slist_insert_sorted:
# #-#-#-#-#  gslist.pot (PACKAGE VERSION)  #-#-#-#-#
# #used by: g_slist_insert_sorted_with_data:
#: gslist.c:923:2 gslist.c:945:2
msgid ""
"Inserts a new element into the list, using the given comparison function to "
"determine its position."
msgstr ""

# #used by: GSList:
#: gslist.c:94:2
msgid "The #GSList struct is used for each element in the singly-linked list."
msgstr ""
