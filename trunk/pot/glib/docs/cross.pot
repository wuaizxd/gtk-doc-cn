msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2011-04-23 10:05+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2
#: cross.sgml:0(None)
msgid "translator-credits"
msgstr ""

#: cross.sgml:104(title)
msgid "glib_cv_have_strlcpy=[yes/no]"
msgstr ""

#: cross.sgml:106(para)
msgid ""
"Whether you have <function>strlcpy()</function> that matches OpenBSD. "
"Defaults to \"no\", which is safe, since GLib uses a built-in version in "
"that case."
msgstr ""

#: cross.sgml:113(title)
msgid "glib_cv_va_val_copy=[yes/no]"
msgstr ""

#: cross.sgml:115(para)
msgid ""
"Whether <type>va_list</type> can be copied as a pointer. If set to \"no\", "
"then <function>memcopy()</function> will be used. Only matters if you don't "
"have <function>va_copy()</function> or <function>__va_copy()</function>. "
"(So, doesn't matter for GCC.) Defaults to \"yes\" which is slightly more "
"common than \"no\"."
msgstr ""

#: cross.sgml:124(title)
msgid "glib_cv_rtldglobal_broken=[yes/no]"
msgstr ""

#: cross.sgml:126(para)
msgid "Whether you have a bug found in OSF/1 v5.0. Defaults to \"no\"."
msgstr ""

#: cross.sgml:13(refname)
msgid "Cross-compiling the GLib Package"
msgstr ""

#: cross.sgml:131(title)
msgid "glib_cv_uscore=[yes/no]"
msgstr ""

#: cross.sgml:133(para)
msgid ""
"Whether an underscore needs to be prepended to symbols when looking them up "
"via <function>dlsym()</function>. Only needs to be set if your system uses "
"<function>dlopen()</function>/<function>dlsym()</function>."
msgstr ""

#: cross.sgml:14(refpurpose)
msgid "How to cross-compile GLib"
msgstr ""

#: cross.sgml:141(title)
msgid "ac_cv_func_posix_getpwuid_r=[yes/no]"
msgstr ""

#: cross.sgml:143(para)
msgid ""
"Whether you have a getpwuid_r function (in your C library, not your thread "
"library) that conforms to the POSIX spec. (Takes a 'struct passwd **' as the "
"final argument)"
msgstr ""

#: cross.sgml:150(title)
msgid "ac_cv_func_nonposix_getpwuid_r=[yes/no]"
msgstr ""

#: cross.sgml:152(para)
msgid ""
"Whether you have some variant of <function>getpwuid_r()</function> that "
"doesn't conform to to the POSIX spec, but GLib might be able to use (or "
"might segfault.) Only needs to be set if "
"<literal>ac_cv_func_posix_getpwuid_r</literal> is not set. It's safest to "
"set this to \"no\"."
msgstr ""

#: cross.sgml:161(title)
msgid "ac_cv_func_posix_getgrgid_r=[yes/no]"
msgstr ""

#: cross.sgml:163(para)
msgid "Whether you have a getgrgid_r function that conforms to the POSIX spec."
msgstr ""

#: cross.sgml:169(title)
msgid "glib_cv_use_pid_surrogate=[yes/no]"
msgstr ""

#: cross.sgml:171(para)
msgid ""
"Whether to use a <function>setpriority()</function> on the PID of the thread "
"as a method for setting the priority of threads. This only needs to be set "
"when using POSIX threads."
msgstr ""

#: cross.sgml:178(title)
msgid "ac_cv_func_printf_unix98=[yes/no]"
msgstr ""

#: cross.sgml:180(para)
msgid ""
"Whether your <function>printf()</function> family supports Unix98 style "
"<literal>%N$</literal> positional parameters. Defaults to \"no\"."
msgstr ""

#: cross.sgml:187(title)
msgid "ac_cv_func_vsnprintf_c99=[yes/no]"
msgstr ""

#: cross.sgml:189(para)
msgid ""
"Whether you have a <function>vsnprintf()</function> with C99 semantics. (C99 "
"semantics means returning the number of bytes that would have been written "
"had the output buffer had enough space.) Defaults to \"no\"."
msgstr ""

#: cross.sgml:20(title)
msgid "Building the Library for a different architecture"
msgstr ""

#: cross.sgml:21(para)
msgid ""
"Cross-compilation is the process of compiling a program or library on a "
"different architecture or operating system then it will be run upon. GLib is "
"slightly more difficult to cross-compile than many packages because much of "
"GLib is about hiding differences between different systems."
msgstr ""

#: cross.sgml:28(para)
msgid ""
"These notes cover things specific to cross-compiling GLib; for general "
"information about cross-compilation, see the <application>autoconf</"
"application> info pages."
msgstr ""

#: cross.sgml:33(para)
msgid ""
"GLib tries to detect as much information as possible about the target system "
"by compiling and linking programs without actually running anything; "
"however, some information GLib needs is not available this way. This "
"information needs to be provided to the configure script via a \"cache file"
"\" or by setting the cache variables in your environment."
msgstr ""

#: cross.sgml:41(para)
msgid ""
"As an example of using a cache file, to cross compile for the \"MingW32\" "
"Win32 runtine environment on a Linux system, create a file 'win32.cache' "
"with the following contents:"
msgstr ""

#: cross.sgml:46(programlisting)
#, no-wrap
msgid ""
" \n"
"glib_cv_long_long_format=I64\n"
"glib_cv_stack_grows=no\n"
"      "
msgstr ""

#: cross.sgml:50(para)
msgid "Then execute the following commands:"
msgstr ""

#: cross.sgml:53(programlisting)
#, no-wrap
msgid ""
"\n"
"PATH=/path/to/mingw32-compiler/bin:$PATH\n"
"chmod a-w win32.cache   # prevent configure from changing it\n"
"./configure --cache-file=win32.cache --host=mingw32\n"
"      "
msgstr ""

#: cross.sgml:58(para)
msgid ""
"The complete list of cache file variables follows. Most of these won't need "
"to be set in most cases."
msgstr ""

#: cross.sgml:64(title)
msgid "Cache file variables"
msgstr ""

#: cross.sgml:66(title)
msgid "glib_cv_long_long_format=[ll/q/I64]"
msgstr ""

#: cross.sgml:68(para)
msgid ""
"Format used by <function>printf()</function> and <function>scanf()</"
"function> for 64 bit integers. \"ll\" is the C99 standard, and what is used "
"by the 'trio' library that GLib builds if your <function>printf()</function> "
"is insufficiently capable. Doesn't need to be set if you are compiling using "
"trio."
msgstr ""

#: cross.sgml:7(refentrytitle)
msgid "Cross-compiling the GLib package"
msgstr ""

#: cross.sgml:78(title)
msgid "glib_cv_stack_grows=[yes/no]"
msgstr ""

#: cross.sgml:8(manvolnum)
msgid "3"
msgstr ""

#: cross.sgml:80(para)
msgid ""
"Whether the stack grows up or down. Most places will want \"no\", A few "
"architectures, such as PA-RISC need \"yes\"."
msgstr ""

#: cross.sgml:86(title)
msgid "glib_cv_working_bcopy=[yes/no]"
msgstr ""

#: cross.sgml:88(para)
msgid ""
"Whether your <function>bcopy()</function> can handle overlapping copies. "
"Only needs to be set if you don't have <function>memmove()</function>. (Very "
"unlikely)"
msgstr ""

#: cross.sgml:9(refmiscinfo)
msgid "GLib Library"
msgstr ""

#: cross.sgml:95(title)
msgid "glib_cv_sane_realloc=[yes/np]"
msgstr ""

#: cross.sgml:97(para)
msgid ""
"Whether your <function>realloc()</function> conforms to ANSI C and can "
"handle <literal>NULL</literal> as the first argument. Defaults to \"yes\" "
"and probably doesn't need to be set."
msgstr ""
