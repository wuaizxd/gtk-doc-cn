<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
]>
<refentry id="gtk-running">
<refmeta>
<refentrytitle>运行 GTK+ 应用程序</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GTK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>运行 GTK+ 应用程序</refname>
<refpurpose>
如何运行并调试您的 GTK+ 应用程序
</refpurpose>
</refnamediv>

<refsect1>
<title>运行并调试GTK+应用程序</title>

<refsect2>
<title>通用命令行选项</title>

<para>
所有 GTK+ 应用程序支持一些标准命令行选项。
它们被 gtk_init() 从 <literal>argv</literal>中移除。
模块可以解析并进一步移除选项。
<link linkend="x11-cmdline">X11</link>和<link linkend="win32-cmdline">Windows</link> GDK后端解析一些附加命令行选项。
</para>

<formalpara>
<title><systemitem>--gtk-module <replaceable>模块</replaceable></systemitem></title>

<para>
载入附加组件的列表，他们是在<envar>GTK_MODULES</envar> 环境变量中和<literal>gtk-modules</literal>设置中指定的。
</para>
</formalpara>

<formalpara>
<title><systemitem>--g-fatal-warnings</systemitem></title>

<para>
有任何警告，就让 GTK+ 终止。
在调试器里，让程序在第一次警告时停止，这很有用。
如果您的应用程序输出了多个警告。这是在第一次警告发生时最好的启动调试的办法。
</para>
</formalpara>

<formalpara>
<title><systemitem>--gtk-debug <replaceable>选项</replaceable></systemitem></title>

<para>
附加开启<link linkend="GTK-Debug-Options">调试选项</link>的一个列表，它们在 GTK_DEBUG 环境变量中指定。
此选项仅在使用<option>--enable-debug=yes</option>后可用。
</para>
</formalpara>

<formalpara>
<title><systemitem>--gtk-no-debug <replaceable>选项</replaceable></systemitem></title>

<para>
关闭<link linkend="GTK-Debug-Options">调试选项</link>的列表。
此选项仅在使用<option>--enable-debug=yes</option>后可用。
</para>
</formalpara>

<para>
以下选项由 GDK 使用，不是 GTK+，但是兼顾完整我们在这里列出它们。
</para>

<formalpara>
<title><systemitem>--class <replaceable>类</replaceable></systemitem></title>

<para>
置程序类；参见 gdk_set_program_class()。
</para>
</formalpara>

<formalpara>
<title><systemitem>--name <replaceable>名称</replaceable></systemitem></title>

<para>
置程序名称。
</para>
</formalpara>

<formalpara>
<title><systemitem>--gdk-debug <replaceable>选项</replaceable></systemitem></title>

<para>
要附加开启的<link linkend="GDK-Debug-Options">调试选项</link>的列表指定在 <envar>GDK_DEBUG</envar>环境变量中。
此选项仅在使用<option>--enable-debug=yes</option>后可用。
</para>
</formalpara>

<formalpara>
<title><systemitem>--gdk-no-debug <replaceable>选项</replaceable></systemitem></title>

<para>
要关闭的<link linkend="GDK-Debug-Options">调试选项</link>的列表。此选项仅在使用<option>--enable-debug=yes</option>后可用。
</para>
</formalpara>

</refsect2>

<refsect2>
<title>环境变量</title>

<para>
GTK+ 检查一些附加标准环境变量像<envar>LANG</envar>、<envar>PATH</envar>、<envar>HOME</envar>或<envar>DISPLAY</envar>。
主要是为了确定路径查找某些文件。
<link linkend="x11-envar">X11</link>、<link linkend="win32-envar">视窗</link>和<link linkend="fb-envar">帧缓冲</link> GDK后端使用一些附加环境变量。
</para>

<formalpara id="GTK-Debug-Options">
  <title><envar>GTK_DEBUG</envar></title>

  <para>
    如果GTK+ 用<option>--enable-debug=yes</option>配置过，那这个变量可以设置为调试选项的列表，让GTK+输出不同类型的调试信息。
  <variablelist>
    <varlistentry>
      <term>misc</term>
      <listitem><para>杂项信息</para></listitem>
    </varlistentry>
    <varlistentry>
      <term>plugsocket</term>
      <listitem><para>跨进程嵌入</para></listitem>
    </varlistentry>
    <varlistentry>
      <term>text</term>
      <listitem><para>文本控件内部</para></listitem>
    </varlistentry>
    <varlistentry>
      <term>tree</term>
      <listitem><para>树空间内核</para></listitem>
    </varlistentry>
    <varlistentry>
      <term>updates</term>
      <listitem><para>关于窗口更新的可视反馈</para></listitem>
    </varlistentry>
    <varlistentry>
      <term>keybindings</term>
      <listitem><para>键绑定</para></listitem>
    </varlistentry>
    <varlistentry>
      <term>multihead</term>
      <listitem><para>在多显示上工作</para></listitem>
    </varlistentry>
    <varlistentry>
      <term>modules</term>
      <listitem><para>组件载入</para></listitem>
    </varlistentry>
    <varlistentry>
      <term>geometry</term>
      <listitem><para>大小分配</para></listitem>
    </varlistentry>
    <varlistentry>
      <term>icontheme</term>
      <listitem><para>图标主题</para></listitem>
    </varlistentry>
    <varlistentry>
      <term>printing</term>
      <listitem><para>打印支持</para></listitem>
    </varlistentry>
    <varlistentry>
      <term>builder</term>
      <listitem><para>GtkBuilder支持</para></listitem>
    </varlistentry>

  </variablelist>
    <literal>all</literal>指定的值可以用来开启所有调试选项。
  </para>
</formalpara>

<formalpara>
  <title><envar>GTK_MODULES</envar></title>

  <para>
    要载入模块的列表。注意GTK+也允许通过一个命令行选项（<option>--gtk-module</option>）和<literal>gtk-modules</literal>设置指定要载入的模块。
  </para>
  <warning>
    注意这个环境变量也被 GTK+ 2.X 读取，它可能没有用于载入的相同模块集可用。
  </warning>
</formalpara>

<formalpara id="gtk-path">
  <title><envar>GTK_PATH</envar></title>

  <para>
        指定搜索目录列表，GTK+ 会在这里寻找如<envar>GTK_MODULES</envar>指定的模块、主题引擎、输入法模块、文件系统后端和打印后端等的动态载入模块。
如果给予的是绝对路径名，GTK+ 会直接载入。
否则 GTK+ 依次经过<envar>GTK_PATH</envar>中指定的、其次是用户主目录中<filename>.gtk-3.0</filename>中指定的、再次是系统默认目录<filename><replaceable>libdir</replaceable>/gtk-3.0/modules</filename>。
（如果已定义<envar>GTK_EXE_PREFIX</envar>，<replaceable>libdir</replaceable>将为<filename>$GTK_EXE_PREFIX/lib</filename>。
否则当 GTK+ 被配置，就是指定的 libdir ，通常是<filename>/usr/lib</filename>或<filename>/usr/local/lib</filename>。）
遍历在此列表中的目录，GTK+ 实际在一个子目录 “<filename><replaceable>目录</replaceable>/<replaceable>版本</replaceable>/<replaceable>主机</replaceable>/<replaceable>类型</replaceable></filename>” 中察看，
<replaceable>版本</replaceable>是 GTK+ 的版本（使用<literal>pkg-config --variable=gtk_binary_version gtk+-3.0</literal>可以看到），
<replaceable>主机</replaceable>是GTK+编译时的架构。
（使用<literal>pkg-config --variable=gtk_host gtk+-3.0</literal>可以看到），<replaceable>类型</replaceable>是一个具体到模块类型的目录。目前它可以是 <literal>modules</literal>、 <literal>engines</literal>、
<literal>immodules</literal>、 <literal>filesystems</literal>或   <literal>printbackends</literal>，对应于上面提到的模块的类型。
任何<replaceable>版本</replaceable>、<replaceable>主机</replaceable>或是两者都可以被省略。
GTK+ 察看第一个最具体的目录而后是有较少组件的目录。GTK_PATH 的组件在 UNIX/Linux 由 ‘:’ 分隔，在视窗上是 ‘;’。
  </para>
  <warning>
    注意此环境变量也被GTK+ 2.X 读取，使它不适合用于设置它系统范围（或会话范围），
这会造成 GTK+ 2.x 程序和 GTK+ 3 程序察看互不兼容的模块。
  </warning>
</formalpara>

<formalpara>
  <title><envar>GTK_IM_MODULE</envar></title>

  <para>
    使用从locale中确定的、在首选项中指定的一个输入法模块。
如果它没有被设置而且你在一个应用了<literal>XSETTINGS</literal>并且有在<literal>Gtk/IMModule</literal>中的一个值的系统上运行，
将使用默认输入法模块。
  </para>
</formalpara>

<formalpara id="gtk-im-module-file">
  <title><envar>GTK_IM_MODULE_FILE</envar></title>

  <para>
    指定要载入的输入法文件列表。
该环境变量的默认值为<filename><replaceable>libdir</replaceable>/gtk-3.0/3.0.0/immodules.cache</filename>
（<replaceable>libdir</replaceable>在这里有正如前面<envar>GTK_PATH</envar>解释的相同含义）。
  </para>
  <para>
    <filename>immodules.cache</filename>文件由<command>gtk-query-immodules-3.0</command>实用程序生成。
  </para>
  <warning>
    注意这个环境变量也被 GTK+ 2.X 读取，使它不适合用于设置它系统范围（或会话范围），
这会造成 GTK+ 2.x 程序和 GTK+ 3 程序察看错误的输入法模块列表。
  </warning>
</formalpara>

<formalpara>
  <title><envar>GTK_EXE_PREFIX</envar></title>

  <para>
    如果设置，当 GTK+ 编译，GTK+ 使用<filename>$GTK_EXE_PREFIX/lib</filename>而不是配置的 libdir。
  </para>
</formalpara>

<formalpara>
  <title><envar>GTK_DATA_PREFIX</envar></title>

  <para>
    	如果设置，当 GTK+ 编译，让 GTK+ 使用<filename>$GTK_DATA_PREFIX</filename>而不是配置的 prefix。
  </para>
</formalpara>

<para>
以下环境变量由 GdkPixbuf、 GDK 和 Pango 使用，并非 GTK+ 本身，但我们为兼顾完整性在这里列出它们。
</para>

<formalpara>
  <title><envar>GDK_PIXBUF_MODULE_FILE</envar></title>

  <para>
    指定 GdkPixbuf 载入器模块要载入的文件列表。
该环境变量覆盖默认值<filename><replaceable>libdir</replaceable>/gtk-3.0/3.0.0/loaders.cache</filename>
（只要GTK+被配置，<replaceable>libdir</replaceable>就是 sysconfdir指定的，通常是<filename>/usr/local/lib</filename>。）
  </para>
  <para>
    <filename>loaders.cache</filename>文件是由<command>gdk-pixbuf-query-loaders</command>实用程序生成的。
  </para>
 </formalpara>

<formalpara id="GDK-Debug-Options">
  <title><envar>GDK_DEBUG</envar></title>

  <para>
  如果GTK+ 用<option>--enable-debug=yes</option>配置过，这个变量可以设置调试选项的列表，让 GDK 输出不同类型的调试信息。
  <variablelist>
    <varlistentry>
      <term>misc</term>
      <listitem><para>杂项信息</para></listitem>
    </varlistentry>
    <varlistentry>
      <term>events</term>
      <listitem><para>显示所有GDK接收的事件</para></listitem>
    </varlistentry>
    <varlistentry>
      <term>dnd</term>
      <listitem><para>关于拖放的信息</para></listitem>
    </varlistentry>
    <varlistentry>
      <term>xim</term>
      <listitem><para>关于XIM支持的信息</para></listitem>
    </varlistentry>
    <varlistentry>
      <term>nograbs</term>
      <listitem><para>关闭所有指针和键盘抓取（grabs）</para></listitem>
    </varlistentry>
    <varlistentry>
      <term>multihead</term>
      <listitem><para>有关多屏幕的信息</para></listitem>
    </varlistentry>
    <varlistentry>
      <term>xinerama</term>
      <listitem><para>模拟多显示器设置</para></listitem>
    </varlistentry>
    <varlistentry>
      <term>cursor</term>
      <listitem><para>关于鼠标对象的信息（仅 win32）</para></listitem>
    </varlistentry>
    <varlistentry>
      <term>draw</term>
      <listitem><para>关于绘图操作的信息（仅 win32）</para></listitem>
    </varlistentry>
    <varlistentry>
      <term>eventloop</term>
      <listitem><para>关于事件循环的信息（大多为 Quartz）</para></listitem>
    </varlistentry>

  </variablelist>
  <literal>all</literal>指定的值可以用来开启所有调试选项。
  </para>
</formalpara>

<formalpara>
  <title><envar>GDK_BACKEND</envar></title>

  <para>
    如果设置，选择要使用的 GDK 后端。选择一个需要它的后端，GTK 支持这个后端。可以选择以下后端：
    <variablelist>

      <varlistentry>
        <term>quartz</term>
        <listitem><para>用原生 Quartz 后端</para></listitem>
      </varlistentry>

      <varlistentry>
        <term>win32</term>
        <listitem><para>微软视窗的原生后端</para></listitem>
      </varlistentry>

      <varlistentry>
        <term>x11</term>
        <listitem><para>用原生的后端连接到X11服务器</para></listitem>
      </varlistentry>

    </variablelist>
    关于选择后端的更多信息，参见 gdk_display_manager_get() 函数。
  </para>
</formalpara>

<formalpara>
  <title><envar>GDK_SYNCHRONIZE</envar></title>

  <para>
    	如果设置，GDK 会让所有 X 请求成为交互式的（译注：非多线程的）。这对调试很有用，但会大大减慢执行速度。
  </para>
</formalpara>

<formalpara>
  <title><envar>XDG_DATA_HOME</envar>, <envar>XDG_DATA_DIRS</envar></title>

  <para>
    GTK+ 使用这些环境变量找到图标主题和 MIME 信息。更多信息参见<ulink url="http://freedesktop.org/Standards/icon-theme-spec">图标主题规范</ulink>、
<ulink url="http://freedesktop.org/Standards/shared-mime-info-spec">共享的MIME信息数据库</ulink> 和<ulink url="http://freedesktop.org/Standards/basedir-spec">基本目录规范</ulink>。
  </para>
</formalpara>

<formalpara>
  <title><envar>DESKTOP_STARTUP_ID</envar></title>

  <para>
    GTK+ 根据<ulink url="http://standards.freedesktop.org/startup-notification-spec/startup-notification-latest.txt">启动通知规范</ulink>使用这些变量来提供启动通知。
根据规范，GTK+ 在读取这个变量后反置（unset）它（防止泄漏到子进程）。
所以，如果你需要它的值达到你的目的，你应该在调用 gtk_init() 前读取。
  </para>
</formalpara>

</refsect2>

</refsect1>

</refentry>
