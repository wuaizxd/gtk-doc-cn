<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
]>
<refentry id="gtk-compiling">
<refmeta>
<refentrytitle>编译GTK+应用程序</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GTK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>编译GTK+应用程序</refname>
<refpurpose>
如何编译自己的GTK+应用程序
</refpurpose>
</refnamediv>

<refsect1>
<title>在UNIX上编译GTK+ 应用程序</title>

<para>
编译一个GTK+应用程序，你需要告诉编译器 GTK+ 头文件和库在哪里 。
这也可以通过<literal>pkg-config</literal>工具完成。
</para>
<para>
下面的命令行展示了如果使用<literal>pkg-config</literal>
(输出可能由于系统的不同而不同):
<programlisting>
$ pkg-config --cflags gtk+-3.0
 -pthread -I/usr/include/gtk-3.0 -I/usr/lib64/gtk-3.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12
$ pkg-config --libs gtk+-3.0
 -pthread -lgtk-3 -lgdk-3 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lgdk_pixbuf-2.0 -lpangocairo-1.0 -lcairo -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lrt -lglib-2.0
</programlisting>
</para>
<para>
一个更简单的方法编译一个程序是使用"反引号" 特色的shell。 
如果你选择了反引号命令（<emphasis>不是单引号</emphasis>），
那么它的输出将被替换到执行前的命令行,
如编译一个GTK+ Hello，World，你可以输入以下信息:
<programlisting>
$ cc `pkg-config --cflags --libs gtk+-3.0` hello.c -o hello
</programlisting>
</para>

<para>
如果你需要确保你的程序不会使用到任何废弃的函数，
你可以定义一个预处理宏，在命令行上定义<literal>-DGTK_DISABLE_DEPRECATED=1</literal>。
（译者注:如果你是VS IDE 的使用者，在IDE定义的宏 在GCC中就是 -D宏名字=值）
GDK，GdkPixbuf 和 GLib中类似的宏是GDK_DISABLE_DEPRECATED, GDK_PIXBUF_DISABLE_DEPRECATED 和G_DISABLE_DEPRECATED
</para>

<para>
如果你想要确保你的程序不会使用到任何在多头设置中会出现问题的函数，
你可以定义预处理宏 GDK_MULTIHEAD_SAFE ，通过命令<literal>-DGTK_MULTIHEAD_SAFE=1</literal>。
</para>

<para>
同样的，如果你想确保你的程序中不会使用到任何在多设备设置中会出现问题的函数，
你可以定义预处理宏 GDK_MULTIDEVICE_SAFE ，通过命令<literal>-DGTK_MULTIDEVICE_SAFE=1</literal>。
</para>

  <refsect2>
    <title>有用的autotools 宏</title>

    <para>
      GTK+ 中提供各式各样的宏，它们可以用于更简单检测版本和后端支持。这些宏是
      <variablelist>
        <varlistentry>
          <term>AM_PATH_GTK_3_0([minimum-version], [if-found], [if-not-found], [modules])</term>
	  <listitem>这个宏在编译时可以检测GTK+是否安装及可用，有4个参数和选项: 
	  <emphasis>minimum-version</emphasis>, 编译时GTK+的最低版本;
	  <emphasis>if-found</emphasis>,如果找到可用版本时执行的;
          <emphasis>if-not-found</emphasis>, 没找到可用版本时执行的;
          <emphasis>modules</emphasis>, 需要执行的模块检测。</listitem>
        </varlistentry>
        <varlistentry>
          <term>GTK_CHECK_BACKEND([backend-name], [minimum-version], [if-found], [if-not-found])</term>
          <listitem>这个宏可用于检测GTK+的指定后端的支持。
          <emphasis>minimum-version</emphasis>、
          <emphasis>if-found</emphasis> 和 <emphasis>if-not-found</emphasis>
          参数均为可选。</listitem>
        </varlistentry>
      </variablelist>
    </para>
  </refsect2>

</refsect1>
</refentry>
