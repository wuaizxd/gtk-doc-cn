# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-04-23 20:51-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"

#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_init:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_rand_int:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_rand_int_range:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_rand_double:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_rand_double_range:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_timer_start:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_timer_elapsed:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_timer_last:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_minimized_result:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_maximized_result:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_message:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_bug_base:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_bug:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_get_root:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_run:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_create_case:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_add_func:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_add_data_func:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_create_suite:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_suite_add:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_suite_add_suite:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_queue_free:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_queue_destroy:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_run_suite:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_strcmp0:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_trap_fork:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_trap_has_passed:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_trap_reached_timeout:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_add:
#: gtestutils.c:1003:1 gtestutils.c:1034:1 gtestutils.c:1055:1
#: gtestutils.c:1076:1 gtestutils.c:1094:1 gtestutils.c:1113:1
#: gtestutils.c:1134:1 gtestutils.c:1254:1 gtestutils.c:1463:1
#: gtestutils.c:1637:1 gtestutils.c:1787:1 gtestutils.c:1802:1
#: gtestutils.c:2065:1 gtestutils.c:487:1 gtestutils.c:593:1
#: gtestutils.c:611:1 gtestutils.c:628:1 gtestutils.c:646:1 gtestutils.c:661:1
#: gtestutils.c:679:1 gtestutils.c:695:1 gtestutils.c:715:1 gtestutils.c:744:1
#: gtestutils.c:768:1 gtestutils.c:799:1 gtestutils.c:817:1 gtestutils.c:845:1
#: gtestutils.c:872:1 gtestutils.c:906:1
msgid "Since: 2.16"
msgstr ""

#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GTestFixtureFunc:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GTestDataFunc:
#: gtestutils.c:1017:1 gtestutils.c:934:1
msgid "@user_data: the data provided when registering the test"
msgstr ""

#. used by: GTestDataFunc:
#: gtestutils.c:1019:2
msgid ""
"The type used for test case functions that take an extra pointer argument."
msgstr ""

#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_add_func:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_add_data_func:
#: gtestutils.c:1024:1 gtestutils.c:995:1
msgid "@testpath:   Slash-separated test case path name for the test."
msgstr ""

#. used by: g_test_add_data_func:
#: gtestutils.c:1025:1
msgid "@test_data:  Test data argument for the test function."
msgstr ""

#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_add_func:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_add_data_func:
#: gtestutils.c:1026:1 gtestutils.c:996:1
msgid "@test_func:  The test function to invoke for this test."
msgstr ""

#. used by: g_test_add_data_func:
#: gtestutils.c:1028:5
msgid ""
"Create a new test case, similar to g_test_create_case(). However the test is "
"assumed to use no fixture, and test suites are automatically created on the "
"fly and added to the root fixture, based on the slash-separated portions of "
"@testpath. The @test_data argument will be passed as first argument to "
"@test_func."
msgstr ""

#. used by: g_test_create_suite:
#: gtestutils.c:1049:1
msgid "@suite_name: a name for the suite"
msgstr ""

#. used by: g_test_create_suite:
#: gtestutils.c:1051:1
msgid "Create a new test suite with the name @suite_name."
msgstr ""

#. used by: g_test_create_suite:
#: gtestutils.c:1053:1
msgid "Returns: A newly allocated #GTestSuite instance."
msgstr ""

#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_suite_add:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_run_suite:
#: gtestutils.c:1071:1 gtestutils.c:1243:1
msgid "@suite: a #GTestSuite"
msgstr ""

#. used by: g_test_suite_add:
#: gtestutils.c:1072:1
msgid "@test_case: a #GTestCase"
msgstr ""

#. used by: g_test_suite_add:
#: gtestutils.c:1074:1
msgid "Adds @test_case to @suite."
msgstr ""

#. used by: g_test_suite_add_suite:
#: gtestutils.c:1089:1
msgid "@suite:       a #GTestSuite"
msgstr ""

#. used by: g_test_suite_add_suite:
#: gtestutils.c:1090:1
msgid "@nestedsuite: another #GTestSuite"
msgstr ""

#. used by: g_test_suite_add_suite:
#: gtestutils.c:1092:1
msgid "Adds @nestedsuite to @suite."
msgstr ""

#. used by: g_test_queue_free:
#: gtestutils.c:1107:1
msgid "@gfree_pointer: the pointer to be stored."
msgstr ""

#. used by: g_test_queue_free:
#: gtestutils.c:1109:3
msgid ""
"Enqueue a pointer to be released with g_free() during the next teardown "
"phase. This is equivalent to calling g_test_queue_destroy() with a destroy "
"callback of g_free()."
msgstr ""

#. used by: g_test_queue_destroy:
#: gtestutils.c:1124:1
msgid "@destroy_func:       Destroy callback for teardown phase."
msgstr ""

#. used by: g_test_queue_destroy:
#: gtestutils.c:1125:1
msgid "@destroy_data:       Destroy callback data."
msgstr ""

#. used by: g_test_queue_destroy:
#: gtestutils.c:1127:6
msgid ""
"This function enqueus a callback @destroy_func() to be executed during the "
"next test case teardown phase. This is most useful to auto destruct allocted "
"test resources at the end of a test run. Resources are released in reverse "
"queue order, that means enqueueing callback A before callback B will cause B"
"() to be called before A() during teardown."
msgstr ""

#. used by: g_test_run_suite:
#: gtestutils.c:1245:6
msgid ""
"Execute the tests within @suite and all nested #GTestSuites. The test suites "
"to be executed are filtered according to test path arguments (-p "
"<replaceable>testpath</replaceable>) as parsed by g_test_init(). "
"g_test_run_suite() or g_test_run() may only be called once in a program."
msgstr ""

#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_run:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_run_suite:
#: gtestutils.c:1252:1 gtestutils.c:870:1
msgid "Returns: 0 on success"
msgstr ""

#. used by: g_strcmp0:
#: gtestutils.c:1454:2
msgid "@str1: a C string or %NULL @str2: another C string or %NULL"
msgstr ""

#. used by: g_strcmp0:
#: gtestutils.c:1457:3
msgid ""
"Compares @str1 and @str2 like strcmp(). Handles %NULL gracefully by sorting "
"it before non-%NULL strings. Comparing two %NULL pointers returns 0."
msgstr ""

#. used by: g_strcmp0:
#: gtestutils.c:1461:1
msgid "Returns: -1, 0 or 1, if @str1 is <, == or > than @str2."
msgstr ""

#. used by: g_test_trap_fork:
#: gtestutils.c:1603:1
msgid "@usec_timeout:    Timeout for the forked test in micro seconds."
msgstr ""

#. used by: g_test_trap_fork:
#: gtestutils.c:1604:1
msgid "@test_trap_flags: Flags to modify forking behaviour."
msgstr ""

#. used by: g_test_trap_fork:
#: gtestutils.c:1606:3
msgid ""
"Fork the current test program to execute a test case that might not return "
"or that might abort. The forked test case is aborted and considered failing "
"if its run time exceeds @usec_timeout."
msgstr ""

#. used by: g_test_trap_fork:
#: gtestutils.c:1610:1
msgid "The forking behavior can be configured with the #GTestTrapFlags flags."
msgstr ""

#. used by: g_test_trap_fork:
#: gtestutils.c:1612:4
msgid ""
"In the following example, the test code forks, the forked child process "
"produces some sample output and exits successfully. The forking parent "
"process then asserts successful child program termination and validates "
"child program outputs."
msgstr ""

#. used by: g_test_trap_fork:
#: gtestutils.c:1633:1
msgid "This function is implemented only on Unix platforms."
msgstr ""

#. used by: g_test_trap_fork:
#: gtestutils.c:1635:1
msgid ""
"Returns: %TRUE for the forked child and %FALSE for the executing parent "
"process."
msgstr ""

#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_trap_has_passed:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_trap_reached_timeout:
#: gtestutils.c:1783:1 gtestutils.c:1798:1
msgid "Check the result of the last g_test_trap_fork() call."
msgstr ""

#. used by: g_test_trap_has_passed:
#: gtestutils.c:1785:1
msgid "Returns: %TRUE if the last forked child terminated successfully."
msgstr ""

#. used by: g_test_trap_reached_timeout:
#: gtestutils.c:1800:1
msgid ""
"Returns: %TRUE if the last forked child got killed due to a fork timeout."
msgstr ""

#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_log_buffer_new:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_log_buffer_push
#: gtestutils.c:1968:1 gtestutils.c:1996:1
msgid ""
"Internal function for gtester to decode test log messages, no ABI guarantees "
"provided."
msgstr ""

#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_log_buffer_free
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_log_msg_free:
#: gtestutils.c:1981:1 gtestutils.c:2037:1
msgid ""
"Internal function for gtester to free test log messages, no ABI guarantees "
"provided."
msgstr ""

#. used by: g_test_log_buffer_pop:
#: gtestutils.c:2018:1
msgid ""
"Internal function for gtester to retrieve test log messages, no ABI "
"guarantees provided."
msgstr ""

#. used by: g_test_add:
#: gtestutils.c:2051:1
msgid "@testpath:  The test path for a new test case."
msgstr ""

#. used by: g_test_add:
#: gtestutils.c:2052:1
msgid "@Fixture:   The type of a fixture data structure."
msgstr ""

#. used by: g_test_add:
#: gtestutils.c:2053:1
msgid "@tdata:     Data argument for the test functions."
msgstr ""

#. used by: g_test_add:
#: gtestutils.c:2054:1
msgid "@fsetup:    The function to set up the fixture data."
msgstr ""

#. used by: g_test_add:
#: gtestutils.c:2055:1
msgid "@ftest:     The actual test function."
msgstr ""

#. used by: g_test_add:
#: gtestutils.c:2056:1
msgid "@fteardown: The function to tear down the fixture data."
msgstr ""

#. used by: g_test_add:
#: gtestutils.c:2058:6
msgid ""
"Hook up a new test case at @testpath, similar to g_test_add_func(). A "
"fixture data structure with setup and teardown function may be provided "
"though, similar to g_test_create_case(). g_test_add() is implemented as a "
"macro, so that the fsetup(), ftest() and fteardown() callbacks can expect a "
"@Fixture pointer as first argument in a type safe manner."
msgstr ""

#. used by: g_test_init:
#: gtestutils.c:405:2
msgid ""
"@argc: Address of the @argc parameter of the main() function. Changed if any "
"arguments were handled."
msgstr ""

#. used by: g_test_init:
#: gtestutils.c:407:2
msgid ""
"@argv: Address of the @argv parameter of main(). Any parameters understood "
"by g_test_init() stripped before return."
msgstr ""

#. used by: g_test_init:
#: gtestutils.c:409:1
msgid ""
"@Varargs: Reserved for future extension. Currently, you must pass %NULL."
msgstr ""

#. used by: g_test_init:
#: gtestutils.c:411:75
msgid ""
"Initialize the GLib testing framework, e.g. by seeding the test random "
"number generator, the name for g_get_prgname() and parsing test related "
"command line args. So far, the following arguments are understood: "
"<variablelist> <varlistentry> <term><option>-l</option></term> "
"<listitem><para> list test cases available in a test executable. </para></"
"listitem> </varlistentry> <varlistentry> <term><option>--"
"seed=<replaceable>RANDOMSEED</replaceable></option></term> <listitem><para> "
"provide a random seed to reproduce test runs using random numbers. </para></"
"listitem> </varlistentry> <varlistentry> <term><option>--verbose</option></"
"term> <listitem><para>run tests verbosely.</para></listitem> </varlistentry> "
"<varlistentry> <term><option>-q</option>, <option>--quiet</option></term> "
"<listitem><para>run tests quietly.</para></listitem> </varlistentry> "
"<varlistentry> <term><option>-p <replaceable>TESTPATH</replaceable></"
"option></term> <listitem><para> execute all tests matching "
"<replaceable>TESTPATH</replaceable>. </para></listitem> </varlistentry> "
"<varlistentry> <term><option>-m {perf|slow|thorough|quick}</option></term> "
"<listitem><para> execute tests according to these test modes: <variablelist> "
"<varlistentry> <term>perf</term> <listitem><para> performance tests, may "
"take long and report results. </para></listitem> </varlistentry> "
"<varlistentry> <term>slow, thorough</term> <listitem><para> slow and "
"thorough tests, may take quite long and maximize coverage. </para></"
"listitem> </varlistentry> <varlistentry> <term>quick</term> <listitem><para> "
"quick tests, should run really quickly and give good coverage. </para></"
"listitem> </varlistentry> </variablelist> </para></listitem> </varlistentry> "
"<varlistentry> <term><option>--debug-log</option></term> "
"<listitem><para>debug test logging output.</para></listitem> </varlistentry> "
"<varlistentry> <term><option>-k</option>, <option>--keep-going</option></"
"term> <listitem><para>gtester-specific argument.</para></listitem> </"
"varlistentry> <varlistentry> <term><option>--GTestLogFD <replaceable>N</"
"replaceable></option></term> <listitem><para>gtester-specific argument.</"
"para></listitem> </varlistentry> <varlistentry> <term><option>--"
"GTestSkipCount <replaceable>N</replaceable></option></term> "
"<listitem><para>gtester-specific argument.</para></listitem> </varlistentry> "
"</variablelist>"
msgstr ""

#. used by: g_test_rand_int:
#: gtestutils.c:581:1
msgid "Get a reproducible random integer number."
msgstr ""

#. used by: g_test_rand_int:
#: gtestutils.c:583:3
msgid ""
"The random numbers generated by the g_test_rand_*() family of functions "
"change with every new test program start, unless the --seed option is given "
"when starting test programs."
msgstr ""

#. used by: g_test_rand_int:
#: gtestutils.c:587:3
msgid ""
"For individual test cases however, the random number generator is reseeded, "
"to avoid dependencies between tests and to make --seed effective for all "
"test cases."
msgstr ""

#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_rand_int:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_rand_double:
#: gtestutils.c:591:1 gtestutils.c:626:1
msgid "Returns: a random number from the seeded random number generator."
msgstr ""

#. used by: g_test_rand_int_range:
#: gtestutils.c:603:1
msgid "@begin: the minimum value returned by this function"
msgstr ""

#. used by: g_test_rand_int_range:
#: gtestutils.c:604:1
msgid "@end:   the smallest value not to be returned by this function"
msgstr ""

#. used by: g_test_rand_int_range:
#: gtestutils.c:606:2
msgid ""
"Get a reproducible random integer number out of a specified range, see "
"g_test_rand_int() for details on test case random numbers."
msgstr ""

#. used by: g_test_rand_int_range:
#: gtestutils.c:609:1
msgid "Returns: a number with @begin <= number < @end."
msgstr ""

#. used by: g_test_rand_double:
#: gtestutils.c:623:2
msgid ""
"Get a reproducible random floating point number, see g_test_rand_int() for "
"details on test case random numbers."
msgstr ""

#. used by: g_test_rand_double_range:
#: gtestutils.c:638:1
msgid "@range_start: the minimum value returned by this function"
msgstr ""

#. used by: g_test_rand_double_range:
#: gtestutils.c:639:1
msgid "@range_end: the minimum value not returned by this function"
msgstr ""

#. used by: g_test_rand_double_range:
#: gtestutils.c:641:2
msgid ""
"Get a reproducible random floating pointer number out of a specified range, "
"see g_test_rand_int() for details on test case random numbers."
msgstr ""

#. used by: g_test_rand_double_range:
#: gtestutils.c:644:1
msgid "Returns: a number with @range_start <= number < @range_end."
msgstr ""

#. used by: g_test_timer_start:
#: gtestutils.c:658:2
msgid ""
"Start a timing test. Call g_test_timer_elapsed() when the task is supposed "
"to be done. Call this function again to restart the timer."
msgstr ""

#. used by: g_test_timer_elapsed:
#: gtestutils.c:675:1
msgid ""
"Get the time since the last start of the timer with g_test_timer_start()."
msgstr ""

#. used by: g_test_timer_elapsed:
#: gtestutils.c:677:1
msgid "Returns: the time since the last start of the timer, as a double"
msgstr ""

#. used by: g_test_timer_last:
#: gtestutils.c:691:1
msgid "Report the last result of g_test_timer_elapsed()."
msgstr ""

#. used by: g_test_timer_last:
#: gtestutils.c:693:1
msgid "Returns: the last result of g_test_timer_elapsed(), as a double"
msgstr ""

#. used by: g_test_minimized_result:
#: gtestutils.c:705:1
msgid "@minimized_quantity: the reported value"
msgstr ""

#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_minimized_result:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_maximized_result:
#: gtestutils.c:706:1 gtestutils.c:735:1
msgid "@format: the format string of the report message"
msgstr ""

#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_minimized_result:
#. #-#-#-#-#  gtestutils.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_test_maximized_result:
#: gtestutils.c:707:1 gtestutils.c:736:1
msgid "@Varargs: arguments to pass to the printf() function"
msgstr ""

#. used by: g_test_minimized_result:
#: gtestutils.c:709:5
msgid ""
"Report the result of a performance or measurement test. The test should "
"generally strive to minimize the reported quantities (smaller values are "
"better than larger ones), this and @minimized_quantity can determine sorting "
"order for test result reports."
msgstr ""

#. used by: g_test_maximized_result:
#: gtestutils.c:734:1
msgid "@maximized_quantity: the reported value"
msgstr ""

#. used by: g_test_maximized_result:
#: gtestutils.c:738:5
msgid ""
"Report the result of a performance or measurement test. The test should "
"generally strive to maximize the reported quantities (larger values are "
"better than smaller ones), this and @maximized_quantity can determine "
"sorting order for test result reports."
msgstr ""

#. used by: g_test_message:
#: gtestutils.c:763:1
msgid "@format: the format string"
msgstr ""

#. used by: g_test_message:
#: gtestutils.c:764:1
msgid "@...:    printf-like arguments to @format"
msgstr ""

#. used by: g_test_message:
#: gtestutils.c:766:1
msgid "Add a message to the test report."
msgstr ""

#. used by: g_test_bug_base:
#: gtestutils.c:785:1
msgid "@uri_pattern: the base pattern for bug URIs"
msgstr ""

#. used by: g_test_bug_base:
#: gtestutils.c:787:1
msgid "Specify the base URI for bug reports."
msgstr ""

#. used by: g_test_bug_base:
#: gtestutils.c:789:9
msgid ""
"The base URI is used to construct bug report messages for g_test_message() "
"when g_test_bug() is called. Calling this function outside of a test case "
"sets the default base URI for all test cases. Calling it from within a test "
"case changes the base URI for the scope of the test case only. Bug URIs are "
"constructed by appending a bug specific URI portion to @uri_pattern, or by "
"replacing the special string '%s' within @uri_pattern if that is present."
msgstr ""

#. used by: g_test_bug:
#: gtestutils.c:810:1
msgid "@bug_uri_snippet: Bug specific bug tracker URI portion."
msgstr ""

#. used by: g_test_bug:
#: gtestutils.c:812:4
msgid ""
"This function adds a message to test reports that associates a bug URI with "
"a test case. Bug URIs are constructed from a base URI set with "
"g_test_bug_base() and @bug_uri_snippet."
msgstr ""

#. used by: g_test_get_root:
#: gtestutils.c:841:1
msgid "Get the toplevel test suite for the test path API."
msgstr ""

#. used by: g_test_get_root:
#: gtestutils.c:843:1
msgid "Returns: the toplevel #GTestSuite"
msgstr ""

#. used by: g_test_run:
#: gtestutils.c:862:7
msgid ""
"Runs all tests under the toplevel suite which can be retrieved with "
"g_test_get_root(). Similar to g_test_run_suite(), the test cases to be run "
"are filtered according to test path arguments (-p <replaceable>testpath</"
"replaceable>) as parsed by g_test_init(). g_test_run_suite() or g_test_run() "
"may only be called once in a program."
msgstr ""

#. used by: g_test_create_case:
#: gtestutils.c:882:1
msgid "@test_name:     the name for the test case"
msgstr ""

#. used by: g_test_create_case:
#: gtestutils.c:883:1
msgid "@data_size:     the size of the fixture data structure"
msgstr ""

#. used by: g_test_create_case:
#: gtestutils.c:884:1
msgid "@test_data:     test data argument for the test functions"
msgstr ""

#. used by: g_test_create_case:
#: gtestutils.c:885:1
msgid "@data_setup:    the function to set up the fixture data"
msgstr ""

#. used by: g_test_create_case:
#: gtestutils.c:886:1
msgid "@data_test:     the actual test function"
msgstr ""

#. used by: g_test_create_case:
#: gtestutils.c:887:1
msgid "@data_teardown: the function to teardown the fixture data"
msgstr ""

#. used by: g_test_create_case:
#: gtestutils.c:889:8
msgid ""
"Create a new #GTestCase, named @test_name, this API is fairly low level, "
"calling g_test_add() or g_test_add_func() is preferable. When this test is "
"executed, a fixture structure of size @data_size will be allocated and "
"filled with 0s. Then data_setup() is called to initialize the fixture. After "
"fixture setup, the actual test function data_test() is called. Once the test "
"run completed, the fixture structure is torn down  by calling data_teardown"
"() and after that the memory is released."
msgstr ""

#. used by: g_test_create_case:
#: gtestutils.c:898:5
msgid ""
"Splitting up a test run into fixture setup, test function and fixture "
"teardown is most usful if the same fixture is used for multiple tests. In "
"this cases, g_test_create_case() will be called with the same fixture, but "
"varying @test_name and @data_test arguments."
msgstr ""

#. used by: g_test_create_case:
#: gtestutils.c:904:1
msgid "Returns: a newly allocated #GTestCase."
msgstr ""

#. used by: GTestFixtureFunc:
#: gtestutils.c:933:1
msgid "@fixture: the test fixture"
msgstr ""

#. used by: GTestFixtureFunc:
#: gtestutils.c:936:3
msgid ""
"The type used for functions that operate on test fixtures.  This is used for "
"the fixture setup and teardown functions as well as for the testcases "
"themselves."
msgstr ""

#. used by: GTestFixtureFunc:
#: gtestutils.c:940:2
msgid ""
"@user_data is a pointer to the data that was given when registering the test "
"case."
msgstr ""

#. used by: GTestFixtureFunc:
#: gtestutils.c:943:3
msgid ""
"@fixture will be a pointer to the area of memory allocated by the test "
"framework, of the size requested.  If the requested size was zero then "
"@fixture will be equal to @user_data."
msgstr ""

#. used by: GTestFunc:
#: gtestutils.c:991:1
msgid "The type used for test case functions."
msgstr ""

#. used by: g_test_add_func:
#: gtestutils.c:998:4
msgid ""
"Create a new test case, similar to g_test_create_case(). However the test is "
"assumed to use no fixture, and test suites are automatically created on the "
"fly and added to the root fixture, based on the slash-separated portions of "
"@testpath."
msgstr ""

#. used by: GTestLogFatalFunc:
#: gtestutils.h:276:1
msgid "@log_domain: the log domain of the message"
msgstr ""

#. used by: GTestLogFatalFunc:
#: gtestutils.h:277:1
msgid ""
"@log_level: the log level of the message (including the fatal and recursion "
"flags)"
msgstr ""

#. used by: GTestLogFatalFunc:
#: gtestutils.h:278:1
msgid "@message: the message to process"
msgstr ""

#. used by: GTestLogFatalFunc:
#: gtestutils.h:279:1
msgid "@user_data: user data, set in g_test_log_set_fatal_handler()"
msgstr ""

#. used by: GTestLogFatalFunc:
#: gtestutils.h:281:1
msgid "Specifies the prototype of fatal log handler functions."
msgstr ""

#. used by: GTestLogFatalFunc:
#: gtestutils.h:283:1
msgid "Return value: %TRUE if the program should abort, %FALSE otherwise"
msgstr ""

#. used by: GTestLogFatalFunc:
#: gtestutils.h:285:1
msgid "Since: 2.22"
msgstr ""
