# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-04-17 15:16-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"

#. #-#-#-#-#  gchecksum.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_checksum_type_get_length:
#. #-#-#-#-#  gchecksum.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_compute_checksum_for_data:
#. #-#-#-#-#  gchecksum.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_compute_checksum_for_string:
#: gchecksum.c:1075:1 gchecksum.c:1396:1 gchecksum.c:1435:1
msgid "@checksum_type: a #GChecksumType"
msgstr ""

#. used by: g_checksum_type_get_length:
#: gchecksum.c:1077:1
msgid "Gets the length in bytes of digests of type @checksum_type"
msgstr ""

#. used by: g_checksum_type_get_length:
#: gchecksum.c:1079:2
msgid ""
"Return value: the checksum length, or -1 if @checksum_type is not supported."
msgstr ""

#. #-#-#-#-#  gchecksum.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gchecksum.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_checksum_type_get_length:
#. #-#-#-#-#  gchecksum.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_checksum_new:
#. #-#-#-#-#  gchecksum.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_checksum_copy:
#. #-#-#-#-#  gchecksum.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_checksum_free:
#. #-#-#-#-#  gchecksum.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_checksum_update:
#. #-#-#-#-#  gchecksum.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_checksum_get_string:
#. #-#-#-#-#  gchecksum.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_checksum_get_digest:
#. #-#-#-#-#  gchecksum.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_compute_checksum_for_data:
#. #-#-#-#-#  gchecksum.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_compute_checksum_for_string:
#. #-#-#-#-#  gchecksum.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gchecksum.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GChecksumType:
#. #-#-#-#-#  gchecksum.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GChecksum:
#: gchecksum.c:1082:1 gchecksum.c:1129:1 gchecksum.c:1191:1 gchecksum.c:1214:1
#: gchecksum.c:1237:1 gchecksum.c:1290:1 gchecksum.c:1339:1 gchecksum.c:1409:1
#: gchecksum.c:1446:1 gchecksum.h:44:1 gchecksum.h:59:1
msgid "Since: 2.16"
msgstr ""

#. used by: g_checksum_new:
#: gchecksum.c:1110:1
msgid "@checksum_type: the desired type of checksum"
msgstr ""

#. used by: g_checksum_new:
#: gchecksum.c:1112:4
msgid ""
"Creates a new #GChecksum, using the checksum algorithm @checksum_type. If "
"the @checksum_type is not known, %NULL is returned. A #GChecksum can be used "
"to compute the checksum, or digest, of an arbitrary binary blob, using "
"different hashing algorithms."
msgstr ""

#. used by: g_checksum_new:
#: gchecksum.c:1117:8
msgid ""
"A #GChecksum works by feeding a binary blob through g_checksum_update() "
"until there is data to be checked; the digest can then be extracted using "
"g_checksum_get_string(), which will return the checksum as a hexadecimal "
"string; or g_checksum_get_digest(), which will return a vector of raw bytes. "
"Once either g_checksum_get_string() or g_checksum_get_digest() have been "
"called on a #GChecksum, the checksum will be closed and it won't be possible "
"to call g_checksum_update() on it anymore."
msgstr ""

#. used by: g_checksum_new:
#: gchecksum.c:1126:2
msgid ""
"Return value: the newly created #GChecksum, or %NULL. Use g_checksum_free() "
"to free the memory allocated by it."
msgstr ""

#. used by: g_checksum_reset:
#: gchecksum.c:1149:1
msgid "@checksum: the #GChecksum to reset"
msgstr ""

#. used by: g_checksum_reset:
#: gchecksum.c:1151:1
msgid "Resets the state of the @checksum back to its initial state."
msgstr ""

#. used by: g_checksum_reset:
#: gchecksum.c:1153:1
msgid "Since: 2.18"
msgstr ""

#. used by: g_checksum_copy:
#: gchecksum.c:1182:1
msgid "@checksum: the #GChecksum to copy"
msgstr ""

#. used by: g_checksum_copy:
#: gchecksum.c:1184:3
msgid ""
"Copies a #GChecksum. If @checksum has been closed, by calling "
"g_checksum_get_string() or g_checksum_get_digest(), the copied checksum will "
"be closed as well."
msgstr ""

#. used by: g_checksum_copy:
#: gchecksum.c:1188:2
msgid ""
"Return value: the copy of the passed #GChecksum. Use g_checksum_free() when "
"finished using it."
msgstr ""

#. #-#-#-#-#  gchecksum.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_checksum_free:
#. #-#-#-#-#  gchecksum.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_checksum_update:
#. #-#-#-#-#  gchecksum.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_checksum_get_string:
#. #-#-#-#-#  gchecksum.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_checksum_get_digest:
#: gchecksum.c:1210:1 gchecksum.c:1229:1 gchecksum.c:1277:1 gchecksum.c:1328:1
msgid "@checksum: a #GChecksum"
msgstr ""

#. used by: g_checksum_free:
#: gchecksum.c:1212:1
msgid "Frees the memory allocated for @checksum."
msgstr ""

#. used by: g_checksum_update:
#: gchecksum.c:1230:1
msgid "@data: buffer used to compute the checksum"
msgstr ""

#. used by: g_checksum_update:
#: gchecksum.c:1231:1
msgid "@length: size of the buffer, or -1 if it is a null-terminated string."
msgstr ""

#. used by: g_checksum_update:
#: gchecksum.c:1233:3
msgid ""
"Feeds @data into an existing #GChecksum. The checksum must still be open, "
"that is g_checksum_get_string() or g_checksum_get_digest() must not have "
"been called on @checksum."
msgstr ""

#. used by: g_checksum_get_string:
#: gchecksum.c:1279:1
msgid "Gets the digest as an hexadecimal string."
msgstr ""

#. used by: g_checksum_get_string:
#: gchecksum.c:1281:2
msgid ""
"Once this function has been called the #GChecksum can no longer be updated "
"with g_checksum_update()."
msgstr ""

#. used by: g_checksum_get_string:
#: gchecksum.c:1284:1
msgid "The hexadecimal characters will be lower case."
msgstr ""

#. used by: g_checksum_get_string:
#: gchecksum.c:1286:3
msgid ""
"Return value: the hexadecimal representation of the checksum. The returned "
"string is owned by the checksum and should not be modified or freed."
msgstr ""

#. used by: g_checksum_get_digest:
#: gchecksum.c:1329:1
msgid "@buffer: output buffer"
msgstr ""

#. used by: g_checksum_get_digest:
#: gchecksum.c:1330:2
msgid ""
"@digest_len: an inout parameter. The caller initializes it to the size of "
"@buffer. After the call it contains the length of the digest."
msgstr ""

#. used by: g_checksum_get_digest:
#: gchecksum.c:1333:2
msgid ""
"Gets the digest from @checksum as a raw binary vector and places it into "
"@buffer. The size of the digest depends on the type of checksum."
msgstr ""

#. used by: g_checksum_get_digest:
#: gchecksum.c:1336:2
msgid ""
"Once this function has been called, the #GChecksum is closed and can no "
"longer be updated with g_checksum_update()."
msgstr ""

#. used by: g_compute_checksum_for_data:
#: gchecksum.c:1397:1
msgid "@data: binary blob to compute the digest of"
msgstr ""

#. used by: g_compute_checksum_for_data:
#: gchecksum.c:1398:1
msgid "@length: length of @data"
msgstr ""

#. used by: g_compute_checksum_for_data:
#: gchecksum.c:1400:3
msgid ""
"Computes the checksum for a binary @data of @length. This is a convenience "
"wrapper for g_checksum_new(), g_checksum_get_string() and g_checksum_free()."
msgstr ""

#. #-#-#-#-#  gchecksum.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_compute_checksum_for_data:
#. #-#-#-#-#  gchecksum.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_compute_checksum_for_string:
#: gchecksum.c:1404:1 gchecksum.c:1441:1
msgid "The hexadecimal string returned will be in lower case."
msgstr ""

#. used by: g_compute_checksum_for_data:
#: gchecksum.c:1406:2
msgid ""
"Return value: the digest of the binary data as a string in hexadecimal. The "
"returned string should be freed with g_free() when done using it."
msgstr ""

#. used by: g_compute_checksum_for_string:
#: gchecksum.c:1436:1
msgid "@str: the string to compute the checksum of"
msgstr ""

#. used by: g_compute_checksum_for_string:
#: gchecksum.c:1437:1
msgid ""
"@length: the length of the string, or -1 if the string is null-terminated."
msgstr ""

#. used by: g_compute_checksum_for_string:
#: gchecksum.c:1439:1
msgid "Computes the checksum of a string."
msgstr ""

#. used by: g_compute_checksum_for_string:
#: gchecksum.c:1443:2
msgid ""
"Return value: the checksum as a hexadecimal string. The returned string "
"should be freed with g_free() when done using it."
msgstr ""

#. used by: SECTION: checksum
#: gchecksum.c:36:1
msgid "@title: Data Checksums"
msgstr ""

#. used by: SECTION: checksum
#: gchecksum.c:37:1
msgid "@short_description: Computes the checksum for data"
msgstr ""

#. used by: SECTION: checksum
#: gchecksum.c:39:4
msgid ""
"GLib provides a generic API for computing checksums (or \"digests\") for a "
"sequence of arbitrary bytes, using various hashing algorithms like MD5, "
"SHA-1 and SHA-256. Checksums are commonly used in various environments and "
"specifications."
msgstr ""

#. used by: SECTION: checksum
#: gchecksum.c:44:8
msgid ""
"GLib supports incremental checksums using the GChecksum data structure, by "
"calling g_checksum_update() as long as there's data available and then using "
"g_checksum_get_string() or g_checksum_get_digest() to compute the checksum "
"and return it either as a string in hexadecimal form, or as a raw sequence "
"of bytes. To compute the checksum for binary blobs and NUL-terminated "
"strings in one go, use the convenience functions g_compute_checksum_for_data"
"() and g_compute_checksum_for_string(), respectively."
msgstr ""

#. used by: SECTION: checksum
#: gchecksum.c:53:1
msgid "Support for checksums has been added in GLib 2.16"
msgstr ""

#. used by: GChecksumType:
#: gchecksum.h:34:3
msgid ""
"@G_CHECKSUM_MD5: Use the MD5 hashing algorithm @G_CHECKSUM_SHA1: Use the "
"SHA-1 hashing algorithm @G_CHECKSUM_SHA256: Use the SHA-256 hashing algorithm"
msgstr ""

#. used by: GChecksumType:
#: gchecksum.h:38:2
msgid ""
"The hashing algorithm to be used by #GChecksum when performing the digest of "
"some data."
msgstr ""

#. used by: GChecksumType:
#: gchecksum.h:41:2
msgid ""
"Note that the #GChecksumType enumeration may be extended at a later date to "
"include new hashing algorithm types."
msgstr ""

#. used by: GChecksum:
#: gchecksum.h:55:3
msgid ""
"An opaque structure representing a checksumming operation. To create a new "
"GChecksum, use g_checksum_new(). To free a GChecksum, use g_checksum_free()."
msgstr ""
