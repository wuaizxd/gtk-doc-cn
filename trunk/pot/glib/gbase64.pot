# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-04-23 10:05-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"

#. #-#-#-#-#  gbase64.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_base64_encode_step:
#. #-#-#-#-#  gbase64.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_base64_encode_close:
#: gbase64.c:181:1 gbase64.c:63:1
msgid "@break_lines: whether to break long lines"
msgstr ""

#. #-#-#-#-#  gbase64.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_base64_encode_step:
#. #-#-#-#-#  gbase64.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_base64_encode_close:
#: gbase64.c:182:1 gbase64.c:64:1
msgid "@out: pointer to destination buffer"
msgstr ""

#. used by: g_base64_encode_close:
#: gbase64.c:183:1
msgid "@state: Saved state from g_base64_encode_step()"
msgstr ""

#. used by: g_base64_encode_close:
#: gbase64.c:184:1
msgid "@save: Saved state from g_base64_encode_step()"
msgstr ""

#. used by: g_base64_encode_close:
#: gbase64.c:186:1
msgid "Flush the status from a sequence of calls to g_base64_encode_step()."
msgstr ""

#. used by: g_base64_encode_close:
#: gbase64.c:188:3
msgid ""
"The output buffer must be large enough to fit all the data that will be "
"written to it. It will need up to 4 bytes, or up to 5 bytes if line-breaking "
"is enabled."
msgstr ""

#. #-#-#-#-#  gbase64.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_base64_encode_step:
#. #-#-#-#-#  gbase64.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_base64_encode_close:
#. #-#-#-#-#  gbase64.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_base64_decode_step:
#: gbase64.c:192:1 gbase64.c:311:1 gbase64.c:85:1
msgid "Return value: The number of bytes of output that was written"
msgstr ""

#. #-#-#-#-#  gbase64.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_base64_encode_step:
#. #-#-#-#-#  gbase64.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_base64_encode_close:
#. #-#-#-#-#  gbase64.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_base64_encode:
#. #-#-#-#-#  gbase64.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_base64_decode_step:
#. #-#-#-#-#  gbase64.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_base64_decode:
#: gbase64.c:194:1 gbase64.c:248:1 gbase64.c:313:1 gbase64.c:385:1
#: gbase64.c:87:1
msgid "Since: 2.12"
msgstr ""

#. used by: g_base64_encode:
#: gbase64.c:238:1
msgid "@data: the binary data to encode"
msgstr ""

#. used by: g_base64_encode:
#: gbase64.c:239:1
msgid "@len: the length of @data"
msgstr ""

#. used by: g_base64_encode:
#: gbase64.c:241:2
msgid ""
"Encode a sequence of binary data into its Base-64 stringified representation."
msgstr ""

#. used by: g_base64_encode:
#: gbase64.c:244:3
msgid ""
"Return value: a newly allocated, zero-terminated Base-64 encoded string "
"representing @data. The returned string must be freed with g_free()."
msgstr ""

#. used by: g_base64_decode_step:
#: gbase64.c:296:1
msgid "@in: binary input data"
msgstr ""

#. used by: g_base64_decode_step:
#: gbase64.c:297:1
msgid "@len: max length of @in data to decode"
msgstr ""

#. used by: g_base64_decode_step:
#: gbase64.c:298:1
msgid "@out: output buffer"
msgstr ""

#. #-#-#-#-#  gbase64.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_base64_encode_step:
#. #-#-#-#-#  gbase64.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_base64_decode_step:
#: gbase64.c:299:1 gbase64.c:65:1
msgid "@state: Saved state between steps, initialize to 0"
msgstr ""

#. #-#-#-#-#  gbase64.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_base64_encode_step:
#. #-#-#-#-#  gbase64.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_base64_decode_step:
#: gbase64.c:300:1 gbase64.c:66:1
msgid "@save: Saved state between steps, initialize to 0"
msgstr ""

#. used by: g_base64_decode_step:
#: gbase64.c:302:3
msgid ""
"Incrementally decode a sequence of binary data from its Base-64 stringified "
"representation. By calling this function multiple times you can convert data "
"in chunks to avoid having to have the full encoded data in memory."
msgstr ""

#. used by: g_base64_decode_step:
#: gbase64.c:306:4
msgid ""
"The output buffer must be large enough to fit all the data that will be "
"written to it. Since base64 encodes 3 bytes in 4 chars you need at least: "
"(@len / 4) * 3 + 3 bytes (+ 3 may be needed in case of non-zero state)."
msgstr ""

#. used by: SECTION:base64
#: gbase64.c:37:1
msgid "@title: Base64 Encoding"
msgstr ""

#. #-#-#-#-#  gbase64.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_base64_decode:
#. #-#-#-#-#  gbase64.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_base64_decode_inplace:
#: gbase64.c:376:1 gbase64.c:412:1
msgid "@text: zero-terminated string with base64 text to decode"
msgstr ""

#. #-#-#-#-#  gbase64.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_base64_decode:
#. #-#-#-#-#  gbase64.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_base64_decode_inplace:
#: gbase64.c:377:1 gbase64.c:413:1
msgid "@out_len: The length of the decoded data is written here"
msgstr ""

#. used by: g_base64_decode:
#: gbase64.c:379:1
msgid "Decode a sequence of Base-64 encoded text into binary data"
msgstr ""

#. used by: SECTION:base64
#: gbase64.c:38:1
msgid "@short_description: encodes and decodes data in Base64 format"
msgstr ""

#. used by: g_base64_decode:
#: gbase64.c:381:3
msgid ""
"Return value: a newly allocated buffer containing the binary data that @text "
"represents. The returned buffer must be freed with g_free()."
msgstr ""

#. used by: SECTION:base64
#: gbase64.c:40:6
msgid ""
"Base64 is an encoding that allows a sequence of arbitrary bytes to be "
"encoded as a sequence of printable ASCII characters. For the definition of "
"Base64, see <ulink url=\"http://www.ietf.org/rfc/rfc1421.txt\">RFC 1421</"
"ulink> or <ulink url=\"http://www.ietf.org/rfc/rfc2045.txt\">RFC 2045</"
"ulink>. Base64 is most commonly used as a MIME transfer encoding for email."
msgstr ""

#. used by: g_base64_decode_inplace:
#: gbase64.c:415:2
msgid ""
"Decode a sequence of Base-64 encoded text into binary data by overwriting "
"the input data."
msgstr ""

#. used by: g_base64_decode_inplace:
#: gbase64.c:418:2
msgid ""
"Return value: The binary data that @text responds. This pointer is the same "
"as the input @text."
msgstr ""

#. used by: g_base64_decode_inplace:
#: gbase64.c:421:1
msgid "Since: 2.20"
msgstr ""

#. used by: SECTION:base64
#: gbase64.c:47:5
msgid ""
"GLib supports incremental encoding using g_base64_encode_step() and "
"g_base64_encode_close(). Incremental decoding can be done with "
"g_base64_decode_step(). To encode or decode data in one go, use "
"g_base64_encode() or g_base64_decode(). To avoid memory allocation when "
"decoding, you can use g_base64_decode_inplace()."
msgstr ""

#. used by: SECTION:base64
#: gbase64.c:53:1
msgid "Support for Base64 encoding has been added in GLib 2.12."
msgstr ""

#. used by: g_base64_encode_step:
#: gbase64.c:61:1
msgid "@in: the binary data to encode"
msgstr ""

#. used by: g_base64_encode_step:
#: gbase64.c:62:1
msgid "@len: the length of @in"
msgstr ""

#. used by: g_base64_encode_step:
#: gbase64.c:68:3
msgid ""
"Incrementally encode a sequence of binary data into its Base-64 stringified "
"representation. By calling this function multiple times you can convert data "
"in chunks to avoid having to have the full encoded data in memory."
msgstr ""

#. used by: g_base64_encode_step:
#: gbase64.c:72:2
msgid ""
"When all of the data has been converted you must call g_base64_encode_close"
"() to flush the saved state."
msgstr ""

#. used by: g_base64_encode_step:
#: gbase64.c:75:5
msgid ""
"The output buffer must be large enough to fit all the data that will be "
"written to it. Due to the way base64 encodes you will need at least: (@len / "
"3 + 1) * 4 + 4 bytes (+ 4 may be needed in case of non-zero state). If you "
"enable line-breaking you will need at least: ((@len / 3 + 1) * 4 + 4) / 72 + "
"1 bytes of extra space."
msgstr ""

#. used by: g_base64_encode_step:
#: gbase64.c:81:3
msgid ""
"@break_lines is typically used when putting base64-encoded data in emails. "
"It breaks the lines at 72 columns instead of putting all of the text on the "
"same line. This avoids problems with long lines in the email system."
msgstr ""
