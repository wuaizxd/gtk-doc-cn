# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-04-23 20:09-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"

#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_child_type:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_child_get_valist:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_child_get_property:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_child_set_valist:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_child_set_property:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_add_with_properties:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_child_set:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_child_get:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_set_border_width:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_get_border_width:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_add:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_remove:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_set_resize_mode:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_get_resize_mode:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_set_reallocate_redraws:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: _gtk_container_queue_resize:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: _gtk_container_resize_invalidate:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_forall:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_foreach:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_set_focus_child:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_get_focus_child:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_get_children:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_focus_sort:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_set_focus_chain:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_unset_focus_chain:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_set_focus_vadjustment:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_get_focus_vadjustment:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_set_focus_hadjustment:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_get_focus_hadjustment:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_propagate_draw:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_get_path_for_child:
#: gtkcontainer.c:1032:1 gtkcontainer.c:1081:1 gtkcontainer.c:1121:1
#: gtkcontainer.c:1148:1 gtkcontainer.c:1367:1 gtkcontainer.c:1404:1
#: gtkcontainer.c:1421:1 gtkcontainer.c:1460:1 gtkcontainer.c:1496:1
#: gtkcontainer.c:1533:1 gtkcontainer.c:1550:1 gtkcontainer.c:1680:1
#: gtkcontainer.c:1697:1 gtkcontainer.c:1879:1 gtkcontainer.c:1908:1
#: gtkcontainer.c:1935:1 gtkcontainer.c:1960:1 gtkcontainer.c:1982:1
#: gtkcontainer.c:2678:1 gtkcontainer.c:2804:1 gtkcontainer.c:2905:1
#: gtkcontainer.c:2947:1 gtkcontainer.c:2980:1 gtkcontainer.c:3002:1
#: gtkcontainer.c:3035:1 gtkcontainer.c:3143:1 gtkcontainer.c:3255:1
#: gtkcontainer.c:736:1 gtkcontainer.c:813:1 gtkcontainer.c:883:1
#: gtkcontainer.c:957:1
msgid "@container: a #GtkContainer"
msgstr ""

#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_child_get_valist:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_child_get_property:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_child_set_valist:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_child_set_property:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_child_set:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_child_get:
#: gtkcontainer.c:1033:1 gtkcontainer.c:1122:1 gtkcontainer.c:1149:1
#: gtkcontainer.c:814:1 gtkcontainer.c:884:1 gtkcontainer.c:958:1
msgid "@child: a widget which is a child of @container"
msgstr ""

#. used by: gtk_container_child_set_property:
#: gtkcontainer.c:1034:1
msgid "@property_name: the name of the property to set"
msgstr ""

#. used by: gtk_container_child_set_property:
#: gtkcontainer.c:1035:1
msgid "@value: the value to set the property to"
msgstr ""

#. used by: gtk_container_child_set_property:
#: gtkcontainer.c:1037:1
msgid "Sets a child property for @child and @container."
msgstr ""

#. used by: SECTION:gtkcontainer
#: gtkcontainer.c:104:3
msgid ""
"When gtk_widget_get_preferred_height() is called on a container that is "
"height-for-width, the container must return the height for its minimum "
"width. This is easily achieved by simply calling the reverse apis "
"implemented for itself as follows:"
msgstr ""

#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_add_with_properties:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_add:
#: gtkcontainer.c:1082:1 gtkcontainer.c:1422:1
msgid "@widget: a widget to be placed inside @container"
msgstr ""

#. used by: gtk_container_add_with_properties:
#: gtkcontainer.c:1083:1
msgid "@first_prop_name: the name of the first child property to set"
msgstr ""

#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_add_with_properties:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_child_set:
#: gtkcontainer.c:1084:2 gtkcontainer.c:1124:2
msgid ""
"@Varargs: a %NULL-terminated list of property names and values, starting "
"with @first_prop_name"
msgstr ""

#. used by: gtk_container_add_with_properties:
#: gtkcontainer.c:1087:2
msgid ""
"Adds @widget to @container, setting child properties at the same time. See "
"gtk_container_add() and gtk_container_child_set() for more details."
msgstr ""

#. used by: gtk_container_child_set:
#: gtkcontainer.c:1123:1
msgid "@first_prop_name: the name of the first property to set"
msgstr ""

#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_child_set_valist:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_child_set:
#: gtkcontainer.c:1127:1 gtkcontainer.c:963:1
msgid "Sets one or more child properties for @child and @container."
msgstr ""

#. used by: gtk_container_child_get:
#: gtkcontainer.c:1150:1
msgid "@first_prop_name: the name of the first property to get"
msgstr ""

#. used by: gtk_container_child_get:
#: gtkcontainer.c:1151:2
msgid ""
"@Varargs: return location for the first property, followed optionally by "
"more name/return location pairs, followed by %NULL"
msgstr ""

#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_child_get_valist:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_child_get:
#: gtkcontainer.c:1154:1 gtkcontainer.c:819:1
msgid ""
"Gets the values of one or more child properties for @child and @container."
msgstr ""

#. used by: gtk_container_class_install_child_property:
#: gtkcontainer.c:1175:1
msgid "@cclass: a #GtkContainerClass"
msgstr ""

#. used by: gtk_container_class_install_child_property:
#: gtkcontainer.c:1176:1
msgid "@property_id: the id for the property"
msgstr ""

#. used by: gtk_container_class_install_child_property:
#: gtkcontainer.c:1177:1
msgid "@pspec: the #GParamSpec for the property"
msgstr ""

#. used by: gtk_container_class_install_child_property:
#: gtkcontainer.c:1179:1
msgid "Installs a child property on a container class."
msgstr ""

#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_class_find_child_property:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_class_list_child_properties:
#: gtkcontainer.c:1212:1 gtkcontainer.c:1234:1
msgid "@cclass: (type GtkContainerClass): a #GtkContainerClass"
msgstr ""

#. used by: gtk_container_class_find_child_property:
#: gtkcontainer.c:1213:1
msgid "@property_name: the name of the child property to find"
msgstr ""

#. used by: gtk_container_class_find_child_property:
#: gtkcontainer.c:1214:2
msgid ""
"@returns: (transfer none): the #GParamSpec of the child property or %NULL if "
"@class has no child property with that name."
msgstr ""

#. used by: gtk_container_class_find_child_property:
#: gtkcontainer.c:1217:1
msgid "Finds a child property of a container class by name."
msgstr ""

#. used by: gtk_container_class_list_child_properties:
#: gtkcontainer.c:1235:1
msgid "@n_properties: location to return the number of child properties found"
msgstr ""

#. used by: gtk_container_class_list_child_properties:
#: gtkcontainer.c:1236:3
msgid ""
"@returns: (array length=n_properties) (transfer container): a newly "
"allocated %NULL-terminated array of #GParamSpec*.  The array must be freed "
"with g_free()."
msgstr ""

#. used by: gtk_container_class_list_child_properties:
#: gtkcontainer.c:1240:1
msgid "Returns all child properties of a container class."
msgstr ""

#. used by: SECTION:gtkcontainer
#: gtkcontainer.c:129:2
msgid ""
"Similarly, when gtk_widget_get_preferred_width_for_height() is called for a "
"container or widget that is height-for-width, it then only needs to return "
"the base minimum width like so:"
msgstr ""

#. used by: gtk_container_set_border_width:
#: gtkcontainer.c:1368:2
msgid ""
"@border_width: amount of blank space to leave <emphasis>outside</emphasis> "
"the container. Valid values are in the range 0-65535 pixels."
msgstr ""

#. used by: gtk_container_set_border_width:
#: gtkcontainer.c:1371:1
msgid "Sets the border width of the container."
msgstr ""

#. used by: gtk_container_set_border_width:
#: gtkcontainer.c:1373:8
msgid ""
"The border width of a container is the amount of space to leave around the "
"outside of the container. The only exception to this is #GtkWindow; because "
"toplevel windows can't leave space outside, they leave the space inside. The "
"border is added on all sides of the container. To add space to only one "
"side, one approach is to create a #GtkAlignment widget, call "
"gtk_widget_set_size_request() to give it a size, and place it on the side of "
"the container as a spacer."
msgstr ""

#. used by: gtk_container_get_border_width:
#: gtkcontainer.c:1406:2
msgid ""
"Retrieves the border width of the container. See "
"gtk_container_set_border_width()."
msgstr ""

#. used by: gtk_container_get_border_width:
#: gtkcontainer.c:1409:1
msgid "Return value: the current border width"
msgstr ""

#. used by: gtk_container_add:
#: gtkcontainer.c:1424:8
msgid ""
"Adds @widget to @container. Typically used for simple containers such as "
"#GtkWindow, #GtkFrame, or #GtkButton; for more complicated layout containers "
"such as #GtkBox or #GtkTable, this function will pick default packing "
"parameters that may not be correct.  So consider functions such as "
"gtk_box_pack_start() and gtk_table_attach() as an alternative to "
"gtk_container_add() in those cases. A widget may be added to only one "
"container at a time; you can't place the same widget inside two different "
"containers."
msgstr ""

#. used by: gtk_container_remove:
#: gtkcontainer.c:1461:1
msgid "@widget: a current child of @container"
msgstr ""

#. used by: gtk_container_remove:
#: gtkcontainer.c:1463:9
msgid ""
"Removes @widget from @container. @widget must be inside @container. Note "
"that @container will own a reference to @widget, and that this may be the "
"last reference held; so removing a widget from its container can destroy "
"that widget. If you want to use @widget again, you need to add a reference "
"to it while it's not inside a container, using g_object_ref(). If you don't "
"want to use @widget again it's usually more efficient to simply destroy it "
"directly using gtk_widget_destroy() since this will remove it from the "
"container and help break any circular reference count cycles."
msgstr ""

#. used by: SECTION:gtkcontainer
#: gtkcontainer.c:149:4
msgid ""
"Height for width requests are generally implemented in terms of a virtual "
"allocation of widgets in the input orientation. Assuming an height-for-width "
"request mode, a container would implement the "
"<function>get_preferred_height_for_width()</function> virtual function by "
"first calling gtk_widget_get_preferred_width() for each of its children."
msgstr ""

#. used by: gtk_container_set_resize_mode:
#: gtkcontainer.c:1497:1
msgid "@resize_mode: the new resize mode"
msgstr ""

#. used by: gtk_container_set_resize_mode:
#: gtkcontainer.c:1499:1
msgid "Sets the resize mode for the container."
msgstr ""

#. used by: gtk_container_set_resize_mode:
#: gtkcontainer.c:1501:3
msgid ""
"The resize mode of a container determines whether a resize request will be "
"passed to the container's parent, queued for later execution or executed "
"immediately."
msgstr ""

#. used by: gtk_container_get_resize_mode:
#: gtkcontainer.c:1535:2
msgid ""
"Returns the resize mode for the container. See gtk_container_set_resize_mode "
"()."
msgstr ""

#. used by: gtk_container_get_resize_mode:
#: gtkcontainer.c:1538:1
msgid "Return value: the current resize mode"
msgstr ""

#. used by: SECTION:gtkcontainer
#: gtkcontainer.c:154:4
msgid ""
"For each potential group of children that are lined up horizontally, the "
"values returned by gtk_widget_get_preferred_width() should be collected in "
"an array of #GtkRequestedSize structures. Any child spacing should be "
"removed from the input @for_width and then the collective size should be "
"allocated using the gtk_distribute_natural_allocation() convenience function."
msgstr ""

#. used by: gtk_container_set_reallocate_redraws:
#: gtkcontainer.c:1551:1
msgid ""
"@needs_redraws: the new value for the container's @reallocate_redraws flag"
msgstr ""

#. used by: gtk_container_set_reallocate_redraws:
#: gtkcontainer.c:1553:1
msgid "Sets the @reallocate_redraws flag of the container to the given value."
msgstr ""

#. used by: gtk_container_set_reallocate_redraws:
#: gtkcontainer.c:1555:2
msgid ""
"Containers requesting reallocation redraws get automatically redrawn if any "
"of their children changed allocation."
msgstr ""

#. used by: SECTION:gtkcontainer
#: gtkcontainer.c:159:2
msgid ""
"The container will then move on to request the preferred height for each "
"child by using gtk_widget_get_preferred_height_for_width() and using the "
"sizes stored in the #GtkRequestedSize array."
msgstr ""

#. used by: SECTION:gtkcontainer
#: gtkcontainer.c:162:5
msgid ""
"To allocate a height-for-width container, it's again important to consider "
"that a container must prioritize one dimension over the other. So if a "
"container is a height-for-width container it must first allocate all widgets "
"horizontally using a #GtkRequestedSize array and "
"gtk_distribute_natural_allocation() and then add any extra space (if and "
"where appropriate) for the widget to expand."
msgstr ""

#. used by: SECTION:gtkcontainer
#: gtkcontainer.c:168:9
msgid ""
"After adding all the expand space, the container assumes it was allocated "
"sufficient height to fit all of its content. At this time, the container "
"must use the total horizontal sizes of each widget to request the height-for-"
"width of each of its children and store the requests in a #GtkRequestedSize "
"array for any widgets that stack vertically (for tabular containers this can "
"be generalized into the heights and widths of rows and columns). The "
"vertical space must then again be distributed using "
"gtk_distribute_natural_allocation() while this time considering the "
"allocated height of the widget minus any vertical spacing that the container "
"adds. Then vertical expand space should be added where appropriate and "
"available and the container should go on to actually allocating the child "
"widgets."
msgstr ""

#. used by: _gtk_container_queue_resize:
#: gtkcontainer.c:1682:6
msgid ""
"Determines the \"resize container\" in the hierarchy above this container "
"(typically the toplevel, but other containers can be set as resize "
"containers with gtk_container_set_resize_mode()), marks the container and "
"all parents up to and including the resize container as needing to have "
"sizes recompted, and if necessary adds the resize container to the queue of "
"containers that will be resized out at idle."
msgstr ""

#. used by: _gtk_container_resize_invalidate:
#: gtkcontainer.c:1699:2
msgid ""
"Invalidates cached sizes like _gtk_container_queue_resize() but doesn't "
"actually queue the resize container for resize."
msgstr ""

#. used by: SECTION:gtkcontainer
#: gtkcontainer.c:178:12
msgid ""
"See <link linkend=\"geometry-management\">GtkWidget's geometry management "
"section</link> to learn more about implementing height-for-width geometry "
"management for widgets. </para> </refsect2> <refsect2 id=\"child-properties"
"\"> <title>Child properties</title> <para> GtkContainer introduces "
"<emphasis>child properties</emphasis>. These are object properties that are "
"not specific to either the container or the contained widget, but rather to "
"their relation. Typical examples of child properties are the position or "
"pack-type of a widget which is contained in a #GtkBox."
msgstr ""

#. used by: gtk_container_class_handle_border_width:
#: gtkcontainer.c:1856:1
msgid "@klass: the class struct of a #GtkContainer subclass"
msgstr ""

#. used by: gtk_container_class_handle_border_width:
#: gtkcontainer.c:1858:5
msgid ""
"Modifies a subclass of #GtkContainerClass to automatically add and remove "
"the border-width setting on GtkContainer.  This allows the subclass to "
"ignore the border width in its size request and allocate methods. The intent "
"is for a subclass to invoke this in its class_init function."
msgstr ""

#. used by: gtk_container_class_handle_border_width:
#: gtkcontainer.c:1864:4
msgid ""
"gtk_container_class_handle_border_width() is necessary because it would "
"break API too badly to make this behavior the default. So subclasses must "
"\"opt in\" to the parent class handling border_width for them."
msgstr ""

#. used by: gtk_container_forall:
#: gtkcontainer.c:1880:1
msgid "@callback: (scope call): a callback"
msgstr ""

#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_forall:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_foreach:
#: gtkcontainer.c:1881:1 gtkcontainer.c:1910:1
msgid "@callback_data: callback user data"
msgstr ""

#. used by: gtk_container_forall:
#: gtkcontainer.c:1883:6
msgid ""
"Invokes @callback on each child of @container, including children that are "
"considered \"internal\" (implementation details of the container). \"Internal"
"\" children generally weren't added by the user of the container, but were "
"added by the container implementation itself.  Most applications should use "
"gtk_container_foreach(), rather than gtk_container_forall()."
msgstr ""

#. used by: gtk_container_foreach:
#: gtkcontainer.c:1909:1
msgid "@callback: (scope call):  a callback"
msgstr ""

#. used by: SECTION:gtkcontainer
#: gtkcontainer.c:191:4
msgid ""
"Use gtk_container_class_install_child_property() to install child properties "
"for a container class and gtk_container_class_find_child_property() or "
"gtk_container_class_list_child_properties() to get information about "
"existing child properties."
msgstr ""

#. used by: gtk_container_foreach:
#: gtkcontainer.c:1912:4
msgid ""
"Invokes @callback on each non-internal child of @container. See "
"gtk_container_forall() for details on what constitutes an \"internal\" "
"child.  Most applications should use gtk_container_foreach(), rather than "
"gtk_container_forall()."
msgstr ""

#. used by: gtk_container_set_focus_child:
#: gtkcontainer.c:1936:1
msgid "@child: (allow-none): a #GtkWidget, or %NULL"
msgstr ""

#. used by: gtk_container_set_focus_child:
#: gtkcontainer.c:1938:1
msgid "Sets, or unsets if @child is %NULL, the focused child of @container."
msgstr ""

#. used by: gtk_container_set_focus_child:
#: gtkcontainer.c:1940:3
msgid ""
"This function emits the GtkContainer::set_focus_child signal of @container. "
"Implementations of #GtkContainer can override the default behaviour by "
"overriding the class closure of this signal."
msgstr ""

#. used by: gtk_container_set_focus_child:
#: gtkcontainer.c:1944:2
msgid ""
"This is function is mostly meant to be used by widgets. Applications can use "
"gtk_widget_grab_focus() to manualy set the focus to a specific widget."
msgstr ""

#. used by: SECTION:gtkcontainer
#: gtkcontainer.c:196:17
msgid ""
"To set the value of a child property, use gtk_container_child_set_property"
"(), gtk_container_child_set() or gtk_container_child_set_valist(). To obtain "
"the value of a child property, use gtk_container_child_get_property(), "
"gtk_container_child_get() or gtk_container_child_get_valist(). To emit "
"notification about child property changes, use gtk_widget_child_notify(). </"
"para> </refsect2> <refsect2 id=\"GtkContainer-BUILDER-UI\"> "
"<title>GtkContainer as GtkBuildable</title> <para> The GtkContainer "
"implementation of the GtkBuildable interface supports a &lt;packing&gt; "
"element for children, which can contain multiple &lt;property&gt; elements "
"that specify child properties for the child. <example> <title>Child "
"properties in UI definitions</title>"
msgstr ""

#. used by: gtk_container_get_focus_child:
#: gtkcontainer.c:1962:3
msgid ""
"Returns the current focus child widget inside @container. This is not the "
"currently focused widget. That can be obtained by calling "
"gtk_window_get_focus()."
msgstr ""

#. used by: gtk_container_get_focus_child:
#: gtkcontainer.c:1966:3
msgid ""
"Returns: (transfer none): The child widget which will receive the focus "
"inside @container when the @conatiner is focussed, or %NULL if none is set."
msgstr ""

#. used by: gtk_container_get_focus_child:
#: gtkcontainer.c:1970:1
msgid "Since: 2.14"
msgstr ""

#. used by: gtk_container_get_children:
#: gtkcontainer.c:1984:2
msgid ""
"Returns the container's non-internal children. See gtk_container_forall() "
"for details on what constitutes an \"internal\" child."
msgstr ""

#. used by: gtk_container_get_children:
#: gtkcontainer.c:1987:1
msgid ""
"Return value: (element-type GtkWidget) (transfer container): a newly-"
"allocated list of the container's non-internal children."
msgstr ""

#. used by: SECTION:gtkcontainer
#: gtkcontainer.c:223:6
msgid ""
"</example> Since 2.16, child properties can also be marked as translatable "
"using the same \"translatable\", \"comments\" and \"context\" attributes "
"that are used for regular properties. </para> </refsect2>"
msgstr ""

#. used by: gtk_container_focus_sort:
#: gtkcontainer.c:2679:2
msgid ""
"@children:  a list of descendents of @container (they don't have to be "
"direct children)"
msgstr ""

#. used by: gtk_container_focus_sort:
#: gtkcontainer.c:2681:1
msgid "@direction: focus direction"
msgstr ""

#. used by: gtk_container_focus_sort:
#: gtkcontainer.c:2682:5
msgid ""
"@old_focus: (allow-none): widget to use for the starting position, or %NULL "
"to determine this automatically. (Note, this argument isn't used for "
"GTK_DIR_TAB_*, which is the only @direction we use currently, so perhaps "
"this argument should be removed)"
msgstr ""

#. used by: gtk_container_focus_sort:
#: gtkcontainer.c:2688:2
msgid ""
"Sorts @children in the correct order for focusing with direction type "
"@direction."
msgstr ""

#. used by: gtk_container_focus_sort:
#: gtkcontainer.c:2691:3
msgid ""
"Return value: a copy of @children, sorted in correct focusing order, with "
"children that aren't suitable for focusing in this direction removed."
msgstr ""

#. used by: gtk_container_set_focus_chain:
#: gtkcontainer.c:2805:2
msgid ""
"@focusable_widgets: (transfer none) (element-type GtkWidget): the new focus "
"chain"
msgstr ""

#. used by: gtk_container_set_focus_chain:
#: gtkcontainer.c:2808:1
msgid "Sets a focus chain, overriding the one computed automatically by GTK+."
msgstr ""

#. used by: gtk_container_set_focus_chain:
#: gtkcontainer.c:2810:5
msgid ""
"In principle each widget in the chain should be a descendant of the "
"container, but this is not enforced by this method, since it's allowed to "
"set the focus chain before you pack the widgets, or have a widget in the "
"chain that isn't always packed. The necessary checks are done when the focus "
"chain is actually traversed."
msgstr ""

#. used by: gtk_container_get_focus_chain:
#: gtkcontainer.c:2865:1
msgid "@container:         a #GtkContainer"
msgstr ""

#. used by: gtk_container_get_focus_chain:
#: gtkcontainer.c:2866:6
msgid ""
"@focusable_widgets: (element-type GtkWidget) (out) (transfer container): "
"location to store the focus chain of the container, or %NULL. You should "
"free this list using g_list_free() when you are done with it, however no "
"additional reference count is added to the individual widgets in the focus "
"chain."
msgstr ""

#. used by: gtk_container_get_focus_chain:
#: gtkcontainer.c:2873:5
msgid ""
"Retrieves the focus chain of the container, if one has been set explicitly. "
"If no focus chain has been explicitly set, GTK+ computes the focus chain "
"based on the positions of the children. In that case, GTK+ stores %NULL in "
"@focusable_widgets and returns %FALSE."
msgstr ""

#. used by: gtk_container_get_focus_chain:
#: gtkcontainer.c:2879:2
msgid ""
"Return value: %TRUE if the focus chain of the container has been set "
"explicitly."
msgstr ""

#. used by: gtk_container_unset_focus_chain:
#: gtkcontainer.c:2907:1
msgid ""
"Removes a focus chain explicitly set with gtk_container_set_focus_chain()."
msgstr ""

#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_set_focus_vadjustment:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_set_focus_hadjustment:
#: gtkcontainer.c:2948:2 gtkcontainer.c:3003:2
msgid ""
"@adjustment: an adjustment which should be adjusted when the focus is moved "
"among the descendents of @container"
msgstr ""

#. used by: gtk_container_set_focus_vadjustment:
#: gtkcontainer.c:2951:6
msgid ""
"Hooks up an adjustment to focus handling in a container, so when a child of "
"the container is focused, the adjustment is scrolled to show that widget. "
"This function sets the vertical alignment. See "
"gtk_scrolled_window_get_vadjustment() for a typical way of obtaining the "
"adjustment and gtk_container_set_focus_hadjustment() for setting the "
"horizontal adjustment."
msgstr ""

#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_set_focus_vadjustment:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_set_focus_hadjustment:
#: gtkcontainer.c:2958:2 gtkcontainer.c:3013:2
msgid ""
"The adjustments have to be in pixel units and in the same coordinate system "
"as the allocation for immediate children of the container."
msgstr ""

#. used by: gtk_container_get_focus_vadjustment:
#: gtkcontainer.c:2982:2
msgid ""
"Retrieves the vertical focus adjustment for the container. See "
"gtk_container_set_focus_vadjustment()."
msgstr ""

#. used by: gtk_container_get_focus_vadjustment:
#: gtkcontainer.c:2985:2
msgid ""
"Return value: (transfer none): the vertical focus adjustment, or %NULL if "
"none has been set."
msgstr ""

#. used by: gtk_container_set_focus_hadjustment:
#: gtkcontainer.c:3006:6
msgid ""
"Hooks up an adjustment to focus handling in a container, so when a child of "
"the container is focused, the adjustment is scrolled to show that widget. "
"This function sets the horizontal alignment. See "
"gtk_scrolled_window_get_hadjustment() for a typical way of obtaining the "
"adjustment and gtk_container_set_focus_vadjustment() for setting the "
"vertical adjustment."
msgstr ""

#. used by: gtk_container_get_focus_hadjustment:
#: gtkcontainer.c:3037:2
msgid ""
"Retrieves the horizontal focus adjustment for the container. See "
"gtk_container_set_focus_hadjustment ()."
msgstr ""

#. used by: gtk_container_get_focus_hadjustment:
#: gtkcontainer.c:3040:2
msgid ""
"Return value: (transfer none): the horizontal focus adjustment, or %NULL if "
"none has been set."
msgstr ""

#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_propagate_draw:
#. #-#-#-#-#  gtkcontainer.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: gtk_container_get_path_for_child:
#: gtkcontainer.c:3144:1 gtkcontainer.c:3256:1
msgid "@child: a child of @container"
msgstr ""

#. used by: gtk_container_propagate_draw:
#: gtkcontainer.c:3145:3
msgid ""
"@cr: Cairo context as passed to the container. If you want to use @cr in "
"container's draw function, consider using cairo_save() and cairo_restore() "
"before calling this function."
msgstr ""

#. used by: gtk_container_propagate_draw:
#: gtkcontainer.c:3149:6
msgid ""
"When a container receives a call to the draw function, it must send "
"synthetic #GtkWidget::draw calls to all children that don't have their own "
"#GdkWindows. This function provides a convenient way of doing this. A "
"container, when it receives a call to its #GtkWidget::draw function, calls "
"gtk_container_propagate_draw() once for each child, passing in the @cr the "
"container received."
msgstr ""

#. used by: gtk_container_propagate_draw:
#: gtkcontainer.c:3156:4
msgid ""
"gtk_container_propagate_draw() takes care of translating the origin of @cr, "
"and deciding whether the draw needs to be sent to the child. It is a "
"convenient and optimized way of getting the same effect as calling "
"gtk_widget_draw() on the child directly."
msgstr ""

#. used by: gtk_container_propagate_draw:
#: gtkcontainer.c:3161:3
msgid ""
"In most cases, a container can simply either inherit the #GtkWidget::draw "
"implementation from #GtkContainer, or do some drawing and then chain to "
"the ::draw implementation from #GtkContainer."
msgstr ""

#. used by: gtk_container_get_path_for_child:
#: gtkcontainer.c:3258:2
msgid ""
"Returns a newly created widget path representing all the widget hierarchy "
"from the toplevel down to @child (this one not being included)."
msgstr ""

#. used by: gtk_container_get_path_for_child:
#: gtkcontainer.c:3261:1
msgid "Returns: A newly created #GtkWidgetPath"
msgstr ""

#. used by: SECTION:gtkcontainer
#: gtkcontainer.c:53:1
msgid "@Short_description: Base class for widgets which contain other widgets"
msgstr ""

#. used by: SECTION:gtkcontainer
#: gtkcontainer.c:54:1
msgid "@Title: GtkContainer"
msgstr ""

#. used by: SECTION:gtkcontainer
#: gtkcontainer.c:56:6
msgid ""
"A GTK+ user interface is constructed by nesting widgets inside widgets. "
"Container widgets are the inner nodes in the resulting tree of widgets: they "
"contain other widgets. So, for example, you might have a #GtkWindow "
"containing a #GtkFrame containing a #GtkLabel. If you wanted an image "
"instead of a textual label inside the frame, you might replace the #GtkLabel "
"widget with a #GtkImage widget."
msgstr ""

#. used by: SECTION:gtkcontainer
#: gtkcontainer.c:63:2
msgid ""
"There are two major kinds of container widgets in GTK+. Both are subclasses "
"of the abstract GtkContainer base class."
msgstr ""

#. used by: SECTION:gtkcontainer
#: gtkcontainer.c:66:5
msgid ""
"The first type of container widget has a single child widget and derives "
"from #GtkBin. These containers are <emphasis>decorators</emphasis>, which "
"add some kind of functionality to the child. For example, a #GtkButton makes "
"its child into a clickable button; a #GtkFrame draws a frame around its "
"child and a #GtkWindow places its child widget inside a top-level window."
msgstr ""

#. used by: SECTION:gtkcontainer
#: gtkcontainer.c:72:5
msgid ""
"The second type of container can have more than one child; its purpose is to "
"manage <emphasis>layout</emphasis>. This means that these containers assign "
"sizes and positions to their children. For example, a #GtkHBox arranges its "
"children in a horizontal row, and a #GtkTable arranges the widgets it "
"contains in a two-dimensional grid."
msgstr ""

#. used by: gtk_container_child_type:
#: gtkcontainer.c:738:1
msgid "Returns the type of the children supported by the container."
msgstr ""

#. used by: gtk_container_child_type:
#: gtkcontainer.c:740:3
msgid ""
"Note that this may return %G_TYPE_NONE to indicate that no more children can "
"be added, e.g. for a #GtkPaned which already has two children."
msgstr ""

#. used by: gtk_container_child_type:
#: gtkcontainer.c:744:1
msgid "Return value: a #GType."
msgstr ""

#. used by: SECTION:gtkcontainer
#: gtkcontainer.c:78:7
msgid ""
"<refsect2 id=\"container-geometry-management\"> <title>Height for width "
"geometry management</title> <para> GTK+ uses a height-for-width (and width-"
"for-height) geometry management system. Height-for-width means that a widget "
"can change how much vertical space it needs, depending on the amount of "
"horizontal space that it is given (and similar for width-for-height)."
msgstr ""

#. used by: gtk_container_child_get_valist:
#: gtkcontainer.c:815:1
msgid "@first_property_name: the name of the first property to get"
msgstr ""

#. used by: gtk_container_child_get_valist:
#: gtkcontainer.c:816:2
msgid ""
"@var_args: return location for the first property, followed optionally by "
"more name/return location pairs, followed by %NULL"
msgstr ""

#. used by: SECTION:gtkcontainer
#: gtkcontainer.c:86:9
msgid ""
"There are some things to keep in mind when implementing container widgets "
"that make use of GTK+'s height for width geometry management system. First, "
"it's important to note that a container must prioritize one of its "
"dimensions, that is to say that a widget or container can only have a "
"#GtkSizeRequestMode that is %GTK_SIZE_REQUEST_HEIGHT_FOR_WIDTH or "
"%GTK_SIZE_REQUEST_WIDTH_FOR_HEIGHT. However, every widget and container must "
"be able to respond to the APIs for both dimensions, i.e. even if a widget "
"has a request mode that is height-for-width, it is possible that its parent "
"will request its sizes using the width-for-height APIs."
msgstr ""

#. used by: gtk_container_child_get_property:
#: gtkcontainer.c:885:1
msgid "@property_name: the name of the property to get"
msgstr ""

#. used by: gtk_container_child_get_property:
#: gtkcontainer.c:886:1
msgid "@value: a location to return the value"
msgstr ""

#. used by: gtk_container_child_get_property:
#: gtkcontainer.c:888:1
msgid "Gets the value of a child property for @child and @container."
msgstr ""

#. used by: gtk_container_child_set_valist:
#: gtkcontainer.c:959:1
msgid "@first_property_name: the name of the first property to set"
msgstr ""

#. used by: SECTION:gtkcontainer
#: gtkcontainer.c:96:2
msgid ""
"To ensure that everything works properly, here are some guidelines to follow "
"when implementing height-for-width (or width-for-height) containers."
msgstr ""

#. used by: gtk_container_child_set_valist:
#: gtkcontainer.c:960:2
msgid ""
"@var_args: a %NULL-terminated list of property names and values, starting "
"with @first_prop_name"
msgstr ""

#. used by: SECTION:gtkcontainer
#: gtkcontainer.c:99:4
msgid ""
"Each request mode involves 2 virtual methods. Height-for-width apis run "
"through gtk_widget_get_preferred_width() and then through "
"gtk_widget_get_preferred_height_for_width(). When handling requests in the "
"opposite #GtkSizeRequestMode it is important that every widget request at "
"least enough space to display all of its content at all times."
msgstr ""

#. used by: GTK_CONTAINER_WARN_INVALID_CHILD_PROPERTY_ID:
#: gtkcontainer.h:202:2
msgid ""
"@object: the #GObject on which set_child_property() or get_child_property() "
"was called"
msgstr ""

#. used by: GTK_CONTAINER_WARN_INVALID_CHILD_PROPERTY_ID:
#: gtkcontainer.h:204:1
msgid "@property_id: the numeric id of the property"
msgstr ""

#. used by: GTK_CONTAINER_WARN_INVALID_CHILD_PROPERTY_ID:
#: gtkcontainer.h:205:1
msgid "@pspec: the #GParamSpec of the property"
msgstr ""

#. used by: GTK_CONTAINER_WARN_INVALID_CHILD_PROPERTY_ID:
#: gtkcontainer.h:207:2
msgid ""
"This macro should be used to emit a standard warning about unexpected "
"properties in set_child_property() and get_child_property() implementations."
msgstr ""
