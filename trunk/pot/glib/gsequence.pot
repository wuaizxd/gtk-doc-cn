# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-04-23 10:05-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"

#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_free:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_foreach:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_prepend:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_sort:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_insert_sorted:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_search:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_lookup:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_sort_iter:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_insert_sorted_iter:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_search_iter:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_lookup_iter:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_get_length:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_get_end_iter:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_get_begin_iter:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_get_iter_at_pos:
#: gsequence.c:1008:1 gsequence.c:1062:1 gsequence.c:1194:1 gsequence.c:1210:1
#: gsequence.c:1228:1 gsequence.c:1261:1 gsequence.c:268:1 gsequence.c:332:1
#: gsequence.c:461:1 gsequence.c:651:1 gsequence.c:680:1 gsequence.c:752:1
#: gsequence.c:792:1 gsequence.c:832:1 gsequence.c:946:1
msgid "@seq: a #GSequence"
msgstr ""

#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_search:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_insert_sorted_iter:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_search_iter:
#: gsequence.c:1009:1 gsequence.c:753:1 gsequence.c:947:1
msgid "@data: data for the new item"
msgstr ""

#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_search_iter:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_lookup_iter:
#: gsequence.c:1010:5 gsequence.c:1064:5
msgid ""
"@iter_cmp: the #GSequenceIterCompare function used to compare iterators in "
"the sequence. It is called with two iterators pointing into @seq. It should "
"return 0 if the iterators are equal, a negative value if the first iterator "
"comes before the second, and a positive value if the second iterator comes "
"before the first."
msgstr ""

#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_search_iter:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_lookup_iter:
#: gsequence.c:1015:1 gsequence.c:1069:1
msgid "@cmp_data: user data passed to @iter_cmp"
msgstr ""

#. used by: g_sequence_search_iter:
#: gsequence.c:1017:3
msgid ""
"Like g_sequence_search(), but uses a #GSequenceIterCompareFunc instead of a "
"#GCompareDataFunc as the compare function."
msgstr ""

#. used by: g_sequence_search_iter:
#: gsequence.c:1021:2
msgid ""
"If you are simply searching for an existing element of the sequence, "
"consider using g_sequence_lookup_iter()."
msgstr ""

#. used by: g_sequence_search_iter:
#: gsequence.c:1024:2
msgid ""
"Return value: a #GSequenceIter pointing to the position in @seq where @data "
"would have been inserted according to @iter_cmp and @cmp_data."
msgstr ""

#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_new:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_free:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_foreach_range:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_foreach:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_range_get_midpoint:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_iter_compare:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_append:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_prepend:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_insert_before:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_remove:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_remove_range:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_move_range:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_sort:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_insert_sorted:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_sort_changed:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_search:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_sort_iter:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_sort_changed_iter:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_insert_sorted_iter:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_search_iter:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_iter_get_sequence:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_get:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_set:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_get_length:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_get_end_iter:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_get_begin_iter:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_get_iter_at_pos:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_move:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_iter_is_end:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_iter_is_begin:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_iter_get_position:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_iter_next:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_iter_prev:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_iter_move:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_swap:
#: gsequence.c:1027:1 gsequence.c:1119:1 gsequence.c:1144:1 gsequence.c:1164:1
#: gsequence.c:1200:1 gsequence.c:1216:1 gsequence.c:1234:1 gsequence.c:1269:1
#: gsequence.c:1293:1 gsequence.c:1320:1 gsequence.c:1338:1 gsequence.c:1356:1
#: gsequence.c:1375:1 gsequence.c:1395:1 gsequence.c:1418:1 gsequence.c:1443:1
#: gsequence.c:249:1 gsequence.c:274:1 gsequence.c:298:1 gsequence.c:339:1
#: gsequence.c:371:1 gsequence.c:406:1 gsequence.c:441:1 gsequence.c:468:1
#: gsequence.c:497:1 gsequence.c:526:1 gsequence.c:554:1 gsequence.c:583:1
#: gsequence.c:660:1 gsequence.c:695:1 gsequence.c:731:1 gsequence.c:770:1
#: gsequence.c:843:1 gsequence.c:897:1 gsequence.c:961:1
msgid "Since: 2.14"
msgstr ""

#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_lookup:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_lookup_iter:
#: gsequence.c:1063:1 gsequence.c:793:1
msgid "@data: data to lookup"
msgstr ""

#. used by: g_sequence_lookup_iter:
#: gsequence.c:1071:3
msgid ""
"Like g_sequence_lookup(), but uses a #GSequenceIterCompareFunc instead of a "
"#GCompareDataFunc as the compare function."
msgstr ""

#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_lookup:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_lookup_iter:
#: gsequence.c:1075:2 gsequence.c:807:2
msgid ""
"Return value: an #GSequenceIter pointing to the position of the first item "
"found equal to @data according to @cmp_func and @cmp_data."
msgstr ""

#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_lookup:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_lookup_iter:
#: gsequence.c:1078:1 gsequence.c:810:1
msgid "Since: 2.28"
msgstr ""

#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_insert_before:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_remove:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_sort_changed_iter:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_iter_get_sequence:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_get:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_set:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_iter_is_end:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_iter_is_begin:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_iter_get_position:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_iter_next:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_iter_prev:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_iter_move:
#: gsequence.c:1113:1 gsequence.c:1138:1 gsequence.c:1157:1 gsequence.c:1314:1
#: gsequence.c:1332:1 gsequence.c:1350:1 gsequence.c:1368:1 gsequence.c:1387:1
#: gsequence.c:1407:1 gsequence.c:490:1 gsequence.c:518:1 gsequence.c:885:1
msgid "@iter: a #GSequenceIter"
msgstr ""

#. used by: g_sequence_iter_get_sequence:
#: gsequence.c:1115:1
msgid "Returns the #GSequence that @iter points into."
msgstr ""

#. used by: g_sequence_iter_get_sequence:
#: gsequence.c:1117:1
msgid "Return value: the #GSequence that @iter points into."
msgstr ""

#. used by: g_sequence_get:
#: gsequence.c:1140:1
msgid "Returns the data that @iter points to."
msgstr ""

#. used by: g_sequence_get:
#: gsequence.c:1142:1
msgid "Return value: the data that @iter points to"
msgstr ""

#. used by: g_sequence_set:
#: gsequence.c:1158:1
msgid "@data: new data for the item"
msgstr ""

#. used by: g_sequence_set:
#: gsequence.c:1160:3
msgid ""
"Changes the data for the item pointed to by @iter to be @data. If the "
"sequence has a data destroy function associated with it, that function is "
"called on the existing data that @iter pointed to."
msgstr ""

#. used by: g_sequence_get_length:
#: gsequence.c:1196:1
msgid "Returns the length of @seq"
msgstr ""

#. used by: g_sequence_get_length:
#: gsequence.c:1198:1
msgid "Return value: the length of @seq"
msgstr ""

#. used by: g_sequence_get_end_iter:
#: gsequence.c:1212:1
msgid "Returns the end iterator for @seg"
msgstr ""

#. used by: g_sequence_get_end_iter:
#: gsequence.c:1214:1
msgid "Return value: the end iterator for @seq"
msgstr ""

#. used by: g_sequence_get_begin_iter:
#: gsequence.c:1230:1
msgid "Returns the begin iterator for @seq."
msgstr ""

#. used by: g_sequence_get_begin_iter:
#: gsequence.c:1232:1
msgid "Return value: the begin iterator for @seq."
msgstr ""

#. used by: g_sequence_get_iter_at_pos:
#: gsequence.c:1262:1
msgid "@pos: a position in @seq, or -1 for the end."
msgstr ""

#. used by: g_sequence_get_iter_at_pos:
#: gsequence.c:1264:2
msgid ""
"Returns the iterator at position @pos. If @pos is negative or larger than "
"the number of items in @seq, the end iterator is returned."
msgstr ""

#. used by: g_sequence_get_iter_at_pos:
#: gsequence.c:1267:1
msgid "Return value: The #GSequenceIter at position @pos"
msgstr ""

#. used by: g_sequence_move:
#: gsequence.c:1284:1
msgid "@src: a #GSequenceIter pointing to the item to move"
msgstr ""

#. used by: g_sequence_move:
#: gsequence.c:1285:2
msgid ""
"@dest: a #GSequenceIter pointing to the position to which the item is moved."
msgstr ""

#. used by: g_sequence_move:
#: gsequence.c:1288:4
msgid ""
"Moves the item pointed to by @src to the position indicated by @dest. After "
"calling this function @dest will point to the position immediately after "
"@src. It is allowed for @src and @dest to point into different sequences."
msgstr ""

#. used by: g_sequence_iter_is_end:
#: gsequence.c:1316:1
msgid "Returns whether @iter is the end iterator"
msgstr ""

#. used by: g_sequence_iter_is_end:
#: gsequence.c:1318:1
msgid "Return value: Whether @iter is the end iterator."
msgstr ""

#. used by: g_sequence_iter_is_begin:
#: gsequence.c:1334:1
msgid "Returns whether @iter is the begin iterator"
msgstr ""

#. used by: g_sequence_iter_is_begin:
#: gsequence.c:1336:1
msgid "Return value: whether @iter is the begin iterator"
msgstr ""

#. used by: g_sequence_iter_get_position:
#: gsequence.c:1352:1
msgid "Returns the position of @iter"
msgstr ""

#. used by: g_sequence_iter_get_position:
#: gsequence.c:1354:1
msgid "Return value: the position of @iter"
msgstr ""

#. used by: g_sequence_iter_next:
#: gsequence.c:1370:2
msgid ""
"Returns an iterator pointing to the next position after @iter. If @iter is "
"the end iterator, the end iterator is returned."
msgstr ""

#. used by: g_sequence_iter_next:
#: gsequence.c:1373:1
msgid ""
"Return value: a #GSequenceIter pointing to the next position after @iter."
msgstr ""

#. used by: g_sequence_iter_prev:
#: gsequence.c:1389:2
msgid ""
"Returns an iterator pointing to the previous position before @iter. If @iter "
"is the begin iterator, the begin iterator is returned."
msgstr ""

#. used by: g_sequence_iter_prev:
#: gsequence.c:1392:2
msgid ""
"Return value: a #GSequenceIter pointing to the previous position before "
"@iter."
msgstr ""

#. used by: g_sequence_iter_move:
#: gsequence.c:1408:2
msgid ""
"@delta: A positive or negative number indicating how many positions away "
"from @iter the returned #GSequenceIter will be."
msgstr ""

#. used by: g_sequence_iter_move:
#: gsequence.c:1411:4
msgid ""
"Returns the #GSequenceIter which is @delta positions away from @iter. If "
"@iter is closer than -@delta positions to the beginning of the sequence, the "
"begin iterator is returned. If @iter is closer than @delta positions to the "
"end of the sequence, the end iterator is returned."
msgstr ""

#. used by: g_sequence_iter_move:
#: gsequence.c:1416:1
msgid ""
"Return value: a #GSequenceIter which is @delta positions away from @iter."
msgstr ""

#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GSequenceIterCompareFunc:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_iter_compare:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_swap:
#: gsequence.c:1437:1 gsequence.c:395:1 gsequence.c:78:1
msgid "@a: a #GSequenceIter"
msgstr ""

#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: GSequenceIterCompareFunc:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_iter_compare:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_swap:
#: gsequence.c:1438:1 gsequence.c:396:1 gsequence.c:79:1
msgid "@b: a #GSequenceIter"
msgstr ""

#. used by: g_sequence_swap:
#: gsequence.c:1440:2
msgid ""
"Swaps the items pointed to by @a and @b. It is allowed for @a and @b to "
"point into difference sequences."
msgstr ""

#. used by: g_sequence_new:
#: gsequence.c:241:1
msgid "@data_destroy: a #GDestroyNotify function, or %NULL"
msgstr ""

#. used by: g_sequence_new:
#: gsequence.c:243:3
msgid ""
"Creates a new GSequence. The @data_destroy function, if non-%NULL will be "
"called on all items when the sequence is destroyed and on items that are "
"removed from the sequence."
msgstr ""

#. used by: g_sequence_new:
#: gsequence.c:247:1
msgid "Return value: a new #GSequence"
msgstr ""

#. used by: g_sequence_free:
#: gsequence.c:270:3
msgid ""
"Frees the memory allocated for @seq. If @seq has a data destroy function "
"associated with it, that function is called on all items in @seq."
msgstr ""

#. used by: SECTION:sequence
#: gsequence.c:29:1
msgid "@title: Sequences"
msgstr ""

#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_foreach_range:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_range_get_midpoint:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_remove_range:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_move_range:
#: gsequence.c:290:1 gsequence.c:358:1 gsequence.c:546:1 gsequence.c:571:1
msgid "@begin: a #GSequenceIter"
msgstr ""

#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_foreach_range:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_range_get_midpoint:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_remove_range:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_move_range:
#: gsequence.c:291:1 gsequence.c:359:1 gsequence.c:547:1 gsequence.c:572:1
msgid "@end: a #GSequenceIter"
msgstr ""

#. used by: g_sequence_foreach_range:
#: gsequence.c:292:1
msgid "@func: a #GFunc"
msgstr ""

#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_foreach_range:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_foreach:
#: gsequence.c:293:1 gsequence.c:334:1
msgid "@user_data: user data passed to @func"
msgstr ""

#. used by: g_sequence_foreach_range:
#: gsequence.c:295:2
msgid ""
"Calls @func for each item in the range (@begin, @end) passing @user_data to "
"the function."
msgstr ""

#. used by: SECTION:sequence
#: gsequence.c:30:1
msgid "@short_description: scalable lists"
msgstr ""

#. used by: SECTION:sequence
#: gsequence.c:32:7
msgid ""
"The #GSequence data structure has the API of a list, but is implemented "
"internally with a balanced binary tree. This means that it is possible to "
"maintain a sorted list of n elements in time O(n log n). The data contained "
"in each element can be either integer values, by using of the <link linkend="
"\"glib-Type-Conversion-Macros\">Type Conversion Macros</link>, or simply "
"pointers to any type of data."
msgstr ""

#. used by: g_sequence_foreach:
#: gsequence.c:333:1
msgid "@func: the function to call for each item in @seq"
msgstr ""

#. used by: g_sequence_foreach:
#: gsequence.c:336:2
msgid ""
"Calls @func for each item in the sequence passing @user_data to the function."
msgstr ""

#. used by: g_sequence_range_get_midpoint:
#: gsequence.c:361:3
msgid ""
"Finds an iterator somewhere in the range (@begin, @end). This iterator will "
"be close to the middle of the range, but is not guaranteed to be "
"<emphasis>exactly</emphasis> in the middle."
msgstr ""

#. used by: g_sequence_range_get_midpoint:
#: gsequence.c:365:2
msgid ""
"The @begin and @end iterators must both point to the same sequence and "
"@begin must come before or be equal to @end in the sequence."
msgstr ""

#. used by: g_sequence_range_get_midpoint:
#: gsequence.c:368:2
msgid ""
"Return value: A #GSequenceIter pointing somewhere in the (@begin, @end) "
"range."
msgstr ""

#. used by: g_sequence_iter_compare:
#: gsequence.c:398:2
msgid ""
"Returns a negative number if @a comes before @b, 0 if they are equal, and a "
"positive number if @a comes after @b."
msgstr ""

#. used by: SECTION:sequence
#: gsequence.c:40:8
msgid ""
"A #GSequence is accessed through <firstterm>iterators</firstterm>, "
"represented by a #GSequenceIter. An iterator represents a position between "
"two elements of the sequence. For example, the <firstterm>begin</firstterm> "
"iterator represents the gap immediately before the first element of the "
"sequence, and the <firstterm>end</firstterm> iterator represents the gap "
"immediately after the last element. In an empty sequence, the begin and end "
"iterators are the same."
msgstr ""

#. used by: g_sequence_iter_compare:
#: gsequence.c:401:1
msgid "The @a and @b iterators must point into the same sequence."
msgstr ""

#. used by: g_sequence_iter_compare:
#: gsequence.c:403:2
msgid ""
"Return value: A negative number if @a comes before @b, 0 if they are equal, "
"and a positive number if @a comes after @b."
msgstr ""

#. used by: g_sequence_append:
#: gsequence.c:434:1
msgid "@seq: a #GSequencePointer"
msgstr ""

#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_append:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_prepend:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_insert_before:
#: gsequence.c:435:1 gsequence.c:462:1 gsequence.c:491:1
msgid "@data: the data for the new item"
msgstr ""

#. used by: g_sequence_append:
#: gsequence.c:437:1
msgid "Adds a new item to the end of @seq."
msgstr ""

#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_append:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_prepend:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_insert_before:
#: gsequence.c:439:1 gsequence.c:466:1 gsequence.c:495:1
msgid "Return value: an iterator pointing to the new item"
msgstr ""

#. used by: g_sequence_prepend:
#: gsequence.c:464:1
msgid "Adds a new item to the front of @seq"
msgstr ""

#. used by: SECTION:sequence
#: gsequence.c:49:6
msgid ""
"Some methods on #GSequence operate on ranges of items. For example "
"g_sequence_foreach_range() will call a user-specified function on each "
"element with the given range. The range is delimited by the gaps represented "
"by the passed-in iterators, so if you pass in the begin and end iterators, "
"the range in question is the entire sequence."
msgstr ""

#. used by: g_sequence_insert_before:
#: gsequence.c:493:1
msgid "Inserts a new item just before the item pointed to by @iter."
msgstr ""

#. used by: g_sequence_remove:
#: gsequence.c:520:2
msgid ""
"Removes the item pointed to by @iter. It is an error to pass the end "
"iterator to this function."
msgstr ""

#. used by: g_sequence_remove:
#: gsequence.c:523:2
msgid ""
"If the sequnce has a data destroy function associated with it, this function "
"is called on the data for the removed item."
msgstr ""

#. used by: g_sequence_remove_range:
#: gsequence.c:549:1
msgid "Removes all items in the (@begin, @end) range."
msgstr ""

#. used by: g_sequence_remove_range:
#: gsequence.c:551:2
msgid ""
"If the sequence has a data destroy function associated with it, this "
"function is called on the data for the removed items."
msgstr ""

#. used by: SECTION:sequence
#: gsequence.c:56:3
msgid ""
"The function g_sequence_get() is used with an iterator to access the element "
"immediately following the gap that the iterator represents. The iterator is "
"said to <firstterm>point</firstterm> to that element."
msgstr ""

#. used by: g_sequence_move_range:
#: gsequence.c:570:1
msgid "@dest: a #GSequenceIter"
msgstr ""

#. used by: g_sequence_move_range:
#: gsequence.c:574:4
msgid ""
"Inserts the (@begin, @end) range at the destination pointed to by ptr. The "
"@begin and @end iters must point into the same sequence. It is allowed for "
"@dest to point to a different sequence than the one pointed into by @begin "
"and @end."
msgstr ""

#. used by: g_sequence_move_range:
#: gsequence.c:579:3
msgid ""
"If @dest is NULL, the range indicated by @begin and @end is removed from the "
"sequence. If @dest iter points to a place within the (@begin, @end) range, "
"the range does not move."
msgstr ""

#. used by: SECTION:sequence
#: gsequence.c:60:7
msgid ""
"Iterators are stable across most operations on a #GSequence. For example an "
"iterator pointing to some element of a sequence will continue to point to "
"that element even after the sequence is sorted. Even moving an element to "
"another sequence using for example g_sequence_move_range() will not "
"invalidate the iterators pointing to it. The only operation that will "
"invalidate an iterator is when the element it points to is removed from any "
"sequence."
msgstr ""

#. used by: g_sequence_sort:
#: gsequence.c:652:4
msgid ""
"@cmp_func: the #GCompareDataFunc used to sort @seq. This function is passed "
"two items of @seq and should return 0 if they are equal, a negative value if "
"the first comes before the second, and a positive value if the second comes "
"before the first."
msgstr ""

#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_sort:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_sort_iter:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_sort_changed_iter:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_insert_sorted_iter:
#: gsequence.c:656:1 gsequence.c:838:1 gsequence.c:891:1 gsequence.c:953:1
msgid "@cmp_data: user data passed to @cmp_func"
msgstr ""

#. used by: g_sequence_sort:
#: gsequence.c:658:1
msgid "Sorts @seq using @cmp_func."
msgstr ""

#. used by: g_sequence_insert_sorted:
#: gsequence.c:681:1
msgid "@data: the data to insert"
msgstr ""

#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_insert_sorted:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_sort_changed:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_search:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_lookup:
#: gsequence.c:682:5 gsequence.c:719:5 gsequence.c:754:5 gsequence.c:794:5
msgid ""
"@cmp_func: the #GCompareDataFunc used to compare items in the sequence. It "
"is called with two items of the @seq and @user_data. It should return 0 if "
"the items are equal, a negative value if the first item comes before the "
"second, and a positive value if the second item comes before the first."
msgstr ""

#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_insert_sorted:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_sort_changed:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_search:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_lookup:
#: gsequence.c:687:1 gsequence.c:724:1 gsequence.c:759:1 gsequence.c:799:1
msgid "@cmp_data: user data passed to @cmp_func."
msgstr ""

#. used by: g_sequence_insert_sorted:
#: gsequence.c:689:3
msgid ""
"Inserts @data into @sequence using @func to determine the new position. The "
"sequence must already be sorted according to @cmp_func; otherwise the new "
"position of @data is undefined."
msgstr ""

#. used by: g_sequence_insert_sorted:
#: gsequence.c:693:1
msgid "Return value: a #GSequenceIter pointing to the new item."
msgstr ""

#. used by: g_sequence_sort_changed:
#: gsequence.c:718:1
msgid "@iter: A #GSequenceIter"
msgstr ""

#. used by: GSequenceIter:
#: gsequence.c:72:2
msgid ""
"The #GSequenceIter struct is an opaque data type representing an iterator "
"pointing into a #GSequence."
msgstr ""

#. used by: g_sequence_sort_changed:
#: gsequence.c:726:4
msgid ""
"Moves the data pointed to a new position as indicated by @cmp_func. This "
"function should be called for items in a sequence already sorted according "
"to @cmp_func whenever some aspect of an item changes so that @cmp_func may "
"return different values for that item."
msgstr ""

#. used by: g_sequence_search:
#: gsequence.c:761:2
msgid ""
"Returns an iterator pointing to the position where @data would be inserted "
"according to @cmp_func and @cmp_data."
msgstr ""

#. used by: g_sequence_search:
#: gsequence.c:764:2
msgid ""
"If you are simply searching for an existing element of the sequence, "
"consider using g_sequence_lookup()."
msgstr ""

#. used by: g_sequence_search:
#: gsequence.c:767:2
msgid ""
"Return value: an #GSequenceIter pointing to the position where @data would "
"have been inserted according to @cmp_func and @cmp_data."
msgstr ""

#. used by: GSequenceIterCompareFunc:
#: gsequence.c:80:1
msgid "@data: user data"
msgstr ""

#. used by: g_sequence_lookup:
#: gsequence.c:801:5
msgid ""
"Returns an iterator pointing to the position of the first item found equal "
"to @data according to @cmp_func and @cmp_data. If more than one item is "
"equal, it is not guaranteed that it is the first which is returned. In that "
"case, you can use g_sequence_iter_next() and g_sequence_iter_prev() to get "
"others."
msgstr ""

#. used by: GSequenceIterCompareFunc:
#: gsequence.c:81:3
msgid ""
"@Returns: zero if the iterators are equal, a negative value if @a comes "
"before @b, and a positive value if @b comes before @a."
msgstr ""

#. used by: g_sequence_sort_iter:
#: gsequence.c:833:5
msgid ""
"@cmp_func: the #GSequenceItercompare used to compare iterators in the "
"sequence. It is called with two iterators pointing into @seq. It should "
"return 0 if the iterators are equal, a negative value if the first iterator "
"comes before the second, and a positive value if the second iterator comes "
"before the first."
msgstr ""

#. used by: g_sequence_sort_iter:
#: gsequence.c:840:2
msgid ""
"Like g_sequence_sort(), but uses a #GSequenceIterCompareFunc instead of a "
"GCompareDataFunc as the compare function"
msgstr ""

#. used by: GSequenceIterCompareFunc:
#: gsequence.c:85:3
msgid ""
"A #GSequenceIterCompareFunc is a function used to compare iterators. It must "
"return zero if the iterators compare equal, a negative value if @a comes "
"before @b, and a positive value if @b comes before @a."
msgstr ""

#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_sort_changed_iter:
#. #-#-#-#-#  gsequence.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_sequence_insert_sorted_iter:
#: gsequence.c:886:5 gsequence.c:948:5
msgid ""
"@iter_cmp: the #GSequenceItercompare used to compare iterators in the "
"sequence. It is called with two iterators pointing into @seq. It should "
"return 0 if the iterators are equal, a negative value if the first iterator "
"comes before the second, and a positive value if the second iterator comes "
"before the first."
msgstr ""

#. used by: g_sequence_sort_changed_iter:
#: gsequence.c:893:3
msgid ""
"Like g_sequence_sort_changed(), but uses a #GSequenceIterCompareFunc instead "
"of a #GCompareDataFunc as the compare function."
msgstr ""

#. used by: GSequence:
#: gsequence.c:95:2
msgid ""
"The #GSequence struct is an opaque data type representing a <link linkend="
"\"glib-Sequences\">Sequence</link> data type."
msgstr ""

#. used by: g_sequence_insert_sorted_iter:
#: gsequence.c:955:3
msgid ""
"Like g_sequence_insert_sorted(), but uses a #GSequenceIterCompareFunc "
"instead of a #GCompareDataFunc as the compare function."
msgstr ""

#. used by: g_sequence_insert_sorted_iter:
#: gsequence.c:959:1
msgid "Return value: a #GSequenceIter pointing to the new item"
msgstr ""
