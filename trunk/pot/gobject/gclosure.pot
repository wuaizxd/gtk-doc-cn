# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-04-23 21:05-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"

#. used by: g_cclosure_marshal_VOID__INT:
#: gclosure.c:1000:1
msgid ""
"@param_values: a #GValue array holding the instance and the #gint parameter"
msgstr ""

#. #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: GClosureMarshal:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__VOID:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__BOOLEAN:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__CHAR:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__UCHAR:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__INT:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__UINT:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__LONG:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__ULONG:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__ENUM:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__FLAGS:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__FLOAT:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__DOUBLE:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__STRING:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__PARAM:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__BOXED:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__POINTER:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__OBJECT:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__VARIANT:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__UINT_POINTER:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_BOOLEAN__FLAGS:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_STRING__OBJECT_POINTER:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_BOOLEAN__OBJECT_BOXED_BOXED:
#: gclosure.c:1001:2 gclosure.c:1015:2 gclosure.c:1029:2 gclosure.c:1043:2
#: gclosure.c:1057:2 gclosure.c:1071:2 gclosure.c:1085:2 gclosure.c:1099:2
#: gclosure.c:1113:2 gclosure.c:1127:2 gclosure.c:1141:2 gclosure.c:1155:2
#: gclosure.c:1169:2 gclosure.c:1183:2 gclosure.c:1199:2 gclosure.c:1213:2
#: gclosure.c:1233:2 gclosure.c:1246:2 gclosure.c:945:2 gclosure.c:959:2
#: gclosure.c:973:2 gclosure.c:987:2 gclosure.h:107:2
msgid ""
"@invocation_hint: the invocation hint given as the last argument to "
"g_closure_invoke()"
msgstr ""

#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__VOID:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__BOOLEAN:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__CHAR:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__UCHAR:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__INT:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__UINT:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__LONG:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__ULONG:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__ENUM:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__FLAGS:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__FLOAT:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__DOUBLE:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__STRING:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__PARAM:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__BOXED:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__POINTER:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__OBJECT:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__VARIANT:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__UINT_POINTER:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_BOOLEAN__FLAGS:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_STRING__OBJECT_POINTER:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_BOOLEAN__OBJECT_BOXED_BOXED:
#: gclosure.c:1003:1 gclosure.c:1017:1 gclosure.c:1031:1 gclosure.c:1045:1
#: gclosure.c:1059:1 gclosure.c:1073:1 gclosure.c:1087:1 gclosure.c:1101:1
#: gclosure.c:1115:1 gclosure.c:1129:1 gclosure.c:1143:1 gclosure.c:1157:1
#: gclosure.c:1171:1 gclosure.c:1185:1 gclosure.c:1201:1 gclosure.c:1215:1
#: gclosure.c:1235:1 gclosure.c:1248:1 gclosure.c:947:1 gclosure.c:961:1
#: gclosure.c:975:1 gclosure.c:989:1
msgid ""
"@marshal_data: additional data specified when registering the marshaller"
msgstr ""

#. used by: g_cclosure_marshal_VOID__INT:
#: gclosure.c:1005:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, gint arg1, gpointer user_data)</literal>."
msgstr ""

#. #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: GClosureMarshal:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__VOID:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__BOOLEAN:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__CHAR:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__UCHAR:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__INT:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__UINT:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__LONG:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__ULONG:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__ENUM:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__FLAGS:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__FLOAT:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__DOUBLE:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__STRING:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__PARAM:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__BOXED:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__POINTER:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__OBJECT:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__VARIANT:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__UINT_POINTER:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_BOOLEAN__FLAGS:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_STRING__OBJECT_POINTER:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_BOOLEAN__OBJECT_BOXED_BOXED:
#: gclosure.c:1011:1 gclosure.c:1025:1 gclosure.c:1039:1 gclosure.c:1053:1
#: gclosure.c:1067:1 gclosure.c:1081:1 gclosure.c:1095:1 gclosure.c:1109:1
#: gclosure.c:1123:1 gclosure.c:1137:1 gclosure.c:1151:1 gclosure.c:1165:1
#: gclosure.c:1179:1 gclosure.c:1195:1 gclosure.c:1209:1 gclosure.c:1229:1
#: gclosure.c:1242:1 gclosure.c:941:1 gclosure.c:955:1 gclosure.c:969:1
#: gclosure.c:983:1 gclosure.c:997:1 gclosure.h:101:1
msgid "@closure: the #GClosure to which the marshaller belongs"
msgstr ""

#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__VOID:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__BOOLEAN:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__CHAR:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__UCHAR:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__INT:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__UINT:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__LONG:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__ULONG:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__ENUM:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__FLAGS:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__FLOAT:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__DOUBLE:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__STRING:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__PARAM:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__BOXED:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__POINTER:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__OBJECT:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__VARIANT:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__UINT_POINTER:
#: gclosure.c:1012:1 gclosure.c:1026:1 gclosure.c:1040:1 gclosure.c:1054:1
#: gclosure.c:1068:1 gclosure.c:1082:1 gclosure.c:1096:1 gclosure.c:1110:1
#: gclosure.c:1124:1 gclosure.c:1138:1 gclosure.c:1152:1 gclosure.c:1166:1
#: gclosure.c:1180:1 gclosure.c:1196:1 gclosure.c:942:1 gclosure.c:956:1
#: gclosure.c:970:1 gclosure.c:984:1 gclosure.c:998:1
msgid "@return_value: ignored"
msgstr ""

#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__BOOLEAN:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__CHAR:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__UCHAR:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__INT:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__UINT:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__LONG:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__ULONG:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__ENUM:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__FLAGS:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__FLOAT:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__DOUBLE:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__STRING:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__PARAM:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__BOXED:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__POINTER:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__OBJECT:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__VARIANT:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_BOOLEAN__FLAGS:
#: gclosure.c:1013:1 gclosure.c:1027:1 gclosure.c:1041:1 gclosure.c:1055:1
#: gclosure.c:1069:1 gclosure.c:1083:1 gclosure.c:1097:1 gclosure.c:1111:1
#: gclosure.c:1125:1 gclosure.c:1139:1 gclosure.c:1153:1 gclosure.c:1167:1
#: gclosure.c:1181:1 gclosure.c:1211:1 gclosure.c:957:1 gclosure.c:971:1
#: gclosure.c:985:1 gclosure.c:999:1
msgid "@n_param_values: 2"
msgstr ""

#. used by: g_cclosure_marshal_VOID__UINT:
#: gclosure.c:1014:1
msgid ""
"@param_values: a #GValue array holding the instance and the #guint parameter"
msgstr ""

#. used by: g_cclosure_marshal_VOID__UINT:
#: gclosure.c:1019:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, guint arg1, gpointer user_data)</literal>."
msgstr ""

#. used by: g_cclosure_marshal_VOID__LONG:
#: gclosure.c:1028:1
msgid ""
"@param_values: a #GValue array holding the instance and the #glong parameter"
msgstr ""

#. used by: g_cclosure_marshal_VOID__LONG:
#: gclosure.c:1033:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, glong arg1, gpointer user_data)</literal>."
msgstr ""

#. used by: g_cclosure_marshal_VOID__ULONG:
#: gclosure.c:1042:1
msgid ""
"@param_values: a #GValue array holding the instance and the #gulong parameter"
msgstr ""

#. used by: g_cclosure_marshal_VOID__ULONG:
#: gclosure.c:1047:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, gulong arg1, gpointer user_data)</literal>."
msgstr ""

#. used by: g_cclosure_marshal_VOID__ENUM:
#: gclosure.c:1056:1
msgid ""
"@param_values: a #GValue array holding the instance and the enumeration "
"parameter"
msgstr ""

#. used by: g_cclosure_marshal_VOID__ENUM:
#: gclosure.c:1061:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, gint arg1, gpointer user_data)</literal> "
"where the #gint parameter denotes an enumeration type.."
msgstr ""

#. used by: g_cclosure_marshal_VOID__FLAGS:
#: gclosure.c:1070:1
msgid ""
"@param_values: a #GValue array holding the instance and the flags parameter"
msgstr ""

#. used by: g_cclosure_marshal_VOID__FLAGS:
#: gclosure.c:1075:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, gint arg1, gpointer user_data)</literal> "
"where the #gint parameter denotes a flags type."
msgstr ""

#. used by: g_cclosure_marshal_VOID__FLOAT:
#: gclosure.c:1084:1
msgid ""
"@param_values: a #GValue array holding the instance and the #gfloat parameter"
msgstr ""

#. used by: g_cclosure_marshal_VOID__FLOAT:
#: gclosure.c:1089:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, gfloat arg1, gpointer user_data)</literal>."
msgstr ""

#. used by: g_cclosure_marshal_VOID__DOUBLE:
#: gclosure.c:1098:1
msgid ""
"@param_values: a #GValue array holding the instance and the #gdouble "
"parameter"
msgstr ""

#. used by: g_cclosure_marshal_VOID__DOUBLE:
#: gclosure.c:1103:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, gdouble arg1, gpointer user_data)</literal>."
msgstr ""

#. used by: g_cclosure_marshal_VOID__STRING:
#: gclosure.c:1112:1
msgid ""
"@param_values: a #GValue array holding the instance and the #gchar* parameter"
msgstr ""

#. used by: g_cclosure_marshal_VOID__STRING:
#: gclosure.c:1117:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, const gchar *arg1, gpointer user_data)</"
"literal>."
msgstr ""

#. used by: g_cclosure_marshal_VOID__PARAM:
#: gclosure.c:1126:1
msgid ""
"@param_values: a #GValue array holding the instance and the #GParamSpec* "
"parameter"
msgstr ""

#. used by: g_cclosure_marshal_VOID__PARAM:
#: gclosure.c:1131:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, GParamSpec *arg1, gpointer user_data)</"
"literal>."
msgstr ""

#. used by: g_cclosure_marshal_VOID__BOXED:
#: gclosure.c:1140:1
msgid ""
"@param_values: a #GValue array holding the instance and the #GBoxed* "
"parameter"
msgstr ""

#. used by: g_cclosure_marshal_VOID__BOXED:
#: gclosure.c:1145:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, GBoxed *arg1, gpointer user_data)</literal>."
msgstr ""

#. used by: g_cclosure_marshal_VOID__POINTER:
#: gclosure.c:1154:1
msgid ""
"@param_values: a #GValue array holding the instance and the #gpointer "
"parameter"
msgstr ""

#. used by: g_cclosure_marshal_VOID__POINTER:
#: gclosure.c:1159:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, gpointer arg1, gpointer user_data)</literal>."
msgstr ""

#. used by: g_cclosure_marshal_VOID__OBJECT:
#: gclosure.c:1168:1
msgid ""
"@param_values: a #GValue array holding the instance and the #GObject* "
"parameter"
msgstr ""

#. used by: g_cclosure_marshal_VOID__OBJECT:
#: gclosure.c:1173:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, GObject *arg1, gpointer user_data)</literal>."
msgstr ""

#. used by: g_cclosure_marshal_VOID__VARIANT:
#: gclosure.c:1182:1
msgid ""
"@param_values: a #GValue array holding the instance and the #GVariant* "
"parameter"
msgstr ""

#. used by: g_cclosure_marshal_VOID__VARIANT:
#: gclosure.c:1187:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, GVariant *arg1, gpointer user_data)</"
"literal>."
msgstr ""

#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__VARIANT:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_BOOLEAN__OBJECT_BOXED_BOXED:
#: gclosure.c:1190:1 gclosure.c:1253:1
msgid "Since: 2.26"
msgstr ""

#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__UINT_POINTER:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_STRING__OBJECT_POINTER:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_BOOLEAN__OBJECT_BOXED_BOXED:
#: gclosure.c:1197:1 gclosure.c:1231:1 gclosure.c:1244:1
msgid "@n_param_values: 3"
msgstr ""

#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_VOID__UINT_POINTER:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_STRING__OBJECT_POINTER:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_BOOLEAN__OBJECT_BOXED_BOXED:
#: gclosure.c:1198:1 gclosure.c:1232:1 gclosure.c:1245:1
msgid "@param_values: a #GValue array holding instance, arg1 and arg2"
msgstr ""

#. used by: g_cclosure_marshal_VOID__UINT_POINTER:
#: gclosure.c:1203:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, guint arg1, gpointer arg2, gpointer "
"user_data)</literal>."
msgstr ""

#. used by: g_cclosure_marshal_BOOLEAN__FLAGS:
#: gclosure.c:1210:1
msgid "@return_value: a #GValue which can store the returned #gboolean"
msgstr ""

#. used by: g_cclosure_marshal_BOOLEAN__FLAGS:
#: gclosure.c:1212:1
msgid "@param_values: a #GValue array holding instance and arg1"
msgstr ""

#. used by: g_cclosure_marshal_BOOLEAN__FLAGS:
#: gclosure.c:1217:3
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>gboolean "
"(*callback) (gpointer instance, gint arg1, gpointer user_data)</literal> "
"where the #gint parameter denotes a flags type."
msgstr ""

#. used by: g_cclosure_marshal_BOOL__FLAGS:
#: gclosure.c:1225:1
msgid "Another name for g_cclosure_marshal_BOOLEAN__FLAGS()."
msgstr ""

#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_STRING__OBJECT_POINTER:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_marshal_BOOLEAN__OBJECT_BOXED_BOXED:
#: gclosure.c:1230:1 gclosure.c:1243:1
msgid "@return_value: a #GValue, which can store the returned string"
msgstr ""

#. used by: g_cclosure_marshal_STRING__OBJECT_POINTER:
#: gclosure.c:1237:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>gchar* "
"(*callback) (gpointer instance, GObject *arg1, gpointer arg2, gpointer "
"user_data)</literal>."
msgstr ""

#. used by: g_cclosure_marshal_BOOLEAN__OBJECT_BOXED_BOXED:
#: gclosure.c:1250:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>gboolean "
"(*callback) (gpointer instance, GBoxed *arg1, GBoxed *arg2, gpointer "
"user_data)</literal>."
msgstr ""

#. used by: g_closure_new_simple:
#: gclosure.c:148:2
msgid ""
"@sizeof_closure: the size of the structure to allocate, must be at least "
"<literal>sizeof (GClosure)</literal>"
msgstr ""

#. used by: g_closure_new_simple:
#: gclosure.c:150:1
msgid ""
"@data: data to store in the @data field of the newly allocated #GClosure"
msgstr ""

#. used by: g_closure_new_simple:
#: gclosure.c:152:3
msgid ""
"Allocates a struct of the given size and initializes the initial part as a "
"#GClosure. This function is mainly useful when implementing new types of "
"closures."
msgstr ""

#. used by: g_closure_new_simple:
#: gclosure.c:189:1
msgid "Returns: (transfer full): a newly allocated #GClosure"
msgstr ""

#. #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: G_CLOSURE_NEEDS_MARSHAL:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_closure_set_meta_marshal: (skip)
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_closure_add_marshal_guards: (skip)
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_closure_add_finalize_notifier: (skip)
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_closure_add_invalidate_notifier: (skip)
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_closure_remove_invalidate_notifier: (skip)
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_closure_remove_finalize_notifier: (skip)
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_closure_invoke:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_closure_set_marshal: (skip)
#: gclosure.c:297:1 gclosure.c:347:1 gclosure.c:405:1 gclosure.c:441:1
#: gclosure.c:669:1 gclosure.c:697:1 gclosure.c:725:1 gclosure.c:781:1
#: gclosure.h:34:1
msgid "@closure: a #GClosure"
msgstr ""

#. used by: g_closure_set_meta_marshal: (skip)
#: gclosure.c:298:1
msgid "@marshal_data: context-dependent data to pass to @meta_marshal"
msgstr ""

#. used by: g_closure_set_meta_marshal: (skip)
#: gclosure.c:299:1
msgid "@meta_marshal: a #GClosureMarshal function"
msgstr ""

#. used by: g_closure_set_meta_marshal: (skip)
#: gclosure.c:301:9
msgid ""
"Sets the meta marshaller of @closure.  A meta marshaller wraps @closure-"
">marshal and modifies the way it is called in some fashion. The most common "
"use of this facility is for C callbacks. The same marshallers (generated by "
"<link linkend=\"glib-genmarshal\">glib-genmarshal</link>) are used "
"everywhere, but the way that we get the callback function differs. In most "
"cases we want to use @closure->callback, but in other cases we want to use "
"some different technique to retrieve the callback function."
msgstr ""

#. used by: g_closure_set_meta_marshal: (skip)
#: gclosure.c:311:5
msgid ""
"For example, class closures for signals (see g_signal_type_cclosure_new()) "
"retrieve the callback function from a fixed offset in the class structure.  "
"The meta marshaller retrieves the right callback and passes it to the "
"marshaller as the @marshal_data argument."
msgstr ""

#. used by: g_closure_add_marshal_guards: (skip)
#: gclosure.c:348:1
msgid "@pre_marshal_data: data to pass to @pre_marshal_notify"
msgstr ""

#. used by: g_closure_add_marshal_guards: (skip)
#: gclosure.c:349:1
msgid "@pre_marshal_notify: a function to call before the closure callback"
msgstr ""

#. used by: SECTION:gclosure
#: gclosure.c:35:1
msgid "@short_description: Functions as first-class objects"
msgstr ""

#. used by: g_closure_add_marshal_guards: (skip)
#: gclosure.c:350:1
msgid "@post_marshal_data: data to pass to @post_marshal_notify"
msgstr ""

#. used by: g_closure_add_marshal_guards: (skip)
#: gclosure.c:351:1
msgid "@post_marshal_notify: a function to call after the closure callback"
msgstr ""

#. used by: g_closure_add_marshal_guards: (skip)
#: gclosure.c:353:4
msgid ""
"Adds a pair of notifiers which get invoked before and after the closure "
"callback, respectively. This is typically used to protect the extra "
"arguments for the duration of the callback. See g_object_watch_closure() for "
"an example of marshal guards."
msgstr ""

#. used by: SECTION:gclosure
#: gclosure.c:36:1
msgid "@title: Closures"
msgstr ""

#. used by: SECTION:gclosure
#: gclosure.c:38:6
msgid ""
"A #GClosure represents a callback supplied by the programmer. It will "
"generally comprise a function of some kind and a marshaller used to call it. "
"It is the reponsibility of the marshaller to convert the arguments for the "
"invocation from #GValue<!-- -->s into a suitable form, perform the callback "
"on the converted arguments, and transform the return value back into a "
"#GValue."
msgstr ""

#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_closure_add_finalize_notifier: (skip)
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_closure_add_invalidate_notifier: (skip)
#: gclosure.c:406:1 gclosure.c:442:1
msgid "@notify_data: data to pass to @notify_func"
msgstr ""

#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_closure_add_finalize_notifier: (skip)
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_closure_add_invalidate_notifier: (skip)
#: gclosure.c:407:1 gclosure.c:443:1
msgid "@notify_func: the callback function to register"
msgstr ""

#. used by: g_closure_add_finalize_notifier: (skip)
#: gclosure.c:409:6
msgid ""
"Registers a finalization notifier which will be called when the reference "
"count of @closure goes down to 0. Multiple finalization notifiers on a "
"single closure are invoked in unspecified order. If a single call to "
"g_closure_unref() results in the closure being both invalidated and "
"finalized, then the invalidate notifiers will be run before the finalize "
"notifiers."
msgstr ""

#. used by: g_closure_add_invalidate_notifier: (skip)
#: gclosure.c:445:4
msgid ""
"Registers an invalidation notifier which will be called when the @closure is "
"invalidated with g_closure_invalidate(). Invalidation notifiers are invoked "
"before finalization notifiers, in an unspecified order."
msgstr ""

#. used by: SECTION:gclosure
#: gclosure.c:45:7
msgid ""
"In the case of C programs, a closure usually just holds a pointer to a "
"function and maybe a data argument, and the marshaller converts between "
"#GValue<!-- --> and native C types. The GObject library provides the "
"#GCClosure type for this purpose. Bindings for other languages need "
"marshallers which convert between #GValue<!-- -->s and suitable "
"representations in the runtime of the language in order to use functions "
"written in that languages as callbacks."
msgstr ""

#. used by: g_closure_ref:
#: gclosure.c:515:1
msgid "@closure: #GClosure to increment the reference count on"
msgstr ""

#. used by: g_closure_ref:
#: gclosure.c:517:2
msgid ""
"Increments the reference count on a closure to force it staying alive while "
"the caller holds a pointer to it."
msgstr ""

#. used by: g_closure_ref:
#: gclosure.c:520:1
msgid "Returns: (transfer none): The @closure passed in, for convenience"
msgstr ""

#. used by: SECTION:gclosure
#: gclosure.c:53:13
msgid ""
"Within GObject, closures play an important role in the implementation of "
"signals. When a signal is registered, the @c_marshaller argument to "
"g_signal_new() specifies the default C marshaller for any closure which is "
"connected to this signal. GObject provides a number of C marshallers for "
"this purpose, see the g_cclosure_marshal_*() functions. Additional C "
"marshallers can be generated with the <link linkend=\"glib-genmarshal\">glib-"
"genmarshal</link> utility.  Closures can be explicitly connected to signals "
"with g_signal_connect_closure(), but it usually more convenient to let "
"GObject create a closure automatically by using one of the g_signal_connect_*"
"() functions which take a callback function/user data pair."
msgstr ""

#. used by: g_closure_invalidate:
#: gclosure.c:538:1
msgid "@closure: GClosure to invalidate"
msgstr ""

#. used by: g_closure_invalidate:
#: gclosure.c:540:9
msgid ""
"Sets a flag on the closure to indicate that its calling environment has "
"become invalid, and thus causes any future invocations of g_closure_invoke() "
"on this @closure to be ignored. Also, invalidation notifiers installed on "
"the closure will be called at this point. Note that unless you are holding a "
"reference to the closure yourself, the invalidation notifiers may unref the "
"closure and cause it to be destroyed, so if you need to access the closure "
"after calling g_closure_invalidate(), make sure that you've previously "
"called g_closure_ref()."
msgstr ""

#. used by: g_closure_invalidate:
#: gclosure.c:550:3
msgid ""
"Note that g_closure_invalidate() will also be called when the reference "
"count of a closure drops to zero (unless it has already been invalidated "
"before)."
msgstr ""

#. used by: g_closure_unref:
#: gclosure.c:573:1
msgid "@closure: #GClosure to decrement the reference count on"
msgstr ""

#. used by: g_closure_unref:
#: gclosure.c:575:3
msgid ""
"Decrements the reference count of a closure after it was previously "
"incremented by the same caller. If no other callers are using the closure, "
"then the closure will be destroyed and freed."
msgstr ""

#. used by: g_closure_sink:
#: gclosure.c:602:2
msgid ""
"@closure: #GClosure to decrement the initial reference count on, if it's "
"still being held"
msgstr ""

#. used by: g_closure_sink:
#: gclosure.c:605:8
msgid ""
"Takes over the initial ownership of a closure.  Each closure is initially "
"created in a <firstterm>floating</firstterm> state, which means that the "
"initial reference count is not owned by any caller. g_closure_sink() checks "
"to see if the object is still floating, and if so, unsets the floating state "
"and decreases the reference count. If the closure is not floating, "
"g_closure_sink() does nothing. The reason for the existance of the floating "
"state is to prevent cumbersome code sequences like:"
msgstr ""

#. used by: g_closure_sink:
#: gclosure.c:619:1
msgid "initial reference count, if it is unowned, we instead can write:"
msgstr ""

#. used by: g_closure_sink:
#: gclosure.c:624:2
msgid ""
"Generally, this function is used together with g_closure_ref(). Ane example "
"of storing a closure for later notification looks like:"
msgstr ""

#. used by: g_closure_sink:
#: gclosure.c:642:3
msgid ""
"Because g_closure_sink() may decrement the reference count of a closure (if "
"it hasn't been called on @closure yet) just like g_closure_unref(), "
"g_closure_ref() should be called prior to this function."
msgstr ""

#. used by: SECTION:gclosure
#: gclosure.c:67:18
msgid ""
"Using closures has a number of important advantages over a simple callback "
"function/data pointer combination: <itemizedlist> <listitem><para> Closures "
"allow the callee to get the types of the callback parameters, which means "
"that language bindings don't have to write individual glue for each callback "
"type. </para></listitem> <listitem><para> The reference counting of "
"#GClosure makes it easy to handle reentrancy right; if a callback is removed "
"while it is being invoked, the closure and its parameters won't be freed "
"until the invocation finishes. </para></listitem> <listitem><para> "
"g_closure_invalidate() and invalidation notifiers allow callbacks to be "
"automatically removed when the objects they point to go away. </para></"
"listitem> </itemizedlist>"
msgstr ""

#. used by: g_closure_remove_invalidate_notifier: (skip)
#: gclosure.c:670:2
msgid ""
"@notify_data: data which was passed to g_closure_add_invalidate_notifier() "
"when registering @notify_func"
msgstr ""

#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_closure_remove_invalidate_notifier: (skip)
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_closure_remove_finalize_notifier: (skip)
#: gclosure.c:672:1 gclosure.c:700:1
msgid "@notify_func: the callback function to remove"
msgstr ""

#. used by: g_closure_remove_invalidate_notifier: (skip)
#: gclosure.c:674:1
msgid "Removes an invalidation notifier."
msgstr ""

#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_closure_remove_invalidate_notifier: (skip)
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_closure_remove_finalize_notifier: (skip)
#: gclosure.c:676:1 gclosure.c:704:1
msgid "Notice that notifiers are automatically removed after they are run."
msgstr ""

#. used by: g_closure_remove_finalize_notifier: (skip)
#: gclosure.c:698:2
msgid ""
"@notify_data: data which was passed to g_closure_add_finalize_notifier() "
"when registering @notify_func"
msgstr ""

#. used by: g_closure_remove_finalize_notifier: (skip)
#: gclosure.c:702:1
msgid "Removes a finalization notifier."
msgstr ""

#. #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: GClosureMarshal:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_closure_invoke:
#: gclosure.c:726:2 gclosure.h:102:2
msgid ""
"@return_value: a #GValue to store the return value. May be %NULL if the "
"callback of @closure doesn't return a value."
msgstr ""

#. #-#-#-#-#  gclosure.pot~ (PACKAGE VERSION)  #-#-#-#-#
#. used by: GClosureMarshal:
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_closure_invoke:
#: gclosure.c:728:1 gclosure.h:104:1
msgid "@n_param_values: the length of the @param_values array"
msgstr ""

#. used by: g_closure_invoke:
#: gclosure.c:729:3
msgid ""
"@param_values: (array length=n_param_values): an array of #GValue<!-- -->s "
"holding the arguments on which to invoke the callback of @closure"
msgstr ""

#. used by: g_closure_invoke:
#: gclosure.c:732:1
msgid "@invocation_hint: a context-dependent invocation hint"
msgstr ""

#. used by: g_closure_invoke:
#: gclosure.c:734:1
msgid ""
"Invokes the closure, i.e. executes the callback represented by the @closure."
msgstr ""

#. used by: g_closure_set_marshal: (skip)
#: gclosure.c:782:1
msgid "@marshal: a #GClosureMarshal function"
msgstr ""

#. used by: g_closure_set_marshal: (skip)
#: gclosure.c:784:6
msgid ""
"Sets the marshaller of @closure. The <literal>marshal_data</literal> of "
"@marshal provides a way for a meta marshaller to provide additional "
"information to the marshaller. (See g_closure_set_meta_marshal().) For "
"GObject's C predefined marshallers (the g_cclosure_marshal_*() functions), "
"what it provides is a callback function to use instead of @closure->callback."
msgstr ""

#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_new: (skip)
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_new_swap: (skip)
#: gclosure.c:807:1 gclosure.c:835:1
msgid "@callback_func: the function to invoke"
msgstr ""

#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_new: (skip)
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_new_swap: (skip)
#: gclosure.c:808:1 gclosure.c:836:1
msgid "@user_data: user data to pass to @callback_func"
msgstr ""

#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_new: (skip)
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_new_swap: (skip)
#: gclosure.c:809:1 gclosure.c:837:1
msgid ""
"@destroy_data: destroy notify to be called when @user_data is no longer used"
msgstr ""

#. used by: g_cclosure_new: (skip)
#: gclosure.c:811:2
msgid ""
"Creates a new closure which invokes @callback_func with @user_data as the "
"last parameter."
msgstr ""

#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_cclosure_new: (skip)
#. #-#-#-#-#  gclosure.pot (PACKAGE VERSION)  #-#-#-#-#
#. used by: g_signal_type_cclosure_new:
#: gclosure.c:814:1 gclosure.c:918:1
msgid "Returns: a new #GCClosure"
msgstr ""

#. used by: g_cclosure_new_swap: (skip)
#: gclosure.c:839:2
msgid ""
"Creates a new closure which invokes @callback_func with @user_data as the "
"first parameter."
msgstr ""

#. used by: g_cclosure_new_swap: (skip)
#: gclosure.c:842:1
msgid "Returns: (transfer full): a new #GCClosure"
msgstr ""

#. used by: g_signal_type_cclosure_new:
#: gclosure.c:910:1
msgid "@itype: the #GType identifier of an interface or classed type"
msgstr ""

#. used by: g_signal_type_cclosure_new:
#: gclosure.c:911:2
msgid ""
"@struct_offset: the offset of the member function of @itype's class "
"structure which is to be invoked by the new closure"
msgstr ""

#. used by: g_signal_type_cclosure_new:
#: gclosure.c:914:3
msgid ""
"Creates a new closure which invokes the function found at the offset "
"@struct_offset in the class structure of the interface or classed type "
"identified by @itype."
msgstr ""

#. used by: g_cclosure_marshal_VOID__VOID:
#: gclosure.c:943:1
msgid "@n_param_values: 1"
msgstr ""

#. used by: g_cclosure_marshal_VOID__VOID:
#: gclosure.c:944:1
msgid "@param_values: a #GValue array holding only the instance"
msgstr ""

#. used by: g_cclosure_marshal_VOID__VOID:
#: gclosure.c:949:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, gpointer user_data)</literal>."
msgstr ""

#. used by: g_cclosure_marshal_VOID__BOOLEAN:
#: gclosure.c:958:1
msgid ""
"@param_values: a #GValue array holding the instance and the #gboolean "
"parameter"
msgstr ""

#. used by: g_cclosure_marshal_VOID__BOOLEAN:
#: gclosure.c:963:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, gboolean arg1, gpointer user_data)</literal>."
msgstr ""

#. used by: g_cclosure_marshal_VOID__CHAR:
#: gclosure.c:972:1
msgid ""
"@param_values: a #GValue array holding the instance and the #gchar parameter"
msgstr ""

#. used by: g_cclosure_marshal_VOID__CHAR:
#: gclosure.c:977:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, gchar arg1, gpointer user_data)</literal>."
msgstr ""

#. used by: g_cclosure_marshal_VOID__UCHAR:
#: gclosure.c:986:1
msgid ""
"@param_values: a #GValue array holding the instance and the #guchar parameter"
msgstr ""

#. used by: g_cclosure_marshal_VOID__UCHAR:
#: gclosure.c:991:2
msgid ""
"A marshaller for a #GCClosure with a callback of type <literal>void "
"(*callback) (gpointer instance, guchar arg1, gpointer user_data)</literal>."
msgstr ""

#. used by: GClosureMarshal:
#: gclosure.h:105:2
msgid ""
"@param_values: an array of #GValue<!-- -->s holding the arguments on which "
"to invoke the callback of @closure"
msgstr ""

#. used by: GClosureMarshal:
#: gclosure.h:109:2
msgid ""
"@marshal_data: additional data specified when registering the marshaller, "
"see g_closure_set_marshal() and g_closure_set_meta_marshal()"
msgstr ""

#. used by: GClosureMarshal:
#: gclosure.h:112:1
msgid "The type used for marshaller functions."
msgstr ""

#. used by: GCClosure:
#: gclosure.h:122:1
msgid "@closure: the #GClosure"
msgstr ""

#. used by: GCClosure:
#: gclosure.h:123:1
msgid "@callback: the callback function"
msgstr ""

#. used by: GCClosure:
#: gclosure.h:125:1
msgid "A #GCClosure is a specialization of #GClosure for C function callbacks."
msgstr ""

#. used by: GClosure:
#: gclosure.h:138:2
msgid ""
"@in_marshal: Indicates whether the closure is currently being invoked with "
"g_closure_invoke()"
msgstr ""

#. used by: GClosure:
#: gclosure.h:140:2
msgid ""
"@is_invalid: Indicates whether the closure has been invalidated by "
"g_closure_invalidate()"
msgstr ""

#. used by: GClosure:
#: gclosure.h:143:1
msgid "A #GClosure represents a callback supplied by the programmer."
msgstr ""

#. used by: G_CLOSURE_NEEDS_MARSHAL:
#: gclosure.h:36:1
msgid ""
"Check if the closure still needs a marshaller. See g_closure_set_marshal()."
msgstr ""

#. used by: G_CLOSURE_NEEDS_MARSHAL:
#: gclosure.h:38:2
msgid ""
"Returns: %TRUE if a #GClosureMarshal marshaller has not yet been set on "
"@closure."
msgstr ""

#. used by: G_CLOSURE_N_NOTIFIERS:
#: gclosure.h:44:1
msgid "@cl: a #GClosure"
msgstr ""

#. used by: G_CLOSURE_N_NOTIFIERS:
#: gclosure.h:46:5
msgid ""
"Get the total number of notifiers connected with the closure @cl. The count "
"includes the meta marshaller, the finalize and invalidate notifiers and the "
"marshal guards. Note that each guard counts as two notifiers. See "
"g_closure_set_meta_marshal(), g_closure_add_finalize_notifier(), "
"g_closure_add_invalidate_notifier() and g_closure_add_marshal_guards()."
msgstr ""

#. used by: G_CLOSURE_N_NOTIFIERS:
#: gclosure.h:52:1
msgid "Returns: number of notifiers"
msgstr ""

#. used by: G_CCLOSURE_SWAP_DATA:
#: gclosure.h:58:1
msgid "@cclosure: a #GCClosure"
msgstr ""

#. used by: G_CCLOSURE_SWAP_DATA:
#: gclosure.h:60:2
msgid ""
"Checks whether the user data of the #GCClosure should be passed as the first "
"parameter to the callback. See g_cclosure_new_swap()."
msgstr ""

#. used by: G_CCLOSURE_SWAP_DATA:
#: gclosure.h:63:1
msgid "Returns: %TRUE if data has to be swapped."
msgstr ""

#. used by: G_CALLBACK:
#: gclosure.h:68:1
msgid "@f: a function pointer."
msgstr ""

#. used by: G_CALLBACK:
#: gclosure.h:70:1
msgid "Cast a function pointer to a #GCallback."
msgstr ""

#. used by: GCallback:
#: gclosure.h:82:5
msgid ""
"The type used for callback functions in structure definitions and function "
"signatures. This doesn't mean that all callback functions must take no "
"parameters and return void. The required signature of a callback function is "
"determined by the context in which is used (e.g. the signal to which it is "
"connected). Use G_CALLBACK() to cast the callback function to a #GCallback."
msgstr ""

#. used by: GClosureNotify:
#: gclosure.h:91:1
msgid "@data: data specified when registering the notification callback"
msgstr ""

#. used by: GClosureNotify:
#: gclosure.h:92:1
msgid "@closure: the #GClosure on which the notification is emitted"
msgstr ""

#. used by: GClosureNotify:
#: gclosure.h:94:2
msgid ""
"The type used for the various notification callbacks which can be registered "
"on closures."
msgstr ""
